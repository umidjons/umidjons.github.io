[{"html_url":"https://gist.github.com/b223e80db8cf17a3986636b0bc575b7d","description":"Floating label (placeholder) on input focus","files":["https://gist.githubusercontent.com/umidjons/b223e80db8cf17a3986636b0bc575b7d/raw/1596291ccefa09a912141c1eba9db7a851a06466/floating-label-placeholder-on-input-focus.md"],"content":"# Floating label (placeholder) on input focus\n\nWorking [fiddle](https://jsfiddle.net/273ntk5s/299/)\n\nSample code:\n\n```html\n<style>\n.wrapper { position: relative; }\n\n.control:focus ~ .floating-label,\n.control:not(:focus):valid ~ .floating-label{\n  top: 6px;\n  left: 5px;\n  font-size: 11px;\n  opacity: 0.6;\n}\n\n.control {\n  font-size: 14px;\n  width: 200px;\n  height: 45px;\n}\n\n.floating-label {\n  position: absolute;\n  pointer-events: none;\n  left: 20px;\n  top: 14px;\n  transition: 0.3s ease all;\n}\n</style>\n\n<div class=\"wrapper\">\n  <input type=\"text\" class=\"control\" required/>\n  <span class=\"floating-label\">First Name</span>\n</div>\n<div class=\"wrapper\">\n  <input type=\"text\" class=\"control\" required/>\n  <span class=\"floating-label\">Last Name</span>\n</div>\n```","html":"<h1 id=\"floating-label-placeholder-on-input-focus\">Floating label (placeholder) on input focus</h1>\n<p>Working <a href=\"https://jsfiddle.net/273ntk5s/299/\">fiddle</a></p>\n<p>Sample code:</p>\n<pre><code class=\"lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"css\">\n<span class=\"hljs-selector-class\">.wrapper</span> { <span class=\"hljs-attribute\">position</span>: relative; }\n\n<span class=\"hljs-selector-class\">.control</span><span class=\"hljs-selector-pseudo\">:focus</span> ~ <span class=\"hljs-selector-class\">.floating-label</span>,\n<span class=\"hljs-selector-class\">.control</span><span class=\"hljs-selector-pseudo\">:not(</span><span class=\"hljs-selector-pseudo\">:focus)</span><span class=\"hljs-selector-pseudo\">:valid</span> ~ <span class=\"hljs-selector-class\">.floating-label</span>{\n  <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">6px</span>;\n  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">5px</span>;\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">11px</span>;\n  <span class=\"hljs-attribute\">opacity</span>: <span class=\"hljs-number\">0.6</span>;\n}\n\n<span class=\"hljs-selector-class\">.control</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">14px</span>;\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">200px</span>;\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">45px</span>;\n}\n\n<span class=\"hljs-selector-class\">.floating-label</span> {\n  <span class=\"hljs-attribute\">position</span>: absolute;\n  <span class=\"hljs-attribute\">pointer-events</span>: none;\n  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">20px</span>;\n  <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">14px</span>;\n  <span class=\"hljs-attribute\">transition</span>: <span class=\"hljs-number\">0.3s</span> ease all;\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"wrapper\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"control\"</span> <span class=\"hljs-attr\">required</span>/&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"floating-label\"</span>&gt;</span>First Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"wrapper\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"control\"</span> <span class=\"hljs-attr\">required</span>/&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"floating-label\"</span>&gt;</span>Last Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/2bef8bb80c041c0fdd4e69dd7175121a","description":"Catch duplicate error (E11000) key index in MongoDB","files":["https://gist.githubusercontent.com/umidjons/2bef8bb80c041c0fdd4e69dd7175121a/raw/db57c45205b589448ce7403f8af1f2cfd1a450f6/catch-duplicate-error-key-index-mongodb.md"],"content":"# Catch duplicate error (E11000) key index in MongoDB\n\n```js\nimport * as RPC from 'json-rpc-core';\nimport {utils, validate} from './utils';\n\n@RPC.module()\nexport default class Users {\n\t@RPC.params({\n\t\temail: {type: String, coerce: utils.trim, validate: validate.isEmail},\n\t\tname: {type: String, coerce: utils.trim, default: null},\n\t\tsurname: {type: String, coerce: utils.trim, default: null}\n\t})\n\tstatic async subscribe(params) {\n\t\tlet doc = {email: params.email};\n\n\t\tif (params.name) {\n\t\t\tdoc.name = params.name;\n\t\t}\n\n\t\tif (params.surname) {\n\t\t\tdoc.surname = params.surname;\n\t\t}\n\n\t\tlet resp = {success: false};\n\n\t\ttry {\n\t\t\tlet result = await db.main.users.insertOne(doc);\n\t\t\tif (result._id) {\n\t\t\t\tresp.success = true;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// We have unique index by email field\n\t\t\t// Here we catch duplicate error key and return success\n\t\t\t// If we get other errors, we will re-throw them\n\t\t\tif (error.name == 'MongoError' && error.code == 11000) {\n\t\t\t\tconsole.log('Email already exists, so ignoring it and returning success!');\n\t\t\t\tresp.success = true;\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn resp;\n\t}\n}\n```","html":"<h1 id=\"catch-duplicate-error-e11000-key-index-in-mongodb\">Catch duplicate error (E11000) key index in MongoDB</h1>\n<pre><code class=\"lang-js\">import * <span class=\"hljs-keyword\">as</span> RPC <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'json-rpc-core'</span>;\nimport {utils, validate} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./utils'</span>;\n\n@RPC.module()\nexport <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Users</span> {\n    @RPC.<span class=\"hljs-keyword\">params</span>({\n        email: {type: String, coerce: utils.trim, validate: validate.isEmail},\n        name: {type: String, coerce: utils.trim, <span class=\"hljs-keyword\">default</span>: <span class=\"hljs-literal\">null</span>},\n        surname: {type: String, coerce: utils.trim, <span class=\"hljs-keyword\">default</span>: <span class=\"hljs-literal\">null</span>}\n    })\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title\">subscribe</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">params</span></span>) </span>{\n        <span class=\"hljs-keyword\">let</span> doc = {email: <span class=\"hljs-keyword\">params</span>.email};\n\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">params</span>.name) {\n            doc.name = <span class=\"hljs-keyword\">params</span>.name;\n        }\n\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">params</span>.surname) {\n            doc.surname = <span class=\"hljs-keyword\">params</span>.surname;\n        }\n\n        <span class=\"hljs-keyword\">let</span> resp = {success: <span class=\"hljs-literal\">false</span>};\n\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> db.main.users.insertOne(doc);\n            <span class=\"hljs-keyword\">if</span> (result._id) {\n                resp.success = <span class=\"hljs-literal\">true</span>;\n            }\n        } <span class=\"hljs-keyword\">catch</span> (error) {\n            <span class=\"hljs-comment\">// We have unique index by email field</span>\n            <span class=\"hljs-comment\">// Here we catch duplicate error key and return success</span>\n            <span class=\"hljs-comment\">// If we get other errors, we will re-throw them</span>\n            <span class=\"hljs-keyword\">if</span> (error.name == <span class=\"hljs-string\">'MongoError'</span> &amp;&amp; error.code == <span class=\"hljs-number\">11000</span>) {\n                console.log(<span class=\"hljs-string\">'Email already exists, so ignoring it and returning success!'</span>);\n                resp.success = <span class=\"hljs-literal\">true</span>;\n            } <span class=\"hljs-keyword\">else</span> {\n                <span class=\"hljs-keyword\">throw</span> error;\n            }\n        }\n\n        <span class=\"hljs-keyword\">return</span> resp;\n    }\n}\n</code></pre>\n"},{"html_url":"https://gist.github.com/ec7a60415c452787f2666ef6761bbf69","description":"Create ssh tunnel and connect to the remote mongo database on command line","files":["https://gist.githubusercontent.com/umidjons/ec7a60415c452787f2666ef6761bbf69/raw/f88a85dfe471736e907daad7a2f664b2e66ecf00/connect-remote-mongo-via-ssh-tunnel.md"],"content":"## Create ssh tunnel and connect to the remote mongo database on command line\n\nAssume followings:\n\n`/mykeys/.ssh/prodserver.pem` - is a certificate file\n\n`umid` - is a user name\n\n`111.111.111.111` - is a remote host, that mongodb runs\n\n`2222` - is a remote port to connect via ssh\n\n`localhost:27017` - local host and port on remote machine\n\n`27018` - local port\n\n\n```\nssh -i /mykeys/.ssh/prodserver.pem umid@111.111.111.111 -p 2222 -Nf -L 27018:localhost:27017\n```\n\nConnect to the mongodb via opened tunnel, in this case `mydb` is database name\n```\nmongo --port 27018 mydb\n```\n","html":"<h2 id=\"create-ssh-tunnel-and-connect-to-the-remote-mongo-database-on-command-line\">Create ssh tunnel and connect to the remote mongo database on command line</h2>\n<p>Assume followings:</p>\n<p><code>/mykeys/.ssh/prodserver.pem</code> - is a certificate file</p>\n<p><code>umid</code> - is a user name</p>\n<p><code>111.111.111.111</code> - is a remote host, that mongodb runs</p>\n<p><code>2222</code> - is a remote port to connect via ssh</p>\n<p><code>localhost:27017</code> - local host and port on remote machine</p>\n<p><code>27018</code> - local port</p>\n<pre><code>ssh -<span class=\"hljs-selector-tag\">i</span> /mykeys/.ssh/prodserver<span class=\"hljs-selector-class\">.pem</span> umid@<span class=\"hljs-number\">111.111</span>.<span class=\"hljs-number\">111.111</span> -<span class=\"hljs-selector-tag\">p</span> <span class=\"hljs-number\">2222</span> -Nf -L <span class=\"hljs-number\">27018</span>:localhost:<span class=\"hljs-number\">27017</span>\n</code></pre><p>Connect to the mongodb via opened tunnel, in this case <code>mydb</code> is database name</p>\n<pre><code>mongo <span class=\"hljs-comment\">--port 27018 mydb</span>\n</code></pre>"},{"html_url":"https://gist.github.com/fada437f22bfb6e430a18d708c90ca83","description":"Using decorators. Transpile with Babel. Configure Gulp task.","files":["https://gist.githubusercontent.com/umidjons/fada437f22bfb6e430a18d708c90ca83/raw/5d6f508bd51bcee17cef1a71fc4bc1b4016fa119/decorator-babel-gulp-example.md"],"content":"# Using decorators. Transpile with Babel. Configure Gulp task.\n\nInstall necessary modules\n```\nnpm i -D babel-cli babel-plugin-transform-decorators-legacy\nnpm i -D gulp gulp-sourcemaps gulp-babel\n```\n\nConfigure `npm run build` and `npm start` commands.\nAlso specify babel options, such as `plugins`.\n\n`package.json` file\n\n```json\n{\n  \"name\": \"t1\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"node dist/s1.js\",\n    \"build\": \"gulp\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"devDependencies\": {\n    \"babel-cli\": \"^6.16.0\",\n    \"babel-plugin-transform-decorators-legacy\": \"^1.3.4\",\n    \"gulp\": \"^3.9.1\",\n    \"gulp-babel\": \"^6.1.2\",\n    \"gulp-sourcemaps\": \"^1.6.0\"\n  },\n  \"babel\": {\n    \"plugins\": [\n      \"transform-decorators-legacy\"\n    ]\n  }\n}\n```\n\n`gulpfile.js` file\n```js\nvar gulp = require('gulp');\nvar babel = require('gulp-babel');\nvar sourceMaps = require('gulp-sourcemaps');\n\ngulp.task('compile:js', function () {\n    return gulp.src('src/**/*.js')\n        .pipe(sourceMaps.init())\n        .pipe(babel())\n        .pipe(sourceMaps.write('.'))\n        .pipe(gulp.dest('dist/'));\n});\n\ngulp.task('watch:js', function () {\n    return gulp.watch('src/**/*.js', ['compile:js']);\n});\n\ngulp.task('default', ['compile:js', 'watch:js']);\n```\n\n`src/s1.js` file\n```js\n@classLevel('debug')\n@instanceLevel('warning')\nclass Person {\n    constructor(name) {\n        this.name = name;\n    }\n}\n\nfunction classLevel(value) {\n    return function decorator(target) {\n        target.level = value; // add property to the target class\n    }\n}\n\nfunction instanceLevel(value) {\n    return function decorator(target) {\n        target.prototype.level = value; // add property to the target class instance\n    }\n}\n\nconsole.log('Person.level=', Person.level);\n\nlet jack = new Person('Jack');\nconsole.log('Jack.level=', jack.level);\n```\n\nStart build task\n```\nnpm run build\n```\n\nSample output\n```\n> t1@1.0.0 build f:\\projs\\t1\n> gulp\n\n[12:53:01] Using gulpfile f:\\projs\\t1\\gulpfile.js\n[12:53:01] Starting 'compile:js'...\n[12:53:01] Starting 'watch:js'...\n[12:53:01] Finished 'watch:js' after 13 ms\n[12:53:01] Finished 'compile:js' after 156 ms\n[12:53:01] Starting 'default'...\n[12:53:01] Finished 'default' after 31 μs\n```\n\nExecute `dist/s1.js`\n```\nnode dist/s1.js\n```\n\nSample output\n```\nPerson.level= debug\nJack.level= warning\n```\n","html":"<h1 id=\"using-decorators-transpile-with-babel-configure-gulp-task-\">Using decorators. Transpile with Babel. Configure Gulp task.</h1>\n<p>Install necessary modules</p>\n<pre><code>npm <span class=\"hljs-selector-tag\">i</span> -D babel-cli babel-plugin-<span class=\"hljs-attribute\">transform</span>-decorators-legacy\nnpm <span class=\"hljs-selector-tag\">i</span> -D gulp gulp-sourcemaps gulp-babel\n</code></pre><p>Configure <code>npm run build</code> and <code>npm start</code> commands.\nAlso specify babel options, such as <code>plugins</code>.</p>\n<p><code>package.json</code> file</p>\n<pre><code class=\"lang-json\">{\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"t1\"</span>,\n  <span class=\"hljs-attr\">\"version\"</span>: <span class=\"hljs-string\">\"1.0.0\"</span>,\n  <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"\"</span>,\n  <span class=\"hljs-attr\">\"main\"</span>: <span class=\"hljs-string\">\"index.js\"</span>,\n  <span class=\"hljs-attr\">\"scripts\"</span>: {\n    <span class=\"hljs-attr\">\"start\"</span>: <span class=\"hljs-string\">\"node dist/s1.js\"</span>,\n    <span class=\"hljs-attr\">\"build\"</span>: <span class=\"hljs-string\">\"gulp\"</span>\n  },\n  <span class=\"hljs-attr\">\"keywords\"</span>: [],\n  <span class=\"hljs-attr\">\"author\"</span>: <span class=\"hljs-string\">\"\"</span>,\n  <span class=\"hljs-attr\">\"license\"</span>: <span class=\"hljs-string\">\"ISC\"</span>,\n  <span class=\"hljs-attr\">\"devDependencies\"</span>: {\n    <span class=\"hljs-attr\">\"babel-cli\"</span>: <span class=\"hljs-string\">\"^6.16.0\"</span>,\n    <span class=\"hljs-attr\">\"babel-plugin-transform-decorators-legacy\"</span>: <span class=\"hljs-string\">\"^1.3.4\"</span>,\n    <span class=\"hljs-attr\">\"gulp\"</span>: <span class=\"hljs-string\">\"^3.9.1\"</span>,\n    <span class=\"hljs-attr\">\"gulp-babel\"</span>: <span class=\"hljs-string\">\"^6.1.2\"</span>,\n    <span class=\"hljs-attr\">\"gulp-sourcemaps\"</span>: <span class=\"hljs-string\">\"^1.6.0\"</span>\n  },\n  <span class=\"hljs-attr\">\"babel\"</span>: {\n    <span class=\"hljs-attr\">\"plugins\"</span>: [\n      <span class=\"hljs-string\">\"transform-decorators-legacy\"</span>\n    ]\n  }\n}\n</code></pre>\n<p><code>gulpfile.js</code> file</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-keyword\">var</span> gulp = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'gulp'</span>);\n<span class=\"hljs-keyword\">var</span> babel = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'gulp-babel'</span>);\n<span class=\"hljs-keyword\">var</span> sourceMaps = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'gulp-sourcemaps'</span>);\n\ngulp.task(<span class=\"hljs-string\">'compile:js'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-keyword\">return</span> gulp.src(<span class=\"hljs-string\">'src/**/*.js'</span>)\n        .pipe(sourceMaps.init())\n        .pipe(babel())\n        .pipe(sourceMaps.write(<span class=\"hljs-string\">'.'</span>))\n        .pipe(gulp.dest(<span class=\"hljs-string\">'dist/'</span>));\n});\n\ngulp.task(<span class=\"hljs-string\">'watch:js'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-keyword\">return</span> gulp.watch(<span class=\"hljs-string\">'src/**/*.js'</span>, [<span class=\"hljs-string\">'compile:js'</span>]);\n});\n\ngulp.task(<span class=\"hljs-string\">'default'</span>, [<span class=\"hljs-string\">'compile:js'</span>, <span class=\"hljs-string\">'watch:js'</span>]);\n</code></pre>\n<p><code>src/s1.js</code> file</p>\n<pre><code class=\"lang-js\">@classLevel(<span class=\"hljs-string\">'debug'</span>)\n@instanceLevel(<span class=\"hljs-string\">'warning'</span>)\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Person</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span>(name) {\n        <span class=\"hljs-keyword\">this</span>.name = name;\n    }\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">classLevel</span>(<span class=\"hljs-params\">value</span>) </span>{\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">decorator</span>(<span class=\"hljs-params\">target</span>) </span>{\n        target.level = value; <span class=\"hljs-comment\">// add property to the target class</span>\n    }\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">instanceLevel</span>(<span class=\"hljs-params\">value</span>) </span>{\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">decorator</span>(<span class=\"hljs-params\">target</span>) </span>{\n        target.prototype.level = value; <span class=\"hljs-comment\">// add property to the target class instance</span>\n    }\n}\n\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Person.level='</span>, Person.level);\n\n<span class=\"hljs-keyword\">let</span> jack = <span class=\"hljs-keyword\">new</span> Person(<span class=\"hljs-string\">'Jack'</span>);\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Jack.level='</span>, jack.level);\n</code></pre>\n<p>Start build task</p>\n<pre><code>npm <span class=\"hljs-keyword\">run</span><span class=\"bash\"> build</span>\n</code></pre><p>Sample output</p>\n<pre><code>&gt; t1@<span class=\"hljs-number\">1.0</span><span class=\"hljs-number\">.0</span> build f:\\projs\\t1\n&gt; gulp\n\n[<span class=\"hljs-number\">12</span>:<span class=\"hljs-number\">53</span>:<span class=\"hljs-number\">01</span>] <span class=\"hljs-symbol\">Using</span> gulpfile f:\\projs\\t1\\gulpfile.js\n[<span class=\"hljs-number\">12</span>:<span class=\"hljs-number\">53</span>:<span class=\"hljs-number\">01</span>] <span class=\"hljs-symbol\">Starting</span> <span class=\"hljs-string\">'compile:js'</span>...\n[<span class=\"hljs-number\">12</span>:<span class=\"hljs-number\">53</span>:<span class=\"hljs-number\">01</span>] <span class=\"hljs-symbol\">Starting</span> <span class=\"hljs-string\">'watch:js'</span>...\n[<span class=\"hljs-number\">12</span>:<span class=\"hljs-number\">53</span>:<span class=\"hljs-number\">01</span>] <span class=\"hljs-symbol\">Finished</span> <span class=\"hljs-string\">'watch:js'</span> after <span class=\"hljs-number\">13</span> ms\n[<span class=\"hljs-number\">12</span>:<span class=\"hljs-number\">53</span>:<span class=\"hljs-number\">01</span>] <span class=\"hljs-symbol\">Finished</span> <span class=\"hljs-string\">'compile:js'</span> after <span class=\"hljs-number\">156</span> ms\n[<span class=\"hljs-number\">12</span>:<span class=\"hljs-number\">53</span>:<span class=\"hljs-number\">01</span>] <span class=\"hljs-symbol\">Starting</span> <span class=\"hljs-string\">'default'</span>...\n[<span class=\"hljs-number\">12</span>:<span class=\"hljs-number\">53</span>:<span class=\"hljs-number\">01</span>] <span class=\"hljs-symbol\">Finished</span> <span class=\"hljs-string\">'default'</span> after <span class=\"hljs-number\">31</span> μs\n</code></pre><p>Execute <code>dist/s1.js</code></p>\n<pre><code><span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">dist</span>/s1.js\n</code></pre><p>Sample output</p>\n<pre><code>Person.level= <span class=\"hljs-built_in\">debug</span>\n<span class=\"hljs-keyword\">Jack.level= </span>warning\n</code></pre>"},{"html_url":"https://gist.github.com/1cfc2ddebf58b59fe3d4acc2567ebdd0","description":"Get Free SSL Certificate & Configure Nginx to use it","files":["https://gist.githubusercontent.com/umidjons/1cfc2ddebf58b59fe3d4acc2567ebdd0/raw/c00936388ffff5fa937fb47f7616e358081ab2b6/ssl-nginx.md"],"content":"# Get Free SSL Certificate & Configure Nginx to use it\n\n - Register on [GoGetSSL](https://www.gogetssl.com).\n - Choose `SSL Certificates -> Domain Validation SSL` from top menu.\n - On products table click `Details` button on row `Comodo - Free SSL`.\n - On the opening page click `Create New Order` button.\n - In the Product Configuration section choose: `Product Type = SSL Certificates` and `Select Item = Comodo Trial SSL`, then click `Complete Order` button.\n - On the opening page click `Incomplete Orders` link.\n - In the `List of all your SSL certificates` table click `Generate` button.\n - With [Online CSR Generator](https://my.gogetssl.com/en/user/csr/generate/) generate CSR.\n - Copy & Paste generated CSR into `Paste your CSR` text area.\n - Then click `Validate CSR`.\n - On the opening page validate your domain via email, dns, http or https.\n - In case of validation via email, you will get your private key as post. Do not lost your private key.\n - After validation you will get access to `Download SSL` button on the `Manage SSL Certificates` page, in the certificate details section.\n - Download your certificate & extract it OR check your email, you will get your certificate as archive.\n - Assume your domain is `mysite.com`, then in the archive you will get `mysite_com.ca-bundle` and `mysite_com.crt` files.\n - Open `mysite_com.crt` file, copy its content, then open `mysite_com.ca-bundle` file and paste content to the beginning of the file, save the file.\n - Copy files into your domain's folder, for example, into `/www/mysite.com/cert/`.\n - Save your private key as `mysite_com.key` and download into `www/mysite.com/cert/` folder.\n - Set nginx configurations:\n\n```nginx\n server {\n    listen 80;\n    server_name \"mysite.com\";\n    root /www/mysite.com;\n    index index.html;\n    location / {\n        return 301 https://mysite.com;\n    }\n}\nserver {\n    listen 443 ssl;\n    server_name \"mysite.com\";\n    root /www/mysite.com;\n    index index.html;\n    ssl on;\n    ssl_certificate /www/mysite.com/cert/mysite_com.ca-bundle;\n    ssl_certificate_key /www/mysite.com/cert/mysite_com.key;\n    # ...\n}\n```\n\n## References\n\n- You can check SSL of your server with the following [tool](https://www.ssllabs.com/ssltest/index.html).\n- You can check your certificate with this decoder [tool](https://www.sslshopper.com/certificate-decoder.html).\n","html":"<h1 id=\"get-free-ssl-certificate-configure-nginx-to-use-it\">Get Free SSL Certificate &amp; Configure Nginx to use it</h1>\n<ul>\n<li>Register on <a href=\"https://www.gogetssl.com\">GoGetSSL</a>.</li>\n<li>Choose <code>SSL Certificates -&gt; Domain Validation SSL</code> from top menu.</li>\n<li>On products table click <code>Details</code> button on row <code>Comodo - Free SSL</code>.</li>\n<li>On the opening page click <code>Create New Order</code> button.</li>\n<li>In the Product Configuration section choose: <code>Product Type = SSL Certificates</code> and <code>Select Item = Comodo Trial SSL</code>, then click <code>Complete Order</code> button.</li>\n<li>On the opening page click <code>Incomplete Orders</code> link.</li>\n<li>In the <code>List of all your SSL certificates</code> table click <code>Generate</code> button.</li>\n<li>With <a href=\"https://my.gogetssl.com/en/user/csr/generate/\">Online CSR Generator</a> generate CSR.</li>\n<li>Copy &amp; Paste generated CSR into <code>Paste your CSR</code> text area.</li>\n<li>Then click <code>Validate CSR</code>.</li>\n<li>On the opening page validate your domain via email, dns, http or https.</li>\n<li>In case of validation via email, you will get your private key as post. Do not lost your private key.</li>\n<li>After validation you will get access to <code>Download SSL</code> button on the <code>Manage SSL Certificates</code> page, in the certificate details section.</li>\n<li>Download your certificate &amp; extract it OR check your email, you will get your certificate as archive.</li>\n<li>Assume your domain is <code>mysite.com</code>, then in the archive you will get <code>mysite_com.ca-bundle</code> and <code>mysite_com.crt</code> files.</li>\n<li>Open <code>mysite_com.crt</code> file, copy its content, then open <code>mysite_com.ca-bundle</code> file and paste content to the beginning of the file, save the file.</li>\n<li>Copy files into your domain&#39;s folder, for example, into <code>/www/mysite.com/cert/</code>.</li>\n<li>Save your private key as <code>mysite_com.key</code> and download into <code>www/mysite.com/cert/</code> folder.</li>\n<li>Set nginx configurations:</li>\n</ul>\n<pre><code class=\"lang-nginx\"> <span class=\"hljs-section\">server</span> {\n    <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">80</span>;\n    <span class=\"hljs-attribute\">server_name</span> <span class=\"hljs-string\">\"mysite.com\"</span>;\n    <span class=\"hljs-attribute\">root</span> /www/mysite.com;\n    <span class=\"hljs-attribute\">index</span> index.html;\n    <span class=\"hljs-attribute\">location</span> / {\n        <span class=\"hljs-attribute\">return</span> <span class=\"hljs-number\">301</span> https://mysite.com;\n    }\n}\n<span class=\"hljs-section\">server</span> {\n    <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">443</span> ssl;\n    <span class=\"hljs-attribute\">server_name</span> <span class=\"hljs-string\">\"mysite.com\"</span>;\n    <span class=\"hljs-attribute\">root</span> /www/mysite.com;\n    <span class=\"hljs-attribute\">index</span> index.html;\n    <span class=\"hljs-attribute\">ssl</span> <span class=\"hljs-literal\">on</span>;\n    <span class=\"hljs-attribute\">ssl_certificate</span> /www/mysite.com/cert/mysite_com.ca-bundle;\n    <span class=\"hljs-attribute\">ssl_certificate_key</span> /www/mysite.com/cert/mysite_com.key;\n    <span class=\"hljs-comment\"># ...</span>\n}\n</code></pre>\n<h2 id=\"references\">References</h2>\n<ul>\n<li>You can check SSL of your server with the following <a href=\"https://www.ssllabs.com/ssltest/index.html\">tool</a>.</li>\n<li>You can check your certificate with this decoder <a href=\"https://www.sslshopper.com/certificate-decoder.html\">tool</a>.</li>\n</ul>\n"},{"html_url":"https://gist.github.com/30ef5e0c9e2a93a6dd6db8fa185b7906","description":"Socket.io Client events example","files":["https://gist.githubusercontent.com/umidjons/30ef5e0c9e2a93a6dd6db8fa185b7906/raw/3b1618c494f2b29c41e43e2bcd222e23a0d971db/socket.io-client-events.md"],"content":"# Socket.io Client (Manager) events example\n\n```\nnpm i -S socket.io express jquery\n```\n\nFile `server.js`:\n```js\nvar express = require('express');\nvar app = express();\nvar server = require('http').Server(app);\nvar io = require('socket.io')(server);\n\napp.use(express.static(__dirname + '/node_modules'));\n\nserver.listen(80);\n\napp.get('/', function (req, res) {\n    res.sendFile(__dirname + '/index.html');\n});\n\nio.on('connection', function (socket) {\n    socket.emit('news', {hello: 'world'});\n});\n```\n\nFile `index.html`:\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Socket.io Client (Manager) Events</title>\n</head>\n<body>\n\n<div id=\"log\"></div>\n\n<script src=\"/socket.io/socket.io.js\"></script>\n<script src=\"/jquery/dist/jquery.min.js\"></script>\n<script>\n    jQuery(document).ready(function ($) {\n        function log(eventName, message) {\n            if (typeof message == 'object')\n                message = JSON.stringify(message);\n            var content = eventName + '>' + (message ? message : '');\n            $('#log').append($('<p>').text(content));\n        }\n\n        var socket = io.connect('http://localhost');\n        socket\n                .on('connect', function () {\n                    log('connect', 'connected');\n                })\n                .on('connect_error', function (err) {\n                    log('connect_error', err);\n                })\n                .on('connect_timeout', function () {\n                    log('connect_timeout');\n                })\n                .on('reconnect', function (attempt) {\n                    log('reconnect', 'Attempt #' + attempt);\n                })\n                .on('reconnecting', function (attempt) {\n                    log('reconnecting', 'Attempt #' + attempt);\n                })\n                .on('reconnect_attempt', function () {\n                    log('reconnect_attempt');\n                })\n                .on('reconnect_error', function (err) {\n                    log('reconnect_error', err);\n                })\n                .on('reconnect_failed', function () {\n                    log('reconnect_failed');\n                })\n                .on('news', function (data) {\n                    log('news', data);\n                });\n    });\n</script>\n\n</body>\n</html>\n```\n\nSample output:\n```\nconnect>connected\nnews>{\"hello\":\"world\"}\nreconnect_attempt>\nreconnecting>Attempt #1\nconnect_error>{\"type\":\"TransportError\",\"description\":0}\nreconnect_error>{\"type\":\"TransportError\",\"description\":0}\nreconnect_attempt>\nreconnecting>Attempt #2\nconnect_error>{\"type\":\"TransportError\",\"description\":0}\nreconnect_error>{\"type\":\"TransportError\",\"description\":0}\nreconnect_attempt>\nreconnecting>Attempt #3\nconnect_error>{\"type\":\"TransportError\",\"description\":0}\nreconnect_error>{\"type\":\"TransportError\",\"description\":0}\nreconnect_attempt>\nreconnecting>Attempt #4\nconnect_error>{\"type\":\"TransportError\",\"description\":0}\nreconnect_error>{\"type\":\"TransportError\",\"description\":0}\nreconnect_attempt>\nreconnecting>Attempt #5\nconnect_error>{\"type\":\"TransportError\",\"description\":0}\nreconnect_error>{\"type\":\"TransportError\",\"description\":0}\nreconnect_attempt>\nreconnecting>Attempt #6\nconnect_error>{\"type\":\"TransportError\",\"description\":0}\nreconnect_error>{\"type\":\"TransportError\",\"description\":0}\nreconnect_attempt>\nreconnecting>Attempt #7\nconnect_error>{\"type\":\"TransportError\",\"description\":0}\nreconnect_error>{\"type\":\"TransportError\",\"description\":0}\nreconnect_attempt>\nreconnecting>Attempt #8\nreconnect>Attempt #8\nconnect>connected\nnews>{\"hello\":\"world\"}\nreconnect_attempt>\nreconnecting>Attempt #1\nreconnect>Attempt #1\nconnect>connected\nnews>{\"hello\":\"world\"}\n```","html":"<h1 id=\"socket-io-client-manager-events-example\">Socket.io Client (Manager) events example</h1>\n<pre><code>npm <span class=\"hljs-selector-tag\">i</span> -S socket<span class=\"hljs-selector-class\">.io</span> express jquery\n</code></pre><p>File <code>server.js</code>:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-keyword\">var</span> express = <span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'express'</span>);\n<span class=\"hljs-keyword\">var</span> app = express();\n<span class=\"hljs-keyword\">var</span> server = <span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'http'</span>).Server(app);\n<span class=\"hljs-keyword\">var</span> io = <span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'socket.io'</span>)(server);\n\napp.<span class=\"hljs-keyword\">use</span>(express.<span class=\"hljs-keyword\">static</span>(__dirname + <span class=\"hljs-string\">'/node_modules'</span>));\n\nserver.listen(<span class=\"hljs-number\">80</span>);\n\napp.get(<span class=\"hljs-string\">'/'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(req, res)</span> </span>{\n    res.sendFile(__dirname + <span class=\"hljs-string\">'/index.html'</span>);\n});\n\nio.on(<span class=\"hljs-string\">'connection'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(socket)</span> </span>{\n    socket.emit(<span class=\"hljs-string\">'news'</span>, {hello: <span class=\"hljs-string\">'world'</span>});\n});\n</code></pre>\n<p>File <code>index.html</code>:</p>\n<pre><code class=\"lang-html\"><span class=\"hljs-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>Socket.io Client (Manager) Events<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"log\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"/socket.io/socket.io.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"/jquery/dist/jquery.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    jQuery(<span class=\"hljs-built_in\">document</span>).ready(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">$</span>) </span>{\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">log</span>(<span class=\"hljs-params\">eventName, message</span>) </span>{\n            <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> message == <span class=\"hljs-string\">'object'</span>)\n                message = <span class=\"hljs-built_in\">JSON</span>.stringify(message);\n            <span class=\"hljs-keyword\">var</span> content = eventName + <span class=\"hljs-string\">'&gt;'</span> + (message ? message : <span class=\"hljs-string\">''</span>);\n            $(<span class=\"hljs-string\">'#log'</span>).append($(<span class=\"hljs-string\">'&lt;p&gt;'</span>).text(content));\n        }\n\n        <span class=\"hljs-keyword\">var</span> socket = io.connect(<span class=\"hljs-string\">'http://localhost'</span>);\n        socket\n                .on(<span class=\"hljs-string\">'connect'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n                    log(<span class=\"hljs-string\">'connect'</span>, <span class=\"hljs-string\">'connected'</span>);\n                })\n                .on(<span class=\"hljs-string\">'connect_error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err</span>) </span>{\n                    log(<span class=\"hljs-string\">'connect_error'</span>, err);\n                })\n                .on(<span class=\"hljs-string\">'connect_timeout'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n                    log(<span class=\"hljs-string\">'connect_timeout'</span>);\n                })\n                .on(<span class=\"hljs-string\">'reconnect'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">attempt</span>) </span>{\n                    log(<span class=\"hljs-string\">'reconnect'</span>, <span class=\"hljs-string\">'Attempt #'</span> + attempt);\n                })\n                .on(<span class=\"hljs-string\">'reconnecting'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">attempt</span>) </span>{\n                    log(<span class=\"hljs-string\">'reconnecting'</span>, <span class=\"hljs-string\">'Attempt #'</span> + attempt);\n                })\n                .on(<span class=\"hljs-string\">'reconnect_attempt'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n                    log(<span class=\"hljs-string\">'reconnect_attempt'</span>);\n                })\n                .on(<span class=\"hljs-string\">'reconnect_error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err</span>) </span>{\n                    log(<span class=\"hljs-string\">'reconnect_error'</span>, err);\n                })\n                .on(<span class=\"hljs-string\">'reconnect_failed'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n                    log(<span class=\"hljs-string\">'reconnect_failed'</span>);\n                })\n                .on(<span class=\"hljs-string\">'news'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) </span>{\n                    log(<span class=\"hljs-string\">'news'</span>, data);\n                });\n    });\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n<p>Sample output:</p>\n<pre><code><span class=\"hljs-keyword\">connect</span>&gt;connected\nnews&gt;{<span class=\"hljs-string\">\"hello\"</span>:<span class=\"hljs-string\">\"world\"</span>}\nreconnect_attempt&gt;\nreconnecting&gt;Attempt <span class=\"hljs-comment\">#1</span>\nconnect_error&gt;{<span class=\"hljs-string\">\"type\"</span>:<span class=\"hljs-string\">\"TransportError\"</span>,<span class=\"hljs-string\">\"description\"</span>:<span class=\"hljs-number\">0</span>}\nreconnect_error&gt;{<span class=\"hljs-string\">\"type\"</span>:<span class=\"hljs-string\">\"TransportError\"</span>,<span class=\"hljs-string\">\"description\"</span>:<span class=\"hljs-number\">0</span>}\nreconnect_attempt&gt;\nreconnecting&gt;Attempt <span class=\"hljs-comment\">#2</span>\nconnect_error&gt;{<span class=\"hljs-string\">\"type\"</span>:<span class=\"hljs-string\">\"TransportError\"</span>,<span class=\"hljs-string\">\"description\"</span>:<span class=\"hljs-number\">0</span>}\nreconnect_error&gt;{<span class=\"hljs-string\">\"type\"</span>:<span class=\"hljs-string\">\"TransportError\"</span>,<span class=\"hljs-string\">\"description\"</span>:<span class=\"hljs-number\">0</span>}\nreconnect_attempt&gt;\nreconnecting&gt;Attempt <span class=\"hljs-comment\">#3</span>\nconnect_error&gt;{<span class=\"hljs-string\">\"type\"</span>:<span class=\"hljs-string\">\"TransportError\"</span>,<span class=\"hljs-string\">\"description\"</span>:<span class=\"hljs-number\">0</span>}\nreconnect_error&gt;{<span class=\"hljs-string\">\"type\"</span>:<span class=\"hljs-string\">\"TransportError\"</span>,<span class=\"hljs-string\">\"description\"</span>:<span class=\"hljs-number\">0</span>}\nreconnect_attempt&gt;\nreconnecting&gt;Attempt <span class=\"hljs-comment\">#4</span>\nconnect_error&gt;{<span class=\"hljs-string\">\"type\"</span>:<span class=\"hljs-string\">\"TransportError\"</span>,<span class=\"hljs-string\">\"description\"</span>:<span class=\"hljs-number\">0</span>}\nreconnect_error&gt;{<span class=\"hljs-string\">\"type\"</span>:<span class=\"hljs-string\">\"TransportError\"</span>,<span class=\"hljs-string\">\"description\"</span>:<span class=\"hljs-number\">0</span>}\nreconnect_attempt&gt;\nreconnecting&gt;Attempt <span class=\"hljs-comment\">#5</span>\nconnect_error&gt;{<span class=\"hljs-string\">\"type\"</span>:<span class=\"hljs-string\">\"TransportError\"</span>,<span class=\"hljs-string\">\"description\"</span>:<span class=\"hljs-number\">0</span>}\nreconnect_error&gt;{<span class=\"hljs-string\">\"type\"</span>:<span class=\"hljs-string\">\"TransportError\"</span>,<span class=\"hljs-string\">\"description\"</span>:<span class=\"hljs-number\">0</span>}\nreconnect_attempt&gt;\nreconnecting&gt;Attempt <span class=\"hljs-comment\">#6</span>\nconnect_error&gt;{<span class=\"hljs-string\">\"type\"</span>:<span class=\"hljs-string\">\"TransportError\"</span>,<span class=\"hljs-string\">\"description\"</span>:<span class=\"hljs-number\">0</span>}\nreconnect_error&gt;{<span class=\"hljs-string\">\"type\"</span>:<span class=\"hljs-string\">\"TransportError\"</span>,<span class=\"hljs-string\">\"description\"</span>:<span class=\"hljs-number\">0</span>}\nreconnect_attempt&gt;\nreconnecting&gt;Attempt <span class=\"hljs-comment\">#7</span>\nconnect_error&gt;{<span class=\"hljs-string\">\"type\"</span>:<span class=\"hljs-string\">\"TransportError\"</span>,<span class=\"hljs-string\">\"description\"</span>:<span class=\"hljs-number\">0</span>}\nreconnect_error&gt;{<span class=\"hljs-string\">\"type\"</span>:<span class=\"hljs-string\">\"TransportError\"</span>,<span class=\"hljs-string\">\"description\"</span>:<span class=\"hljs-number\">0</span>}\nreconnect_attempt&gt;\nreconnecting&gt;Attempt <span class=\"hljs-comment\">#8</span>\nreconnect&gt;Attempt <span class=\"hljs-comment\">#8</span>\n<span class=\"hljs-keyword\">connect</span>&gt;connected\nnews&gt;{<span class=\"hljs-string\">\"hello\"</span>:<span class=\"hljs-string\">\"world\"</span>}\nreconnect_attempt&gt;\nreconnecting&gt;Attempt <span class=\"hljs-comment\">#1</span>\nreconnect&gt;Attempt <span class=\"hljs-comment\">#1</span>\n<span class=\"hljs-keyword\">connect</span>&gt;connected\nnews&gt;{<span class=\"hljs-string\">\"hello\"</span>:<span class=\"hljs-string\">\"world\"</span>}\n</code></pre>"},{"html_url":"https://gist.github.com/7404ef96dca917d19d8105088c824ed1","description":"Asynchronous programming overview","files":["https://gist.githubusercontent.com/umidjons/7404ef96dca917d19d8105088c824ed1/raw/f62a57c57e847f41568b2d7fa14fbc49de2099ba/async-prog-overview.md"],"content":"# Асинхронное программирование\n\n- операция, который результат доступен не сразу же, а через некоторое время\n- а также называют event driven programming\n\n# Примеры асинхронных операций:\n\n- обращение к диску за данными\n- сетевые обращение (БД, веб-сервер, кеш сервер)\n\n## Пример - Обращение к БД\n\n- соединение с сервером БД\n- отправка запроса\n- ожидание ответа\n- чтение ответа\n\n## Пример - Удаление контакта с чата\n\n- соединение с сервером\n- отправка команды\n- ожидание ответа\n- чтение ответа\n- удаление контакта в интерфейсе\n\n# Еще какие методы есть?\n\n## Отдельный процесс\n\nСледующие программы используют мульти-процессы\n\n- Apache (mpm_prefork)\n- PostgreSQL\n- PHP FastCGI\n\n## Отдельный поток\n\nСледующие программы используют мульти-потоки\n\n- Apache (mpm_worker)\n- MySQL\n\n## Минусы мультипроцессов и потоков:\n\n- расходуется относительно много ресурсов (память, переключение контекста)\n- не подходит для обработки большого количество одновременных соединений\n\n## Плюсы:\n\n- идеален когда объем вычеслений высок\n- использует все доступные процессоры\n\n# Deferred и Promise\n\n## Promise vs Deferred\n\nA `promise` represents a value that is not yet known.\n\nМетоды `Promise`:\n\n- promise.then(successHandler, failHandler) - во многих модулях\n- Promise.then(successHandler).catch(failHandler)\n\nA `deferred` represents work that is not yet finished.\n\nМетоды `Deferred`:\n\n- Deferred.resolve() - called when work is success\n- Deferred.reject() - called when work is failed\n\n![](http://i.stack.imgur.com/cfa1p.png)\n\n# Links\n\n- https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\n- http://itvdn.com/ru/blog/article/programing-javascript\n- http://stackoverflow.com/questions/17308172/deferred-versus-promise\n- http://frontender.info/asynchronous-javascript/","html":"<h1 id=\"-\">Асинхронное программирование</h1>\n<ul>\n<li>операция, который результат доступен не сразу же, а через некоторое время</li>\n<li>а также называют event driven programming</li>\n</ul>\n<h1 id=\"-\">Примеры асинхронных операций:</h1>\n<ul>\n<li>обращение к диску за данными</li>\n<li>сетевые обращение (БД, веб-сервер, кеш сервер)</li>\n</ul>\n<h2 id=\"-\">Пример - Обращение к БД</h2>\n<ul>\n<li>соединение с сервером БД</li>\n<li>отправка запроса</li>\n<li>ожидание ответа</li>\n<li>чтение ответа</li>\n</ul>\n<h2 id=\"-\">Пример - Удаление контакта с чата</h2>\n<ul>\n<li>соединение с сервером</li>\n<li>отправка команды</li>\n<li>ожидание ответа</li>\n<li>чтение ответа</li>\n<li>удаление контакта в интерфейсе</li>\n</ul>\n<h1 id=\"-\">Еще какие методы есть?</h1>\n<h2 id=\"-\">Отдельный процесс</h2>\n<p>Следующие программы используют мульти-процессы</p>\n<ul>\n<li>Apache (mpm_prefork)</li>\n<li>PostgreSQL</li>\n<li>PHP FastCGI</li>\n</ul>\n<h2 id=\"-\">Отдельный поток</h2>\n<p>Следующие программы используют мульти-потоки</p>\n<ul>\n<li>Apache (mpm_worker)</li>\n<li>MySQL</li>\n</ul>\n<h2 id=\"-\">Минусы мультипроцессов и потоков:</h2>\n<ul>\n<li>расходуется относительно много ресурсов (память, переключение контекста)</li>\n<li>не подходит для обработки большого количество одновременных соединений</li>\n</ul>\n<h2 id=\"-\">Плюсы:</h2>\n<ul>\n<li>идеален когда объем вычеслений высок</li>\n<li>использует все доступные процессоры</li>\n</ul>\n<h1 id=\"deferred-promise\">Deferred и Promise</h1>\n<h2 id=\"promise-vs-deferred\">Promise vs Deferred</h2>\n<p>A <code>promise</code> represents a value that is not yet known.</p>\n<p>Методы <code>Promise</code>:</p>\n<ul>\n<li>promise.then(successHandler, failHandler) - во многих модулях</li>\n<li>Promise.then(successHandler).catch(failHandler)</li>\n</ul>\n<p>A <code>deferred</code> represents work that is not yet finished.</p>\n<p>Методы <code>Deferred</code>:</p>\n<ul>\n<li>Deferred.resolve() - called when work is success</li>\n<li>Deferred.reject() - called when work is failed</li>\n</ul>\n<p><img src=\"http://i.stack.imgur.com/cfa1p.png\" alt=\"\"></p>\n<h1 id=\"links\">Links</h1>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise</a></li>\n<li><a href=\"http://itvdn.com/ru/blog/article/programing-javascript\">http://itvdn.com/ru/blog/article/programing-javascript</a></li>\n<li><a href=\"http://stackoverflow.com/questions/17308172/deferred-versus-promise\">http://stackoverflow.com/questions/17308172/deferred-versus-promise</a></li>\n<li><a href=\"http://frontender.info/asynchronous-javascript/\">http://frontender.info/asynchronous-javascript/</a></li>\n</ul>\n"},{"html_url":"https://gist.github.com/a42077352bafbe1e2f44b985fd904f42","description":"Set JavaScript variable via Twig in OctoberCMS","files":["https://gist.githubusercontent.com/umidjons/a42077352bafbe1e2f44b985fd904f42/raw/cdb3413e9a84f8b77c344ab026cac43160ac85be/set-twig-variable-in-js-octobercms.md"],"content":"# Set JavaScript variable via Twig in OctoberCMS\n\n`record` - is variable, that contains models (objects)\n\nI passed `JSON_PRETTY_PRINT`, `JSON_UNESCAPED_UNICODE` and `JSON_UNESCAPED_SLASHES` constants into `json_encode` filter.\n\n\n```js\n<script>\nvar infokioskList = JSON.parse(\"{{ records | json_encode(constant('JSON_PRETTY_PRINT') + constant('JSON_UNESCAPED_UNICODE') + constant('JSON_UNESCAPED_SLASHES')) | e('js') }}\");\nconsole.log('InfoKiosks List:', infokioskList);\n</script>\n```","html":"<h1 id=\"set-javascript-variable-via-twig-in-octobercms\">Set JavaScript variable via Twig in OctoberCMS</h1>\n<p><code>record</code> - is variable, that contains models (objects)</p>\n<p>I passed <code>JSON_PRETTY_PRINT</code>, <code>JSON_UNESCAPED_UNICODE</code> and <code>JSON_UNESCAPED_SLASHES</code> constants into <code>json_encode</code> filter.</p>\n<pre><code class=\"lang-js\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">var</span> infokioskList = <span class=\"hljs-built_in\">JSON</span>.parse(<span class=\"hljs-string\">\"</span></span></span><span class=\"hljs-template-variable\">{{ records | json_encode(<span class=\"hljs-name\">constant</span><span class=\"hljs-params\">('JSON_PRETTY_PRINT')</span> + <span class=\"hljs-name\">constant</span><span class=\"hljs-params\">('JSON_UNESCAPED_UNICODE')</span> + <span class=\"hljs-name\">constant</span><span class=\"hljs-params\">('JSON_UNESCAPED_SLASHES')</span>) | e('js') }}</span><span class=\"xml\"><span class=\"undefined\">\");\nconsole.log('InfoKiosks List:', infokioskList);\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/f88f62d173d249b50f0146d9e8d1d90c","description":"Angular Google Maps directive example","files":["https://gist.githubusercontent.com/umidjons/f88f62d173d249b50f0146d9e8d1d90c/raw/6e91e1b348f7993d5fb834470670deba9db4136e/angular-google-maps-example.md"],"content":"# Angular Google Maps directive example\n\n## Prepare assets\n```\nbower init\nbower i -S angular lodash angular-simple-logger angular-google-maps\n```\n\n## File `index.html`:\n\n```html\n<!doctype html>\n<html lang=\"en\" ng-app=\"GMapApp\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<meta name=\"viewport\"\n\t\t  content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n\t<meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n\t<title>Google Maps Test</title>\n\t<link rel=\"stylesheet\" href=\"/css/style.css\">\n</head>\n<body ng-controller=\"MainCtrl\">\n\n<ui-gmap-google-map center='map.center' zoom='map.zoom'>\n\t<ui-gmap-markers models=\"markers\" coords=\"'self'\"\n\t\t\t\t\t options=\"markerOptions.options\"\n\t\t\t\t\t events=\"markerOptions.events\">\n\n\t\t<ui-gmap-windows show=\"show\">\n\t\t\t<div ng-non-bindable>\n\t\t\t\t<strong>Address:</strong> {{title}}\n\t\t\t</div>\n\t\t</ui-gmap-windows>\n\n\t</ui-gmap-markers>\n</ui-gmap-google-map>\n\n<script src=\"/bower_components/lodash/dist/lodash.min.js\"></script>\n<script src=\"/bower_components/angular/angular.min.js\"></script>\n<script src=\"/bower_components/angular-simple-logger/dist/angular-simple-logger.min.js\"></script>\n<script src=\"/bower_components/angular-google-maps/dist/angular-google-maps.min.js\"></script>\n<script src=\"/js/app.js\"></script>\n</body>\n</html>\n```\n\n## File `app.js`:\n\n```js\nangular.module('GMapApp', ['uiGmapgoogle-maps'])\n\t.config(function (uiGmapGoogleMapApiProvider) {\n\t\tuiGmapGoogleMapApiProvider.configure({\n\t\t\tkey: 'YOUR_API_KEY',\n\t\t\tlanguage: 'ru-RU'\n\t\t\t// libraries: 'geometry,places,visualization'\n\t\t});\n\t})\n\t.controller('MainCtrl', function ($scope, uiGmapGoogleMapApi) {\n\t\t$scope.map = {\n\t\t\tcenter: {\n\t\t\t\tlatitude: 41.319316,\n\t\t\t\tlongitude: 69.234390\n\t\t\t},\n\t\t\tzoom: 12\n\t\t};\n\n\t\t$scope.markers = [\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tlatitude: 41.319316,\n\t\t\t\tlongitude: 69.283226,\n\t\t\t\ttitle: 'Alay Market',\n\t\t\t\tshow: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tlatitude: 41.328809,\n\t\t\t\tlongitude: 69.263402,\n\t\t\t\ttitle: 'Shaykhantakhur st.',\n\t\t\t\tshow: false\n\t\t\t}\n\t\t];\n\n\t\t$scope.markerOptions = {\n\t\t\toptions: {\n\t\t\t\ticon: '/images/pin-pink-flag.png' // path to custom marker\n\t\t\t},\n\t\t\tevents: {\n\t\t\t  // use either mouseover/mouseout OR click, not both\n\t\t\t\tmouseover: function (gmMarker, eventName, model) {\n\t\t\t\t\tconsole.log('eventName=', eventName, 'model=', model);\n\t\t\t\t\tmodel.show = true;\n\t\t\t\t},\n\t\t\t\tmouseout: function (gmMarker, eventName, model) {\n\t\t\t\t\tconsole.log('eventName=', eventName, 'model=', model);\n\t\t\t\t\tmodel.show = false;\n\t\t\t\t},\n\t\t\t\tclick: function (gmMarker, eventName, model) {\n\t\t\t\t\tconsole.log('eventName=', eventName, 'model=', model);\n\t\t\t\t\tmodel.show = !model.show;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tuiGmapGoogleMapApi.then(function (maps) {\n\t\t\tconsole.log('maps=', maps);\n\t\t\t// google maps sdk is ready to use...\n\t\t});\n\t});\n```\n\n## File `style.css`:\n\n```css\n.angular-google-map-container {\n\theight: 600px;\n\twidth: 1000px;\n}\n```\n\n## Test with http server (optional)\n\n```\nnpm i -g http-server\ncd my-gmap-app-dir\nhttp-server\n```","html":"<h1 id=\"angular-google-maps-directive-example\">Angular Google Maps directive example</h1>\n<h2 id=\"prepare-assets\">Prepare assets</h2>\n<pre><code><span class=\"hljs-keyword\">bower </span>init\n<span class=\"hljs-keyword\">bower </span>i -S angular lodash angular-simple-logger angular-google-maps\n</code></pre><h2 id=\"file-index-html-\">File <code>index.html</code>:</h2>\n<pre><code class=\"lang-html\"><span class=\"xml\"><span class=\"hljs-meta\">&lt;!doctype html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span> <span class=\"hljs-attr\">ng-app</span>=<span class=\"hljs-string\">\"GMapApp\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span>\n          <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">http-equiv</span>=<span class=\"hljs-string\">\"X-UA-Compatible\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"ie=edge\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>Google Maps Test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"/css/style.css\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span> <span class=\"hljs-attr\">ng-controller</span>=<span class=\"hljs-string\">\"MainCtrl\"</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ui-gmap-google-map</span> <span class=\"hljs-attr\">center</span>=<span class=\"hljs-string\">'map.center'</span> <span class=\"hljs-attr\">zoom</span>=<span class=\"hljs-string\">'map.zoom'</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ui-gmap-markers</span> <span class=\"hljs-attr\">models</span>=<span class=\"hljs-string\">\"markers\"</span> <span class=\"hljs-attr\">coords</span>=<span class=\"hljs-string\">\"'self'\"</span>\n                     <span class=\"hljs-attr\">options</span>=<span class=\"hljs-string\">\"markerOptions.options\"</span>\n                     <span class=\"hljs-attr\">events</span>=<span class=\"hljs-string\">\"markerOptions.events\"</span>&gt;</span>\n\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ui-gmap-windows</span> <span class=\"hljs-attr\">show</span>=<span class=\"hljs-string\">\"show\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-non-bindable</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">strong</span>&gt;</span>Address:<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">strong</span>&gt;</span> </span><span class=\"hljs-template-variable\">{{title}}</span><span class=\"xml\">\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ui-gmap-windows</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ui-gmap-markers</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ui-gmap-google-map</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"/bower_components/lodash/dist/lodash.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"/bower_components/angular/angular.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"/bower_components/angular-simple-logger/dist/angular-simple-logger.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"/bower_components/angular-google-maps/dist/angular-google-maps.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"/js/app.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></span>\n</code></pre>\n<h2 id=\"file-app-js-\">File <code>app.js</code>:</h2>\n<pre><code class=\"lang-js\">angular.module(<span class=\"hljs-string\">'GMapApp'</span>, [<span class=\"hljs-string\">'uiGmapgoogle-maps'</span>])\n    .config(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">uiGmapGoogleMapApiProvider</span>) </span>{\n        uiGmapGoogleMapApiProvider.configure({\n            <span class=\"hljs-attribute\">key</span>: <span class=\"hljs-string\">'YOUR_API_KEY'</span>,\n            <span class=\"hljs-attribute\">language</span>: <span class=\"hljs-string\">'ru-RU'</span>\n            <span class=\"hljs-comment\">// libraries: 'geometry,places,visualization'</span>\n        });\n    })\n    .controller(<span class=\"hljs-string\">'MainCtrl'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">$scope, uiGmapGoogleMapApi</span>) </span>{\n        $scope.map = {\n            <span class=\"hljs-attribute\">center</span>: {\n                <span class=\"hljs-attribute\">latitude</span>: <span class=\"hljs-number\">41.319316</span>,\n                <span class=\"hljs-attribute\">longitude</span>: <span class=\"hljs-number\">69.234390</span>\n            },\n            <span class=\"hljs-attribute\">zoom</span>: <span class=\"hljs-number\">12</span>\n        };\n\n        $scope.markers = [\n            {\n                <span class=\"hljs-attribute\">id:</span><span class=\"hljs-string\"> 0,\n                latitude</span>: <span class=\"hljs-number\">41.319316</span>,\n                <span class=\"hljs-attribute\">longitude</span>: <span class=\"hljs-number\">69.283226</span>,\n                <span class=\"hljs-attribute\">title</span>: <span class=\"hljs-string\">'Alay Market'</span>,\n                <span class=\"hljs-attribute\">show</span>: <span class=\"hljs-literal\">false</span>\n            },\n            {\n                <span class=\"hljs-attribute\">id:</span><span class=\"hljs-string\"> 1,\n                latitude</span>: <span class=\"hljs-number\">41.328809</span>,\n                <span class=\"hljs-attribute\">longitude</span>: <span class=\"hljs-number\">69.263402</span>,\n                <span class=\"hljs-attribute\">title</span>: <span class=\"hljs-string\">'Shaykhantakhur st.'</span>,\n                <span class=\"hljs-attribute\">show</span>: <span class=\"hljs-literal\">false</span>\n            }\n        ];\n\n        $scope.markerOptions = {\n            <span class=\"hljs-attribute\">options</span>: {\n                <span class=\"hljs-attribute\">icon</span>: <span class=\"hljs-string\">'/images/pin-pink-flag.png'</span> <span class=\"hljs-comment\">// path to custom marker</span>\n            },\n            <span class=\"hljs-attribute\">events</span>: {\n              <span class=\"hljs-comment\">// use either mouseover/mouseout OR click, not both</span>\n                <span class=\"hljs-attribute\">mouseover</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">gmMarker, eventName, model</span>) </span>{\n                    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'eventName='</span>, eventName, <span class=\"hljs-string\">'model='</span>, model);\n                    model.show = <span class=\"hljs-literal\">true</span>;\n                },\n                <span class=\"hljs-attribute\">mouseout</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">gmMarker, eventName, model</span>) </span>{\n                    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'eventName='</span>, eventName, <span class=\"hljs-string\">'model='</span>, model);\n                    model.show = <span class=\"hljs-literal\">false</span>;\n                },\n                <span class=\"hljs-attribute\">click</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">gmMarker, eventName, model</span>) </span>{\n                    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'eventName='</span>, eventName, <span class=\"hljs-string\">'model='</span>, model);\n                    model.show = !model.show;\n                }\n            }\n        };\n\n        uiGmapGoogleMapApi.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">maps</span>) </span>{\n            <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'maps='</span>, maps);\n            <span class=\"hljs-comment\">// google maps sdk is ready to use...</span>\n        });\n    });\n</code></pre>\n<h2 id=\"file-style-css-\">File <code>style.css</code>:</h2>\n<pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.angular-google-map-container</span> {\n    <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">600px</span>;\n    <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">1000px</span>;\n}\n</code></pre>\n<h2 id=\"test-with-http-server-optional-\">Test with http server (optional)</h2>\n<pre><code>npm i -<span class=\"hljs-keyword\">g</span> http-server\n<span class=\"hljs-keyword\">cd</span> my-gmap-<span class=\"hljs-keyword\">app</span>-<span class=\"hljs-keyword\">dir</span>\nhttp-server\n</code></pre>"},{"html_url":"https://gist.github.com/16047079b76e3aef52edb39fc2577a5d","description":"Spawn child process example","files":["https://gist.githubusercontent.com/umidjons/16047079b76e3aef52edb39fc2577a5d/raw/917e3d743fe8669fa9de8a6b74863b392119886d/spawn-child-process.md"],"content":"# Spawn child process example\n\n```js\n'use strict';\n\nvar spawn = require('child_process').spawn,\n    pwd = spawn('cmd', ['/c', 'dir']);\n\npwd.stdout.on('data', (data) => {\n    console.log('stdout:', data.toString());\n});\n\npwd.stderr.on('data', (data) => {\n    console.log('stderr:', data.toString());\n});\n\npwd.on('close', (code) => {\n    console.log('child process exited with code', code);\n});\n```","html":"<h1 id=\"spawn-child-process-example\">Spawn child process example</h1>\n<pre><code class=\"lang-js\"><span class=\"hljs-string\">'use strict'</span>;\n\nvar spawn = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'child_process'</span>).spawn,\n    pwd = spawn(<span class=\"hljs-string\">'cmd'</span>, [<span class=\"hljs-string\">'/c'</span>, <span class=\"hljs-string\">'dir'</span>]);\n\npwd.stdout.<span class=\"hljs-literal\">on</span>(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-params\">(data)</span> =&gt;</span> {\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stdout:'</span>, data.toString());\n});\n\npwd.stderr.<span class=\"hljs-literal\">on</span>(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-params\">(data)</span> =&gt;</span> {\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stderr:'</span>, data.toString());\n});\n\npwd.<span class=\"hljs-literal\">on</span>(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-params\">(code)</span> =&gt;</span> {\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'child process exited with code'</span>, code);\n});\n</code></pre>\n"},{"html_url":"https://gist.github.com/d7aa7fdbfa13c3932524c420bb6f9953","description":"UDP Client/Server example","files":["https://gist.githubusercontent.com/umidjons/d7aa7fdbfa13c3932524c420bb6f9953/raw/d6b5b9ceb9876084d9466e104a327bc466a955ff/udp-client-server-nodejs.md"],"content":"# UDP Client/Server example\n\nFile `server.js`:\n```js\n'use strict';\n\nvar dgram = require('dgram');\nvar server = dgram.createSocket('udp4');\n\nconst PORT = 3000;\n\nserver.on('message', (msg, info) => {\n    console.log(`Message ${msg} from ${info.address}:${info.port}`);\n});\n\nserver.bind(PORT);\n```\n\nFile `client.js`:\n```js\n'use strict';\n\nvar dgram = require('dgram');\nvar client = dgram.createSocket('udp4');\n\nvar SERVER = 'localhost';\nvar PORT = 3000;\n\nprocess.stdin.on('data', (data) => {\n    console.log(data.toString('utf8'));\n\n    client.send(data, 0, data.length, PORT, SERVER, (err, bytes) => {\n        if (err) {\n            console.error(err);\n        } else {\n            console.log('successful');\n        }\n    });\n});\n```\n\nSample output\n\nServer:\n```\nMessage hello\n from 127.0.0.1:59216\nMessage world\n from 127.0.0.1:59216\n```\n\nClient:\n```\nhello\nhello\n\nsuccessful\nworld\nworld\n\nsuccessful\n```","html":"<h1 id=\"udp-client-server-example\">UDP Client/Server example</h1>\n<p>File <code>server.js</code>:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-meta\">'use strict'</span>;\n\n<span class=\"hljs-keyword\">var</span> dgram = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'dgram'</span>);\n<span class=\"hljs-keyword\">var</span> server = dgram.createSocket(<span class=\"hljs-string\">'udp4'</span>);\n\n<span class=\"hljs-keyword\">const</span> PORT = <span class=\"hljs-number\">3000</span>;\n\nserver.on(<span class=\"hljs-string\">'message'</span>, (msg, info) =&gt; {\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`Message <span class=\"hljs-subst\">${msg}</span> from <span class=\"hljs-subst\">${info.address}</span>:<span class=\"hljs-subst\">${info.port}</span>`</span>);\n});\n\nserver.bind(PORT);\n</code></pre>\n<p>File <code>client.js</code>:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-meta\">'use strict'</span>;\n\n<span class=\"hljs-keyword\">var</span> dgram = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'dgram'</span>);\n<span class=\"hljs-keyword\">var</span> client = dgram.createSocket(<span class=\"hljs-string\">'udp4'</span>);\n\n<span class=\"hljs-keyword\">var</span> SERVER = <span class=\"hljs-string\">'localhost'</span>;\n<span class=\"hljs-keyword\">var</span> PORT = <span class=\"hljs-number\">3000</span>;\n\nprocess.stdin.on(<span class=\"hljs-string\">'data'</span>, (data) =&gt; {\n    <span class=\"hljs-built_in\">console</span>.log(data.toString(<span class=\"hljs-string\">'utf8'</span>));\n\n    client.send(data, <span class=\"hljs-number\">0</span>, data.length, PORT, SERVER, (err, bytes) =&gt; {\n        <span class=\"hljs-keyword\">if</span> (err) {\n            <span class=\"hljs-built_in\">console</span>.error(err);\n        } <span class=\"hljs-keyword\">else</span> {\n            <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'successful'</span>);\n        }\n    });\n});\n</code></pre>\n<p>Sample output</p>\n<p>Server:</p>\n<pre><code><span class=\"hljs-selector-tag\">Message</span> <span class=\"hljs-selector-tag\">hello</span>\n <span class=\"hljs-selector-tag\">from</span> 127<span class=\"hljs-selector-class\">.0</span><span class=\"hljs-selector-class\">.0</span><span class=\"hljs-selector-class\">.1</span><span class=\"hljs-selector-pseudo\">:59216</span>\n<span class=\"hljs-selector-tag\">Message</span> <span class=\"hljs-selector-tag\">world</span>\n <span class=\"hljs-selector-tag\">from</span> 127<span class=\"hljs-selector-class\">.0</span><span class=\"hljs-selector-class\">.0</span><span class=\"hljs-selector-class\">.1</span><span class=\"hljs-selector-pseudo\">:59216</span>\n</code></pre><p>Client:</p>\n<pre><code>hello\nhello\n\n<span class=\"hljs-keyword\">successful\n</span>world\nworld\n\nsuccessful\n</code></pre>"},{"html_url":"https://gist.github.com/dbad7723e15e89bb634991f974ad9a63","description":"Socket client/server example","files":["https://gist.githubusercontent.com/umidjons/dbad7723e15e89bb634991f974ad9a63/raw/0acd71474793ed2e6a347871cacdc9e7cf08eea1/socket-client-server.md"],"content":"# Socket client/server example\n\nFile `server.js`:\n```js\n'use strict';\n\nvar net = require('net');\n\nconst PORT = 3000;\n\nvar server = net.createServer((conn) => {\n    console.log('connected');\n\n    conn.on('data', (data) => {\n        console.log(data.toString(), 'from', conn.remoteAddress, ':', conn.remotePort);\n        conn.write('Repeating:' + data);\n    });\n\n    conn.on('close', () => {\n        console.log('Client', conn.remoteAddress, ':', conn.remotePort, 'closed connection');\n    });\n}).listen(PORT);\n\nserver.on('listening', () => {\n    console.log('listening on port', PORT);\n});\n\nserver.on('error', (err) => {\n    if (err.code == 'EADDRINUSE') {\n        console.warn('Address in use, retrying...');\n        setTimeout(() => {\n            server.close();\n            server.listen(PORT);\n        }, 2000);\n    } else {\n        console.error(err);\n    }\n});\n```\n\nFile `client.js`:\n```js\n'use strict';\n\nvar net = require('net');\nvar client = net.Socket();\n\nconst HOST = 'localhost';\nconst PORT = 3000;\n\nclient.setEncoding('utf8');\n\nclient.connect(PORT, HOST, () => {\n    console.log('connected to the server');\n    client.write('Test from the client.');\n});\n\nprocess.stdin.on('data', (data) => {\n    client.write(data);\n});\n\nclient.on('data', (data) => {\n    console.log(data);\n});\n\nclient.on('close', () => {\n    console.log('connection is closed');\n});\n```\n\nSample output\n\nserver:\n```\nlistening on port 3000\nconnected\nTest from the client. from ::ffff:127.0.0.1 : 3415\nhello world\n from ::ffff:127.0.0.1 : 3415\nhow are you?\n from ::ffff:127.0.0.1 : 3415\n```\n\nclient:\n```\nconnected to the server\nRepeating:Test from the client.\nhello world\nRepeating:hello world\n\nhow are you?\nRepeating:how are you?\n```","html":"<h1 id=\"socket-client-server-example\">Socket client/server example</h1>\n<p>File <code>server.js</code>:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-string\">'use strict'</span>;\n\nvar net = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'net'</span>);\n\nconst PORT = <span class=\"hljs-number\">3000</span>;\n\nvar server = net.createServer(<span class=\"hljs-function\"><span class=\"hljs-params\">(conn)</span> =&gt;</span> {\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'connected'</span>);\n\n    conn.<span class=\"hljs-literal\">on</span>(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-params\">(data)</span> =&gt;</span> {\n        <span class=\"hljs-built_in\">console</span>.log(data.toString(), <span class=\"hljs-string\">'from'</span>, conn.remoteAddress, <span class=\"hljs-string\">':'</span>, conn.remotePort);\n        conn.write(<span class=\"hljs-string\">'Repeating:'</span> + data);\n    });\n\n    conn.<span class=\"hljs-literal\">on</span>(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Client'</span>, conn.remoteAddress, <span class=\"hljs-string\">':'</span>, conn.remotePort, <span class=\"hljs-string\">'closed connection'</span>);\n    });\n}).listen(PORT);\n\nserver.<span class=\"hljs-literal\">on</span>(<span class=\"hljs-string\">'listening'</span>, <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'listening on port'</span>, PORT);\n});\n\nserver.<span class=\"hljs-literal\">on</span>(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-params\">(err)</span> =&gt;</span> {\n    <span class=\"hljs-keyword\">if</span> (err.code == <span class=\"hljs-string\">'EADDRINUSE'</span>) {\n        <span class=\"hljs-built_in\">console</span>.warn(<span class=\"hljs-string\">'Address in use, retrying...'</span>);\n        setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n            server.close();\n            server.listen(PORT);\n        }, <span class=\"hljs-number\">2000</span>);\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">console</span>.error(err);\n    }\n});\n</code></pre>\n<p>File <code>client.js</code>:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-string\">'use strict'</span>;\n\nvar net = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'net'</span>);\nvar client = net.Socket();\n\nconst HOST = <span class=\"hljs-string\">'localhost'</span>;\nconst PORT = <span class=\"hljs-number\">3000</span>;\n\nclient.setEncoding(<span class=\"hljs-string\">'utf8'</span>);\n\nclient.connect(PORT, HOST, <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'connected to the server'</span>);\n    client.write(<span class=\"hljs-string\">'Test from the client.'</span>);\n});\n\nprocess.stdin.<span class=\"hljs-literal\">on</span>(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-params\">(data)</span> =&gt;</span> {\n    client.write(data);\n});\n\nclient.<span class=\"hljs-literal\">on</span>(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-params\">(data)</span> =&gt;</span> {\n    <span class=\"hljs-built_in\">console</span>.log(data);\n});\n\nclient.<span class=\"hljs-literal\">on</span>(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'connection is closed'</span>);\n});\n</code></pre>\n<p>Sample output</p>\n<p>server:</p>\n<pre><code>listening on port 3000\nconnected\n<span class=\"hljs-keyword\">Test </span>from the client. from ::ffff:127.0.0.1 : 3415\nhello world\n from ::ffff:127.0.0.1 : 3415\nhow are you?\n from ::ffff:127.0.0.1 : 3415\n</code></pre><p>client:</p>\n<pre><code>connected <span class=\"hljs-keyword\">to</span> the server\n<span class=\"hljs-keyword\">Repeating</span>:Test from the client.\nhello world\n<span class=\"hljs-keyword\">Repeating</span>:hello world\n\nhow are you?\n<span class=\"hljs-keyword\">Repeating</span>:how are you?\n</code></pre>"},{"html_url":"https://gist.github.com/6b64e6445a0e0a8f4b2124ce85beb894","description":"Compressing file using the zlib module","files":["https://gist.githubusercontent.com/umidjons/6b64e6445a0e0a8f4b2124ce85beb894/raw/3ee35681f78e4f2857b3c1fccc4b9f31e18987d2/compress-file-zlib.md"],"content":"# Compressing file using the zlib module\n\n```js\n'use strict';\n\nvar zlib = require('zlib');\nvar fs = require('fs');\n\nvar gzip = zlib.createGzip();\n\nvar inp = fs.createReadStream('some.html');\nvar out = fs.createWriteStream('some.html.gz');\n\ninp.pipe(gzip).pipe(out);\n```\n","html":"<h1 id=\"compressing-file-using-the-zlib-module\">Compressing file using the zlib module</h1>\n<pre><code class=\"lang-js\"><span class=\"hljs-meta\">'use strict'</span>;\n\n<span class=\"hljs-keyword\">var</span> zlib = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'zlib'</span>);\n<span class=\"hljs-keyword\">var</span> fs = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'fs'</span>);\n\n<span class=\"hljs-keyword\">var</span> gzip = zlib.createGzip();\n\n<span class=\"hljs-keyword\">var</span> inp = fs.createReadStream(<span class=\"hljs-string\">'some.html'</span>);\n<span class=\"hljs-keyword\">var</span> out = fs.createWriteStream(<span class=\"hljs-string\">'some.html.gz'</span>);\n\ninp.pipe(gzip).pipe(out);\n</code></pre>\n"},{"html_url":"https://gist.github.com/934a0ee9be1e3959a55f22baa9bc7061","description":"Environment variables","files":["https://gist.githubusercontent.com/umidjons/934a0ee9be1e3959a55f22baa9bc7061/raw/c434e40a792ae82dae57473c2adf08e6ffe93f6e/environment-vars.md"],"content":"# Print out environment variables\n\n```js\n'use strict';\n\nvar path = require('path');\n\nvar variables = process.env.PATH\n    .split(path.delimiter)\n    .sort();\n\nfor (let v of variables) {\n    console.log(v);\n}\n```\n\nSample output:\n```\nC:\\OpenServer\\modules\\php\\PHP-5.6\nC:\\Program Files (x86)\\ImageMagick-6.8.9-Q16\nC:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common\nC:\\Program Files\\7-Zip\nC:\\Program Files\\Docker Toolbox\nC:\\Program Files\\TortoiseGit\\bin\nC:\\ProgramData\\ComposerSetup\\bin\nC:\\Python\\Python27\\\nC:\\Python\\Python27\\Scripts\nC:\\Ruby22\\bin\nC:\\Users\\devneo\\AppData\\Roaming\\npm\nC:\\Windows\nC:\\Windows\\System32\\Wbem\nC:\\Windows\\System32\\WindowsPowerShell\\v1.0\\\nC:\\Windows\\system32\nC:\\cURL\\bin\nC:\\imagemagick\nc:\\OpenServer\\domains\\yii\nc:\\Program Files\\Git\\bin\nc:\\Program Files\\MongoDB\\Server\\3.2\\bin\nc:\\imagemagick\nc:\\phpunit\nc:\\sonarscanner\\bin\nc:\\sqlite\n```","html":"<h1 id=\"print-out-environment-variables\">Print out environment variables</h1>\n<pre><code class=\"lang-js\"><span class=\"hljs-meta\">'use strict'</span>;\n\n<span class=\"hljs-keyword\">var</span> path = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'path'</span>);\n\n<span class=\"hljs-keyword\">var</span> variables = process.env.PATH\n    .split(path.delimiter)\n    .sort();\n\n<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> v <span class=\"hljs-keyword\">of</span> variables) {\n    <span class=\"hljs-built_in\">console</span>.log(v);\n}\n</code></pre>\n<p>Sample output:</p>\n<pre><code>C:<span class=\"hljs-symbol\">\\O</span>penServer<span class=\"hljs-symbol\">\\m</span>odules<span class=\"hljs-symbol\">\\p</span>hp<span class=\"hljs-symbol\">\\P</span>HP-5.6\nC:<span class=\"hljs-symbol\">\\P</span>rogram Files (x86)<span class=\"hljs-symbol\">\\I</span>mageMagick-6.8.9-Q16\nC:<span class=\"hljs-symbol\">\\P</span>rogram Files (x86)<span class=\"hljs-symbol\">\\N</span>VIDIA Corporation<span class=\"hljs-symbol\">\\P</span>hysX<span class=\"hljs-symbol\">\\C</span>ommon\nC:<span class=\"hljs-symbol\">\\P</span>rogram Files<span class=\"hljs-symbol\">\\7</span>-Zip\nC:<span class=\"hljs-symbol\">\\P</span>rogram Files<span class=\"hljs-symbol\">\\D</span>ocker Toolbox\nC:<span class=\"hljs-symbol\">\\P</span>rogram Files<span class=\"hljs-symbol\">\\T</span>ortoiseGit<span class=\"hljs-symbol\">\\b</span>in\nC:<span class=\"hljs-symbol\">\\P</span>rogramData<span class=\"hljs-symbol\">\\C</span>omposerSetup<span class=\"hljs-symbol\">\\b</span>in\nC:<span class=\"hljs-symbol\">\\P</span>ython<span class=\"hljs-symbol\">\\P</span>ython27\\\nC:<span class=\"hljs-symbol\">\\P</span>ython<span class=\"hljs-symbol\">\\P</span>ython27<span class=\"hljs-symbol\">\\S</span>cripts\nC:<span class=\"hljs-symbol\">\\R</span>uby22<span class=\"hljs-symbol\">\\b</span>in\nC:<span class=\"hljs-symbol\">\\U</span>sers<span class=\"hljs-symbol\">\\d</span>evneo<span class=\"hljs-symbol\">\\A</span>ppData<span class=\"hljs-symbol\">\\R</span>oaming<span class=\"hljs-symbol\">\\n</span>pm\nC:<span class=\"hljs-symbol\">\\W</span>indows\nC:<span class=\"hljs-symbol\">\\W</span>indows<span class=\"hljs-symbol\">\\S</span>ystem32<span class=\"hljs-symbol\">\\W</span>bem\nC:<span class=\"hljs-symbol\">\\W</span>indows<span class=\"hljs-symbol\">\\S</span>ystem32<span class=\"hljs-symbol\">\\W</span>indowsPowerShell<span class=\"hljs-symbol\">\\v</span>1.0\\\nC:<span class=\"hljs-symbol\">\\W</span>indows<span class=\"hljs-symbol\">\\s</span>ystem32\nC:<span class=\"hljs-symbol\">\\c</span>URL<span class=\"hljs-symbol\">\\b</span>in\nC:<span class=\"hljs-symbol\">\\i</span>magemagick\nc:<span class=\"hljs-symbol\">\\O</span>penServer<span class=\"hljs-symbol\">\\d</span>omains<span class=\"hljs-symbol\">\\y</span>ii\nc:<span class=\"hljs-symbol\">\\P</span>rogram Files<span class=\"hljs-symbol\">\\G</span>it<span class=\"hljs-symbol\">\\b</span>in\nc:<span class=\"hljs-symbol\">\\P</span>rogram Files<span class=\"hljs-symbol\">\\M</span>ongoDB<span class=\"hljs-symbol\">\\S</span>erver<span class=\"hljs-symbol\">\\3</span>.2<span class=\"hljs-symbol\">\\b</span>in\nc:<span class=\"hljs-symbol\">\\i</span>magemagick\nc:<span class=\"hljs-symbol\">\\p</span>hpunit\nc:<span class=\"hljs-symbol\">\\s</span>onarscanner<span class=\"hljs-symbol\">\\b</span>in\nc:<span class=\"hljs-symbol\">\\s</span>qlite\n</code></pre>"},{"html_url":"https://gist.github.com/bdbd8ea32a5438f600f41271ebe107c6","description":"fs and path modules example","files":["https://gist.githubusercontent.com/umidjons/bdbd8ea32a5438f600f41271ebe107c6/raw/3ad1887a9b6baa3aa364ee808218ae5e38679c47/fs-path-mod-ex-readdir-stat-isfile-extname-basename.md"],"content":"# fs and path modules example\n\nRead the current directory, determine object is file or not,\nextract files extension and basename, print them out.\n\n```js\n'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\n\nfs.readdir('./', (err, files) => {\n    if (err) {\n        console.error(err);\n    }\n\n    for (let file of files) {\n        fs.stat(file, (err, stats) => {\n            if (stats.isFile()) {\n                let ext = path.extname(file);\n                let basename = path.basename(file, ext);\n\n                console.log(`File ${basename} with extension ${ext}`);\n            } else {\n                console.log(`Object ${file} is not a file.`);\n            }\n        });\n    }\n});\n```\n\nSample output:\n```\nObject .idea is not a file.\nFile client with extension .js\nFile index with extension .js\nObject node_modules is not a file.\nFile some with extension .html\nFile package with extension .json\nFile test-dns with extension .js\nFile test-os with extension .js\nFile stat-server with extension .js\n```","html":"<h1 id=\"fs-and-path-modules-example\">fs and path modules example</h1>\n<p>Read the current directory, determine object is file or not,\nextract files extension and basename, print them out.</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-meta\">'use strict'</span>;\n\n<span class=\"hljs-keyword\">var</span> fs = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'fs'</span>);\n<span class=\"hljs-keyword\">var</span> path = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'path'</span>);\n\nfs.readdir(<span class=\"hljs-string\">'./'</span>, (err, files) =&gt; {\n    <span class=\"hljs-keyword\">if</span> (err) {\n        <span class=\"hljs-built_in\">console</span>.error(err);\n    }\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> file <span class=\"hljs-keyword\">of</span> files) {\n        fs.stat(file, (err, stats) =&gt; {\n            <span class=\"hljs-keyword\">if</span> (stats.isFile()) {\n                <span class=\"hljs-keyword\">let</span> ext = path.extname(file);\n                <span class=\"hljs-keyword\">let</span> basename = path.basename(file, ext);\n\n                <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`File <span class=\"hljs-subst\">${basename}</span> with extension <span class=\"hljs-subst\">${ext}</span>`</span>);\n            } <span class=\"hljs-keyword\">else</span> {\n                <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`Object <span class=\"hljs-subst\">${file}</span> is not a file.`</span>);\n            }\n        });\n    }\n});\n</code></pre>\n<p>Sample output:</p>\n<pre><code><span class=\"hljs-keyword\">Object</span> .idea <span class=\"hljs-keyword\">is</span> <span class=\"hljs-keyword\">not</span> a <span class=\"hljs-keyword\">file</span>.\n<span class=\"hljs-keyword\">File</span> client <span class=\"hljs-keyword\">with</span> extension .js\n<span class=\"hljs-keyword\">File</span> <span class=\"hljs-keyword\">index</span> <span class=\"hljs-keyword\">with</span> extension .js\n<span class=\"hljs-keyword\">Object</span> node_modules <span class=\"hljs-keyword\">is</span> <span class=\"hljs-keyword\">not</span> a <span class=\"hljs-keyword\">file</span>.\n<span class=\"hljs-keyword\">File</span> some <span class=\"hljs-keyword\">with</span> extension .html\n<span class=\"hljs-keyword\">File</span> package <span class=\"hljs-keyword\">with</span> extension .json\n<span class=\"hljs-keyword\">File</span> test-dns <span class=\"hljs-keyword\">with</span> extension .js\n<span class=\"hljs-keyword\">File</span> test-os <span class=\"hljs-keyword\">with</span> extension .js\n<span class=\"hljs-keyword\">File</span> stat-server <span class=\"hljs-keyword\">with</span> extension .js\n</code></pre>"},{"html_url":"https://gist.github.com/16c2eac99619a587dd3e3243643aa9db","description":"Determine file/directory permissions","files":["https://gist.githubusercontent.com/umidjons/16c2eac99619a587dd3e3243643aa9db/raw/cc4c410aef4616b410d944b9349558631e128a3f/file-directory-permissions.md"],"content":"# Determine file's/directory's permissions\n\nInstall `stat-mode` module:\n```bash\nnpm i stat-mode -S\n```\n\n```js\n'use strict';\n\nvar fs = require('fs');\nvar StatMode = require('stat-mode');\n\nfs.stat('some.html', (err, stats) => {\n    if (err)\n        return console.log(err);\n\n    var mode = new StatMode(stats);\n    console.log('Mode (string):', mode.toString());\n    console.log('Mode (octal):', mode.toOctal());\n\n    console.log('Owner read:', mode.owner.read);\n    console.log('Owner write:', mode.owner.write);\n    console.log('Owner execute:', mode.owner.execute);\n    \n    console.log('Group read:', mode.group.read);\n    console.log('Group write:', mode.group.write);\n    console.log('Group execute:', mode.group.execute);\n    \n    console.log('Others read:', mode.others.read);\n    console.log('Others write:', mode.others.write);\n    console.log('Others execute:', mode.others.execute);\n});\n```\n\nSample output:\n```\nMode (string): -rw-rw-rw-\nMode (octal): 0666\nOwner read: true\nOwner write: true\nOwner execute: false\nGroup read: true\nGroup write: true\nGroup execute: false\nOthers read: true\nOthers write: true\nOthers execute: false\n```","html":"<h1 id=\"determine-file-s-directory-s-permissions\">Determine file&#39;s/directory&#39;s permissions</h1>\n<p>Install <code>stat-mode</code> module:</p>\n<pre><code class=\"lang-bash\">npm <span class=\"hljs-selector-tag\">i</span> stat-mode -S\n</code></pre>\n<pre><code class=\"lang-js\"><span class=\"hljs-meta\">'use strict'</span>;\n\n<span class=\"hljs-keyword\">var</span> fs = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'fs'</span>);\n<span class=\"hljs-keyword\">var</span> StatMode = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'stat-mode'</span>);\n\nfs.stat(<span class=\"hljs-string\">'some.html'</span>, (err, stats) =&gt; {\n    <span class=\"hljs-keyword\">if</span> (err)\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">console</span>.log(err);\n\n    <span class=\"hljs-keyword\">var</span> mode = <span class=\"hljs-keyword\">new</span> StatMode(stats);\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Mode (string):'</span>, mode.toString());\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Mode (octal):'</span>, mode.toOctal());\n\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Owner read:'</span>, mode.owner.read);\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Owner write:'</span>, mode.owner.write);\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Owner execute:'</span>, mode.owner.execute);\n\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Group read:'</span>, mode.group.read);\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Group write:'</span>, mode.group.write);\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Group execute:'</span>, mode.group.execute);\n\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Others read:'</span>, mode.others.read);\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Others write:'</span>, mode.others.write);\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Others execute:'</span>, mode.others.execute);\n});\n</code></pre>\n<p>Sample output:</p>\n<pre><code>Mode (<span class=\"hljs-keyword\">string</span>): -rw-rw-rw-\nMode (octal): <span class=\"hljs-number\">0666</span>\nOwner <span class=\"hljs-keyword\">read</span>: <span class=\"hljs-literal\">true</span>\nOwner <span class=\"hljs-keyword\">write</span>: <span class=\"hljs-literal\">true</span>\nOwner execute: <span class=\"hljs-literal\">false</span>\n<span class=\"hljs-keyword\">Group</span> <span class=\"hljs-title\">read</span>: <span class=\"hljs-literal\">true</span>\n<span class=\"hljs-keyword\">Group</span> <span class=\"hljs-title\">write</span>: <span class=\"hljs-literal\">true</span>\n<span class=\"hljs-keyword\">Group</span> <span class=\"hljs-title\">execute</span>: <span class=\"hljs-literal\">false</span>\nOthers <span class=\"hljs-keyword\">read</span>: <span class=\"hljs-literal\">true</span>\nOthers <span class=\"hljs-keyword\">write</span>: <span class=\"hljs-literal\">true</span>\nOthers execute: <span class=\"hljs-literal\">false</span>\n</code></pre>"},{"html_url":"https://gist.github.com/3fa6e555a1a782a36baf82998b19c404","description":"Get information about OS and Hardware: OS module example","files":["https://gist.githubusercontent.com/umidjons/3fa6e555a1a782a36baf82998b19c404/raw/77d0cfeb728c541b0b5376a72bf9f640d7610e35/os-hardware-info.md"],"content":"# Get information about OS and Hardware: OS module example\n\n```js\n'use strict';\n\nvar os = require('os');\n\nconsole.log('Using EOL' + os.EOL + 'to insert a new line');\nconsole.log('Endianness:', os.endianness());\nconsole.log('Temp Dir:', os.tmpdir());\nconsole.log('Home Dir:', os.homedir());\nconsole.log('Free Mem:', os.freemem());\nconsole.log('Load Avg:', os.loadavg());\nconsole.log('Total Mem:', os.totalmem());\nconsole.log('Architecture:', os.arch());\nconsole.log('Platform:', os.platform());\nconsole.log('Type:', os.type());\nconsole.log('Release:', os.release());\nconsole.log('Uptime:', os.uptime());\nconsole.log('CPUs:', os.cpus());\nconsole.log('Network Interfaces:', os.networkInterfaces());\nconsole.log('Hostname:', os.hostname());\nconsole.log('User Info:', os.userInfo());\n```\n\nSample output:\n```\nUsing EOL\nto insert a new line\nEndianness: LE\nTemp Dir: C:\\Users\\admin\\AppData\\Local\\Temp\nHome Dir: C:\\Users\\admin\nFree Mem: 2283974656\nLoad Avg: [ 0, 0, 0 ]\nTotal Mem: 6292512768\nArchitecture: x64\nPlatform: win32\nType: Windows_NT\nRelease: 6.3.9600\nUptime: 39248.635218\nCPUs: [ { model: 'Intel(R) Core(TM) i7-3612QM CPU @ 2.10GHz',\n    speed: 2095,\n    times: { user: 382687, nice: 0, sys: 236640, idle: 11244484, irq: 34203 } },\n  { model: 'Intel(R) Core(TM) i7-3612QM CPU @ 2.10GHz',\n    speed: 2095,\n    times: { user: 389343, nice: 0, sys: 288468, idle: 11185750, irq: 15859 } },\n  { model: 'Intel(R) Core(TM) i7-3612QM CPU @ 2.10GHz',\n    speed: 2095,\n    times: { user: 413875, nice: 0, sys: 218421, idle: 11231265, irq: 9171 } },\n  { model: 'Intel(R) Core(TM) i7-3612QM CPU @ 2.10GHz',\n    speed: 2095,\n    times: { user: 495625, nice: 0, sys: 542921, idle: 10825015, irq: 23687 } },\n  { model: 'Intel(R) Core(TM) i7-3612QM CPU @ 2.10GHz',\n    speed: 2095,\n    times: { user: 509171, nice: 0, sys: 193000, idle: 11161390, irq: 5531 } },\n  { model: 'Intel(R) Core(TM) i7-3612QM CPU @ 2.10GHz',\n    speed: 2095,\n    times: { user: 541828, nice: 0, sys: 139187, idle: 11182546, irq: 7453 } },\n  { model: 'Intel(R) Core(TM) i7-3612QM CPU @ 2.10GHz',\n    speed: 2095,\n    times: { user: 594296, nice: 0, sys: 547343, idle: 10721890, irq: 18046 } },\n  { model: 'Intel(R) Core(TM) i7-3612QM CPU @ 2.10GHz',\n    speed: 2095,\n    times: { user: 342750, nice: 0, sys: 175375, idle: 11345406, irq: 5828 } } ]\nNetwork Interfaces: { 'Беспроводная сеть':\n   [ { address: '192.171.1.180',\n       netmask: '255.255.255.0',\n       family: 'IPv4',\n       mac: 'e0:06:e6:d7:92:ef',\n       internal: false } ],\n  'VirtualBox Host-Only Network':\n   [ { address: 'fe83::d14:e27c:190a:a182',\n       netmask: 'ffff:ffff:ffff:ffff::',\n       family: 'IPv6',\n       mac: '0a:00:27:00:00:2a',\n       scopeid: 42,\n       internal: false },\n     { address: '192.171.56.1',\n       netmask: '255.255.255.0',\n       family: 'IPv4',\n       mac: '0a:00:27:00:00:2a',\n       internal: false } ],\n  'Ethernet 4':\n   [ { address: 'fe80::dcaa:b5ed:9562:7998',\n       netmask: 'ffff:ffff:ffff:ffff::',\n       family: 'IPv6',\n       mac: '0a:00:27:00:00:2b',\n       scopeid: 43,\n       internal: false },\n     { address: '169.254.121.152',\n       netmask: '255.255.0.0',\n       family: 'IPv4',\n       mac: '0a:00:27:00:00:2b',\n       internal: false } ],\n  'VirtualBox Host-Only Network #3':\n   [ { address: 'fe80::8196:fc20:51a:4038',\n       netmask: 'ffff:ffff:ffff:ffff::',\n       family: 'IPv6',\n       mac: '0a:00:27:00:00:2d',\n       scopeid: 45,\n       internal: false },\n     { address: '192.171.99.1',\n       netmask: '255.255.255.0',\n       family: 'IPv4',\n       mac: '0a:00:27:00:00:2d',\n       internal: false } ],\n  'Loopback Pseudo-Interface 1':\n   [ { address: '::1',\n       netmask: 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff',\n       family: 'IPv6',\n       mac: '00:00:00:00:00:00',\n       scopeid: 0,\n       internal: true },\n     { address: '127.0.0.1',\n       netmask: '255.0.0.0',\n       family: 'IPv4',\n       mac: '00:00:00:00:00:00',\n       internal: true } ],\n  'Teredo Tunneling Pseudo-Interface':\n   [ { address: '2002:0:9d38:6ab8:388b:3735:3e57:fe4b',\n       netmask: 'ffff:ffff:ffff:ffff::',\n       family: 'IPv6',\n       mac: '00:00:00:00:00:00',\n       scopeid: 0,\n       internal: false },\n     { address: 'fe80::388b:3735:3f57:fe4b',\n       netmask: 'ffff:ffff:ffff:ffff::',\n       family: 'IPv6',\n       mac: '00:00:00:00:00:00',\n       scopeid: 15,\n       internal: false } ] }\nHostname: nbgeradm\nUser Info: { uid: -1,\n  gid: -1,\n  username: 'admin',\n  homedir: 'C:\\\\Users\\\\admin',\n  shell: null }\n```","html":"<h1 id=\"get-information-about-os-and-hardware-os-module-example\">Get information about OS and Hardware: OS module example</h1>\n<pre><code class=\"lang-js\"><span class=\"hljs-meta\">'use strict'</span>;\n\n<span class=\"hljs-keyword\">var</span> os = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'os'</span>);\n\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Using EOL'</span> + os.EOL + <span class=\"hljs-string\">'to insert a new line'</span>);\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Endianness:'</span>, os.endianness());\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Temp Dir:'</span>, os.tmpdir());\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Home Dir:'</span>, os.homedir());\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Free Mem:'</span>, os.freemem());\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Load Avg:'</span>, os.loadavg());\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Total Mem:'</span>, os.totalmem());\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Architecture:'</span>, os.arch());\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Platform:'</span>, os.platform());\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Type:'</span>, os.type());\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Release:'</span>, os.release());\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Uptime:'</span>, os.uptime());\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'CPUs:'</span>, os.cpus());\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Network Interfaces:'</span>, os.networkInterfaces());\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Hostname:'</span>, os.hostname());\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'User Info:'</span>, os.userInfo());\n</code></pre>\n<p>Sample output:</p>\n<pre><code>Using EOL\nto insert a <span class=\"hljs-keyword\">new</span> line\n<span class=\"hljs-string\">Endianness:</span> LE\nTemp <span class=\"hljs-string\">Dir:</span> <span class=\"hljs-string\">C:</span>\\Users\\admin\\AppData\\Local\\Temp\nHome <span class=\"hljs-string\">Dir:</span> <span class=\"hljs-string\">C:</span>\\Users\\admin\nFree <span class=\"hljs-string\">Mem:</span> <span class=\"hljs-number\">2283974656</span>\nLoad <span class=\"hljs-string\">Avg:</span> [ <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span> ]\nTotal <span class=\"hljs-string\">Mem:</span> <span class=\"hljs-number\">6292512768</span>\n<span class=\"hljs-string\">Architecture:</span> x64\n<span class=\"hljs-string\">Platform:</span> win32\n<span class=\"hljs-string\">Type:</span> Windows_NT\n<span class=\"hljs-string\">Release:</span> <span class=\"hljs-number\">6.3</span><span class=\"hljs-number\">.9600</span>\n<span class=\"hljs-string\">Uptime:</span> <span class=\"hljs-number\">39248.635218</span>\n<span class=\"hljs-string\">CPUs:</span> [ { <span class=\"hljs-string\">model:</span> <span class=\"hljs-string\">'Intel(R) Core(TM) i7-3612QM CPU @ 2.10GHz'</span>,\n<span class=\"hljs-symbol\">    speed:</span> <span class=\"hljs-number\">2095</span>,\n<span class=\"hljs-symbol\">    times:</span> { <span class=\"hljs-string\">user:</span> <span class=\"hljs-number\">382687</span>, <span class=\"hljs-string\">nice:</span> <span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">sys:</span> <span class=\"hljs-number\">236640</span>, <span class=\"hljs-string\">idle:</span> <span class=\"hljs-number\">11244484</span>, <span class=\"hljs-string\">irq:</span> <span class=\"hljs-number\">34203</span> } },\n  { <span class=\"hljs-string\">model:</span> <span class=\"hljs-string\">'Intel(R) Core(TM) i7-3612QM CPU @ 2.10GHz'</span>,\n<span class=\"hljs-symbol\">    speed:</span> <span class=\"hljs-number\">2095</span>,\n<span class=\"hljs-symbol\">    times:</span> { <span class=\"hljs-string\">user:</span> <span class=\"hljs-number\">389343</span>, <span class=\"hljs-string\">nice:</span> <span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">sys:</span> <span class=\"hljs-number\">288468</span>, <span class=\"hljs-string\">idle:</span> <span class=\"hljs-number\">11185750</span>, <span class=\"hljs-string\">irq:</span> <span class=\"hljs-number\">15859</span> } },\n  { <span class=\"hljs-string\">model:</span> <span class=\"hljs-string\">'Intel(R) Core(TM) i7-3612QM CPU @ 2.10GHz'</span>,\n<span class=\"hljs-symbol\">    speed:</span> <span class=\"hljs-number\">2095</span>,\n<span class=\"hljs-symbol\">    times:</span> { <span class=\"hljs-string\">user:</span> <span class=\"hljs-number\">413875</span>, <span class=\"hljs-string\">nice:</span> <span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">sys:</span> <span class=\"hljs-number\">218421</span>, <span class=\"hljs-string\">idle:</span> <span class=\"hljs-number\">11231265</span>, <span class=\"hljs-string\">irq:</span> <span class=\"hljs-number\">9171</span> } },\n  { <span class=\"hljs-string\">model:</span> <span class=\"hljs-string\">'Intel(R) Core(TM) i7-3612QM CPU @ 2.10GHz'</span>,\n<span class=\"hljs-symbol\">    speed:</span> <span class=\"hljs-number\">2095</span>,\n<span class=\"hljs-symbol\">    times:</span> { <span class=\"hljs-string\">user:</span> <span class=\"hljs-number\">495625</span>, <span class=\"hljs-string\">nice:</span> <span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">sys:</span> <span class=\"hljs-number\">542921</span>, <span class=\"hljs-string\">idle:</span> <span class=\"hljs-number\">10825015</span>, <span class=\"hljs-string\">irq:</span> <span class=\"hljs-number\">23687</span> } },\n  { <span class=\"hljs-string\">model:</span> <span class=\"hljs-string\">'Intel(R) Core(TM) i7-3612QM CPU @ 2.10GHz'</span>,\n<span class=\"hljs-symbol\">    speed:</span> <span class=\"hljs-number\">2095</span>,\n<span class=\"hljs-symbol\">    times:</span> { <span class=\"hljs-string\">user:</span> <span class=\"hljs-number\">509171</span>, <span class=\"hljs-string\">nice:</span> <span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">sys:</span> <span class=\"hljs-number\">193000</span>, <span class=\"hljs-string\">idle:</span> <span class=\"hljs-number\">11161390</span>, <span class=\"hljs-string\">irq:</span> <span class=\"hljs-number\">5531</span> } },\n  { <span class=\"hljs-string\">model:</span> <span class=\"hljs-string\">'Intel(R) Core(TM) i7-3612QM CPU @ 2.10GHz'</span>,\n<span class=\"hljs-symbol\">    speed:</span> <span class=\"hljs-number\">2095</span>,\n<span class=\"hljs-symbol\">    times:</span> { <span class=\"hljs-string\">user:</span> <span class=\"hljs-number\">541828</span>, <span class=\"hljs-string\">nice:</span> <span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">sys:</span> <span class=\"hljs-number\">139187</span>, <span class=\"hljs-string\">idle:</span> <span class=\"hljs-number\">11182546</span>, <span class=\"hljs-string\">irq:</span> <span class=\"hljs-number\">7453</span> } },\n  { <span class=\"hljs-string\">model:</span> <span class=\"hljs-string\">'Intel(R) Core(TM) i7-3612QM CPU @ 2.10GHz'</span>,\n<span class=\"hljs-symbol\">    speed:</span> <span class=\"hljs-number\">2095</span>,\n<span class=\"hljs-symbol\">    times:</span> { <span class=\"hljs-string\">user:</span> <span class=\"hljs-number\">594296</span>, <span class=\"hljs-string\">nice:</span> <span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">sys:</span> <span class=\"hljs-number\">547343</span>, <span class=\"hljs-string\">idle:</span> <span class=\"hljs-number\">10721890</span>, <span class=\"hljs-string\">irq:</span> <span class=\"hljs-number\">18046</span> } },\n  { <span class=\"hljs-string\">model:</span> <span class=\"hljs-string\">'Intel(R) Core(TM) i7-3612QM CPU @ 2.10GHz'</span>,\n<span class=\"hljs-symbol\">    speed:</span> <span class=\"hljs-number\">2095</span>,\n<span class=\"hljs-symbol\">    times:</span> { <span class=\"hljs-string\">user:</span> <span class=\"hljs-number\">342750</span>, <span class=\"hljs-string\">nice:</span> <span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">sys:</span> <span class=\"hljs-number\">175375</span>, <span class=\"hljs-string\">idle:</span> <span class=\"hljs-number\">11345406</span>, <span class=\"hljs-string\">irq:</span> <span class=\"hljs-number\">5828</span> } } ]\nNetwork <span class=\"hljs-string\">Interfaces:</span> { <span class=\"hljs-string\">'Беспроводная сеть'</span>:\n   [ { <span class=\"hljs-string\">address:</span> <span class=\"hljs-string\">'192.171.1.180'</span>,\n<span class=\"hljs-symbol\">       netmask:</span> <span class=\"hljs-string\">'255.255.255.0'</span>,\n<span class=\"hljs-symbol\">       family:</span> <span class=\"hljs-string\">'IPv4'</span>,\n<span class=\"hljs-symbol\">       mac:</span> <span class=\"hljs-string\">'e0:06:e6:d7:92:ef'</span>,\n<span class=\"hljs-symbol\">       internal:</span> <span class=\"hljs-literal\">false</span> } ],\n  <span class=\"hljs-string\">'VirtualBox Host-Only Network'</span>:\n   [ { <span class=\"hljs-string\">address:</span> <span class=\"hljs-string\">'fe83::d14:e27c:190a:a182'</span>,\n<span class=\"hljs-symbol\">       netmask:</span> <span class=\"hljs-string\">'ffff:ffff:ffff:ffff::'</span>,\n<span class=\"hljs-symbol\">       family:</span> <span class=\"hljs-string\">'IPv6'</span>,\n<span class=\"hljs-symbol\">       mac:</span> <span class=\"hljs-string\">'0a:00:27:00:00:2a'</span>,\n<span class=\"hljs-symbol\">       scopeid:</span> <span class=\"hljs-number\">42</span>,\n<span class=\"hljs-symbol\">       internal:</span> <span class=\"hljs-literal\">false</span> },\n     { <span class=\"hljs-string\">address:</span> <span class=\"hljs-string\">'192.171.56.1'</span>,\n<span class=\"hljs-symbol\">       netmask:</span> <span class=\"hljs-string\">'255.255.255.0'</span>,\n<span class=\"hljs-symbol\">       family:</span> <span class=\"hljs-string\">'IPv4'</span>,\n<span class=\"hljs-symbol\">       mac:</span> <span class=\"hljs-string\">'0a:00:27:00:00:2a'</span>,\n<span class=\"hljs-symbol\">       internal:</span> <span class=\"hljs-literal\">false</span> } ],\n  <span class=\"hljs-string\">'Ethernet 4'</span>:\n   [ { <span class=\"hljs-string\">address:</span> <span class=\"hljs-string\">'fe80::dcaa:b5ed:9562:7998'</span>,\n<span class=\"hljs-symbol\">       netmask:</span> <span class=\"hljs-string\">'ffff:ffff:ffff:ffff::'</span>,\n<span class=\"hljs-symbol\">       family:</span> <span class=\"hljs-string\">'IPv6'</span>,\n<span class=\"hljs-symbol\">       mac:</span> <span class=\"hljs-string\">'0a:00:27:00:00:2b'</span>,\n<span class=\"hljs-symbol\">       scopeid:</span> <span class=\"hljs-number\">43</span>,\n<span class=\"hljs-symbol\">       internal:</span> <span class=\"hljs-literal\">false</span> },\n     { <span class=\"hljs-string\">address:</span> <span class=\"hljs-string\">'169.254.121.152'</span>,\n<span class=\"hljs-symbol\">       netmask:</span> <span class=\"hljs-string\">'255.255.0.0'</span>,\n<span class=\"hljs-symbol\">       family:</span> <span class=\"hljs-string\">'IPv4'</span>,\n<span class=\"hljs-symbol\">       mac:</span> <span class=\"hljs-string\">'0a:00:27:00:00:2b'</span>,\n<span class=\"hljs-symbol\">       internal:</span> <span class=\"hljs-literal\">false</span> } ],\n  <span class=\"hljs-string\">'VirtualBox Host-Only Network #3'</span>:\n   [ { <span class=\"hljs-string\">address:</span> <span class=\"hljs-string\">'fe80::8196:fc20:51a:4038'</span>,\n<span class=\"hljs-symbol\">       netmask:</span> <span class=\"hljs-string\">'ffff:ffff:ffff:ffff::'</span>,\n<span class=\"hljs-symbol\">       family:</span> <span class=\"hljs-string\">'IPv6'</span>,\n<span class=\"hljs-symbol\">       mac:</span> <span class=\"hljs-string\">'0a:00:27:00:00:2d'</span>,\n<span class=\"hljs-symbol\">       scopeid:</span> <span class=\"hljs-number\">45</span>,\n<span class=\"hljs-symbol\">       internal:</span> <span class=\"hljs-literal\">false</span> },\n     { <span class=\"hljs-string\">address:</span> <span class=\"hljs-string\">'192.171.99.1'</span>,\n<span class=\"hljs-symbol\">       netmask:</span> <span class=\"hljs-string\">'255.255.255.0'</span>,\n<span class=\"hljs-symbol\">       family:</span> <span class=\"hljs-string\">'IPv4'</span>,\n<span class=\"hljs-symbol\">       mac:</span> <span class=\"hljs-string\">'0a:00:27:00:00:2d'</span>,\n<span class=\"hljs-symbol\">       internal:</span> <span class=\"hljs-literal\">false</span> } ],\n  <span class=\"hljs-string\">'Loopback Pseudo-Interface 1'</span>:\n   [ { <span class=\"hljs-string\">address:</span> <span class=\"hljs-string\">'::1'</span>,\n<span class=\"hljs-symbol\">       netmask:</span> <span class=\"hljs-string\">'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff'</span>,\n<span class=\"hljs-symbol\">       family:</span> <span class=\"hljs-string\">'IPv6'</span>,\n<span class=\"hljs-symbol\">       mac:</span> <span class=\"hljs-string\">'00:00:00:00:00:00'</span>,\n<span class=\"hljs-symbol\">       scopeid:</span> <span class=\"hljs-number\">0</span>,\n<span class=\"hljs-symbol\">       internal:</span> <span class=\"hljs-literal\">true</span> },\n     { <span class=\"hljs-string\">address:</span> <span class=\"hljs-string\">'127.0.0.1'</span>,\n<span class=\"hljs-symbol\">       netmask:</span> <span class=\"hljs-string\">'255.0.0.0'</span>,\n<span class=\"hljs-symbol\">       family:</span> <span class=\"hljs-string\">'IPv4'</span>,\n<span class=\"hljs-symbol\">       mac:</span> <span class=\"hljs-string\">'00:00:00:00:00:00'</span>,\n<span class=\"hljs-symbol\">       internal:</span> <span class=\"hljs-literal\">true</span> } ],\n  <span class=\"hljs-string\">'Teredo Tunneling Pseudo-Interface'</span>:\n   [ { <span class=\"hljs-string\">address:</span> <span class=\"hljs-string\">'2002:0:9d38:6ab8:388b:3735:3e57:fe4b'</span>,\n<span class=\"hljs-symbol\">       netmask:</span> <span class=\"hljs-string\">'ffff:ffff:ffff:ffff::'</span>,\n<span class=\"hljs-symbol\">       family:</span> <span class=\"hljs-string\">'IPv6'</span>,\n<span class=\"hljs-symbol\">       mac:</span> <span class=\"hljs-string\">'00:00:00:00:00:00'</span>,\n<span class=\"hljs-symbol\">       scopeid:</span> <span class=\"hljs-number\">0</span>,\n<span class=\"hljs-symbol\">       internal:</span> <span class=\"hljs-literal\">false</span> },\n     { <span class=\"hljs-string\">address:</span> <span class=\"hljs-string\">'fe80::388b:3735:3f57:fe4b'</span>,\n<span class=\"hljs-symbol\">       netmask:</span> <span class=\"hljs-string\">'ffff:ffff:ffff:ffff::'</span>,\n<span class=\"hljs-symbol\">       family:</span> <span class=\"hljs-string\">'IPv6'</span>,\n<span class=\"hljs-symbol\">       mac:</span> <span class=\"hljs-string\">'00:00:00:00:00:00'</span>,\n<span class=\"hljs-symbol\">       scopeid:</span> <span class=\"hljs-number\">15</span>,\n<span class=\"hljs-symbol\">       internal:</span> <span class=\"hljs-literal\">false</span> } ] }\n<span class=\"hljs-string\">Hostname:</span> nbgeradm\nUser <span class=\"hljs-string\">Info:</span> { <span class=\"hljs-string\">uid:</span> <span class=\"hljs-number\">-1</span>,\n<span class=\"hljs-symbol\">  gid:</span> <span class=\"hljs-number\">-1</span>,\n<span class=\"hljs-symbol\">  username:</span> <span class=\"hljs-string\">'admin'</span>,\n<span class=\"hljs-symbol\">  homedir:</span> <span class=\"hljs-string\">'C:\\\\Users\\\\admin'</span>,\n<span class=\"hljs-symbol\">  shell:</span> <span class=\"hljs-literal\">null</span> }\n</code></pre>"},{"html_url":"https://gist.github.com/03546ec5df1c982db57320eaffcccf1b","description":"Find out IP or Record Types of the domain: DNS module example","files":["https://gist.githubusercontent.com/umidjons/03546ec5df1c982db57320eaffcccf1b/raw/c9793539bc1a28dcc7a2f7fcd38dad9fa1245597/find-out-ip-of-domain.md"],"content":"# Find out IP of the domain: DNS module example\n\n```js\nvar dns = require('dns');\n\n// get first found IP\ndns.lookup('oreilly.com', (err, address, family) => {\n    if (err) {\n        return console.log(err);\n    }\n\n    console.log('address=', address);\n    console.log('family=', family);\n});\n\n// get all IPs with family\ndns.lookup('oreilly.com', {all: true}, (err, addresses) => {\n    if (err) {\n        return console.log(err);\n    }\n\n    console.log('addresses=', addresses);\n});\n```\n\nSample output:\n```\naddresses= [ { address: '199.27.145.65', family: 4 },\n  { address: '199.27.145.64', family: 4 },\n  { address: '199.27.145.65', family: 4 },\n  { address: '199.27.145.64', family: 4 } ]\naddress= 199.27.145.65\nfamily= 4\n```\n\n# Resolve hostname into record types\n\n```js\n'use strict';\n\nvar dns = require('dns');\n\nconst types = ['A', 'AAAA', 'MX', 'TXT', 'SRV', 'PTR', 'NS', 'CNAME', 'SOA'];\n\nfor (let type of types) {\n    dns.resolve('oreilly.com', type, (err, addresses) => {\n        if (err) {\n            return console.log(`\\nType(${type}):\\n`, err);\n        }\n\n        console.log(`\\nType(${type}) addresses:\\n`, addresses, '\\n');\n    });\n}\n```\n\nSample output:\n```\nType(A) addresses:\n [ '199.27.145.65', '199.27.145.64' ]\n\n\nType(AAAA):\n { Error: queryAaaa ENODATA oreilly.com\n    at errnoException (dns.js:28:10)\n    at QueryReqWrap.onresolve [as oncomplete] (dns.js:216:19)\n  code: 'ENODATA',\n  errno: 'ENODATA',\n  syscall: 'queryAaaa',\n  hostname: 'oreilly.com' }\n\nType(MX) addresses:\n [ { exchange: 'aspmx3.googlemail.com', priority: 10 },\n  { exchange: 'aspmx.l.google.com', priority: 1 },\n  { exchange: 'alt1.aspmx.l.google.com', priority: 5 },\n  { exchange: 'alt2.aspmx.l.google.com', priority: 5 },\n  { exchange: 'aspmx2.googlemail.com', priority: 10 } ]\n\n\nType(TXT) addresses:\n [ [ 'MS=ms43057904' ],\n  [ 'globalsign-domain-verification=aei6eSS-1p0PqmZ3x4jXFoJt_7l6MenGY6u2FV45qG' ],\n  [ 'v=spf1 include:_spf.google.com include:amazonses.com ip4:199.83.44.0/22 ip4:209.204.146.20 ip4:162.42.207.20 ip4:208.76.31.37  ip4:162.42.214.212 include:spf.mandrillapp.com -all' ] ]\n\n\nType(SRV):\n { Error: querySrv ENODATA oreilly.com\n    at errnoException (dns.js:28:10)\n    at QueryReqWrap.onresolve [as oncomplete] (dns.js:216:19)\n  code: 'ENODATA',\n  errno: 'ENODATA',\n  syscall: 'querySrv',\n  hostname: 'oreilly.com' }\n\nType(PTR):\n { Error: queryPtr ENODATA oreilly.com\n    at errnoException (dns.js:28:10)\n    at QueryReqWrap.onresolve [as oncomplete] (dns.js:216:19)\n  code: 'ENODATA',\n  errno: 'ENODATA',\n  syscall: 'queryPtr',\n  hostname: 'oreilly.com' }\n\nType(NS) addresses:\n [ 'a4-64.akam.net',\n  'a1-225.akam.net',\n  'a13-64.akam.net',\n  'a16-65.akam.net',\n  'a20-66.akam.net',\n  'a3-67.akam.net' ]\n\n\nType(SOA) addresses:\n { nsname: 'a1-225.akam.net',\n  hostmaster: 'nic-tc.oreilly.com',\n  serial: 2016052325,\n  refresh: 600,\n  retry: 1800,\n  expire: 5184000,\n  minttl: 3600 }\n\n\nType(CNAME):\n { Error: queryCname ENODATA oreilly.com\n    at errnoException (dns.js:28:10)\n    at QueryReqWrap.onresolve [as oncomplete] (dns.js:216:19)\n  code: 'ENODATA',\n  errno: 'ENODATA',\n  syscall: 'queryCname',\n  hostname: 'oreilly.com' }\n\n```","html":"<h1 id=\"find-out-ip-of-the-domain-dns-module-example\">Find out IP of the domain: DNS module example</h1>\n<pre><code class=\"lang-js\">var dns = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'dns'</span>);\n\n<span class=\"hljs-regexp\">//</span> get first found IP\ndns.lookup(<span class=\"hljs-string\">'oreilly.com'</span>, <span class=\"hljs-function\"><span class=\"hljs-params\">(err, address, family)</span> =&gt;</span> {\n    <span class=\"hljs-keyword\">if</span> (err) {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">console</span>.log(err);\n    }\n\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'address='</span>, address);\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'family='</span>, family);\n});\n\n<span class=\"hljs-regexp\">//</span> get all IPs with family\ndns.lookup(<span class=\"hljs-string\">'oreilly.com'</span>, {all: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-params\">(err, addresses)</span> =&gt;</span> {\n    <span class=\"hljs-keyword\">if</span> (err) {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">console</span>.log(err);\n    }\n\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'addresses='</span>, addresses);\n});\n</code></pre>\n<p>Sample output:</p>\n<pre><code>addresses= [ { <span class=\"hljs-string\">address:</span> <span class=\"hljs-string\">'199.27.145.65'</span>, <span class=\"hljs-string\">family:</span> <span class=\"hljs-number\">4</span> },\n  { <span class=\"hljs-string\">address:</span> <span class=\"hljs-string\">'199.27.145.64'</span>, <span class=\"hljs-string\">family:</span> <span class=\"hljs-number\">4</span> },\n  { <span class=\"hljs-string\">address:</span> <span class=\"hljs-string\">'199.27.145.65'</span>, <span class=\"hljs-string\">family:</span> <span class=\"hljs-number\">4</span> },\n  { <span class=\"hljs-string\">address:</span> <span class=\"hljs-string\">'199.27.145.64'</span>, <span class=\"hljs-string\">family:</span> <span class=\"hljs-number\">4</span> } ]\naddress= <span class=\"hljs-number\">199.27</span><span class=\"hljs-number\">.145</span><span class=\"hljs-number\">.65</span>\nfamily= <span class=\"hljs-number\">4</span>\n</code></pre><h1 id=\"resolve-hostname-into-record-types\">Resolve hostname into record types</h1>\n<pre><code class=\"lang-js\"><span class=\"hljs-meta\">'use strict'</span>;\n\n<span class=\"hljs-keyword\">var</span> dns = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'dns'</span>);\n\n<span class=\"hljs-keyword\">const</span> types = [<span class=\"hljs-string\">'A'</span>, <span class=\"hljs-string\">'AAAA'</span>, <span class=\"hljs-string\">'MX'</span>, <span class=\"hljs-string\">'TXT'</span>, <span class=\"hljs-string\">'SRV'</span>, <span class=\"hljs-string\">'PTR'</span>, <span class=\"hljs-string\">'NS'</span>, <span class=\"hljs-string\">'CNAME'</span>, <span class=\"hljs-string\">'SOA'</span>];\n\n<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> type <span class=\"hljs-keyword\">of</span> types) {\n    dns.resolve(<span class=\"hljs-string\">'oreilly.com'</span>, type, (err, addresses) =&gt; {\n        <span class=\"hljs-keyword\">if</span> (err) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`\\nType(<span class=\"hljs-subst\">${type}</span>):\\n`</span>, err);\n        }\n\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`\\nType(<span class=\"hljs-subst\">${type}</span>) addresses:\\n`</span>, addresses, <span class=\"hljs-string\">'\\n'</span>);\n    });\n}\n</code></pre>\n<p>Sample output:</p>\n<pre><code><span class=\"hljs-function\"><span class=\"hljs-title\">Type</span><span class=\"hljs-params\">(A)</span></span> addresses:\n [ <span class=\"hljs-string\">'199.27.145.65'</span>, <span class=\"hljs-string\">'199.27.145.64'</span> ]\n\n\n<span class=\"hljs-function\"><span class=\"hljs-title\">Type</span><span class=\"hljs-params\">(AAAA)</span></span>:\n { Error: queryAaaa ENODATA oreilly<span class=\"hljs-selector-class\">.com</span>\n    at errnoException (dns<span class=\"hljs-selector-class\">.js</span>:<span class=\"hljs-number\">28</span>:<span class=\"hljs-number\">10</span>)\n    at QueryReqWrap<span class=\"hljs-selector-class\">.onresolve</span> [as oncomplete] (dns<span class=\"hljs-selector-class\">.js</span>:<span class=\"hljs-number\">216</span>:<span class=\"hljs-number\">19</span>)\n  <span class=\"hljs-selector-tag\">code</span>: <span class=\"hljs-string\">'ENODATA'</span>,\n  errno: <span class=\"hljs-string\">'ENODATA'</span>,\n  syscall: <span class=\"hljs-string\">'queryAaaa'</span>,\n  hostname: <span class=\"hljs-string\">'oreilly.com'</span> }\n\n<span class=\"hljs-function\"><span class=\"hljs-title\">Type</span><span class=\"hljs-params\">(MX)</span></span> addresses:\n [ { exchange: <span class=\"hljs-string\">'aspmx3.googlemail.com'</span>, priority: <span class=\"hljs-number\">10</span> },\n  { exchange: <span class=\"hljs-string\">'aspmx.l.google.com'</span>, priority: <span class=\"hljs-number\">1</span> },\n  { exchange: <span class=\"hljs-string\">'alt1.aspmx.l.google.com'</span>, priority: <span class=\"hljs-number\">5</span> },\n  { exchange: <span class=\"hljs-string\">'alt2.aspmx.l.google.com'</span>, priority: <span class=\"hljs-number\">5</span> },\n  { exchange: <span class=\"hljs-string\">'aspmx2.googlemail.com'</span>, priority: <span class=\"hljs-number\">10</span> } ]\n\n\n<span class=\"hljs-function\"><span class=\"hljs-title\">Type</span><span class=\"hljs-params\">(TXT)</span></span> addresses:\n [ [ <span class=\"hljs-string\">'MS=ms43057904'</span> ],\n  [ <span class=\"hljs-string\">'globalsign-domain-verification=aei6eSS-1p0PqmZ3x4jXFoJt_7l6MenGY6u2FV45qG'</span> ],\n  [ <span class=\"hljs-string\">'v=spf1 include:_spf.google.com include:amazonses.com ip4:199.83.44.0/22 ip4:209.204.146.20 ip4:162.42.207.20 ip4:208.76.31.37  ip4:162.42.214.212 include:spf.mandrillapp.com -all'</span> ] ]\n\n\n<span class=\"hljs-function\"><span class=\"hljs-title\">Type</span><span class=\"hljs-params\">(SRV)</span></span>:\n { Error: querySrv ENODATA oreilly<span class=\"hljs-selector-class\">.com</span>\n    at errnoException (dns<span class=\"hljs-selector-class\">.js</span>:<span class=\"hljs-number\">28</span>:<span class=\"hljs-number\">10</span>)\n    at QueryReqWrap<span class=\"hljs-selector-class\">.onresolve</span> [as oncomplete] (dns<span class=\"hljs-selector-class\">.js</span>:<span class=\"hljs-number\">216</span>:<span class=\"hljs-number\">19</span>)\n  <span class=\"hljs-selector-tag\">code</span>: <span class=\"hljs-string\">'ENODATA'</span>,\n  errno: <span class=\"hljs-string\">'ENODATA'</span>,\n  syscall: <span class=\"hljs-string\">'querySrv'</span>,\n  hostname: <span class=\"hljs-string\">'oreilly.com'</span> }\n\n<span class=\"hljs-function\"><span class=\"hljs-title\">Type</span><span class=\"hljs-params\">(PTR)</span></span>:\n { Error: queryPtr ENODATA oreilly<span class=\"hljs-selector-class\">.com</span>\n    at errnoException (dns<span class=\"hljs-selector-class\">.js</span>:<span class=\"hljs-number\">28</span>:<span class=\"hljs-number\">10</span>)\n    at QueryReqWrap<span class=\"hljs-selector-class\">.onresolve</span> [as oncomplete] (dns<span class=\"hljs-selector-class\">.js</span>:<span class=\"hljs-number\">216</span>:<span class=\"hljs-number\">19</span>)\n  <span class=\"hljs-selector-tag\">code</span>: <span class=\"hljs-string\">'ENODATA'</span>,\n  errno: <span class=\"hljs-string\">'ENODATA'</span>,\n  syscall: <span class=\"hljs-string\">'queryPtr'</span>,\n  hostname: <span class=\"hljs-string\">'oreilly.com'</span> }\n\n<span class=\"hljs-function\"><span class=\"hljs-title\">Type</span><span class=\"hljs-params\">(NS)</span></span> addresses:\n [ <span class=\"hljs-string\">'a4-64.akam.net'</span>,\n  <span class=\"hljs-string\">'a1-225.akam.net'</span>,\n  <span class=\"hljs-string\">'a13-64.akam.net'</span>,\n  <span class=\"hljs-string\">'a16-65.akam.net'</span>,\n  <span class=\"hljs-string\">'a20-66.akam.net'</span>,\n  <span class=\"hljs-string\">'a3-67.akam.net'</span> ]\n\n\n<span class=\"hljs-function\"><span class=\"hljs-title\">Type</span><span class=\"hljs-params\">(SOA)</span></span> addresses:\n { nsname: <span class=\"hljs-string\">'a1-225.akam.net'</span>,\n  hostmaster: <span class=\"hljs-string\">'nic-tc.oreilly.com'</span>,\n  serial: <span class=\"hljs-number\">2016052325</span>,\n  refresh: <span class=\"hljs-number\">600</span>,\n  retry: <span class=\"hljs-number\">1800</span>,\n  expire: <span class=\"hljs-number\">5184000</span>,\n  minttl: <span class=\"hljs-number\">3600</span> }\n\n\n<span class=\"hljs-function\"><span class=\"hljs-title\">Type</span><span class=\"hljs-params\">(CNAME)</span></span>:\n { Error: queryCname ENODATA oreilly<span class=\"hljs-selector-class\">.com</span>\n    at errnoException (dns<span class=\"hljs-selector-class\">.js</span>:<span class=\"hljs-number\">28</span>:<span class=\"hljs-number\">10</span>)\n    at QueryReqWrap<span class=\"hljs-selector-class\">.onresolve</span> [as oncomplete] (dns<span class=\"hljs-selector-class\">.js</span>:<span class=\"hljs-number\">216</span>:<span class=\"hljs-number\">19</span>)\n  <span class=\"hljs-selector-tag\">code</span>: <span class=\"hljs-string\">'ENODATA'</span>,\n  errno: <span class=\"hljs-string\">'ENODATA'</span>,\n  syscall: <span class=\"hljs-string\">'queryCname'</span>,\n  hostname: <span class=\"hljs-string\">'oreilly.com'</span> }\n</code></pre>"},{"html_url":"https://gist.github.com/88fa0041e6dd583491dd83662d007d2c","description":"Client/Server post request example in pure Node.js","files":["https://gist.githubusercontent.com/umidjons/88fa0041e6dd583491dd83662d007d2c/raw/83341fab95c05c51997fceedaa9241ee1cc8beee/client-server-post-request-ex-in-pure-node.md"],"content":"# Client/Server POST request example in pure Node.js\n\nFile `server.js`:\n```js\nvar http = require('http');\nvar querystring = require('querystring');\n\nvar server = http.createServer().listen(3000);\n\nserver.on('request', function (req, res) {\n    if (req.method == 'POST') {\n        var body = '';\n    }\n\n    req.on('data', function (data) {\n        body += data;\n    });\n\n    req.on('end', function () {\n        var post = querystring.parse(body);\n        console.log(post);\n        res.writeHead(200, {'Content-Type': 'text/plain'});\n        res.end('Hello World\\n');\n    });\n});\n\nconsole.log('Listening on port 3000');\n```\n\nFile `client.js`:\n```js\nvar http = require('http');\nvar querystring = require('querystring');\n\nvar postData = querystring.stringify({\n    msg: 'hello world'\n});\n\nvar options = {\n    hostname: 'localhost',\n    port: 3000,\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Content-Length': postData.length\n    }\n};\n\nvar req = http.request(options, function (res) {\n    console.log('STATUS:', res.statusCode);\n    console.log('HEADERS:', JSON.stringify(res.headers));\n\n    res.setEncoding('utf8');\n\n    res.on('data', function (chunk) {\n        console.log('BODY:', chunk);\n    });\n\n    res.on('end', function () {\n        console.log('No more data in response.');\n    });\n});\n\nreq.on('error', function (e) {\n    console.log('Problem with request:', e.message);\n});\n\nreq.write(postData);\nreq.end();\n```\n\nServer's output:\n```\n$ node index.js\nListening on port 3000\n{ msg: 'hello world' }\n```\n\nClient's output:\n```\n$ node client.js\nSTATUS: 200\nHEADERS: {\"content-type\":\"text/plain\",\"date\":\"Wed, 17 Aug 2016 09:22:04 GMT\",\"connection\":\"close\",\"transfer-encoding\":\"chunked\"}\nBODY: Hello World\n\nNo more data in response.\n```","html":"<h1 id=\"client-server-post-request-example-in-pure-node-js\">Client/Server POST request example in pure Node.js</h1>\n<p>File <code>server.js</code>:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-keyword\">var</span> http = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'http'</span>);\n<span class=\"hljs-keyword\">var</span> querystring = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'querystring'</span>);\n\n<span class=\"hljs-keyword\">var</span> server = http.createServer().listen(<span class=\"hljs-number\">3000</span>);\n\nserver.on(<span class=\"hljs-string\">'request'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n    <span class=\"hljs-keyword\">if</span> (req.method == <span class=\"hljs-string\">'POST'</span>) {\n        <span class=\"hljs-keyword\">var</span> body = <span class=\"hljs-string\">''</span>;\n    }\n\n    req.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) </span>{\n        body += data;\n    });\n\n    req.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n        <span class=\"hljs-keyword\">var</span> post = querystring.parse(body);\n        <span class=\"hljs-built_in\">console</span>.log(post);\n        res.writeHead(<span class=\"hljs-number\">200</span>, {<span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'text/plain'</span>});\n        res.end(<span class=\"hljs-string\">'Hello World\\n'</span>);\n    });\n});\n\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Listening on port 3000'</span>);\n</code></pre>\n<p>File <code>client.js</code>:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-keyword\">var</span> http = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'http'</span>);\n<span class=\"hljs-keyword\">var</span> querystring = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'querystring'</span>);\n\n<span class=\"hljs-keyword\">var</span> postData = querystring.stringify({\n    <span class=\"hljs-attr\">msg</span>: <span class=\"hljs-string\">'hello world'</span>\n});\n\n<span class=\"hljs-keyword\">var</span> options = {\n    <span class=\"hljs-attr\">hostname</span>: <span class=\"hljs-string\">'localhost'</span>,\n    <span class=\"hljs-attr\">port</span>: <span class=\"hljs-number\">3000</span>,\n    <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">'POST'</span>,\n    <span class=\"hljs-attr\">headers</span>: {\n        <span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/x-www-form-urlencoded'</span>,\n        <span class=\"hljs-string\">'Content-Length'</span>: postData.length\n    }\n};\n\n<span class=\"hljs-keyword\">var</span> req = http.request(options, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'STATUS:'</span>, res.statusCode);\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'HEADERS:'</span>, <span class=\"hljs-built_in\">JSON</span>.stringify(res.headers));\n\n    res.setEncoding(<span class=\"hljs-string\">'utf8'</span>);\n\n    res.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">chunk</span>) </span>{\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'BODY:'</span>, chunk);\n    });\n\n    res.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'No more data in response.'</span>);\n    });\n});\n\nreq.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">e</span>) </span>{\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Problem with request:'</span>, e.message);\n});\n\nreq.write(postData);\nreq.end();\n</code></pre>\n<p>Server&#39;s output:</p>\n<pre><code>$ <span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">index</span>.js\nListening on port <span class=\"hljs-number\">3000</span>\n{ msg: 'hello world' }\n</code></pre><p>Client&#39;s output:</p>\n<pre><code>$ <span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">client</span>.js\nSTATUS: <span class=\"hljs-number\">200</span>\nHEADERS: {<span class=\"hljs-string\">\"content-type\"</span>:<span class=\"hljs-string\">\"text/plain\"</span>,<span class=\"hljs-string\">\"date\"</span>:<span class=\"hljs-string\">\"Wed, 17 Aug 2016 09:22:04 GMT\"</span>,<span class=\"hljs-string\">\"connection\"</span>:<span class=\"hljs-string\">\"close\"</span>,<span class=\"hljs-string\">\"transfer-encoding\"</span>:<span class=\"hljs-string\">\"chunked\"</span>}\nBODY: Hello World\n\nNo more data <span class=\"hljs-keyword\">in</span> response.\n</code></pre>"},{"html_url":"https://gist.github.com/b1702a3883b86a0c0cc8b4df2ae8abed","description":"Get input from standard input stream example","files":["https://gist.githubusercontent.com/umidjons/b1702a3883b86a0c0cc8b4df2ae8abed/raw/7303e7f5600fc126c5db3b837e82165da49f4587/stdin-read-example.md"],"content":"# Get input from stdin example\n\n```js\n\"use strict\";\n\nprocess.stdin.setEncoding('utf8');\n\nprocess.stdin.on('readable', ()=> {\n    let input = process.stdin.read();\n\n    if (input !== null) {\n        input = input.trim();\n    }\n\n    if (input == 'exit' || input == 'quit' || input == 'bye') {\n        process.exit();\n    }\n\n    console.log('Input:', input);\n});\n```","html":"<h1 id=\"get-input-from-stdin-example\">Get input from stdin example</h1>\n<pre><code class=\"lang-js\"><span class=\"hljs-meta\">\"use strict\"</span>;\n\nprocess.stdin.setEncoding(<span class=\"hljs-string\">'utf8'</span>);\n\nprocess.stdin.on(<span class=\"hljs-string\">'readable'</span>, ()=&gt; {\n    <span class=\"hljs-keyword\">let</span> input = process.stdin.read();\n\n    <span class=\"hljs-keyword\">if</span> (input !== <span class=\"hljs-literal\">null</span>) {\n        input = input.trim();\n    }\n\n    <span class=\"hljs-keyword\">if</span> (input == <span class=\"hljs-string\">'exit'</span> || input == <span class=\"hljs-string\">'quit'</span> || input == <span class=\"hljs-string\">'bye'</span>) {\n        process.exit();\n    }\n\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Input:'</span>, input);\n});\n</code></pre>\n"},{"html_url":"https://gist.github.com/9ce1e39a88438cebf41479c9a43d8ba2","description":"Extending EventEmitter example","files":["https://gist.githubusercontent.com/umidjons/9ce1e39a88438cebf41479c9a43d8ba2/raw/d246620cb3d8ad98bb37e703dfa4bb5dccc224ee/extend-eventemitter.md"],"content":"# Extending EventEmitter example\n\n```js\n\"use strict\";\n\nvar EventEmitter = require('events').EventEmitter;\n\nclass MyClass extends EventEmitter {\n    /**\n     * Create MyClass instance\n     * @param {int} start counter's start value\n     * @param {int} interval interval in milliseconds\n     */\n    constructor(start, interval = 3000) {\n        super();\n        this.counter = start;\n        this.interval = interval;\n    }\n\n    /**\n     * Some worker method, that emits myEvent event with counter's value\n     */\n    startWork() {\n        setInterval(()=> {\n            this.emit('myEvent', this.counter++);\n        }, this.interval);\n    }\n}\n\nvar myObj = new MyClass(10, 1000);\n\n// subscribe to the event\nmyObj.on('myEvent', (data)=> {\n    console.log('Event fired:', data);\n});\n\n// start very important work\nmyObj.startWork();\n```","html":"<h1 id=\"extending-eventemitter-example\">Extending EventEmitter example</h1>\n<pre><code class=\"lang-js\"><span class=\"hljs-meta\">\"use strict\"</span>;\n\n<span class=\"hljs-keyword\">var</span> EventEmitter = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'events'</span>).EventEmitter;\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyClass</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">EventEmitter</span> </span>{\n    <span class=\"hljs-comment\">/**\n     * Create MyClass instance\n     * @param {int} start counter's start value\n     * @param {int} interval interval in milliseconds\n     */</span>\n    <span class=\"hljs-keyword\">constructor</span>(start, interval = 3000) {\n        <span class=\"hljs-keyword\">super</span>();\n        <span class=\"hljs-keyword\">this</span>.counter = start;\n        <span class=\"hljs-keyword\">this</span>.interval = interval;\n    }\n\n    <span class=\"hljs-comment\">/**\n     * Some worker method, that emits myEvent event with counter's value\n     */</span>\n    startWork() {\n        setInterval(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span>=&gt;</span> {\n            <span class=\"hljs-keyword\">this</span>.emit(<span class=\"hljs-string\">'myEvent'</span>, <span class=\"hljs-keyword\">this</span>.counter++);\n        }, <span class=\"hljs-keyword\">this</span>.interval);\n    }\n}\n\n<span class=\"hljs-keyword\">var</span> myObj = <span class=\"hljs-keyword\">new</span> MyClass(<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">1000</span>);\n\n<span class=\"hljs-comment\">// subscribe to the event</span>\nmyObj.on(<span class=\"hljs-string\">'myEvent'</span>, (data)=&gt; {\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Event fired:'</span>, data);\n});\n\n<span class=\"hljs-comment\">// start very important work</span>\nmyObj.startWork();\n</code></pre>\n"},{"html_url":"https://gist.github.com/660872ebe7c5ee4872967f81ebead8c3","description":"EventEmitter example","files":["https://gist.githubusercontent.com/umidjons/660872ebe7c5ee4872967f81ebead8c3/raw/2761ad50b47182f515f13edc6513376e2882a335/event-emitter.md"],"content":"# events.EventEmitter example\n\n```js\n\"use strict\";\n\nvar EventEmitter = require('events').EventEmitter;\nvar ee = new EventEmitter();\nvar counter = 1;\n\nsetInterval(function () {\n    ee.emit('timed', counter++);\n}, 3000);\n\nee.on('timed', function (data) {\n    console.log('timed ' + data);\n});\n```\n\nSample output:\n```\n> node test\ntimed 1\ntimed 2\ntimed 3\n^C\n```","html":"<h1 id=\"events-eventemitter-example\">events.EventEmitter example</h1>\n<pre><code class=\"lang-js\"><span class=\"hljs-meta\">\"use strict\"</span>;\n\n<span class=\"hljs-keyword\">var</span> EventEmitter = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'events'</span>).EventEmitter;\n<span class=\"hljs-keyword\">var</span> ee = <span class=\"hljs-keyword\">new</span> EventEmitter();\n<span class=\"hljs-keyword\">var</span> counter = <span class=\"hljs-number\">1</span>;\n\nsetInterval(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n    ee.emit(<span class=\"hljs-string\">'timed'</span>, counter++);\n}, <span class=\"hljs-number\">3000</span>);\n\nee.on(<span class=\"hljs-string\">'timed'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) </span>{\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'timed '</span> + data);\n});\n</code></pre>\n<p>Sample output:</p>\n<pre><code>&gt; <span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">test</span>\ntimed <span class=\"hljs-number\">1</span>\ntimed <span class=\"hljs-number\">2</span>\ntimed <span class=\"hljs-number\">3</span>\n^C\n</code></pre>"},{"html_url":"https://gist.github.com/35e02f5ed9235788a026d8cf0654123b","description":"Change home item in Breadcrumbs widget","files":["https://gist.githubusercontent.com/umidjons/35e02f5ed9235788a026d8cf0654123b/raw/2b5dd959b4da53a618f27fa4be104ad3c59351f7/breadcrumbs-home-link.md"],"content":"## Change home item in Breadcrumbs widget\n\nTo change breadcrumbs home item, for example, in the main layout, add `homeLink` item like this:\n```php\n<div class=\"container\">\n    <?= Breadcrumbs::widget([\n        'homeLink' => ['label' => 'Главная', 'url' => Yii::$app->homeUrl],\n        'links' => isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [],\n    ]) ?>\n    <?= $content ?>\n</div>\n```","html":"<h2 id=\"change-home-item-in-breadcrumbs-widget\">Change home item in Breadcrumbs widget</h2>\n<p>To change breadcrumbs home item, for example, in the main layout, add <code>homeLink</code> item like this:</p>\n<pre><code class=\"lang-php\">&lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"container\"</span>&gt;\n    <span class=\"xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= Breadcrumbs::widget([\n        <span class=\"hljs-string\">'homeLink'</span> =&gt; [<span class=\"hljs-string\">'label'</span> =&gt; <span class=\"hljs-string\">'Главная'</span>, <span class=\"hljs-string\">'url'</span> =&gt; Yii::$app-&gt;homeUrl],\n        <span class=\"hljs-string\">'links'</span> =&gt; <span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-keyword\">$this</span>-&gt;params[<span class=\"hljs-string\">'breadcrumbs'</span>]) ? <span class=\"hljs-keyword\">$this</span>-&gt;params[<span class=\"hljs-string\">'breadcrumbs'</span>] : [],\n    ]) <span class=\"hljs-meta\">?&gt;</span></span>\n    <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $content <span class=\"hljs-meta\">?&gt;</span></span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/8d65ad422df6d2503bae4d2b60133c73","description":"Yii2 Installation","files":["https://gist.githubusercontent.com/umidjons/8d65ad422df6d2503bae4d2b60133c73/raw/06c7fe8ecd1a1bf04a2c18ae3adfea71a5dce6a9/yii2-install.md"],"content":"### Installing Yii2\n\n```\nmkdir app3.uz\ncd app3.uz\ncomposer global require fxp/composer-asset-plugin --no-plugins\ncomposer create-project --prefer-dist yiisoft/yii2-app-basic .\n```\n\n### Set the application root path via .htaccess\n\nCreate `.htaccess` file in the application root folder.\n```conf\nRewriteEngine On\nRewriteCond %{REQUEST_URI} !^web\nRewriteRule ^(.*)$ web/$1 [L]\n```\n\nAlso create `.htaccess` file in the `/web/` folder:\n```conf\nRewriteEngine on\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule . index.php\n```\n\nAdjusting URL generation (removing `/web/` part from generated URLs):\n\nIn file `config/web.php` set base URL to empty string, also enable `urlManager` component:\n```php\n<?php\n    // ...\n    'components' => [\n        'request' => [\n            'baseUrl' => '', // <--- set base URL\n            // ...\n        ],\n        // ...\n        'urlManager' => [\n            'enablePrettyUrl' => true,\n            'showScriptName' => false,\n            'rules' => [\n            ],\n        ],\n\t],\n\t// ...\n```\n\n","html":"<h3 id=\"installing-yii2\">Installing Yii2</h3>\n<pre><code><span class=\"hljs-string\">mkdir </span><span class=\"hljs-string\">app3.</span><span class=\"hljs-string\">uz\n</span><span class=\"hljs-string\">cd </span><span class=\"hljs-string\">app3.</span><span class=\"hljs-string\">uz\n</span><span class=\"hljs-string\">composer </span><span class=\"hljs-string\">global </span><span class=\"hljs-string\">require </span><span class=\"hljs-string\">fxp/</span><span class=\"hljs-string\">composer-asset-</span><span class=\"hljs-string\">plugin </span><span class=\"hljs-built_in\">--no-plugins</span>\n<span class=\"hljs-string\">composer </span><span class=\"hljs-built_in\">create-project</span> <span class=\"hljs-built_in\">--prefer-dist</span> <span class=\"hljs-string\">yiisoft/</span><span class=\"hljs-string\">yii2-app-</span><span class=\"hljs-string\">basic </span>.\n</code></pre><h3 id=\"set-the-application-root-path-via-htaccess\">Set the application root path via .htaccess</h3>\n<p>Create <code>.htaccess</code> file in the application root folder.</p>\n<pre><code class=\"lang-conf\"><span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteEngine</span></span> <span class=\"hljs-literal\">On</span>\n<span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteCond</span></span> <span class=\"hljs-variable\">%{REQUEST_URI}</span> !^web\n<span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteRule</span></span> ^(.*)$ web/<span class=\"hljs-number\">$1</span><span class=\"hljs-meta\"> [L]</span>\n</code></pre>\n<p>Also create <code>.htaccess</code> file in the <code>/web/</code> folder:</p>\n<pre><code class=\"lang-conf\"><span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteEngine</span></span> <span class=\"hljs-literal\">on</span>\n<span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteCond</span></span> <span class=\"hljs-variable\">%{REQUEST_FILENAME}</span> !-f\n<span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteCond</span></span> <span class=\"hljs-variable\">%{REQUEST_FILENAME}</span> !-d\n<span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteRule</span></span> . index.php\n</code></pre>\n<p>Adjusting URL generation (removing <code>/web/</code> part from generated URLs):</p>\n<p>In file <code>config/web.php</code> set base URL to empty string, also enable <code>urlManager</code> component:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n    <span class=\"hljs-comment\">// ...</span>\n    <span class=\"hljs-string\">'components'</span> =&gt; [\n        <span class=\"hljs-string\">'request'</span> =&gt; [\n            <span class=\"hljs-string\">'baseUrl'</span> =&gt; <span class=\"hljs-string\">''</span>, <span class=\"hljs-comment\">// &lt;--- set base URL</span>\n            <span class=\"hljs-comment\">// ...</span>\n        ],\n        <span class=\"hljs-comment\">// ...</span>\n        <span class=\"hljs-string\">'urlManager'</span> =&gt; [\n            <span class=\"hljs-string\">'enablePrettyUrl'</span> =&gt; <span class=\"hljs-keyword\">true</span>,\n            <span class=\"hljs-string\">'showScriptName'</span> =&gt; <span class=\"hljs-keyword\">false</span>,\n            <span class=\"hljs-string\">'rules'</span> =&gt; [\n            ],\n        ],\n    ],\n    <span class=\"hljs-comment\">// ...</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/a4ba72e228a7bbaa1bccc4f79d838f62","description":"Installing micro clinic on Ubuntu","files":["https://gist.githubusercontent.com/umidjons/a4ba72e228a7bbaa1bccc4f79d838f62/raw/570783459c12c835b8ca24a33c718da6c062b017/micro-clinic-setup-docker.md","https://gist.githubusercontent.com/umidjons/a4ba72e228a7bbaa1bccc4f79d838f62/raw/ebf2a5b8b928517c7e43d827edbcffbb1863d922/micro-clinic-setup-prebuilt-images.md","https://gist.githubusercontent.com/umidjons/a4ba72e228a7bbaa1bccc4f79d838f62/raw/ab031cadf119ab87b5fa67258ebc34b0ac3960a1/micro-clinic-setup.md"],"content":"### DOCKER INSTALLATION ON UBUNTU 16.10\n\nSource: `https://docs.docker.com/engine/installation/linux/ubuntulinux/`\n\n```bash\n$ sudo mc\n# uname -r\n# apt-get update\n# apt-get install apt-transport-https ca-certificates\n# apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D\n# echo \"deb https://apt.dockerproject.org/repo ubuntu-wily main\" > /etc/apt/sources.list.d/docker.list\n# apt-get update\n# apt-get purge lxc-docker\n# apt-cache policy docker-engine\n# apt-get install linux-image-extra-$(uname -r)\n# apt-get update\n# apt-get install docker-engine\n# service docker start\n# docker run hello-world\n# docker ps -a\n# docker rm fc1044f892d3\n# docker rmi hello-world\n```\n\n### Build Web Server image\n\n#### Dockerfile to create web server image\n\nDockerfile:\n```\nFROM ubuntu:yakkety\nMAINTAINER Umidjons <almatov.us@gmail.com>\n\nWORKDIR /\n\nRUN apt-get update && apt-get install -y \\\n\t\tvim \\\n\t\tcurl \\\n\t\tgit \\\n\t\tsoftware-properties-common\n\nENV NVM_VERSION v0.31.2\nENV NODE_VERSION 6.3.0\n\nRUN apt-get update && apt-get install -y \\\n\t\tpython2.7 \\\n\t\tpython2.7-dev \\\n\t\tbuild-essential \\\n\t\tlibssl-dev\n\nRUN rm /bin/sh \\\n\t&& ln -s /bin/bash /bin/sh \\\n\t&& curl -sL https://raw.githubusercontent.com/creationix/nvm/$NVM_VERSION/install.sh -o install_nvm.sh \\\n\t&& bash install_nvm.sh \\\n\t&& . /root/.nvm/nvm.sh \\\n\t&& nvm install $NODE_VERSION \\\n\t&& npm config set python /usr/bin/python2.7 \\\n\t&& npm install pm2 -g \\\n\t&& git config --global user.name \"Umidjons\" \\\n\t&& git config --global user.email \"almatov.us@gmail.com\" \\\n\t&& git clone https://github.com/umidjons/micro-clinic.git \\\n\t&& cd micro-clinic/ \\\n\t&& npm install \\\n\t&& npm install -g bower \\\n\t&& bower install --allow-root --force-latest\n\nVOLUME /root/.pm2/logs\n\nWORKDIR /micro-clinic/\n\nEXPOSE 3000\nCMD [\"pm2\", \"start\", \"server.js\"]\n```\n\nBuild command:\n```bash\n$ docker build -f Dockerfile -t starmed/webserver:1.0 .\n```\n\n#### Manual build of image from container\n\nDo following steps:\n```bash\n$ docker pull ubuntu:yakkety\n$ docker-machine ssh default\n$ docker network create starmed-network\n$ docker run -it --name webserver ubuntu:yakkety bash\ncontainer# apt-get update\ncontainer# apt-get install -y vim\ncontainer# apt-get install -y curl\ncontainer# apt-get install -y software-properties-common\ncontainer# apt-get install -y python2.7 python2.7-dev\ncontainer# apt-get install -y build-essential libssl-dev\ncontainer# curl -sL https://raw.githubusercontent.com/creationix/nvm/v0.31.2/install.sh -o install_nvm.sh\ncontainer# bash install_nvm.sh\ncontainer# source ~/.profile\ncontainer# nvm ls-remote\ncontainer# nvm install 6.3.0\ncontainer# apt-get install -y git\ncontainer# npm config set python /usr/bin/python2.7\ncontainer# npm install pm2 -g\ncontainer# git config --global user.name \"Umidjons\"\ncontainer# git config --global user.email \"almatov.us@gmail.com\"\ncontainer# git config -l\ncontainer# git clone https://github.com/umidjons/micro-clinic.git\ncontainer# cd micro-clinic/\ncontainer# npm install\ncontainer# npm install -g bower\ncontainer# bower install --allow-root --force-latest\ncontainer# pm2 start server.js\ncontainer# pm2 stop all\ncontainer# pm2 delete all\ncontainer# exit\n$ docker commit webserver starmed/webserver:manual\n```\n\n#### Export image into file\n\n```bash\n$ docker save -o webserver_1.0.tar starmed/webserver:1.0\n```\n\n#### Load image from file\n\n```bash\n$ docker load -i webserver_1.0.tar\n```\n\n### Dump & Restore database\n\nDump database on host machine I use following command:\n```bash\n$ mongodump --db starmed --out dbdumps/15072016171000\n```\n\nNote, number 15072016171000 means 15.07.2016 17:10:00.\n\nRun database image with dumps volume\n```bash\n$ docker run -d --name db --net starmed-network -v /data/db:/data/db -v /data/configdb:/data/configdb -v /home/superuser/StarmedDist/Dumps:/data/dumps mongo:3.2.8\n```\n\n`/home/superuser/StarmedDist/Dumps` on host machine points to `/data/dumps` on docker container.\n\nThen run mongo restore on that container:\n```bash\n$ docker exec db mongorestore -d starmed /data/dumps/15072016171000/starmed\n```\n\n`db` is container name\n`-d` is mongorestore option, it specified database name to import\n\n### PREPARE NETWORK\n\nCreate network for docker containers\n```bash\ndocker network create starmed-network\n```\n\n### RUNNING MONGO IN DOCKER CONTAINER\n\nPull mongo image:\n```bash\ndocker pull mongo:3.2.8\n```\n\nRun container:\n```bash\ndocker run -d \\\n\t--name db \\\n\t--net starmed-network \\\n\t-v /data/db:/data/db \\\n\t-v /data/configdb:/data/configdb \\\n\t-v /home/superuser/StarmedDist/Dumps:/data/dumps \\\n\tmongo:3.2.8\n```\n\nContainer name is: db\nNetwork is: starmed-network\nMounted volumes: \n\tFor database files: /data/db -> /data/db\n\t\t\t\t\t\t/data/configdb -> /data/configdb\n\tFor dumps: /home/superuser/StarmedDist/Dumps -> /data/dumps\n\nRestore dump example:\n```bash\ndocker exec db mongorestore -d starmed /data/dumps/15072016171000/starmed\n```\n\n### RUNNING APP IN DOCKER CONTAINER\n\nDocker file `Dockerfile_node` to build App container:\n```Dockerfile\nFROM node:6\nMAINTAINER Umidjons <almatov.us@gmail.com>\n\nWORKDIR /\n\nRUN npm install -g pm2\n\n# copy current directory contents from build context into app directory\nCOPY . /usr/src/app\n\nWORKDIR /usr/src/app\n\n# pm2 logs\nVOLUME /root/.pm2/logs\n\nEXPOSE 3000\nCMD [\"pm2\", \"start\", \"server.js\", \"-i\", \"0\", \"--no-daemon\"]\n```\n\nBuild image:\n```bash\ncd /home/me/dist/app/\ndocker build -f Dockerfile_node -t ws:1.0 .\n```\n\nRun container in daemon mode:\n```bash\nmkdir /var/log/pm2\ndocker run -d --name ws --net starmed-network -p 80:3000 -v /var/log/pm2:/root/.pm2/logs ws:1.0\n```\n\nStop container:\n```bash\ndocker stop ws\n```\n\nDelete container:\n```bash\ndocker rm ws\n```\n\nShow logs:\n```bash\ndocker logs -f ws\n```\n\nExport app image\n```bash\ndocker save -o ws_1.0.tar ws:1.0\n```\n\nLoad app image:\n```bash\ndocker load -i ws_1.0.tar\n```### Installing application\n\nInstall Node.js\n```bash\nsudo curl -L https://deb.nodesource.com/setup_6.x | sudo -E bash -\nsudo apt-get install -y nodejs\nsudo npm install pm2 -g\n```\n\nInstalling MongoDB\n```bash\nsudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927\ncd /etc/apt/sources.list.d\ntouch mongodb-org-3.2.list\necho \"deb http://repo.mongodb.org/apt/debian wheezy/mongodb-org/3.2 main\" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.2.list\nsudo apt-get update\nsudo apt-get install -y mongodb-org\nsudo service mongod start\n```\n\nCopy source files into Linux server.\n\nStart application:\n```bash\nnode server\nsudo pm2 start server.js -i 0\nsudo pm2 monit\nsudo pm2 stop all\nsudo pm2 delete all\nsudo pm2 reload all\n```\n\nExport DB data:\n```bash\nmongodump --db starmed --out dbdumps/210627144000\n```\n\nWorking with mongo shell:\n```js\nroot@calibre:~/starmed0# mongo\nMongoDB shell version: 3.2.7\nconnecting to: test\nServer has startup warnings:\n2016-07-09T15:04:31.775+0500 I CONTROL  [initandlisten]\n2016-07-09T15:04:31.775+0500 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is 'always'.\n2016-07-09T15:04:31.775+0500 I CONTROL  [initandlisten] **        We suggest setting it to 'never'\n2016-07-09T15:04:31.775+0500 I CONTROL  [initandlisten]\n2016-07-09T15:04:31.775+0500 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/defrag is 'always'.\n2016-07-09T15:04:31.775+0500 I CONTROL  [initandlisten] **        We suggest setting it to 'never'\n2016-07-09T15:04:31.775+0500 I CONTROL  [initandlisten]\n>\n>\n>\n>\n>\n> show dbs\nlocal    0.000GB\nstarmed  0.001GB\n>\n>\n>\n> use starmed\nswitched to db starmed\n>\n>\n>\n> show collections\nbranches\ncashes\ncompanies\ndeposits\ndiscounts\nlog\npartners\npatients\npatientservices\npermissions\nresidents\nservicecategories\nservices\nsettings\nsexes\nstates\nsystem.profile\nusers\n```\n\nApplication settings are in `include/config.js` file.","html":"<h3 id=\"docker-installation-on-ubuntu-16-10\">DOCKER INSTALLATION ON UBUNTU 16.10</h3>\n<p>Source: <code>https://docs.docker.com/engine/installation/linux/ubuntulinux/</code></p>\n<pre><code class=\"lang-bash\">$ sudo mc\n<span class=\"hljs-meta\"># uname -r</span>\n<span class=\"hljs-meta\"># apt-get update</span>\n<span class=\"hljs-meta\"># apt-get install apt-transport-https ca-certificates</span>\n<span class=\"hljs-meta\"># apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D</span>\n<span class=\"hljs-meta\"># echo \"deb https://apt.dockerproject.org/repo ubuntu-wily main\" &gt; /etc/apt/sources.list.d/docker.list</span>\n<span class=\"hljs-meta\"># apt-get update</span>\n<span class=\"hljs-meta\"># apt-get purge lxc-docker</span>\n<span class=\"hljs-meta\"># apt-cache policy docker-engine</span>\n<span class=\"hljs-meta\"># apt-get install linux-image-extra-$(uname -r)</span>\n<span class=\"hljs-meta\"># apt-get update</span>\n<span class=\"hljs-meta\"># apt-get install docker-engine</span>\n<span class=\"hljs-meta\"># service docker start</span>\n<span class=\"hljs-meta\"># docker run hello-world</span>\n<span class=\"hljs-meta\"># docker ps -a</span>\n<span class=\"hljs-meta\"># docker rm fc1044f892d3</span>\n<span class=\"hljs-meta\"># docker rmi hello-world</span>\n</code></pre>\n<h3 id=\"build-web-server-image\">Build Web Server image</h3>\n<h4 id=\"dockerfile-to-create-web-server-image\">Dockerfile to create web server image</h4>\n<p>Dockerfile:</p>\n<pre><code><span class=\"hljs-keyword\">FROM</span> ubuntu:yakkety\n<span class=\"hljs-keyword\">MAINTAINER</span> Umidjons &lt;almatov.us@gmail.com&gt;\n\n<span class=\"hljs-keyword\">WORKDIR</span><span class=\"bash\"> /\n</span>\n<span class=\"hljs-keyword\">RUN</span><span class=\"bash\"> apt-get update &amp;&amp; apt-get install -y \\\n        vim \\\n        curl \\\n        git \\\n        software-properties-common\n</span>\n<span class=\"hljs-keyword\">ENV</span> NVM_VERSION v0.<span class=\"hljs-number\">31.2</span>\n<span class=\"hljs-keyword\">ENV</span> NODE_VERSION <span class=\"hljs-number\">6.3</span>.<span class=\"hljs-number\">0</span>\n\n<span class=\"hljs-keyword\">RUN</span><span class=\"bash\"> apt-get update &amp;&amp; apt-get install -y \\\n        python2.7 \\\n        python2.7-dev \\\n        build-essential \\\n        libssl-dev\n</span>\n<span class=\"hljs-keyword\">RUN</span><span class=\"bash\"> rm /bin/sh \\\n    &amp;&amp; ln <span class=\"hljs-_\">-s</span> /bin/bash /bin/sh \\\n    &amp;&amp; curl <span class=\"hljs-_\">-s</span>L https://raw.githubusercontent.com/creationix/nvm/<span class=\"hljs-variable\">$NVM_VERSION</span>/install.sh -o install_nvm.sh \\\n    &amp;&amp; bash install_nvm.sh \\\n    &amp;&amp; . /root/.nvm/nvm.sh \\\n    &amp;&amp; nvm install <span class=\"hljs-variable\">$NODE_VERSION</span> \\\n    &amp;&amp; npm config <span class=\"hljs-built_in\">set</span> python /usr/bin/python2.7 \\\n    &amp;&amp; npm install pm2 -g \\\n    &amp;&amp; git config --global user.name <span class=\"hljs-string\">\"Umidjons\"</span> \\\n    &amp;&amp; git config --global user.email <span class=\"hljs-string\">\"almatov.us@gmail.com\"</span> \\\n    &amp;&amp; git <span class=\"hljs-built_in\">clone</span> https://github.com/umidjons/micro-clinic.git \\\n    &amp;&amp; <span class=\"hljs-built_in\">cd</span> micro-clinic/ \\\n    &amp;&amp; npm install \\\n    &amp;&amp; npm install -g bower \\\n    &amp;&amp; bower install --allow-root --force-latest\n</span>\n<span class=\"hljs-keyword\">VOLUME</span><span class=\"bash\"> /root/.pm2/logs\n</span>\n<span class=\"hljs-keyword\">WORKDIR</span><span class=\"bash\"> /micro-clinic/\n</span>\n<span class=\"hljs-keyword\">EXPOSE</span> <span class=\"hljs-number\">3000</span>\n<span class=\"hljs-keyword\">CMD</span><span class=\"bash\"> [<span class=\"hljs-string\">\"pm2\"</span>, <span class=\"hljs-string\">\"start\"</span>, <span class=\"hljs-string\">\"server.js\"</span>]</span>\n</code></pre><p>Build command:</p>\n<pre><code class=\"lang-bash\">$ docker <span class=\"hljs-keyword\">build </span>-f Dockerfile -t starmed/webserver:<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">0</span> .\n</code></pre>\n<h4 id=\"manual-build-of-image-from-container\">Manual build of image from container</h4>\n<p>Do following steps:</p>\n<pre><code class=\"lang-bash\">$ docker pull ubuntu:yakkety\n$ docker-machine ssh default\n$ docker network <span class=\"hljs-keyword\">create</span> starmed-network\n$ docker run -it <span class=\"hljs-comment\">--name webserver ubuntu:yakkety bash</span>\n<span class=\"hljs-keyword\">container</span># apt-<span class=\"hljs-keyword\">get</span> <span class=\"hljs-keyword\">update</span>\n<span class=\"hljs-keyword\">container</span># apt-<span class=\"hljs-keyword\">get</span> <span class=\"hljs-keyword\">install</span> -y vim\n<span class=\"hljs-keyword\">container</span># apt-<span class=\"hljs-keyword\">get</span> <span class=\"hljs-keyword\">install</span> -y curl\n<span class=\"hljs-keyword\">container</span># apt-<span class=\"hljs-keyword\">get</span> <span class=\"hljs-keyword\">install</span> -y software-properties-common\n<span class=\"hljs-keyword\">container</span># apt-<span class=\"hljs-keyword\">get</span> <span class=\"hljs-keyword\">install</span> -y python2<span class=\"hljs-number\">.7</span> python2<span class=\"hljs-number\">.7</span>-dev\n<span class=\"hljs-keyword\">container</span># apt-<span class=\"hljs-keyword\">get</span> <span class=\"hljs-keyword\">install</span> -y <span class=\"hljs-keyword\">build</span>-essential libssl-dev\n<span class=\"hljs-keyword\">container</span># curl -sL https://raw.githubusercontent.com/creationix/nvm/v0<span class=\"hljs-number\">.31</span><span class=\"hljs-number\">.2</span>/install.sh -o install_nvm.sh\n<span class=\"hljs-keyword\">container</span># bash install_nvm.sh\n<span class=\"hljs-keyword\">container</span># <span class=\"hljs-keyword\">source</span> ~/.profile\n<span class=\"hljs-keyword\">container</span># nvm ls-remote\n<span class=\"hljs-keyword\">container</span># nvm <span class=\"hljs-keyword\">install</span> <span class=\"hljs-number\">6.3</span><span class=\"hljs-number\">.0</span>\n<span class=\"hljs-keyword\">container</span># apt-<span class=\"hljs-keyword\">get</span> <span class=\"hljs-keyword\">install</span> -y git\n<span class=\"hljs-keyword\">container</span># npm config <span class=\"hljs-keyword\">set</span> python /usr/<span class=\"hljs-keyword\">bin</span>/python2<span class=\"hljs-number\">.7</span>\n<span class=\"hljs-keyword\">container</span># npm <span class=\"hljs-keyword\">install</span> pm2 -g\n<span class=\"hljs-keyword\">container</span># git config <span class=\"hljs-comment\">--global user.name \"Umidjons\"</span>\n<span class=\"hljs-keyword\">container</span># git config <span class=\"hljs-comment\">--global user.email \"almatov.us@gmail.com\"</span>\n<span class=\"hljs-keyword\">container</span># git config -l\n<span class=\"hljs-keyword\">container</span># git <span class=\"hljs-keyword\">clone</span> https://github.com/umidjons/micro-clinic.git\n<span class=\"hljs-keyword\">container</span># cd micro-clinic/\n<span class=\"hljs-keyword\">container</span># npm <span class=\"hljs-keyword\">install</span>\n<span class=\"hljs-keyword\">container</span># npm <span class=\"hljs-keyword\">install</span> -g bower\n<span class=\"hljs-keyword\">container</span># bower <span class=\"hljs-keyword\">install</span> <span class=\"hljs-comment\">--allow-root --force-latest</span>\n<span class=\"hljs-keyword\">container</span># pm2 <span class=\"hljs-keyword\">start</span> server.js\n<span class=\"hljs-keyword\">container</span># pm2 <span class=\"hljs-keyword\">stop</span> all\n<span class=\"hljs-keyword\">container</span># pm2 <span class=\"hljs-keyword\">delete</span> all\n<span class=\"hljs-keyword\">container</span># <span class=\"hljs-keyword\">exit</span>\n$ docker <span class=\"hljs-keyword\">commit</span> webserver starmed/webserver:<span class=\"hljs-keyword\">manual</span>\n</code></pre>\n<h4 id=\"export-image-into-file\">Export image into file</h4>\n<pre><code class=\"lang-bash\">$ docker save -o webserver_1.<span class=\"hljs-number\">0</span><span class=\"hljs-selector-class\">.tar</span> starmed/webserver:<span class=\"hljs-number\">1.0</span>\n</code></pre>\n<h4 id=\"load-image-from-file\">Load image from file</h4>\n<pre><code class=\"lang-bash\">$ docker load -<span class=\"hljs-selector-tag\">i</span> webserver_1.<span class=\"hljs-number\">0</span>.tar\n</code></pre>\n<h3 id=\"dump-restore-database\">Dump &amp; Restore database</h3>\n<p>Dump database on host machine I use following command:</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-comment\">$</span> <span class=\"hljs-comment\">mongodump</span> <span class=\"hljs-literal\">-</span><span class=\"hljs-literal\">-</span><span class=\"hljs-comment\">db</span> <span class=\"hljs-comment\">starmed</span> <span class=\"hljs-literal\">-</span><span class=\"hljs-literal\">-</span><span class=\"hljs-comment\">out</span> <span class=\"hljs-comment\">dbdumps/15072016171000</span>\n</code></pre>\n<p>Note, number 15072016171000 means 15.07.2016 17:10:00.</p>\n<p>Run database image with dumps volume</p>\n<pre><code class=\"lang-bash\">$ docker run -d --name db --net starmed-network -v <span class=\"hljs-regexp\">/data/</span><span class=\"hljs-string\">db:</span><span class=\"hljs-regexp\">/data/</span>db -v <span class=\"hljs-regexp\">/data/</span><span class=\"hljs-string\">configdb:</span><span class=\"hljs-regexp\">/data/</span>configdb -v <span class=\"hljs-regexp\">/home/</span>superuser<span class=\"hljs-regexp\">/StarmedDist/</span><span class=\"hljs-string\">Dumps:</span><span class=\"hljs-regexp\">/data/</span>dumps <span class=\"hljs-string\">mongo:</span><span class=\"hljs-number\">3.2</span><span class=\"hljs-number\">.8</span>\n</code></pre>\n<p><code>/home/superuser/StarmedDist/Dumps</code> on host machine points to <code>/data/dumps</code> on docker container.</p>\n<p>Then run mongo restore on that container:</p>\n<pre><code class=\"lang-bash\">$ docker exec db mongorestore -d starmed <span class=\"hljs-regexp\">/data/</span>dumps<span class=\"hljs-regexp\">/15072016171000/</span>starmed\n</code></pre>\n<p><code>db</code> is container name\n<code>-d</code> is mongorestore option, it specified database name to import</p>\n<h3 id=\"prepare-network\">PREPARE NETWORK</h3>\n<p>Create network for docker containers</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-attribute\">docker network create starmed-network</span>\n</code></pre>\n<h3 id=\"running-mongo-in-docker-container\">RUNNING MONGO IN DOCKER CONTAINER</h3>\n<p>Pull mongo image:</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-selector-tag\">docker</span> <span class=\"hljs-selector-tag\">pull</span> <span class=\"hljs-selector-tag\">mongo</span><span class=\"hljs-selector-pseudo\">:3.2.8</span>\n</code></pre>\n<p>Run container:</p>\n<pre><code class=\"lang-bash\">docker run -d \\\n    --name db \\\n    --net starmed-network \\\n    -v <span class=\"hljs-regexp\">/data/</span><span class=\"hljs-string\">db:</span><span class=\"hljs-regexp\">/data/</span>db \\\n    -v <span class=\"hljs-regexp\">/data/</span><span class=\"hljs-string\">configdb:</span><span class=\"hljs-regexp\">/data/</span>configdb \\\n    -v <span class=\"hljs-regexp\">/home/</span>superuser<span class=\"hljs-regexp\">/StarmedDist/</span><span class=\"hljs-string\">Dumps:</span><span class=\"hljs-regexp\">/data/</span>dumps \\\n<span class=\"hljs-symbol\">    mongo:</span><span class=\"hljs-number\">3.2</span><span class=\"hljs-number\">.8</span>\n</code></pre>\n<p>Container name is: db\nNetwork is: starmed-network\nMounted volumes: \n    For database files: /data/db -&gt; /data/db\n                        /data/configdb -&gt; /data/configdb\n    For dumps: /home/superuser/StarmedDist/Dumps -&gt; /data/dumps</p>\n<p>Restore dump example:</p>\n<pre><code class=\"lang-bash\">docker exec db mongorestore -d starmed <span class=\"hljs-regexp\">/data/</span>dumps<span class=\"hljs-regexp\">/15072016171000/</span>starmed\n</code></pre>\n<h3 id=\"running-app-in-docker-container\">RUNNING APP IN DOCKER CONTAINER</h3>\n<p>Docker file <code>Dockerfile_node</code> to build App container:</p>\n<pre><code class=\"lang-Dockerfile\"><span class=\"hljs-keyword\">FROM</span> node:<span class=\"hljs-number\">6</span>\n<span class=\"hljs-keyword\">MAINTAINER</span> Umidjons &lt;almatov.us@gmail.com&gt;\n\n<span class=\"hljs-keyword\">WORKDIR</span><span class=\"bash\"> /\n</span>\n<span class=\"hljs-keyword\">RUN</span><span class=\"bash\"> npm install -g pm2\n</span>\n<span class=\"hljs-comment\"># copy current directory contents from build context into app directory</span>\n<span class=\"hljs-keyword\">COPY</span><span class=\"bash\"> . /usr/src/app\n</span>\n<span class=\"hljs-keyword\">WORKDIR</span><span class=\"bash\"> /usr/src/app\n</span>\n<span class=\"hljs-comment\"># pm2 logs</span>\n<span class=\"hljs-keyword\">VOLUME</span><span class=\"bash\"> /root/.pm2/logs\n</span>\n<span class=\"hljs-keyword\">EXPOSE</span> <span class=\"hljs-number\">3000</span>\n<span class=\"hljs-keyword\">CMD</span><span class=\"bash\"> [<span class=\"hljs-string\">\"pm2\"</span>, <span class=\"hljs-string\">\"start\"</span>, <span class=\"hljs-string\">\"server.js\"</span>, <span class=\"hljs-string\">\"-i\"</span>, <span class=\"hljs-string\">\"0\"</span>, <span class=\"hljs-string\">\"--no-daemon\"</span>]</span>\n</code></pre>\n<p>Build image:</p>\n<pre><code class=\"lang-bash\">cd <span class=\"hljs-regexp\">/home/</span>me<span class=\"hljs-regexp\">/dist/</span>app/\ndocker build -f Dockerfile_node -t <span class=\"hljs-string\">ws:</span><span class=\"hljs-number\">1.0</span> .\n</code></pre>\n<p>Run container in daemon mode:</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-keyword\">mkdir</span> /<span class=\"hljs-keyword\">var</span>/<span class=\"hljs-keyword\">log</span>/pm2\ndocker <span class=\"hljs-keyword\">run</span> -<span class=\"hljs-keyword\">d</span> --name ws --<span class=\"hljs-keyword\">net</span> starmed-network -p 80:3000 -v /<span class=\"hljs-keyword\">var</span>/<span class=\"hljs-keyword\">log</span>/pm2:/root/.pm2/logs ws:1.0\n</code></pre>\n<p>Stop container:</p>\n<pre><code class=\"lang-bash\">docker <span class=\"hljs-keyword\">stop</span> <span class=\"hljs-keyword\">ws</span>\n</code></pre>\n<p>Delete container:</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-attribute\">docker rm ws</span>\n</code></pre>\n<p>Show logs:</p>\n<pre><code class=\"lang-bash\">docker logs <span class=\"hljs-_\">-f</span> ws\n</code></pre>\n<p>Export app image</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-selector-tag\">docker</span> <span class=\"hljs-selector-tag\">save</span> <span class=\"hljs-selector-tag\">-o</span> <span class=\"hljs-selector-tag\">ws_1</span><span class=\"hljs-selector-class\">.0</span><span class=\"hljs-selector-class\">.tar</span> <span class=\"hljs-selector-tag\">ws</span><span class=\"hljs-selector-pseudo\">:1.0</span>\n</code></pre>\n<p>Load app image:</p>\n<pre><code class=\"lang-bash\">docker <span class=\"hljs-keyword\">load</span> -i ws_1<span class=\"hljs-number\">.0</span>.tar\n<span class=\"hljs-string\">``</span><span class=\"hljs-string\">`### Installing application\n\nInstall Node.js\n`</span><span class=\"hljs-string\">``</span>bash\nsudo curl -L https://deb.nodesource.com/setup_6.x | sudo -E bash -\nsudo apt-<span class=\"hljs-keyword\">get</span> <span class=\"hljs-keyword\">install</span> -y nodejs\nsudo npm <span class=\"hljs-keyword\">install</span> pm2 -g\n</code></pre>\n<p>Installing MongoDB</p>\n<pre><code class=\"lang-bash\">sudo apt-key adv --keyserver hkp://keyserver.ubuntu.<span class=\"hljs-keyword\">com</span>:<span class=\"hljs-number\">80</span> --recv EA312927\n<span class=\"hljs-keyword\">cd</span> /etc/apt/sources.<span class=\"hljs-keyword\">list</span>.d\ntouch mongodb-org-<span class=\"hljs-number\">3.2</span>.<span class=\"hljs-keyword\">list</span>\n<span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">\"deb http://repo.mongodb.org/apt/debian wheezy/mongodb-org/3.2 main\"</span> | sudo tee /etc/apt/sources.<span class=\"hljs-keyword\">list</span>.d/mongodb-org-<span class=\"hljs-number\">3.2</span>.<span class=\"hljs-keyword\">list</span>\nsudo apt-<span class=\"hljs-built_in\">get</span> <span class=\"hljs-keyword\">update</span>\nsudo apt-<span class=\"hljs-built_in\">get</span> install -<span class=\"hljs-keyword\">y</span> mongodb-org\nsudo service mongod start\n</code></pre>\n<p>Copy source files into Linux server.</p>\n<p>Start application:</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">server</span>\nsudo pm2 <span class=\"hljs-literal\">start</span> server.js -i <span class=\"hljs-number\">0</span>\nsudo pm2 monit\nsudo pm2 <span class=\"hljs-literal\">stop</span> all\nsudo pm2 delete all\nsudo pm2 reload all\n</code></pre>\n<p>Export DB data:</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-comment\">mongodump</span> <span class=\"hljs-literal\">-</span><span class=\"hljs-literal\">-</span><span class=\"hljs-comment\">db</span> <span class=\"hljs-comment\">starmed</span> <span class=\"hljs-literal\">-</span><span class=\"hljs-literal\">-</span><span class=\"hljs-comment\">out</span> <span class=\"hljs-comment\">dbdumps/210627144000</span>\n</code></pre>\n<p>Working with mongo shell:</p>\n<pre><code class=\"lang-js\">root@calibre:~/starmed0# mongo\nMongoDB shell version: 3.2.7\nconnecting to: test\nServer has startup warnings:\n2016<span class=\"hljs-string\">-07</span><span class=\"hljs-string\">-09</span>T15:04:31.775<span class=\"hljs-string\">+0500</span> I CONTROL  [initandlisten]\n2016<span class=\"hljs-string\">-07</span><span class=\"hljs-string\">-09</span>T15:04:31.775<span class=\"hljs-string\">+0500</span> I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is 'always'.\n2016<span class=\"hljs-string\">-07</span><span class=\"hljs-string\">-09</span>T15:04:31.775<span class=\"hljs-string\">+0500</span> I CONTROL  [initandlisten] **        We suggest setting it to 'never'\n2016<span class=\"hljs-string\">-07</span><span class=\"hljs-string\">-09</span>T15:04:31.775<span class=\"hljs-string\">+0500</span> I CONTROL  [initandlisten]\n2016<span class=\"hljs-string\">-07</span><span class=\"hljs-string\">-09</span>T15:04:31.775<span class=\"hljs-string\">+0500</span> I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/defrag is 'always'.\n2016<span class=\"hljs-string\">-07</span><span class=\"hljs-string\">-09</span>T15:04:31.775<span class=\"hljs-string\">+0500</span> I CONTROL  [initandlisten] **        We suggest setting it to 'never'\n2016<span class=\"hljs-string\">-07</span><span class=\"hljs-string\">-09</span>T15:04:31.775<span class=\"hljs-string\">+0500</span> I CONTROL  [initandlisten]\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; show dbs\nlocal    0.000GB\nstarmed  0.001GB\n&gt;\n&gt;\n&gt;\n&gt; use starmed\nswitched to db starmed\n&gt;\n&gt;\n&gt;\n&gt; show collections\nbranches\ncashes\ncompanies\ndeposits\ndiscounts\nlog\npartners\npatients\npatientservices\npermissions\nresidents\nservicecategories\nservices\nsettings\nsexes\nstates\nsystem.profile\nusers\n</code></pre>\n<p>Application settings are in <code>include/config.js</code> file.</p>\n"},{"html_url":"https://gist.github.com/b47d0fbf538e432bbd4e1760816447f6","description":"Generate Excel file via AJAX","files":["https://gist.githubusercontent.com/umidjons/b47d0fbf538e432bbd4e1760816447f6/raw/a39248abc2213f2f6c99cc379f372294d228e1b4/excel-via-ajax.md"],"content":"# Generate Excel file via AJAX\n\nInstall dependencies\n```bash\nnpm init\nnpm i express body-parser node-excel-export jquery -S\n```\n\nFile `server.js`:\n```js\n'use strict';\n\nvar express = require('express');\nvar app = express();\nvar bodyParser = require('body-parser');\nvar excel = require('node-excel-export');\nvar path = require('path');\n\n// serve static assets from node_modules\napp.use('/assets', express.static('node_modules'));\n\n// configure parsers\napp.use(bodyParser.urlencoded({extended: true, limit: '1mb'}));\napp.use(bodyParser.json({limit: '5mb'}));\n\napp\n    .get('/', function (req, res) {\n        res.sendFile(__dirname + '/index.html');\n    })\n    .get('/export', function (req, res) {\n        // example from https://github.com/andreyan-andreev/node-excel-export\n        let styles = {\n            headerDark: {\n                fill: {\n                    fgColor: {\n                        rgb: 'FF000000'\n                    }\n                },\n                font: {\n                    color: {\n                        rgb: 'FFFFFFFF'\n                    },\n                    sz: 14,\n                    bold: true,\n                    underline: true\n                }\n            },\n            cellPink: {\n                fill: {\n                    fgColor: {\n                        rgb: 'FFFFCCFF'\n                    }\n                }\n            },\n            cellGreen: {\n                fill: {\n                    fgColor: {\n                        rgb: 'FF00FF00'\n                    }\n                }\n            }\n        };\n\n        // Array of objects representing heading rows\n        let heading = [\n            [\n                {value: 'a1', style: styles.headerDark},\n                {value: 'b1', style: styles.headerDark},\n                {value: 'c1', style: styles.headerDark}\n            ],\n            ['a2', 'b2', 'c2'] // <-- It can be only values\n        ];\n\n        // export structure\n        let specification = {\n            customer_name: { // <- the key should match the actual data key\n                displayName: 'Customer', // <- Here you specify the column header\n                headerStyle: styles.headerDark, // <- Header style\n                cellStyle: function (value, row) { // <- style renderer function\n                    // if the status is 1 then color in green else color in red\n                    // Notice how we use another cell value to style the current one\n                    return (row.status_id == 1) ? styles.cellGreen : {fill: {fgColor: {rgb: 'FFFF0000'}}}; // <- Inline cell style is possible\n                },\n                width: 120 // <- width in pixels\n            },\n            status_id: {\n                displayName: 'Status',\n                headerStyle: styles.headerDark,\n                cellFormat: function (value, row) { // <- Renderer function, you can access also any row.property\n                    return (value == 1) ? 'Active' : 'Inactive';\n                },\n                width: '10' // <- width in chars (when the number is passed as string)\n            },\n            note: {\n                displayName: 'Description',\n                headerStyle: styles.headerDark,\n                cellStyle: styles.cellPink, // <- Cell style\n                width: 220 // <- width in pixels\n            }\n        };\n\n        // The data set should have the following shape (Array of Objects)\n        // The order of the keys is irrelevant, it is also irrelevant if the\n        // dataset contains more fields as the report is build based on the\n        // specification provided above. But you should have all the fields\n        // that are listed in the report specification\n        let dataset = [\n            {customer_name: 'IBM', status_id: 1, note: 'some note', misc: 'not shown'},\n            {customer_name: 'HP', status_id: 0, note: 'some note'},\n            {customer_name: 'MS', status_id: 0, note: 'some note', misc: 'not shown'}\n        ];\n\n        // Create the excel report.\n        // This function will return Buffer\n        let report = excel.buildExport(\n            [ // <- Notice that this is an array. Pass multiple sheets to create multi sheet report\n                {\n                    name: 'Sheet name', // <- Specify sheet name (optional)\n                    heading: heading, // <- Raw heading array (optional)\n                    specification: specification, // <- Report specification\n                    data: dataset // <-- Report data\n                }\n            ]\n        );\n\n        // convert excel file content to base64 and send to a client\n        res.send({content: report.toString('base64')});\n    })\n    .listen(4000, function () {\n        console.log(`Listening on http://localhost:4000`);\n    });\n```\n\nFile `index.html`:\n```html\n<html>\n<head>\n    <title>Export to Excel via AJAX</title>\n    <script src=\"/assets/jquery/dist/jquery.min.js\"></script>\n</head>\n<body>\n\n<button id=\"export\">Export To Excel</button>\n\n<script>\n    \"use strict\";\n\n    jQuery(document).ready(function ($) {\n\n        $('#export').on('click', function () {\n            $.get('/export', function (resp) {\n                let uri = \"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,\";\n                let url = uri + resp.content;\n                setTimeout(function () {\n                    location.href = url;\n                }, 100);\n            });\n        });\n\n    });\n</script>\n</body>\n</html>\n```\n\nRun server:\n```bash\nnode server\n```\n\nOpen `http://localhost:4000` in web browser, then click button to download excel file.","html":"<h1 id=\"generate-excel-file-via-ajax\">Generate Excel file via AJAX</h1>\n<p>Install dependencies</p>\n<pre><code class=\"lang-bash\">npm init\nnpm i express body-parser <span class=\"hljs-keyword\">node</span><span class=\"hljs-title\">-excel-export</span> jquery -S\n</code></pre>\n<p>File <code>server.js</code>:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-meta\">'use strict'</span>;\n\n<span class=\"hljs-keyword\">var</span> express = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'express'</span>);\n<span class=\"hljs-keyword\">var</span> app = express();\n<span class=\"hljs-keyword\">var</span> bodyParser = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'body-parser'</span>);\n<span class=\"hljs-keyword\">var</span> excel = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'node-excel-export'</span>);\n<span class=\"hljs-keyword\">var</span> path = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'path'</span>);\n\n<span class=\"hljs-comment\">// serve static assets from node_modules</span>\napp.use(<span class=\"hljs-string\">'/assets'</span>, express.static(<span class=\"hljs-string\">'node_modules'</span>));\n\n<span class=\"hljs-comment\">// configure parsers</span>\napp.use(bodyParser.urlencoded({<span class=\"hljs-attr\">extended</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-attr\">limit</span>: <span class=\"hljs-string\">'1mb'</span>}));\napp.use(bodyParser.json({<span class=\"hljs-attr\">limit</span>: <span class=\"hljs-string\">'5mb'</span>}));\n\napp\n    .get(<span class=\"hljs-string\">'/'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n        res.sendFile(__dirname + <span class=\"hljs-string\">'/index.html'</span>);\n    })\n    .get(<span class=\"hljs-string\">'/export'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n        <span class=\"hljs-comment\">// example from https://github.com/andreyan-andreev/node-excel-export</span>\n        <span class=\"hljs-keyword\">let</span> styles = {\n            <span class=\"hljs-attr\">headerDark</span>: {\n                <span class=\"hljs-attr\">fill</span>: {\n                    <span class=\"hljs-attr\">fgColor</span>: {\n                        <span class=\"hljs-attr\">rgb</span>: <span class=\"hljs-string\">'FF000000'</span>\n                    }\n                },\n                <span class=\"hljs-attr\">font</span>: {\n                    <span class=\"hljs-attr\">color</span>: {\n                        <span class=\"hljs-attr\">rgb</span>: <span class=\"hljs-string\">'FFFFFFFF'</span>\n                    },\n                    <span class=\"hljs-attr\">sz</span>: <span class=\"hljs-number\">14</span>,\n                    <span class=\"hljs-attr\">bold</span>: <span class=\"hljs-literal\">true</span>,\n                    <span class=\"hljs-attr\">underline</span>: <span class=\"hljs-literal\">true</span>\n                }\n            },\n            <span class=\"hljs-attr\">cellPink</span>: {\n                <span class=\"hljs-attr\">fill</span>: {\n                    <span class=\"hljs-attr\">fgColor</span>: {\n                        <span class=\"hljs-attr\">rgb</span>: <span class=\"hljs-string\">'FFFFCCFF'</span>\n                    }\n                }\n            },\n            <span class=\"hljs-attr\">cellGreen</span>: {\n                <span class=\"hljs-attr\">fill</span>: {\n                    <span class=\"hljs-attr\">fgColor</span>: {\n                        <span class=\"hljs-attr\">rgb</span>: <span class=\"hljs-string\">'FF00FF00'</span>\n                    }\n                }\n            }\n        };\n\n        <span class=\"hljs-comment\">// Array of objects representing heading rows</span>\n        <span class=\"hljs-keyword\">let</span> heading = [\n            [\n                {<span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">'a1'</span>, <span class=\"hljs-attr\">style</span>: styles.headerDark},\n                {<span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">'b1'</span>, <span class=\"hljs-attr\">style</span>: styles.headerDark},\n                {<span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">'c1'</span>, <span class=\"hljs-attr\">style</span>: styles.headerDark}\n            ],\n            [<span class=\"hljs-string\">'a2'</span>, <span class=\"hljs-string\">'b2'</span>, <span class=\"hljs-string\">'c2'</span>] <span class=\"hljs-comment\">// &lt;-- It can be only values</span>\n        ];\n\n        <span class=\"hljs-comment\">// export structure</span>\n        <span class=\"hljs-keyword\">let</span> specification = {\n            <span class=\"hljs-attr\">customer_name</span>: { <span class=\"hljs-comment\">// &lt;- the key should match the actual data key</span>\n                displayName: <span class=\"hljs-string\">'Customer'</span>, <span class=\"hljs-comment\">// &lt;- Here you specify the column header</span>\n                headerStyle: styles.headerDark, <span class=\"hljs-comment\">// &lt;- Header style</span>\n                cellStyle: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">value, row</span>) </span>{ <span class=\"hljs-comment\">// &lt;- style renderer function</span>\n                    <span class=\"hljs-comment\">// if the status is 1 then color in green else color in red</span>\n                    <span class=\"hljs-comment\">// Notice how we use another cell value to style the current one</span>\n                    <span class=\"hljs-keyword\">return</span> (row.status_id == <span class=\"hljs-number\">1</span>) ? styles.cellGreen : {<span class=\"hljs-attr\">fill</span>: {<span class=\"hljs-attr\">fgColor</span>: {<span class=\"hljs-attr\">rgb</span>: <span class=\"hljs-string\">'FFFF0000'</span>}}}; <span class=\"hljs-comment\">// &lt;- Inline cell style is possible</span>\n                },\n                <span class=\"hljs-attr\">width</span>: <span class=\"hljs-number\">120</span> <span class=\"hljs-comment\">// &lt;- width in pixels</span>\n            },\n            <span class=\"hljs-attr\">status_id</span>: {\n                <span class=\"hljs-attr\">displayName</span>: <span class=\"hljs-string\">'Status'</span>,\n                <span class=\"hljs-attr\">headerStyle</span>: styles.headerDark,\n                <span class=\"hljs-attr\">cellFormat</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">value, row</span>) </span>{ <span class=\"hljs-comment\">// &lt;- Renderer function, you can access also any row.property</span>\n                    <span class=\"hljs-keyword\">return</span> (value == <span class=\"hljs-number\">1</span>) ? <span class=\"hljs-string\">'Active'</span> : <span class=\"hljs-string\">'Inactive'</span>;\n                },\n                <span class=\"hljs-attr\">width</span>: <span class=\"hljs-string\">'10'</span> <span class=\"hljs-comment\">// &lt;- width in chars (when the number is passed as string)</span>\n            },\n            <span class=\"hljs-attr\">note</span>: {\n                <span class=\"hljs-attr\">displayName</span>: <span class=\"hljs-string\">'Description'</span>,\n                <span class=\"hljs-attr\">headerStyle</span>: styles.headerDark,\n                <span class=\"hljs-attr\">cellStyle</span>: styles.cellPink, <span class=\"hljs-comment\">// &lt;- Cell style</span>\n                width: <span class=\"hljs-number\">220</span> <span class=\"hljs-comment\">// &lt;- width in pixels</span>\n            }\n        };\n\n        <span class=\"hljs-comment\">// The data set should have the following shape (Array of Objects)</span>\n        <span class=\"hljs-comment\">// The order of the keys is irrelevant, it is also irrelevant if the</span>\n        <span class=\"hljs-comment\">// dataset contains more fields as the report is build based on the</span>\n        <span class=\"hljs-comment\">// specification provided above. But you should have all the fields</span>\n        <span class=\"hljs-comment\">// that are listed in the report specification</span>\n        <span class=\"hljs-keyword\">let</span> dataset = [\n            {<span class=\"hljs-attr\">customer_name</span>: <span class=\"hljs-string\">'IBM'</span>, <span class=\"hljs-attr\">status_id</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">note</span>: <span class=\"hljs-string\">'some note'</span>, <span class=\"hljs-attr\">misc</span>: <span class=\"hljs-string\">'not shown'</span>},\n            {<span class=\"hljs-attr\">customer_name</span>: <span class=\"hljs-string\">'HP'</span>, <span class=\"hljs-attr\">status_id</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">note</span>: <span class=\"hljs-string\">'some note'</span>},\n            {<span class=\"hljs-attr\">customer_name</span>: <span class=\"hljs-string\">'MS'</span>, <span class=\"hljs-attr\">status_id</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">note</span>: <span class=\"hljs-string\">'some note'</span>, <span class=\"hljs-attr\">misc</span>: <span class=\"hljs-string\">'not shown'</span>}\n        ];\n\n        <span class=\"hljs-comment\">// Create the excel report.</span>\n        <span class=\"hljs-comment\">// This function will return Buffer</span>\n        <span class=\"hljs-keyword\">let</span> report = excel.buildExport(\n            [ <span class=\"hljs-comment\">// &lt;- Notice that this is an array. Pass multiple sheets to create multi sheet report</span>\n                {\n                    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Sheet name'</span>, <span class=\"hljs-comment\">// &lt;- Specify sheet name (optional)</span>\n                    heading: heading, <span class=\"hljs-comment\">// &lt;- Raw heading array (optional)</span>\n                    specification: specification, <span class=\"hljs-comment\">// &lt;- Report specification</span>\n                    data: dataset <span class=\"hljs-comment\">// &lt;-- Report data</span>\n                }\n            ]\n        );\n\n        <span class=\"hljs-comment\">// convert excel file content to base64 and send to a client</span>\n        res.send({<span class=\"hljs-attr\">content</span>: report.toString(<span class=\"hljs-string\">'base64'</span>)});\n    })\n    .listen(<span class=\"hljs-number\">4000</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`Listening on http://localhost:4000`</span>);\n    });\n</code></pre>\n<p>File <code>index.html</code>:</p>\n<pre><code class=\"lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>Export to Excel via AJAX<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"/assets/jquery/dist/jquery.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"export\"</span>&gt;</span>Export To Excel<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\"><span class=\"hljs-meta\">\n    \"use strict\"</span>;\n\n    jQuery(<span class=\"hljs-built_in\">document</span>).ready(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">$</span>) </span>{\n\n        $(<span class=\"hljs-string\">'#export'</span>).on(<span class=\"hljs-string\">'click'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n            $.get(<span class=\"hljs-string\">'/export'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">resp</span>) </span>{\n                <span class=\"hljs-keyword\">let</span> uri = <span class=\"hljs-string\">\"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,\"</span>;\n                <span class=\"hljs-keyword\">let</span> url = uri + resp.content;\n                setTimeout(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n                    location.href = url;\n                }, <span class=\"hljs-number\">100</span>);\n            });\n        });\n\n    });\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n<p>Run server:</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">server</span>\n</code></pre>\n<p>Open <code>http://localhost:4000</code> in web browser, then click button to download excel file.</p>\n"},{"html_url":"https://gist.github.com/e325d2ce8b3bc2113c788d1d52f8c497","description":"Prevent \"OverwriteModelError: Cannot overwrite model once compiled.\" error","files":["https://gist.githubusercontent.com/umidjons/e325d2ce8b3bc2113c788d1d52f8c497/raw/0fe8f13f42a777188c80a2e27942dfdaa2584a06/prevent-overwritemodelerror-mongoose-error.md"],"content":"### Prevent \"OverwriteModelError: Cannot overwrite model once compiled.\" error\n\n```js\nafter(function (done) {\n    mongoose.models = {};\n    mongoose.modelSchemas = {};\n    mongoose.connection.close();\n    done();\n});\n```","html":"<h3 id=\"prevent-overwritemodelerror-cannot-overwrite-model-once-compiled-error\">Prevent &quot;OverwriteModelError: Cannot overwrite model once compiled.&quot; error</h3>\n<pre><code class=\"lang-js\">after(<span class=\"hljs-name\">function</span> (<span class=\"hljs-name\">done</span>) {\n    mongoose.models = {}<span class=\"hljs-comment\">;</span>\n    mongoose.modelSchemas = {}<span class=\"hljs-comment\">;</span>\n    mongoose.connection.close()<span class=\"hljs-comment\">;</span>\n    done()<span class=\"hljs-comment\">;</span>\n})<span class=\"hljs-comment\">;</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/829ef6c2ce26ed6527ddf30684465c59","description":"E2E Testing: Selenium Tips","files":["https://gist.githubusercontent.com/umidjons/829ef6c2ce26ed6527ddf30684465c59/raw/0b28760ad9b883aef6330d550c6dbfbdd02a8ec9/e2e-testing-selenium-tips.md"],"content":"### E2E Testing: Selenium Tips\n\nSpecifying driver on Selenium Server run:\n```bash\n# chromedriver.exe in the current directory\njava -Dwebdriver.chrome.driver=chromedriver.exe -jar selenium-server-standalone-2.53.0.jar\n```","html":"<h3 id=\"e2e-testing-selenium-tips\">E2E Testing: Selenium Tips</h3>\n<p>Specifying driver on Selenium Server run:</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-comment\"># chromedriver.exe in the current directory</span>\n<span class=\"hljs-keyword\">java </span>-Dwebdriver.chrome.driver=chromedriver.exe -<span class=\"hljs-keyword\">jar </span>selenium-server-standalone-2.<span class=\"hljs-number\">53</span>.<span class=\"hljs-number\">0</span>.<span class=\"hljs-keyword\">jar</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/2f1c158aaf8e2bcc8e2463bb71162f5c","description":"Update each element of the array in multiple documents","files":["https://gist.githubusercontent.com/umidjons/2f1c158aaf8e2bcc8e2463bb71162f5c/raw/0aa80831df0327d7cb42f738ec434e162a5839a3/update-multiple-documents-array-each-element.md"],"content":"Update each element of the array in multiple documents\n===\n\n```js\n// Branch document to set for each Pay document\nvar branch={\n    \"_id\" : ObjectId(\"574da2d03f0b7f4c16bc08e6\"),\n    \"user\" : ObjectId(\"57483e928e061688284ceffb\"),\n    \"title\" : \"\\\"Main Office\\\" Ltd.\",\n    \"shortTitle\" : \"Main\",\n    \"address\" : \"Tashkent city\",\n    \"phone\" : \"998710000000\",\n    \"state\" : {\n        \"_id\" : \"active\",\n        \"title\" : \"Active\"\n    },\n    \"created\" : ISODate(\"2016-05-31T14:42:05.344Z\"),\n    \"__v\" : 0\n};\n\ndb.getCollection('patientservices').find()\n.forEach(function(doc){\n    // doc.pays is array of Pay objects\n    doc.pays.forEach(function(pay){\n        // set branch of the pay\n        pay.branch = branch;\n    });\n    // save current document - patientservice item\n    db.getCollection('patientservices').save(doc);\n});\n```","html":"<h1 id=\"update-each-element-of-the-array-in-multiple-documents\">Update each element of the array in multiple documents</h1>\n<pre><code class=\"lang-js\"><span class=\"hljs-comment\">// Branch document to set for each Pay document</span>\n<span class=\"hljs-keyword\">var</span> branch={\n    <span class=\"hljs-string\">\"_id\"</span> : ObjectId(<span class=\"hljs-string\">\"574da2d03f0b7f4c16bc08e6\"</span>),\n    <span class=\"hljs-string\">\"user\"</span> : ObjectId(<span class=\"hljs-string\">\"57483e928e061688284ceffb\"</span>),\n    <span class=\"hljs-string\">\"title\"</span> : <span class=\"hljs-string\">\"\\\"Main Office\\\" Ltd.\"</span>,\n    <span class=\"hljs-string\">\"shortTitle\"</span> : <span class=\"hljs-string\">\"Main\"</span>,\n    <span class=\"hljs-string\">\"address\"</span> : <span class=\"hljs-string\">\"Tashkent city\"</span>,\n    <span class=\"hljs-string\">\"phone\"</span> : <span class=\"hljs-string\">\"998710000000\"</span>,\n    <span class=\"hljs-string\">\"state\"</span> : {\n        <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"active\"</span>,\n        <span class=\"hljs-string\">\"title\"</span> : <span class=\"hljs-string\">\"Active\"</span>\n    },\n    <span class=\"hljs-string\">\"created\"</span> : ISODate(<span class=\"hljs-string\">\"2016-05-31T14:42:05.344Z\"</span>),\n    <span class=\"hljs-string\">\"__v\"</span> : <span class=\"hljs-number\">0</span>\n};\n\ndb.getCollection(<span class=\"hljs-string\">'patientservices'</span>).find()\n.<span class=\"hljs-keyword\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(doc)</span></span>{\n    <span class=\"hljs-comment\">// doc.pays is array of Pay objects</span>\n    doc.pays.<span class=\"hljs-keyword\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(pay)</span></span>{\n        <span class=\"hljs-comment\">// set branch of the pay</span>\n        pay.branch = branch;\n    });\n    <span class=\"hljs-comment\">// save current document - patientservice item</span>\n    db.getCollection(<span class=\"hljs-string\">'patientservices'</span>).save(doc);\n});\n</code></pre>\n"},{"html_url":"https://gist.github.com/39469865d16b67bdfbea82ce85e11188","description":"MongoDB aggregate(), $lookup example","files":["https://gist.githubusercontent.com/umidjons/39469865d16b67bdfbea82ce85e11188/raw/6ed423cca62a3fc9e4c3a0bc702caba625faeb99/mongodb-aggregate-lookup-example.md"],"content":"MongoDB aggregate(), $lookup example\n===\n\n```js\ndb.patientservices.aggregate([\n  {\n      $unwind: '$pays'\n  },\n  {\n      $group: {\n          _id: {patientId: '$patientId', 'payTime': '$pays.created'},\n          payAmount: {$sum: '$pays.amount'}\n      }\n  },\n  {\n      $sort: {'_id.payTime': -1}\n  },\n  {\n      $lookup: {\n          from: 'patients',\n          localField: '_id.patientId',\n          foreignField: '_id',\n          as: 'patient'\n      }\n  },\n  {\n      $unwind: '$patient'\n  },\n  {\n      $project: {\n          _id: 0,\n          patientId: '$_id.patientId',\n          patient: '$patient',\n          payTime: '$_id.payTime',\n          payAmount: '$payAmount'\n      }\n  }\n]);\n```","html":"<h1 id=\"mongodb-aggregate-lookup-example\">MongoDB aggregate(), $lookup example</h1>\n<pre><code class=\"lang-js\">db.patientservices.aggregate([\n  {\n      $unwind: <span class=\"hljs-string\">'$pays'</span>\n  },\n  {\n      $group: {\n          _id: {patientId: <span class=\"hljs-string\">'$patientId'</span>, <span class=\"hljs-string\">'payTime'</span>: <span class=\"hljs-string\">'$pays.created'</span>},\n          payAmount: {$sum: <span class=\"hljs-string\">'$pays.amount'</span>}\n      }\n  },\n  {\n      $sort: {<span class=\"hljs-string\">'_id.payTime'</span>: -<span class=\"hljs-number\">1</span>}\n  },\n  {\n      $lookup: {\n          from: <span class=\"hljs-string\">'patients'</span>,\n          localField: <span class=\"hljs-string\">'_id.patientId'</span>,\n          foreignField: <span class=\"hljs-string\">'_id'</span>,\n          as: <span class=\"hljs-string\">'patient'</span>\n      }\n  },\n  {\n      $unwind: <span class=\"hljs-string\">'$patient'</span>\n  },\n  {\n      $project: {\n          _id: <span class=\"hljs-number\">0</span>,\n          patientId: <span class=\"hljs-string\">'$_id.patientId'</span>,\n          patient: <span class=\"hljs-string\">'$patient'</span>,\n          payTime: <span class=\"hljs-string\">'$_id.payTime'</span>,\n          payAmount: <span class=\"hljs-string\">'$payAmount'</span>\n      }\n  }\n]);\n</code></pre>\n"},{"html_url":"https://gist.github.com/7b390e4ab6639578cd438c4c0315d496","description":"Docker tips","files":["https://gist.githubusercontent.com/umidjons/7b390e4ab6639578cd438c4c0315d496/raw/ea80ca6dfb32519295b7bd6fe5243bcef4039fab/docker-tips.md"],"content":"# Docker Tips\n\n## Installation and first time run experience on Windows 8.1\n\nI use Windows 8.1 for Docker.\n\nAfter installation when I tried to run docker, for example `docker run hello-world` from `cmd` I received the following error:\n```\nC:\\Program Files\\Docker Toolbox\\docker.exe: An error occurred trying to connect: Post http://%2F%2F.%2Fpipe%2Fdocker_engine/v1.23/containers/create: open //./pipe/docker_engine: The system cannot find the file specified..\nSee 'C:\\Program Files\\Docker Toolbox\\docker.exe run --help'.\n```\n\nRun docker on Windows with `start.sh` script from Docker installation directory.\nOutput would be like following:\n```\n\n\n                        ##         .\n                  ## ## ##        ==\n               ## ## ## ## ##    ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~\n           \\______ o           __/\n             \\    \\         __/\n              \\____\\_______/\n\ndocker is configured to use the default machine with IP 192.168.99.100\nFor help getting started, check out the docs at https://docs.docker.com\n\nStart interactive shell\n\ndevneo@host MINGW64 ~\n$\n```\n\nIf you get error about certification, try to regenerated them (`default` is the default VM name):\n```\n$ docker-machine regenerate-certs -f default\n```\n\nWhen I tried to access terminal on a container I got following error:\n```bash\n$ docker run -it hello-world\ncannot enable tty mode on non tty input\n```\n\nTo solve this problem I logged into `default` VM via `ssh` using `docker-machine`, then run container from there:\n```bash\n$ docker-machine ssh default\n                        ##         .\n                  ## ## ##        ==\n               ## ## ## ## ##    ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~\n           \\______ o           __/\n             \\    \\         __/\n              \\____\\_______/\n _                 _   ____     _            _\n| |__   ___   ___ | |_|___ \\ __| | ___   ___| | _____ _ __\n| '_ \\ / _ \\ / _ \\| __| __) / _` |/ _ \\ / __| |/ / _ \\ '__|\n| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   <  __/ |\n|_.__/ \\___/ \\___/ \\__|_____\\__,_|\\___/ \\___|_|\\_\\___|_|\nBoot2Docker version 1.11.1, build HEAD : 7954f54 - Wed Apr 27 16:36:45 UTC 2016\nDocker version 1.11.1, build 5604cbe\ndocker@default:~$\ndocker@default:~$ docker run -i -t ubuntu bash\nroot@976029f4f84d:/#\n```\n\n## Cheat-sheet\n\n| Command      | Description               | Example |\n---------------|---------------------------|---------|\n|`docker`| list available docker commands| |\n| `docker ps`  | shows running containers  | |\n| `docker ps -a` | shows all containers, including stopped ones | |\n| `docker images` | lists images | |\n| `docker run repo/image:tag` | runs a container | `docker run library/mongo:3.2.6` |\n| `docker run --name <name> -d image` | runs a container in detached mode | `docker run --name db -d library/mongo:latest` |\n| `docker run --name <name> -p locPort:contPort -d image` | runs a container in detached mode forwarding localport to containers port | `docker run --name webapp -p 80:3000 -d umidjons/webserver:1.3` `docker run -p 80:3000 -d umidjons/webserver:1.0 bash /var/www/startws.sh`|\n| `docker run -i -t image cmd` | runs a container in interactive mode | `docker run -it ubuntu bash` |\n| `docker logs <shortId|name>` | shows container's last output once | `docker logs db` |\n| `docker logs -f <shortId|name>` | shows container's output in real time | `docker logs -f a23d91dd002f` |\n| `docker commit <shortId|name> repo/image:tag` | commits container changes as an image | `docker commit a23d91dd002f umidjons/myapp:1.0` |\n| `docker stop <shortId|name>` | stops container, useful to stop detached container | `docker stop a23d91dd002f` |\n| `docker exec -i -t repo/image:tag cmd` | start a new process for container, when exits doesn't stops main container with PID 1 | `docker exec -i -t ubuntu:latest bash` |\n| `docker rm <shortId|name>` | removes a container | `docker rm db` |\n| `docker tag image:tag repo/user/image:tag` | tags image with new tags | `docker tag myubuntu:1.0 umidjons/webserver:1.0` `docker tag 7d9495d03763 umidjons/app-main:latest` |\n| `docker push user/image:tag` | pushes image to docker hub | `docker push umidjons/webserver:1.0`|\n| `docker inspect <shortId|name>` | inspects container, information about container, image | `docker inspect a23d91dd002f` `docker inspect myapp` `docker inspect db | grep IPAddress`|\n| `docker-machine`| show usage and available command | `docker-machine` |\n| `docker-machine ip <vmname>` | find out VM's IP address | `docker-machine ip default` |\n| `docker-machine ls` | list available VMs | `docker-machine ls` |\n| `docker-machine status <vmname>` | find out VM's status | `docker-machine status default` |\n| `docker-machine env <vmname>` | set environment variables for the specified machine | `docker-machine env default` |\n| `docker save -o imagefullpath.tar image`| saves images into specified location in `tar` archive format | `docker save -o /c/Users/umidjons/Images/my_webserver_1.0.tar umidjons/webserver:1.0` |\n| `docker load -i image.tar` | loads saved image into docker | `docker load -i my_webserver_1.0.tar` |\n| `docker build -t image:tag path` | build image according to Dockerfile located in path | `docker build -t umidjons/myapp:latest .` |\n| `docker run -v locPath:contPath image cmd` | mounts local path to the specified container's path | `docker run -i -t -p 3000:3000 -v /c/Users/umidjons/projects/myapp/:/var/www/myapp umidjons/myapp:4.7 node /var/www/myapp/server.js` |\n| `docker network ls` | list available networks | `docker network ls` |\n| `docker network inspect <networkName>` | inspects given network (shows information about that network) | `docker network inspect mynetwork` |\n| `docker network create --driver bridge <networkName>` | creates isolated network | `docker network create --driver bridge mynetwork` |\n| `docker run -d --net=<networkName> --name <containerName> <image>` | run container with specifying network | `docker run -d --net=mynetwork --name mymongodb mongo` `docker run -d --net=mynetwork --name nodeapp -p 80:3000 node` from now inside `nodeapp` container we can use host name `mymongodb` as they are in the same network |\n| `docker-compose build` | build containers from `docker-compose.yml` file | |\n| `docker-compose up` | up built containers according to `docker-compose.yml` | |\n| `docker-compose up -d` | up built containers in daemon mode according to `docker-compose.yml` | |\n| `docker-compose down` | tear down (also removes containers) running containers | |\n| `docker-compose ps` | show information about running containers | |\n| `docker-compose logs` | show logs from all running containers | |\n\nRun docker on external 8080 port, map that port into internal 3000 port on the container, create volum that points current directory into containers /var/www directory, then with -w set working directory in the container to /var/www, run node image with command node app.js:\n`docker run -p 8080:3000 -v $(pwd):/var/www -w \"/var/www\" node:6 node app.js`","html":"<h1 id=\"docker-tips\">Docker Tips</h1>\n<h2 id=\"installation-and-first-time-run-experience-on-windows-8-1\">Installation and first time run experience on Windows 8.1</h2>\n<p>I use Windows 8.1 for Docker.</p>\n<p>After installation when I tried to run docker, for example <code>docker run hello-world</code> from <code>cmd</code> I received the following error:</p>\n<pre><code>C:\\<span class=\"hljs-keyword\">Program</span> Files\\Docker Toolbox\\docker.exe: <span class=\"hljs-keyword\">An</span> <span class=\"hljs-keyword\">error</span> occurred trying to connect: <span class=\"hljs-keyword\">Post</span> http:<span class=\"hljs-comment\">//%2F%2F.%2Fpipe%2Fdocker_engine/v1.23/containers/create: open //./pipe/docker_engine: The system cannot find the file specified..</span>\nSee 'C:\\<span class=\"hljs-keyword\">Program</span> Files\\Docker Toolbox\\docker.exe <span class=\"hljs-keyword\">run</span> --<span class=\"hljs-keyword\">help</span>'.\n</code></pre><p>Run docker on Windows with <code>start.sh</code> script from Docker installation directory.\nOutput would be like following:</p>\n<pre><code>\n\n<span class=\"julia\">                        <span class=\"hljs-comment\">##         .</span>\n                  <span class=\"hljs-comment\">## ## ##        ==</span>\n               <span class=\"hljs-comment\">## ## ## ## ##    ===</span>\n           /<span class=\"hljs-string\">\"\"\"\"\"\"</span><span class=\"hljs-string\">\"\"\"\"\"\"</span><span class=\"hljs-string\">\"\"\"\"\"\\___/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~\n           \\______ o           __/\n             \\    \\         __/\n              \\____\\_______/\n\ndocker is configured to use the default machine with IP 192.168.99.100\nFor help getting started, check out the docs at https://docs.docker.com\n\nStart interactive shell\n\ndevneo@host MINGW64 ~\n$</span></span>\n</code></pre><p>If you get error about certification, try to regenerated them (<code>default</code> is the default VM name):</p>\n<pre><code>$ docker-machine regenerate-certs -f <span class=\"hljs-keyword\">default</span>\n</code></pre><p>When I tried to access terminal on a container I got following error:</p>\n<pre><code class=\"lang-bash\">$ docker <span class=\"hljs-built_in\">run</span> -<span class=\"hljs-keyword\">it</span> hello-world\ncannot enable tty mode <span class=\"hljs-keyword\">on</span> non tty input\n</code></pre>\n<p>To solve this problem I logged into <code>default</code> VM via <code>ssh</code> using <code>docker-machine</code>, then run container from there:</p>\n<pre><code class=\"lang-bash\">$ docker-machine ssh default\n                        <span class=\"hljs-comment\">##         .</span>\n                  <span class=\"hljs-comment\">## ## ##        ==</span>\n               <span class=\"hljs-comment\">## ## ## ## ##    ===</span>\n           /<span class=\"hljs-string\">\"\"\"\"\"\"</span><span class=\"hljs-string\">\"\"\"\"\"\"</span><span class=\"hljs-string\">\"\"\"\"\"\\___/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~\n           \\______ o           __/\n             \\    \\         __/\n              \\____\\_______/\n _                 _   ____     _            _\n| |__   ___   ___ | |_|___ \\ __| | ___   ___| | _____ _ __\n| '_ \\ / _ \\ / _ \\| __| __) / _` |/ _ \\ / __| |/ / _ \\ '__|\n| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   &lt;  __/ |\n|_.__/ \\___/ \\___/ \\__|_____\\__,_|\\___/ \\___|_|\\_\\___|_|\nBoot2Docker version 1.11.1, build HEAD : 7954f54 - Wed Apr 27 16:36:45 UTC 2016\nDocker version 1.11.1, build 5604cbe\ndocker@default:~$\ndocker@default:~$ docker run -i -t ubuntu bash\nroot@976029f4f84d:/#</span>\n</code></pre>\n<h2 id=\"cheat-sheet\">Cheat-sheet</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Command</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td><code>docker</code></td>\n<td>list available docker commands</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker ps</code></td>\n<td>shows running containers</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker ps -a</code></td>\n<td>shows all containers, including stopped ones</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker images</code></td>\n<td>lists images</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker run repo/image:tag</code></td>\n<td>runs a container</td>\n<td><code>docker run library/mongo:3.2.6</code></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker run --name &lt;name&gt; -d image</code></td>\n<td>runs a container in detached mode</td>\n<td><code>docker run --name db -d library/mongo:latest</code></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker run --name &lt;name&gt; -p locPort:contPort -d image</code></td>\n<td>runs a container in detached mode forwarding localport to containers port</td>\n<td><code>docker run --name webapp -p 80:3000 -d umidjons/webserver:1.3</code> <code>docker run -p 80:3000 -d umidjons/webserver:1.0 bash /var/www/startws.sh</code></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker run -i -t image cmd</code></td>\n<td>runs a container in interactive mode</td>\n<td><code>docker run -it ubuntu bash</code></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>`docker logs &lt;shortId</td>\n<td>name&gt;`</td>\n<td>shows container&#39;s last output once</td>\n<td><code>docker logs db</code></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>`docker logs -f &lt;shortId</td>\n<td>name&gt;`</td>\n<td>shows container&#39;s output in real time</td>\n<td><code>docker logs -f a23d91dd002f</code></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>`docker commit &lt;shortId</td>\n<td>name&gt; repo/image:tag`</td>\n<td>commits container changes as an image</td>\n<td><code>docker commit a23d91dd002f umidjons/myapp:1.0</code></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>`docker stop &lt;shortId</td>\n<td>name&gt;`</td>\n<td>stops container, useful to stop detached container</td>\n<td><code>docker stop a23d91dd002f</code></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker exec -i -t repo/image:tag cmd</code></td>\n<td>start a new process for container, when exits doesn&#39;t stops main container with PID 1</td>\n<td><code>docker exec -i -t ubuntu:latest bash</code></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>`docker rm &lt;shortId</td>\n<td>name&gt;`</td>\n<td>removes a container</td>\n<td><code>docker rm db</code></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker tag image:tag repo/user/image:tag</code></td>\n<td>tags image with new tags</td>\n<td><code>docker tag myubuntu:1.0 umidjons/webserver:1.0</code> <code>docker tag 7d9495d03763 umidjons/app-main:latest</code></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker push user/image:tag</code></td>\n<td>pushes image to docker hub</td>\n<td><code>docker push umidjons/webserver:1.0</code></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>`docker inspect &lt;shortId</td>\n<td>name&gt;`</td>\n<td>inspects container, information about container, image</td>\n<td><code>docker inspect a23d91dd002f</code> <code>docker inspect myapp</code> `docker inspect db</td>\n<td>grep IPAddress`</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker-machine</code></td>\n<td>show usage and available command</td>\n<td><code>docker-machine</code></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker-machine ip &lt;vmname&gt;</code></td>\n<td>find out VM&#39;s IP address</td>\n<td><code>docker-machine ip default</code></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker-machine ls</code></td>\n<td>list available VMs</td>\n<td><code>docker-machine ls</code></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker-machine status &lt;vmname&gt;</code></td>\n<td>find out VM&#39;s status</td>\n<td><code>docker-machine status default</code></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker-machine env &lt;vmname&gt;</code></td>\n<td>set environment variables for the specified machine</td>\n<td><code>docker-machine env default</code></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker save -o imagefullpath.tar image</code></td>\n<td>saves images into specified location in <code>tar</code> archive format</td>\n<td><code>docker save -o /c/Users/umidjons/Images/my_webserver_1.0.tar umidjons/webserver:1.0</code></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker load -i image.tar</code></td>\n<td>loads saved image into docker</td>\n<td><code>docker load -i my_webserver_1.0.tar</code></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker build -t image:tag path</code></td>\n<td>build image according to Dockerfile located in path</td>\n<td><code>docker build -t umidjons/myapp:latest .</code></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker run -v locPath:contPath image cmd</code></td>\n<td>mounts local path to the specified container&#39;s path</td>\n<td><code>docker run -i -t -p 3000:3000 -v /c/Users/umidjons/projects/myapp/:/var/www/myapp umidjons/myapp:4.7 node /var/www/myapp/server.js</code></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker network ls</code></td>\n<td>list available networks</td>\n<td><code>docker network ls</code></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker network inspect &lt;networkName&gt;</code></td>\n<td>inspects given network (shows information about that network)</td>\n<td><code>docker network inspect mynetwork</code></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker network create --driver bridge &lt;networkName&gt;</code></td>\n<td>creates isolated network</td>\n<td><code>docker network create --driver bridge mynetwork</code></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker run -d --net=&lt;networkName&gt; --name &lt;containerName&gt; &lt;image&gt;</code></td>\n<td>run container with specifying network</td>\n<td><code>docker run -d --net=mynetwork --name mymongodb mongo</code> <code>docker run -d --net=mynetwork --name nodeapp -p 80:3000 node</code> from now inside <code>nodeapp</code> container we can use host name <code>mymongodb</code> as they are in the same network</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker-compose build</code></td>\n<td>build containers from <code>docker-compose.yml</code> file</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker-compose up</code></td>\n<td>up built containers according to <code>docker-compose.yml</code></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker-compose up -d</code></td>\n<td>up built containers in daemon mode according to <code>docker-compose.yml</code></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker-compose down</code></td>\n<td>tear down (also removes containers) running containers</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker-compose ps</code></td>\n<td>show information about running containers</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><code>docker-compose logs</code></td>\n<td>show logs from all running containers</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>Run docker on external 8080 port, map that port into internal 3000 port on the container, create volum that points current directory into containers /var/www directory, then with -w set working directory in the container to /var/www, run node image with command node app.js:\n<code>docker run -p 8080:3000 -v $(pwd):/var/www -w &quot;/var/www&quot; node:6 node app.js</code></p>\n"},{"html_url":"https://gist.github.com/5cf2a23cc1ff80ca4c92cebd22502fd9","description":"Change file attribute","files":["https://gist.githubusercontent.com/umidjons/5cf2a23cc1ff80ca4c92cebd22502fd9/raw/bbe9590287f71e76ce14b51aeaa74d51fc666b22/change-file-attribute.md"],"content":"Change File Attribute\n===\n\n```bash\nsudo apt-get install libimage-exiftool-perl\nexiftool -Title=\"Some title\" -Author=\"Me\" myfile.pdf\n```","html":"<h1 id=\"change-file-attribute\">Change File Attribute</h1>\n<pre><code class=\"lang-bash\">sudo apt-<span class=\"hljs-built_in\">get</span> install libimage-exiftool-<span class=\"hljs-keyword\">perl</span>\nexiftool -Title=<span class=\"hljs-string\">\"Some title\"</span> -Author=<span class=\"hljs-string\">\"Me\"</span> myfile.pdf\n</code></pre>\n"},{"html_url":"https://gist.github.com/47f616867cf35592512e4c52a9259fc6","description":"Simple microservice with Seneca and Express","files":["https://gist.githubusercontent.com/umidjons/47f616867cf35592512e4c52a9259fc6/raw/7603d46cb5c3e1e1edd8a65b385c86e8daac36ae/microservice-seneca-express.md"],"content":"# Simple microservice with Seneca and Express\n\n## Microservice implementation\n\n### Installing microservice dependencies\n\n```bash\nmkdir mathms\ncd mathms\nnpm init\nnpm i seneca -S\n```\n\n### Seneca 'Math' plugin\n\nFile `mathms/MathPlugin.js`:\n\n```javascript\nmodule.exports = function MathPlugin(options) {\n    this.add('role:math,cmd:sum', sum);\n    this.add('role:math,cmd:product', product);\n\n    // middleware for 'role:math,*' pins, that prepares values and calls actions themselves\n    this.wrap('role:math', function (msg, respond) {\n        msg.left = Number(msg.left).valueOf();\n        msg.right = Number(msg.right).valueOf();\n\n        // execute previously matched action\n        this.prior(msg, respond);\n    });\n\n    function sum(msg, respond) {\n        respond(null, {answer: msg.left + msg.right});\n    }\n\n    function product(msg, respond) {\n        respond(null, {answer: msg.left * msg.right});\n    }\n};\n```\n\n### Seneca 'Math' microservice\n\nFile `mathms/MathMS.js`:\n\n```javascript\nrequire('seneca')()\n    .use('MathPlugin') // equal to .use(require('./MathPlugin'))\n    .listen({\n        type: 'tcp', // communicate via TCP\n        pin: 'role:math' // listen only this pin pattern\n    });\n```\n\n### Running the microservice\n\nRun our `mathms/MathMS.js` with the following command:\n```bash\nnode MathMS\n```\n\nSample output looks like to this:\n\n```\n2016-04-26T08:21:53.579Z iqpuwz8vca8t/1461658913554/2348/- INFO hello   Seneca/2.0.1/iqpuwz8vca8t/1461658913554/2348/-\n2016-04-26T08:21:54.924Z iqpuwz8vca8t/1461658913554/2348/- INFO listen  {type:tcp,pin:role:math}\n```\n\n## Express application implementation\n\n### Installing application dependencies\n\n```bash\nmkdir myapp\ncd myapp\nnpm init\nnpm i express body-parser seneca -S\n```\n\n### Seneca 'MathAPI' plugin\n\nFile `myapp/MathAPI.js`:\n```javascript\nmodule.exports = function MathAPI(options) {\n\n    // valid operations list\n    var valid_ops = {sum: 'sum', product: 'product'};\n\n    this.add('role:api,path:calculate', function (msg, respond) {\n        // talking to the microservice\n        this.act('role:math', {\n            cmd: valid_ops[msg.operation],\n            left: msg.left,\n            right: msg.right\n        }, respond);\n    });\n\n    // plugin initialization\n    this.add('init:MathAPI', function (msg, respond) {\n        // http://localhost:3000/api/calculate/sum?left=2&right=3\n        //                       ^      ^       ^   ^-------^\n        //                  prefix action operation arguments\n        this.act('role:web', {\n            use: {\n                prefix: '/api',\n                pin: 'role:api,path:*',\n                map: {\n                    calculate: {GET: true, suffix: '/:operation'}\n                }\n            }\n        }, respond);\n    });\n};\n```\n\n### Express application\n\nFile `myapp/server.js`:\n\n```javascript\nvar seneca = require('seneca')()\n    .use('MathAPI') // equal to .use(require('./MathAPI'))\n    .client({type: 'tcp', pin: 'role:math'});\n\nvar app = require('express')()\n    .use(require('body-parser').json())\n    .use(seneca.export('web'))\n    .listen(3000);\n```\n\n### Running the express application\n\n```bash\nnode server.js\n```\n\nSample output looks like to this:\n\n```\n2016-04-26T08:24:40.571Z obe5f3hoxbu4/1461659080545/7820/- INFO hello   Seneca/2.0.1/obe5f3hoxbu4/1461659080545/7820/-\n2016-04-26T08:24:40.944Z obe5f3hoxbu4/1461659080545/7820/- INFO client  {type:tcp,pin:role:math}\n```\n\n### Testing express application\n\nSend GET requests to the following URLs or open them in a web browser:\n* `http://localhost:3000/api/calculate/sum?left=2&right=3` outputs `{answer: 5}`\n* `http://localhost:3000/api/calculate/product?left=2&right=3` outputs `{answer: 6}`\n\n## Resources\n* [Seneca](http://senecajs.org/)\n* [Seneca Web Server Integration example](http://senecajs.org/get-started/#web-server-integration)\n* [Express](http://expressjs.com/)","html":"<h1 id=\"simple-microservice-with-seneca-and-express\">Simple microservice with Seneca and Express</h1>\n<h2 id=\"microservice-implementation\">Microservice implementation</h2>\n<h3 id=\"installing-microservice-dependencies\">Installing microservice dependencies</h3>\n<pre><code class=\"lang-bash\"><span class=\"hljs-keyword\">mkdir</span> mathms\n<span class=\"hljs-keyword\">cd</span> mathms\nnpm init\nnpm i seneca -<span class=\"hljs-built_in\">S</span>\n</code></pre>\n<h3 id=\"seneca-math-plugin\">Seneca &#39;Math&#39; plugin</h3>\n<p>File <code>mathms/MathPlugin.js</code>:</p>\n<pre><code class=\"lang-javascript\"><span class=\"hljs-built_in\">module</span>.exports = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">MathPlugin</span>(<span class=\"hljs-params\">options</span>) </span>{\n    <span class=\"hljs-keyword\">this</span>.add(<span class=\"hljs-string\">'role:math,cmd:sum'</span>, sum);\n    <span class=\"hljs-keyword\">this</span>.add(<span class=\"hljs-string\">'role:math,cmd:product'</span>, product);\n\n    <span class=\"hljs-comment\">// middleware for 'role:math,*' pins, that prepares values and calls actions themselves</span>\n    <span class=\"hljs-keyword\">this</span>.wrap(<span class=\"hljs-string\">'role:math'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">msg, respond</span>) </span>{\n        msg.left = <span class=\"hljs-built_in\">Number</span>(msg.left).valueOf();\n        msg.right = <span class=\"hljs-built_in\">Number</span>(msg.right).valueOf();\n\n        <span class=\"hljs-comment\">// execute previously matched action</span>\n        <span class=\"hljs-keyword\">this</span>.prior(msg, respond);\n    });\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">sum</span>(<span class=\"hljs-params\">msg, respond</span>) </span>{\n        respond(<span class=\"hljs-literal\">null</span>, {<span class=\"hljs-attr\">answer</span>: msg.left + msg.right});\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">product</span>(<span class=\"hljs-params\">msg, respond</span>) </span>{\n        respond(<span class=\"hljs-literal\">null</span>, {<span class=\"hljs-attr\">answer</span>: msg.left * msg.right});\n    }\n};\n</code></pre>\n<h3 id=\"seneca-math-microservice\">Seneca &#39;Math&#39; microservice</h3>\n<p>File <code>mathms/MathMS.js</code>:</p>\n<pre><code class=\"lang-javascript\"><span class=\"hljs-selector-tag\">require</span>(<span class=\"hljs-string\">'seneca'</span>)()\n    <span class=\"hljs-selector-class\">.use</span>(<span class=\"hljs-string\">'MathPlugin'</span>) <span class=\"hljs-comment\">// equal to .use(require('./MathPlugin'))</span>\n    <span class=\"hljs-selector-class\">.listen</span>({\n        <span class=\"hljs-attribute\">type</span>: <span class=\"hljs-string\">'tcp'</span>, <span class=\"hljs-comment\">// communicate via TCP</span>\n        <span class=\"hljs-attribute\">pin</span>: <span class=\"hljs-string\">'role:math'</span> <span class=\"hljs-comment\">// listen only this pin pattern</span>\n    });\n</code></pre>\n<h3 id=\"running-the-microservice\">Running the microservice</h3>\n<p>Run our <code>mathms/MathMS.js</code> with the following command:</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">MathMS</span>\n</code></pre>\n<p>Sample output looks like to this:</p>\n<pre><code><span class=\"hljs-number\">2016</span><span class=\"hljs-number\">-04</span><span class=\"hljs-number\">-26</span><span class=\"hljs-string\">T08:</span><span class=\"hljs-number\">21</span>:<span class=\"hljs-number\">53.579</span>Z iqpuwz8vca8t<span class=\"hljs-regexp\">/1461658913554/</span><span class=\"hljs-number\">2348</span><span class=\"hljs-regexp\">/- INFO hello   Seneca/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-number\">.1</span><span class=\"hljs-regexp\">/iqpuwz8vca8t/</span><span class=\"hljs-number\">1461658913554</span><span class=\"hljs-regexp\">/2348/</span>-\n<span class=\"hljs-number\">2016</span><span class=\"hljs-number\">-04</span><span class=\"hljs-number\">-26</span><span class=\"hljs-string\">T08:</span><span class=\"hljs-number\">21</span>:<span class=\"hljs-number\">54.924</span>Z iqpuwz8vca8t<span class=\"hljs-regexp\">/1461658913554/</span><span class=\"hljs-number\">2348</span>/- INFO listen  {<span class=\"hljs-string\">type:</span>tcp,<span class=\"hljs-string\">pin:</span><span class=\"hljs-string\">role:</span>math}\n</code></pre><h2 id=\"express-application-implementation\">Express application implementation</h2>\n<h3 id=\"installing-application-dependencies\">Installing application dependencies</h3>\n<pre><code class=\"lang-bash\"><span class=\"hljs-keyword\">mkdir</span> myapp\n<span class=\"hljs-keyword\">cd</span> myapp\nnpm init\nnpm i express body-parser seneca -<span class=\"hljs-built_in\">S</span>\n</code></pre>\n<h3 id=\"seneca-mathapi-plugin\">Seneca &#39;MathAPI&#39; plugin</h3>\n<p>File <code>myapp/MathAPI.js</code>:</p>\n<pre><code class=\"lang-javascript\">module.exports = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">MathAPI</span><span class=\"hljs-params\">(options)</span> </span>{\n\n    <span class=\"hljs-comment\">// valid operations list</span>\n    <span class=\"hljs-keyword\">var</span> valid_ops = {sum: <span class=\"hljs-string\">'sum'</span>, product: <span class=\"hljs-string\">'product'</span>};\n\n    <span class=\"hljs-keyword\">this</span>.add(<span class=\"hljs-string\">'role:api,path:calculate'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(msg, respond)</span> </span>{\n        <span class=\"hljs-comment\">// talking to the microservice</span>\n        <span class=\"hljs-keyword\">this</span>.act(<span class=\"hljs-string\">'role:math'</span>, {\n            cmd: valid_ops[msg.operation],\n            left: msg.left,\n            right: msg.right\n        }, respond);\n    });\n\n    <span class=\"hljs-comment\">// plugin initialization</span>\n    <span class=\"hljs-keyword\">this</span>.add(<span class=\"hljs-string\">'init:MathAPI'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(msg, respond)</span> </span>{\n        <span class=\"hljs-comment\">// http://localhost:3000/api/calculate/sum?left=2&amp;right=3</span>\n        <span class=\"hljs-comment\">//                       ^      ^       ^   ^-------^</span>\n        <span class=\"hljs-comment\">//                  prefix action operation arguments</span>\n        <span class=\"hljs-keyword\">this</span>.act(<span class=\"hljs-string\">'role:web'</span>, {\n            <span class=\"hljs-keyword\">use</span>: {\n                prefix: <span class=\"hljs-string\">'/api'</span>,\n                pin: <span class=\"hljs-string\">'role:api,path:*'</span>,\n                map: {\n                    calculate: {GET: <span class=\"hljs-literal\">true</span>, suffix: <span class=\"hljs-string\">'/:operation'</span>}\n                }\n            }\n        }, respond);\n    });\n};\n</code></pre>\n<h3 id=\"express-application\">Express application</h3>\n<p>File <code>myapp/server.js</code>:</p>\n<pre><code class=\"lang-javascript\"><span class=\"hljs-keyword\">var</span> seneca = <span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'seneca'</span>)()\n    .<span class=\"hljs-keyword\">use</span>(<span class=\"hljs-string\">'MathAPI'</span>) <span class=\"hljs-comment\">// equal to .use(require('./MathAPI'))</span>\n    .client({type: <span class=\"hljs-string\">'tcp'</span>, pin: <span class=\"hljs-string\">'role:math'</span>});\n\n<span class=\"hljs-keyword\">var</span> app = <span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'express'</span>)()\n    .<span class=\"hljs-keyword\">use</span>(<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'body-parser'</span>).json())\n    .<span class=\"hljs-keyword\">use</span>(seneca.export(<span class=\"hljs-string\">'web'</span>))\n    .listen(<span class=\"hljs-number\">3000</span>);\n</code></pre>\n<h3 id=\"running-the-express-application\">Running the express application</h3>\n<pre><code class=\"lang-bash\"><span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">server</span>.js\n</code></pre>\n<p>Sample output looks like to this:</p>\n<pre><code><span class=\"hljs-number\">2016</span><span class=\"hljs-number\">-04</span><span class=\"hljs-number\">-26</span><span class=\"hljs-string\">T08:</span><span class=\"hljs-number\">24</span>:<span class=\"hljs-number\">40.571</span>Z obe5f3hoxbu4<span class=\"hljs-regexp\">/1461659080545/</span><span class=\"hljs-number\">7820</span><span class=\"hljs-regexp\">/- INFO hello   Seneca/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-number\">.1</span><span class=\"hljs-regexp\">/obe5f3hoxbu4/</span><span class=\"hljs-number\">1461659080545</span><span class=\"hljs-regexp\">/7820/</span>-\n<span class=\"hljs-number\">2016</span><span class=\"hljs-number\">-04</span><span class=\"hljs-number\">-26</span><span class=\"hljs-string\">T08:</span><span class=\"hljs-number\">24</span>:<span class=\"hljs-number\">40.944</span>Z obe5f3hoxbu4<span class=\"hljs-regexp\">/1461659080545/</span><span class=\"hljs-number\">7820</span>/- INFO client  {<span class=\"hljs-string\">type:</span>tcp,<span class=\"hljs-string\">pin:</span><span class=\"hljs-string\">role:</span>math}\n</code></pre><h3 id=\"testing-express-application\">Testing express application</h3>\n<p>Send GET requests to the following URLs or open them in a web browser:</p>\n<ul>\n<li><code>http://localhost:3000/api/calculate/sum?left=2&amp;right=3</code> outputs <code>{answer: 5}</code></li>\n<li><code>http://localhost:3000/api/calculate/product?left=2&amp;right=3</code> outputs <code>{answer: 6}</code></li>\n</ul>\n<h2 id=\"resources\">Resources</h2>\n<ul>\n<li><a href=\"http://senecajs.org/\">Seneca</a></li>\n<li><a href=\"http://senecajs.org/get-started/#web-server-integration\">Seneca Web Server Integration example</a></li>\n<li><a href=\"http://expressjs.com/\">Express</a></li>\n</ul>\n"},{"html_url":"https://gist.github.com/30fe9558b5dff6558a91a5d46b6abd00","description":"Examples of using readline module","files":["https://gist.githubusercontent.com/umidjons/30fe9558b5dff6558a91a5d46b6abd00/raw/6375fe3f0f47206de37374e98856fedd91b5bbe5/readline-example.md"],"content":"Dummy examples for using `readline` module\n===\n\nIteratively accept data from a user until one of the `exit|close|quit|bye` \ncommand reaches.\n\nFile `example1.js`:\n```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nrl.setPrompt('task>');\n\n// show prompt\nrl.prompt();\n\nrl\n    .on('line', (line) => {\n        switch (line.trim()) {\n            case 'exit':\n            case 'quit':\n            case 'close':\n            case 'bye':\n                rl.close();\n                break;\n            default:\n                console.log('answer>', line.trim());\n                break;\n        }\n\n        // show prompt after each input\n        rl.prompt();\n    })\n    .on('close', () => {\n        console.log('Have a great day!');\n        process.exit(0);\n    });\n```\n\nSample output:\n```\n$ node example1.js\ntask>1\nanswer> 1\ntask>2\nanswer> 2\ntask>3\nanswer> 3\ntask>exit\nHave a great day!\n```","html":"<h1 id=\"dummy-examples-for-using-readline-module\">Dummy examples for using <code>readline</code> module</h1>\n<p>Iteratively accept data from a user until one of the <code>exit|close|quit|bye</code> \ncommand reaches.</p>\n<p>File <code>example1.js</code>:</p>\n<pre><code class=\"lang-javascript\"><span class=\"hljs-keyword\">const</span> readline = require(<span class=\"hljs-string\">'readline'</span>);\n\n<span class=\"hljs-keyword\">const</span> rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nrl.setPrompt(<span class=\"hljs-string\">'task&gt;'</span>);\n\n<span class=\"hljs-comment\">// show prompt</span>\nrl.prompt();\n\nrl\n    .on(<span class=\"hljs-string\">'line'</span>, (<span class=\"hljs-built_in\">line</span>) =&gt; {\n        <span class=\"hljs-keyword\">switch</span> (<span class=\"hljs-built_in\">line</span>.<span class=\"hljs-built_in\">trim</span>()) {\n            <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'exit'</span>:\n            <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'quit'</span>:\n            <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'close'</span>:\n            <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'bye'</span>:\n                rl.close();\n                <span class=\"hljs-keyword\">break</span>;\n            <span class=\"hljs-keyword\">default</span>:\n                console.<span class=\"hljs-built_in\">log</span>(<span class=\"hljs-string\">'answer&gt;'</span>, <span class=\"hljs-built_in\">line</span>.<span class=\"hljs-built_in\">trim</span>());\n                <span class=\"hljs-keyword\">break</span>;\n        }\n\n        <span class=\"hljs-comment\">// show prompt after each input</span>\n        rl.prompt();\n    })\n    .on(<span class=\"hljs-string\">'close'</span>, () =&gt; {\n        console.<span class=\"hljs-built_in\">log</span>(<span class=\"hljs-string\">'Have a great day!'</span>);\n        process.<span class=\"hljs-built_in\">exit</span>(<span class=\"hljs-number\">0</span>);\n    });\n</code></pre>\n<p>Sample output:</p>\n<pre><code>$ node example1.js\ntask&gt;<span class=\"hljs-number\">1</span>\nanswer&gt; <span class=\"hljs-number\">1</span>\ntask&gt;<span class=\"hljs-number\">2</span>\nanswer&gt; <span class=\"hljs-number\">2</span>\ntask&gt;<span class=\"hljs-number\">3</span>\nanswer&gt; <span class=\"hljs-number\">3</span>\ntask&gt;<span class=\"hljs-keyword\">exit</span>\nHave a great day!\n</code></pre>"},{"html_url":"https://gist.github.com/c136e7d036af2d7fb8d012401d8d8187","description":"Very dummy Express app and Mocha test for it","files":["https://gist.githubusercontent.com/umidjons/c136e7d036af2d7fb8d012401d8d8187/raw/73ef6f4528e5170c42eded1656e22246e65dbc95/dummy-mocha-test.md"],"content":"# Very dummy Express app and Mocha test for it\n\n```bash\nnpm init\nnpm i express -S\nnpm i mocha superagent expect.js --save-dev\n```\n\nFile `package.json`:\n```json\n{                         \n  \"name\": \"app1\",         \n  \"version\": \"1.0.0\",     \n  \"description\": \"\",      \n  \"main\": \"app.js\",       \n  \"scripts\": {            \n    \"test\": \"mocha tests\"  \n  },                      \n  \"author\": \"\",           \n  \"license\": \"ISC\",       \n  \"dependencies\": {       \n    \"express\": \"^4.13.4\"  \n  },                      \n  \"devDependencies\": {    \n    \"expect.js\": \"^0.3.1\",\n    \"mocha\": \"^2.4.5\",    \n    \"superagent\": \"^1.8.3\"\n  }                       \n}                         \n```\n\nFile `app.js`:\n```javascript\nvar http = require('http');\nvar express = require('express');\nvar app = express();\n\n// set application port\napp.set('port', 3000);\n\n// respond to all GET request with Hello World string\napp.get('*', function(req, res){\n  res.send('Hello World');\n});\n\n// create a server\nvar server = http.createServer(app);\n\n// implement necessary functions to run app as a module\n\nvar boot = function(){\n  server.listen(app.get('port'), function(){\n    console.log('Listening on port ' + app.get('port'));\n  });\n}\n\nvar shutdown = function(){\n  server.close();\n}\n\n// run an app as a standalone program or export it as a module\nif (require.main == module) {\n  boot();\n} else {\n  console.log('Running app as a module');\n  exports.boot = boot;\n  exports.shutdown = shutdown;\n  exports.port = app.get('port');\n}\n```\n\nFile `tests/index.js`:\n```javascript\nvar app = require('../app');\nvar superagent = require('superagent');\nvar expect = require('expect.js');\n\ndescribe('server', function(){\n\n  before(function(){\n    app.boot();\n  });\n\n  describe('homepage', function(){\n\n    it('should respond to GET', function(done){\n      superagent\n        .get('http://localhost:' + app.port)\n        .end(function(err, res){\n\t        expect(res.status).to.equal(200);\n\t        done();\n\t    });\n    });\n\n  });\n\n  after(function(){\n    app.shutdown();\n  });\n\n});\n\n```\n\nNow we can run test with:\n```bash\nmocha tests\n```\nor\n```bash\nnpm test\n```\n\n","html":"<h1 id=\"very-dummy-express-app-and-mocha-test-for-it\">Very dummy Express app and Mocha test for it</h1>\n<pre><code class=\"lang-bash\">npm init\nnpm <span class=\"hljs-selector-tag\">i</span> express -S\nnpm <span class=\"hljs-selector-tag\">i</span> mocha superagent expect<span class=\"hljs-selector-class\">.js</span> --save-dev\n</code></pre>\n<p>File <code>package.json</code>:</p>\n<pre><code class=\"lang-json\">{                         \n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"app1\"</span>,         \n  <span class=\"hljs-attr\">\"version\"</span>: <span class=\"hljs-string\">\"1.0.0\"</span>,     \n  <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"\"</span>,      \n  <span class=\"hljs-attr\">\"main\"</span>: <span class=\"hljs-string\">\"app.js\"</span>,       \n  <span class=\"hljs-attr\">\"scripts\"</span>: {            \n    <span class=\"hljs-attr\">\"test\"</span>: <span class=\"hljs-string\">\"mocha tests\"</span>  \n  },                      \n  <span class=\"hljs-attr\">\"author\"</span>: <span class=\"hljs-string\">\"\"</span>,           \n  <span class=\"hljs-attr\">\"license\"</span>: <span class=\"hljs-string\">\"ISC\"</span>,       \n  <span class=\"hljs-attr\">\"dependencies\"</span>: {       \n    <span class=\"hljs-attr\">\"express\"</span>: <span class=\"hljs-string\">\"^4.13.4\"</span>  \n  },                      \n  <span class=\"hljs-attr\">\"devDependencies\"</span>: {    \n    <span class=\"hljs-attr\">\"expect.js\"</span>: <span class=\"hljs-string\">\"^0.3.1\"</span>,\n    <span class=\"hljs-attr\">\"mocha\"</span>: <span class=\"hljs-string\">\"^2.4.5\"</span>,    \n    <span class=\"hljs-attr\">\"superagent\"</span>: <span class=\"hljs-string\">\"^1.8.3\"</span>\n  }                       \n}\n</code></pre>\n<p>File <code>app.js</code>:</p>\n<pre><code class=\"lang-javascript\"><span class=\"hljs-keyword\">var</span> http = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'http'</span>);\n<span class=\"hljs-keyword\">var</span> express = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'express'</span>);\n<span class=\"hljs-keyword\">var</span> app = express();\n\n<span class=\"hljs-comment\">// set application port</span>\napp.set(<span class=\"hljs-string\">'port'</span>, <span class=\"hljs-number\">3000</span>);\n\n<span class=\"hljs-comment\">// respond to all GET request with Hello World string</span>\napp.get(<span class=\"hljs-string\">'*'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">req, res</span>)</span>{\n  res.send(<span class=\"hljs-string\">'Hello World'</span>);\n});\n\n<span class=\"hljs-comment\">// create a server</span>\n<span class=\"hljs-keyword\">var</span> server = http.createServer(app);\n\n<span class=\"hljs-comment\">// implement necessary functions to run app as a module</span>\n\n<span class=\"hljs-keyword\">var</span> boot = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n  server.listen(app.get(<span class=\"hljs-string\">'port'</span>), <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Listening on port '</span> + app.get(<span class=\"hljs-string\">'port'</span>));\n  });\n}\n\n<span class=\"hljs-keyword\">var</span> shutdown = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n  server.close();\n}\n\n<span class=\"hljs-comment\">// run an app as a standalone program or export it as a module</span>\n<span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">require</span>.main == <span class=\"hljs-built_in\">module</span>) {\n  boot();\n} <span class=\"hljs-keyword\">else</span> {\n  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Running app as a module'</span>);\n  exports.boot = boot;\n  exports.shutdown = shutdown;\n  exports.port = app.get(<span class=\"hljs-string\">'port'</span>);\n}\n</code></pre>\n<p>File <code>tests/index.js</code>:</p>\n<pre><code class=\"lang-javascript\">var app = require('../app')<span class=\"hljs-comment\">;</span>\nvar superagent = require('superagent')<span class=\"hljs-comment\">;</span>\nvar expect = require('expect.js')<span class=\"hljs-comment\">;</span>\n\ndescribe('server', function(){\n\n  before(<span class=\"hljs-name\">function</span>(){\n    app.boot()<span class=\"hljs-comment\">;</span>\n  })<span class=\"hljs-comment\">;</span>\n\n  describe('homepage', function(){\n\n    it('should respond to GET', function(<span class=\"hljs-name\">done</span>){\n      superagent\n        .get('http<span class=\"hljs-symbol\">://localhost</span>:' + app.port)\n        .end(<span class=\"hljs-name\">function</span>(<span class=\"hljs-name\">err</span>, res){\n            expect(<span class=\"hljs-name\">res</span>.status).to.equal(<span class=\"hljs-number\">200</span>)<span class=\"hljs-comment\">;</span>\n            done()<span class=\"hljs-comment\">;</span>\n        })<span class=\"hljs-comment\">;</span>\n    })<span class=\"hljs-comment\">;</span>\n\n  })<span class=\"hljs-comment\">;</span>\n\n  after(<span class=\"hljs-name\">function</span>(){\n    app.shutdown()<span class=\"hljs-comment\">;</span>\n  })<span class=\"hljs-comment\">;</span>\n\n})<span class=\"hljs-comment\">;</span>\n</code></pre>\n<p>Now we can run test with:</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-attribute\">mocha tests</span>\n</code></pre>\n<p>or</p>\n<pre><code class=\"lang-bash\">npm <span class=\"hljs-built_in\">test</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/57e0f672106feab544f246cf705f3e4f","description":"MEAN application example: step by step guide","files":["https://gist.githubusercontent.com/umidjons/57e0f672106feab544f246cf705f3e4f/raw/87958717f117d509fc23e365376e51d84640a7b1/mean-app-step-by-step.md"],"content":"## Creating MEAN application: step by step guide\n\n### Table of Content\n\n* [Project structure](#project-structure)\n* [Installing prerequisites](#installing-prerequisites)\n* [Creating server](#creating-server)\n* [Render pages with Nunjucks](#render-pages-with-nunjucks)\n* [Middleware to render *.html requests with Nunjucks](#middleware-to-render-html-requests-with-nunjucks)\n* [Accept data from users](#accept-data-from-users)\n* [Work with MongoDB via Mongoose](#work-with-mongodb-via-mongoose)\n* [Create Patient model](#create-patient-model)\n* [Creating POST /patient route](#creating-post-patient-route)\n* [Creating GET /patient route](#creating-get-patient-route)\n* [Adjusting home page to list available operations](#adjusting-home-page-to-list-available-operations)\n* [Routers](#routers)\n* [Creating Patient router](#creating-patient-router)\n* [Using Patient router](#using-patient-router)\n* [Integrating AngularJS](#integrating-angularjs)\n* [Integrating $resource](#integrating-resource)\n* [Retrieving list of patients](#retrieving-list-of-patients)\n* [Create new patient](#create-new-patient)\n\n### Project structure\n\nCreate root folder for our application:\n```bash\nmkdir myapp\ncd myapp\n```\n\nCreate folder for models & routes:\n```bash\nmkdir models\nmkdir routes\n```\n\nCreate folder for frontend:\n```bash\nmkdir public\nmkdir public/lib\nmkdir public/src\nmkdir public/src/js\nmkdir public/src/css\nmkdir public/src/images\nmkdir public/views\n```\n\n### Installing prerequisites\n\nInitialize Node project and install necessary modules:\n```bash\nnpm init\nnpm i express nunjucks mongoose body-parser -S\n```\n\n### Creating server\n\nCreate `index.js` file.\n\n```js\nvar express = require('express');\nvar app = express();\n\napp.get('/', function (req, res) {\n    res.send('Hello World!');\n});\n\napp.listen(3000, function () {\n    console.log('Listening http://localhost:3000...');\n});\n```\n\nRun it on the console with `node index`.\nOn the console you should see text:\n```\nListening http://localhost:3000...\n```\n\nNavigate to the http://localhost:3000 on the browser.\nAs response you should see the text `Hello World!`.\n\n### Render pages with Nunjucks\n\nAdd `'use strict'` into beginning of the `index.js` to enable strict mode.\n\nInclude `nunjucks` to use template engine in views.\n```js\nvar nunjucks = require('nunjucks');\n```\n\nInclude built-in `path` module to work with paths:\n```js\nvar path = require('path');\n```\n\nSet views path to `public/views`:\n```js\nconst VIEW_PATH = path.join(__dirname, 'public', 'views');\n```\n\nConfigure nunjucks, bind it with our express app and set view engine to it:\n```js\n// configure Nunjucks templating\nnunjucks.configure(\n    VIEW_PATH, // tell nunjucks, that all views are in views/ folder\n    {express: app} // tell nunjucks, that this is express app\n);\n\n// set view engine to custom extension - njk\napp.set('view engine', 'njk');\n```\n\nChange handler for root `/` to the following code:\n```js\napp.get('/', function (req, res) {\n    res.render('main', {myname: 'John Doe'});\n});\n```\n\nIn the above code we are rendering `main.njk` view with `myname='John Doe'`.\n\nCreate `public/views/main.njk` view with the following content:\n```html\n<!doctype html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>My Application</title>\n</head>\n<body>\nHello, {{ myname }}!\n</body>\n</html>\n```\n\nRestart application and navigate to the home page in the browser: `http://localhost:3000/`.\n\nYou should see the text `Hello, John Doe!`.\n\n### Middleware to render *.html requests with Nunjucks\n\nCreate middleware to render all `*.html` requests with `*.njk` files:\n```js\napp.use('*.html', function (req, res) { // render all html files with Nunjucks\n\n    // show original URL in the console\n    console.log('Original URL: %s', req.originalUrl);\n\n    // generate path to view\n    let view_path = path.join(VIEW_PATH, req.originalUrl);\n\n    // replace *.html to *.njk\n    view_path = view_path.replace(/\\..+/, '.njk');\n\n    console.log('File to render: %s', view_path);\n\n    // render template\n    res.render(view_path);\n});\n```\n\nNow, if we navigate to the page `http://localhost:3000/patient.html`, then node will render the view `public/views/patient.njk` with `Nunjucks`.\n\n### Content of `index.js`\n\nNow our `index.js`:\n```js\n'use strict';\n\nvar express = require('express');\nvar app = express();\nvar nunjucks = require('nunjucks');\nvar path = require('path');\n\nconst VIEW_PATH = path.join(__dirname, 'public', 'views');\n\n// configure Nunjucks templating\nnunjucks.configure(\n    VIEW_PATH, // tell nunjucks, that all views are in views/ folder\n    {express: app} // tell nunjucks, that this is express app\n);\n\n// set view engine to custom extension - njk\napp.set('view engine', 'njk');\n\n\napp.use('*.html', function (req, res) { // render all html files with Nunjucks\n\n    // show original URL in the console\n    console.log('Original URL: %s', req.originalUrl);\n\n    // generate path to view\n    let view_path = path.join(VIEW_PATH, req.originalUrl);\n\n    // replace *.html to *.njk\n    view_path = view_path.replace(/\\..+$/, '.njk');\n\n    console.log('File to render: %s', view_path);\n\n    // render template\n    res.render(view_path);\n});\n\n\napp.get('/', function (req, res) {\n    res.render('main', {myname: 'John Doe'});\n});\n\napp.listen(3000, function () {\n    console.log('Listening http://localhost:3000...');\n});\n```\n\n### Accept data from users\n\nInclude `body-parser` module into our application. It parses request body and makes them available via `req.body`.\n```js\nvar bodyParser = require('body-parser');\n\napp.use(bodyParser.urlencoded({extended: false}));\n```\n\nAlso change root route handler to the following:\n```js\napp.get('/', function (req, res) {\n    res.render('main');\n});\n```\n\nChange view `main.njk` to accept data from a user:\n```html\n<!doctype html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>My Application</title>\n</head>\n<body>\n\n<form action=\"/patient/create\" method=\"post\">\n    <label>\n        First Name: <input type=\"text\" name=\"firstName\">\n    </label>\n    <label>\n        Last Name: <input type=\"text\" name=\"lastName\">\n    </label>\n    <button>Create New Patient</button>\n</form>\n\n</body>\n</html>\n```\n\nIt will send `POST` request to a route `/patient/create`, so let's create route handler for it:\n```js\napp.post('/patient/create', function (req, res) {\n    console.log('Request body:', req.body);\n    res.render('info', {message: 'Patient successfully created.', url: '/'});\n});\n```\n\nFor now, the handler shows parsed request body on the console, also renders a view `public/views/info.njk` with a given message and return URL. Let's create that view:\n```html\n<!doctype html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>My Application | Info</title>\n</head>\n<body>\n\n<h3>Message</h3>\n\n<p>{{ message }}</p>\n\n<a href=\"{{ url }}\">Back</a>\n\n</body>\n</html>\n```\n\nRestart the application and navigate to the home page.\nEnter first and last names and submit the form.\nApplication will render info page with message and the URL to return.\n\n### Content of `index.js`\n\n```js\n'use strict';\n\nvar express = require('express');\nvar app = express();\nvar nunjucks = require('nunjucks');\nvar path = require('path');\nvar bodyParser = require('body-parser');\n\nconst VIEW_PATH = path.join(__dirname, 'public', 'views');\n\n// configure Nunjucks templating\nnunjucks.configure(\n    VIEW_PATH, // tell nunjucks, that all views are in views/ folder\n    {express: app} // tell nunjucks, that this is express app\n);\n\n// set view engine to custom extension - njk\napp.set('view engine', 'njk');\n\napp.use(bodyParser.urlencoded({extended: false}));\n\napp.use('*.html', function (req, res) { // render all html files with Nunjucks\n\n    // show original URL in the console\n    console.log('Original URL: %s', req.originalUrl);\n\n    // generate path to view\n    let view_path = path.join(VIEW_PATH, req.originalUrl);\n\n    // replace *.html to *.njk\n    view_path = view_path.replace(/\\..+$/, '.njk');\n\n    console.log('File to render: %s', view_path);\n\n    // render template\n    res.render(view_path);\n});\n\n\napp.get('/', function (req, res) {\n    res.render('main');\n});\n\napp.post('/patient/create', function (req, res) {\n    console.log('Request body:', req.body);\n    res.render('info', {message: 'Patient successfully created.', url: '/'});\n});\n\napp.listen(3000, function () {\n    console.log('Listening http://localhost:3000...');\n});\n```\n\n### Work with MongoDB via Mongoose\n\n**NOTE: Make sure you have running MongoDB!**\n\nInclude `mongoose` into our application:\n```js\nvar mongoose = require('mongoose');\nmongoose.connect('mongodb://localhost:27017/mydb');\nvar db = mongoose.connection;\n```\n\nMove all code into `open` event handler, it means our server will start after connection established to the DB:\n```js\ndb.once('open', function () {\n    const VIEW_PATH = path.join(__dirname, 'public', 'views');\n\n    // configure Nunjucks templating\n    nunjucks.configure(\n        VIEW_PATH, // tell nunjucks, that all views are in views/ folder\n        {express: app} // tell nunjucks, that this is express app\n    );\n\n    // set view engine to custom extension - njk\n    app.set('view engine', 'njk');\n\n    app.use(bodyParser.urlencoded({extended: false}));\n\n    app.use('*.html', function (req, res) { // render all html files with Nunjucks\n\n        // show original URL in the console\n        console.log('Original URL: %s', req.originalUrl);\n\n        // generate path to view\n        let view_path = path.join(VIEW_PATH, req.originalUrl);\n\n        // replace *.html to *.njk\n        view_path = view_path.replace(/\\..+$/, '.njk');\n\n        console.log('File to render: %s', view_path);\n\n        // render template\n        res.render(view_path);\n    });\n\n\n    app.get('/', function (req, res) {\n        res.render('main');\n    });\n\n    app.listen(3000, function () {\n        console.log('Listening http://localhost:3000...');\n    });\n});\n```\n\n#### Create `Patient` model\n\nCreate `models/Patient.js` with the following content:\n```js\nvar mongoose = require('mongoose');\n\nvar PatientSchema = mongoose.Schema({\n    firstName: {type: String, required: true, maxlength: 50},\n    lastName: {type: String, required: true, maxlength: 50}\n});\n\nvar Patient = mongoose.model('Patient', PatientSchema);\n\nmodule.exports = Patient;\n```\n\nCreate `models/index.js` file with the following content:\n```js\nvar PatientModel = require('./Patient');\n//var UserModel = require('./User');\n\nmodule.exports.Patient = PatientModel;\n//module.exports.User = UserModel;\n```\n\nWe need `models/index.js` to include all models at once. In it we can list other models.\n\nInclude our models into `index.js` (our application entry point) file:\n```js\nvar models = require('./models');\n```\n\n#### Creating POST /patient route\n\nThis route will create new patient and save it into DB.\n\nRemove `/patient/create` route and create `post /patient` route with the following handler:\n```js\napp.post('/patient', function (req, res) {\n    console.log('Request body:', req.body);\n\n    // create model and fill fields from request body\n    let newPatient = new models.Patient(req.body);\n\n    // try to save patient\n    newPatient.save(function (err) {\n        // if there is error, show it and stop handler with return\n        if (err) {\n            return res.render('info', {message: 'Error occured: ' + err.message, url: '/'});\n        }\n\n        // all right, show success message\n        res.render('info', {message: 'Patient successfully created.', url: '/'});\n    });\n});\n```\n\nAbove handler will try to save a patient and shows appropriate message (error or success).\n\nMove patient creation form into own view `public/views/create.njk`:\n```html\n<!doctype html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>My Application | New Patient</title>\n</head>\n<body>\n\n<a href=\"/\">Back</a>\n\n<h3>New Patient</h3>\n\n<form action=\"/patient\" method=\"post\">\n    <label>\n        First Name: <input type=\"text\" name=\"firstName\">\n    </label>\n    <label>\n        Last Name: <input type=\"text\" name=\"lastName\">\n    </label>\n    <button>Create New Patient</button>\n</form>\n\n</body>\n</html>\n```\n\n#### Creating GET /patient route\n\nThis route will show list of existing patients.\n\nCreate new route with the following handler:\n```js\napp.get('/patient', function (req, res) {\n    models.Patient.find(function (err, patients) {\n        if (err) {\n            return res.render('info', {message: 'Error occured: ' + err.message, url: '/'});\n        }\n\n        console.log('List of patients:', patients);\n        res.render('patients', {patients: patients});\n    });\n});\n```\n\nCreate new view for it `public/views/patients.njk`:\n```html\n<!doctype html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>My Application | Patients</title>\n</head>\n<body>\n\n<a href=\"/\">Back</a>\n\n<h3>Patients</h3>\n\n<table>\n\n    <thead>\n    <tr>\n        <th>#</th>\n        <th>First Name</th>\n        <th>Last Name</th>\n        <th></th>\n    </tr>\n    </thead>\n\n    <tbody>\n\n    {% for patient in patients %}\n\n        <tr>\n            <td>{{ loop.index }}</td>\n            <td>{{ patient.firstName }}</td>\n            <td>{{ patient.lastName }}</td>\n        </tr>\n\n    {% endfor %}\n\n    </tbody>\n\n</table>\n\n</body>\n</html>\n```\n\nHere we use [for/endfor](https://mozilla.github.io/nunjucks/templating.html#for) tag of Nunjucks.\n\n#### Adjusting home page to list available operations\n\nReplace the content of the `public/views/main.njk` with this:\n```html\n<!doctype html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>My Application</title>\n</head>\n<body>\n\n<ul>\n    <li><a href=\"/patient\">Patients</a></li>\n    <li><a href=\"/create.html\">New Patient</a></li>\n</ul>\n\n</body>\n</html>\n```\n\n#### Complete `index.js` content\n\n```js\n'use strict';\n\nvar express = require('express');\nvar app = express();\nvar nunjucks = require('nunjucks');\nvar path = require('path');\nvar bodyParser = require('body-parser');\nvar mongoose = require('mongoose');\nvar models = require('./models');\n\nmongoose.connect('mongodb://localhost:27017/mydb');\nvar db = mongoose.connection;\n\ndb.once('open', function () {\n    const VIEW_PATH = path.join(__dirname, 'public', 'views');\n\n    // configure Nunjucks templating\n    nunjucks.configure(\n        VIEW_PATH, // tell nunjucks, that all views are in views/ folder\n        {express: app} // tell nunjucks, that this is express app\n    );\n\n    // set view engine to custom extension - njk\n    app.set('view engine', 'njk');\n\n    app.use(bodyParser.urlencoded({extended: false}));\n\n    app.use('*.html', function (req, res) { // render all html files with Nunjucks\n\n        // show original URL in the console\n        console.log('Original URL: %s', req.originalUrl);\n\n        // generate path to view\n        let view_path = path.join(VIEW_PATH, req.originalUrl);\n\n        // replace *.html to *.njk\n        view_path = view_path.replace(/\\..+$/, '.njk');\n\n        console.log('File to render: %s', view_path);\n\n        // render template\n        res.render(view_path);\n    });\n\n\n    app.get('/', function (req, res) {\n        res.render('main');\n    });\n\n    app.get('/patient', function (req, res) {\n        models.Patient.find(function (err, patients) {\n            if (err) {\n                return res.render('info', {message: 'Error occured: ' + err.message, url: '/'});\n            }\n\n            console.log('List of patients:', patients);\n            res.render('patients', {patients: patients});\n        });\n    });\n\n    app.post('/patient', function (req, res) {\n        console.log('Request body:', req.body);\n\n        // create model and fill fields from request body\n        let newPatient = new models.Patient(req.body);\n\n        // try to save patient\n        newPatient.save(function (err) {\n            // if there is error, show it and stop handler with return\n            if (err) {\n                return res.render('info', {message: 'Error occured: ' + err.message, url: '/'});\n            }\n\n            // all right, show success message\n            res.render('info', {message: 'Patient successfully created.', url: '/'});\n        });\n    });\n\n    app.listen(3000, function () {\n        console.log('Listening http://localhost:3000...');\n    });\n});\n```\n\n#### Checking new features\n\n* Restart the application.\n* Navigate to the home page in the browser.\n* Try to create new patient\n\t* Submit the form without filling fields, you should see error message;\n\t* Submit the form with correct data, you should see success message;\n* Navigate to Patients page, you should see list of existing patients\n\n### Routers\n\nIf we have `/patient` and `/user` routes keeping all route handlers in `index.js` is not the best practice.\nTo improve maintainability of our code base we will move group of routes into own router.\n\n#### Creating Patient router\n\nCreate `routes/Patient.js` file. Create router object and include our models too.\n```js\n'use strict';\n\nvar router = require('express').Router();\nvar models = require('../models');\n```\n\nMove `.get('/patient')` and `.post(/patient)` handlers into `routes/Patient.js`. Replace `app.` with `router.` and `/patient` with `/`. Also export router instance.\n```js\nrouter\n    .get('/', function (req, res) {\n        models.Patient.find(function (err, patients) {\n            if (err) {\n                return res.render('info', {message: 'Error occured: ' + err.message, url: '/'});\n            }\n\n            console.log('List of patients:', patients);\n            res.render('patients', {patients: patients});\n        });\n    })\n    .post('/', function (req, res) {\n        console.log('Request body:', req.body);\n\n        // create model and fill fields from request body\n        let newPatient = new models.Patient(req.body);\n\n        // try to save patient\n        newPatient.save(function (err) {\n            // if there is error, show it and stop handler with return\n            if (err) {\n                return res.render('info', {message: 'Error occured: ' + err.message, url: '/'});\n            }\n\n            // all right, show success message\n            res.render('info', {message: 'Patient successfully created.', url: '/'});\n        });\n    });\n\nmodule.exports = router;\n```\n\nCreate `routes/index.js` with the following content:\n```js\nvar PatientRouter = require('./Patient');\n// var UserRouter = require('./user');\n\nmodule.exports.Patient = PatientRouter;\n// module.exports.User = UserRouter;\n```\nIt allows us to include all routers with one require statement.\n\nComplete `routes/Patient.js`:\n```js\n'use strict';\n\nvar router = require('express').Router();\nvar models = require('../models');\n\nrouter\n    .get('/', function (req, res) {\n        models.Patient.find(function (err, patients) {\n            if (err) {\n                return res.render('info', {message: 'Error occured: ' + err.message, url: '/'});\n            }\n\n            console.log('List of patients:', patients);\n            res.render('patients', {patients: patients});\n        });\n    })\n    .post('/', function (req, res) {\n        console.log('Request body:', req.body);\n\n        // create model and fill fields from request body\n        let newPatient = new models.Patient(req.body);\n\n        // try to save patient\n        newPatient.save(function (err) {\n            // if there is error, show it and stop handler with return\n            if (err) {\n                return res.render('info', {message: 'Error occured: ' + err.message, url: '/'});\n            }\n\n            // all right, show success message\n            res.render('info', {message: 'Patient successfully created.', url: '/'});\n        });\n    });\n\nmodule.exports = router;\n```\n\n#### Using Patient router\n\nRemove including models from `index.js`\n```js\nvar models = require('./models'); // remove this line\n```\n\nInclude router into `index.js`\n```js\nvar routers = require('./routes');\n```\n\nReplace `app.get('/patient', ...)` and `app.post('/patient', ...)` with this line:\n```js\napp.use('/patient', routers.Patient);\n```\nIt means, use `routers.Patient` router for all routes starting with `/patient` URL.\nThat's why we replaced `/patient` to `/` in get/post router handlers.\n\n#### Complete `index.js`\n\n```js\n'use strict';\n\nvar express = require('express');\nvar app = express();\nvar nunjucks = require('nunjucks');\nvar path = require('path');\nvar bodyParser = require('body-parser');\nvar mongoose = require('mongoose');\nvar routers = require('./routes');\n\nmongoose.connect('mongodb://localhost:27017/mydb');\nvar db = mongoose.connection;\n\ndb.once('open', function () {\n    const VIEW_PATH = path.join(__dirname, 'public', 'views');\n\n    // configure Nunjucks templating\n    nunjucks.configure(\n        VIEW_PATH, // tell nunjucks, that all views are in views/ folder\n        {express: app} // tell nunjucks, that this is express app\n    );\n\n    // set view engine to custom extension - njk\n    app.set('view engine', 'njk');\n\n    app.use(bodyParser.urlencoded({extended: false}));\n\n    app.use('*.html', function (req, res) { // render all html files with Nunjucks\n\n        // show original URL in the console\n        console.log('Original URL: %s', req.originalUrl);\n\n        // generate path to view\n        let view_path = path.join(VIEW_PATH, req.originalUrl);\n\n        // replace *.html to *.njk\n        view_path = view_path.replace(/\\..+$/, '.njk');\n\n        console.log('File to render: %s', view_path);\n\n        // render template\n        res.render(view_path);\n    });\n\n\n    app.get('/', function (req, res) {\n        res.render('main');\n    });\n\n    app.use('/patient', routers.Patient);\n\n    app.listen(3000, function () {\n        console.log('Listening http://localhost:3000...');\n    });\n});\n```\n\n### Integrating AngularJS\n\nInitialize bower:\n```bash\nbower init\n```\n\nCreate `.bowerrc` file on root path with the following content:\n```json\n{\n  \"directory\": \"public/lib\"\n}\n```\n\nInstall necessary libraries:\n```bash\nbower install angularjs -S\nbower install angular-ui-router -S\nbower install angular-resource -S\n```\n\nIn `index.js` after `app.set('view engine', ...);` add following line:\n```js\napp.use('/assets', express.static(path.join(__dirname, 'public')));\n```\nIt will serve assets from `public` directory. For example, `/assets/js/angular.js` means download it from `/public/js/angular.js`.\n\nInclude libraries into `public/views/main.njk` just before the closing `</body>` tag:\n```html\n<script src=\"/assets/lib/angular/angular.min.js\"></script>\n<script src=\"/assets/lib/angular-ui-router/release/angular-ui-router.min.js\"></script>\n<script src=\"/assets/lib/angular-resource/angular-resource.min.js\"></script>\n</body>\n```\n\nCreate `public/src/js/app.js` with the following content:\n```js\nangular.module('MyApp', ['ngResource', 'ui-router'])\n    .controller('PatientCtrl', function ($scope) {\n    \n    });\n```\n\nThis is our angular application. In it we require `ngResource` and `ui-router` modules.\nInclude it in the `public/views/main.njk` too just before closing body tag.\n```html\n<script src=\"/assets/src/js/app.js\"></script>\n```\n\nConvert our main page into angular application putting `ng-app` directive into `<html>` tag:\n```html\n<html lang=\"en\" ng-app=\"MyApp\">\n```\n\nWe will change `public/views/main.njk` to show menu and container for views:\n```html\n<ul>\n    <li><a ui-sref=\"patientList\">Patients</a></li>\n    <li><a ui-sref=\"patientCreate\">New Patient</a></li>\n</ul>\n\n<ui-view/>\n```\n\nValues in the `ui-sref` attributes are states of UI Router.\n\n`<ui-view/>` is the container for our partial views. When states changed partials loads into that container.\n\nNow let's create/configure states in `public/src/js/app.js`:\n```js\nangular.module('MyApp', ['ngResource', 'ui.router'])\n    .config(function ($stateProvider, $urlRouterProvider) {\n        $stateProvider\n            .state('patientList', {\n                url: '/patient/list', // URL to show in the address bar\n                templateUrl: '/patients.html', // partial view to load into <ui-view/>\n                controller: 'PatientsCtrl' // controller to use in that partial view\n            })\n            .state('patientCreate', {\n                url: '/patient/create',\n                templateUrl: '/create.html',\n                controller: 'PatientCtrl'\n            });\n\n        // by default go to this address (patientList state)\n        $urlRouterProvider.otherwise('/patient/list');\n    })\n    .controller('PatientCtrl', function ($scope) {\n\n    })\n    .controller('PatientsCtrl', function ($scope) {\n\n    });\n```\n\nAs you know, our views `public/views/patients.njk` and `public/views/create.njk` are partials, not full HTML source, so we leave only necessary parts of them and delete unnecessary HTML tags.\n\nFile `public/views/patients.njk`:\n```html\n<h3>Patients</h3>\n\n<table>\n\n    <thead>\n    <tr>\n        <th>#</th>\n        <th>First Name</th>\n        <th>Last Name</th>\n        <th></th>\n    </tr>\n    </thead>\n\n    <tbody>\n\n    {% for patient in patients %}\n\n        <tr>\n            <td>{{ loop.index }}</td>\n            <td>{{ patient.firstName }}</td>\n            <td>{{ patient.lastName }}</td>\n        </tr>\n\n    {% endfor %}\n\n    </tbody>\n\n</table>\n```\n\nFile `public/views/create.njk`:\n```html\n<h3>New Patient</h3>\n\n<form action=\"/patient\" method=\"post\">\n    <label>\n        First Name: <input type=\"text\" name=\"firstName\">\n    </label>\n    <label>\n        Last Name: <input type=\"text\" name=\"lastName\">\n    </label>\n    <button>Create New Patient</button>\n</form>\n```\n\nFile `public/views/main.njk`:\n```html\n<!doctype html>\n<html lang=\"en\" ng-app=\"MyApp\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>My Application</title>\n</head>\n<body>\n\n<ul>\n    <li><a ui-sref=\"patientList\">Patients</a></li>\n    <li><a ui-sref=\"patientCreate\">New Patient</a></li>\n</ul>\n\n<ui-view/>\n\n<script src=\"/assets/lib/angular/angular.min.js\"></script>\n<script src=\"/assets/lib/angular-ui-router/release/angular-ui-router.min.js\"></script>\n<script src=\"/assets/lib/angular-resource/angular-resource.min.js\"></script>\n<script src=\"/assets/src/js/app.js\"></script>\n</body>\n</html>\n```\n\n#### Content of `index.js`:\n\n```js\n'use strict';\n\nvar express = require('express');\nvar app = express();\nvar nunjucks = require('nunjucks');\nvar path = require('path');\nvar bodyParser = require('body-parser');\nvar mongoose = require('mongoose');\nvar routers = require('./routes');\n\nmongoose.connect('mongodb://localhost:27017/mydb');\nvar db = mongoose.connection;\n\ndb.once('open', function () {\n    const VIEW_PATH = path.join(__dirname, 'public', 'views');\n\n    // configure Nunjucks templating\n    nunjucks.configure(\n        VIEW_PATH, // tell nunjucks, that all views are in views/ folder\n        {express: app} // tell nunjucks, that this is express app\n    );\n\n    // set view engine to custom extension - njk\n    app.set('view engine', 'njk');\n\n    app.use('/assets', express.static(path.join(__dirname, 'public')));\n\n    app.use(bodyParser.urlencoded({extended: false}));\n\n    app.use('*.html', function (req, res) { // render all html files with Nunjucks\n\n        // show original URL in the console\n        console.log('Original URL: %s', req.originalUrl);\n\n        // generate path to view\n        let view_path = path.join(VIEW_PATH, req.originalUrl);\n\n        // replace *.html to *.njk\n        view_path = view_path.replace(/\\..+$/, '.njk');\n\n        console.log('File to render: %s', view_path);\n\n        // render template\n        res.render(view_path);\n    });\n\n\n    app.get('/', function (req, res) {\n        res.render('main');\n    });\n\n    app.use('/patient', routers.Patient);\n\n    app.listen(3000, function () {\n        console.log('Listening http://localhost:3000...');\n    });\n});\n```\n\n#### Check UI Router\n\nFor now you cannot create new patient. Also patients page does not show list of patients. But navigation should work. We will implement creating new patients and showing list of patients features later.\n\n* Restart the application, then navigate to `http://localhost:3000`.\nIn the address bar you should see the URL `http://localhost:3000/#/patient/list`, because our UI Router loads it by default. \n* Try to navigate by `Patients` and `New Patient` links.\nOn the page only URL on the address bar and container for our views should be changed. Navigation links should remain as is.\n\n### Integrating $resource\n\nAfter integrating `$resource` we will have following functions:\n* `Patient.query()` - to retrieve list of patients\n* `Patient.get()` - to retrieve one patient by `id`\n* `Patient.$save()` - to create new patient\n* `Patient.$update()` - to update existing patient by `id`\n* `Patient.$delete()` - to delete existing patient by `id`\n\n#### Retrieving list of patients\n\nCreate factory to work with Patient model in `public/src/js/app.js`:\n```js\nangular.module('MyApp', ['ngResource', 'ui.router'])\n    .config(function ($stateProvider, $urlRouterProvider) {\n        // ... doesn't changed ...\n    })\n    .factory('Patient', function ($resource) {\n        return $resource(\n            '/patient/:id', // URL to patient backend API\n            {id: '@_id'}, // obtain id from _id field of patient object\n            {\n                update: {\n                    method: 'PUT' // for .update() method use PUT request\n                }\n            }\n        );\n    })\n    .controller('PatientCtrl', function ($scope) {\n\n    })\n    .controller('PatientsCtrl', function ($scope, Patient) {\n        $scope.patients = Patient.query(); // get list of patients\n    });\n```\n\nChange `public/views/patients.njk`:\n```html\n<h3>Patients</h3>\n\n<table>\n\n    <thead>\n    <tr>\n        <th>#</th>\n        <th>First Name</th>\n        <th>Last Name</th>\n        <th></th>\n    </tr>\n    </thead>\n\n    <tbody>\n\n    <tr ng-repeat=\"patient in patients\">\n        <td>{{ $index+1 }}</td>\n        <td>{{ patient.firstName }}</td>\n        <td>{{ patient.lastName }}</td>\n    </tr>\n\n    </tbody>\n\n</table>\n```\nWe removed `{%for/endfor%}` nunjucks tags.\nInstead used angular's `ng-repeat` tag.\n\nNunjucsk uses `{{ }}` tags to render values, Angular uses same syntax, so there is conflict.\nWe have to configure Nunjucks's tags to something else, for example, to `{{{ }}}`, change `nunjucks.configure(...)` in `index.js` to the following:\n```js\n// configure Nunjucks templating\n    nunjucks.configure(\n        VIEW_PATH, // tell nunjucks, that all views are in views/ folder\n        {\n            express: app, // tell nunjucks, that this is express app\n            tags: {\n                variableStart: '{{{',\n                variableEnd: '}}}'\n            }\n        }\n    );\n```\n\nAdd body parser for JSON format in `index.js` after `app.use(bodyParser.urlencoded({extended: false}));` call:\n```js\n    app.use(bodyParser.json());\n```\n\nChange `GET /` request handler in `routes/Patient.js` to response in JSON format, instead of rendering HTML page:\n```js\nrouter\n    .get('/', function (req, res) {\n        models.Patient.find(function (err, patients) {\n            if (err) {\n                return res.json({message: 'Error occured: ' + err.message});\n            }\n\n            console.log('List of patients:', patients);\n            res.json(patients);\n        });\n    })\n```\n\nRestart the application and test patients list page.\nIt should show the list of patients.\n\n#### Content of changed files\nFile `index.js`:\n```js\n'use strict';\n\nvar express = require('express');\nvar app = express();\nvar nunjucks = require('nunjucks');\nvar path = require('path');\nvar bodyParser = require('body-parser');\nvar mongoose = require('mongoose');\nvar routers = require('./routes');\n\nmongoose.connect('mongodb://localhost:27017/mydb');\nvar db = mongoose.connection;\n\ndb.once('open', function () {\n    const VIEW_PATH = path.join(__dirname, 'public', 'views');\n\n    // configure Nunjucks templating\n    nunjucks.configure(\n        VIEW_PATH, // tell nunjucks, that all views are in views/ folder\n        {\n            express: app, // tell nunjucks, that this is express app\n            tags: {\n                variableStart: '{{{',\n                variableEnd: '}}}'\n            }\n        }\n    );\n\n    // set view engine to custom extension - njk\n    app.set('view engine', 'njk');\n\n    app.use('/assets', express.static(path.join(__dirname, 'public')));\n\n    app.use(bodyParser.urlencoded({extended: false}));\n    app.use(bodyParser.json());\n\n    app.use('*.html', function (req, res) { // render all html files with Nunjucks\n\n        // show original URL in the console\n        console.log('Original URL: %s', req.originalUrl);\n\n        // generate path to view\n        let view_path = path.join(VIEW_PATH, req.originalUrl);\n\n        // replace *.html to *.njk\n        view_path = view_path.replace(/\\..+$/, '.njk');\n\n        console.log('File to render: %s', view_path);\n\n        // render template\n        res.render(view_path);\n    });\n\n\n    app.get('/', function (req, res) {\n        res.render('main');\n    });\n\n    app.use('/patient', routers.Patient);\n\n    app.listen(3000, function () {\n        console.log('Listening http://localhost:3000...');\n    });\n});\n```\n\nFile `routes/Patient.js`:\n```js\n'use strict';\n\nvar router = require('express').Router();\nvar models = require('../models');\n\nrouter\n    .get('/', function (req, res) {\n        models.Patient.find(function (err, patients) {\n            if (err) {\n                return res.json({message: 'Error occured: ' + err.message});\n            }\n\n            console.log('List of patients:', patients);\n            res.json(patients);\n        });\n    })\n    .post('/', function (req, res) {\n        console.log('Request body:', req.body);\n\n        // create model and fill fields from request body\n        let newPatient = new models.Patient(req.body);\n\n        // try to save patient\n        newPatient.save(function (err) {\n            // if there is error, show it and stop handler with return\n            if (err) {\n                return res.render('info', {message: 'Error occured: ' + err.message, url: '/'});\n            }\n\n            // all right, show success message\n            res.render('info', {message: 'Patient successfully created.', url: '/'});\n        });\n    });\n\nmodule.exports = router;\n```\n\nFile `public/src/js/app.js`:\n```js\nangular.module('MyApp', ['ngResource', 'ui.router'])\n    .config(function ($stateProvider, $urlRouterProvider) {\n        $stateProvider\n            .state('patientList', {\n                url: '/patient/list', // URL to show in the address bar\n                templateUrl: '/patients.html', // partial view to load into <ui-view/>\n                controller: 'PatientsCtrl' // controller to use in that partial view\n            })\n            .state('patientCreate', {\n                url: '/patient/create',\n                templateUrl: '/create.html',\n                controller: 'PatientCtrl'\n            });\n\n        // by default go to this address (patientList state)\n        $urlRouterProvider.otherwise('/patient/list');\n    })\n    .factory('Patient', function ($resource) {\n        return $resource(\n            '/patient/:id', // URL to patient backend API\n            {id: '@_id'}, // obtain id from _id field of patient object\n            {\n                update: {\n                    method: 'PUT' // for .update() method use PUT request\n                }\n            }\n        );\n    })\n    .controller('PatientCtrl', function ($scope) {\n\n    })\n    .controller('PatientsCtrl', function ($scope, Patient) {\n        $scope.patients = Patient.query(); // get list of patients\n    });\n```\n\nFile `public/views/patients.njk`:\n```html\n<h3>Patients</h3>\n\n<table>\n\n    <thead>\n    <tr>\n        <th>#</th>\n        <th>First Name</th>\n        <th>Last Name</th>\n        <th></th>\n    </tr>\n    </thead>\n\n    <tbody>\n\n    <tr ng-repeat=\"patient in patients\">\n        <td>{{ $index+1 }}</td>\n        <td>{{ patient.firstName }}</td>\n        <td>{{ patient.lastName }}</td>\n    </tr>\n\n    </tbody>\n\n</table>\n```\n\n#### Create new patient\n\nTo actually create new patient we need to implement functionality in the `PatientCtrl` controller in `public/src/js/app.js`. Change `PatientCtrl` to the following:\n```js\nangular.module('MyApp', ['ngResource', 'ui.router'])\n// ...\n.controller('PatientCtrl', function ($scope, Patient, $state) {\n        $scope.patient = new Patient(); // create empty patient object\n\n        $scope.addPatient = function () {\n            // send ajax request to create new patient\n            $scope.patient.$save(function (resp) {\n                console.log('Save response:', resp);\n\n                // after save go to the patients list\n                $state.go('patientList');\n            });\n        }\n    })\n    // ...\n```\n\nWe inject `Patient` service into the controller to access its methods. We also inject `$state` provider to programmatically navigate between states. We use `$state.go('patientList')` to show Patients list page.\n\nWe will change our form in `public/views/create.njk` to angular form:\n```html\n<h3>New Patient</h3>\n\n<form name=\"formPatient\" novalidate>\n    <label>\n        First Name: <input type=\"text\" name=\"firstName\" ng-model=\"patient.firstName\" required>\n    </label>\n    <label>\n        Last Name: <input type=\"text\" name=\"lastName\" ng-model=\"patient.lastName\" required>\n    </label>\n    <button ng-click=\"addPatient()\" ng-disabled=\"formPatient.$invalid\">Create New Patient</button>\n</form>\n```\n\n`novalidate` attribute turn off HTML5 built in validations, AngularJS has own validations, so we don't need them. We also set `name` attribute of the form, then we can use it, for example, to enable/disable button according to the form state, if form is invalid (`formPatient.$invalid == true`), then we will disable `Create New Patient` button, if form is valid (`formPatient.$invalid == false`) then enable that button. To enable/disable the button we use `ng-disabled` attribute, if it is `true`, then button will be disabled, otherwise it will be enabled.\n\n`ng-model` attribute will bind input to the `$scope.patient` object's fields.\nAfter filling all fields with valid values button will be enabled and we can click it.\n`ng-click` will bind `$scope.addPatient()` function to the button.\n\nNow we should change our backend to respond with JSON, instead of HTML, so we have to use `res.json()` instead of `res.render()`. Open `routes/Patient.js` and change `POST /` handler to the following code:\n```js\nrouter\n\t// ...\n\t.post('/', function (req, res) {\n        console.log('Request body:', req.body);\n\n        // create model and fill fields from request body\n        let newPatient = new models.Patient(req.body);\n\n        // try to save patient\n        newPatient.save(function (err) {\n            // if there is error, send it and stop handler with return\n            if (err) {\n                return res.json({message: 'Error occured: ' + err.message});\n            }\n\n            // all right, show success message\n            res.json({message: 'Patient successfully created.'});\n        });\n    });\n```\n\nNow restart the app and try to create some new patients.\n\n#### Content of changed files\n\nFile `public/src/js/app.js`:\n```js\nangular.module('MyApp', ['ngResource', 'ui.router'])\n    .config(function ($stateProvider, $urlRouterProvider) {\n        $stateProvider\n            .state('patientList', {\n                url: '/patient/list', // URL to show in the address bar\n                templateUrl: '/patients.html', // partial view to load into <ui-view/>\n                controller: 'PatientsCtrl' // controller to use in that partial view\n            })\n            .state('patientCreate', {\n                url: '/patient/create',\n                templateUrl: '/create.html',\n                controller: 'PatientCtrl'\n            });\n\n        // by default go to this address (patientList state)\n        $urlRouterProvider.otherwise('/patient/list');\n    })\n    .factory('Patient', function ($resource) {\n        return $resource(\n            '/patient/:id', // URL to patient backend API\n            {id: '@_id'}, // obtain id from _id field of patient object\n            {\n                update: {\n                    method: 'PUT' // for .update() method use PUT request\n                }\n            }\n        );\n    })\n    .controller('PatientCtrl', function ($scope, Patient, $state) {\n        $scope.patient = new Patient(); // create empty patient object\n\n        $scope.addPatient = function () {\n            // send ajax request to create new patient\n            $scope.patient.$save(function (resp) {\n                console.log('Save response:', resp);\n\n                // after save go to the patients list\n                $state.go('patientList');\n            });\n        }\n    })\n    .controller('PatientsCtrl', function ($scope, Patient) {\n        $scope.patients = Patient.query(); // get list of patients\n    });\n```\n\nFile `public/views/create.njk`:\n```html\n<h3>New Patient</h3>\n\n<form name=\"formPatient\" novalidate>\n    <label>\n        First Name: <input type=\"text\" name=\"firstName\" ng-model=\"patient.firstName\" required>\n    </label>\n    <label>\n        Last Name: <input type=\"text\" name=\"lastName\" ng-model=\"patient.lastName\" required>\n    </label>\n    <button ng-click=\"addPatient()\" ng-disabled=\"formPatient.$invalid\">Create New Patient</button>\n</form>\n```\n\nFile `routes/Patient.js`:\n```js\n'use strict';\n\nvar router = require('express').Router();\nvar models = require('../models');\n\nrouter\n    .get('/', function (req, res) {\n        models.Patient.find(function (err, patients) {\n            if (err) {\n                return res.json({message: 'Error occured: ' + err.message});\n            }\n\n            console.log('List of patients:', patients);\n            res.json(patients);\n        });\n    })\n    .post('/', function (req, res) {\n        console.log('Request body:', req.body);\n\n        // create model and fill fields from request body\n        let newPatient = new models.Patient(req.body);\n\n        // try to save patient\n        newPatient.save(function (err) {\n            // if there is error, send it and stop handler with return\n            if (err) {\n                return res.json({message: 'Error occured: ' + err.message});\n            }\n\n            // all right, show success message\n            res.json({message: 'Patient successfully created.'});\n        });\n    });\n\nmodule.exports = router;\n```\n\n#### Updating existing patients\n\nComing soon...\n\n#### Deleting patient\n\nComing soon...\n\n#### Advanced validation in models\n\nComing soon...\n\n#### Toaster integration\n\nComing soon...\n\n#### Searching patients\n\nComing soon...\n\n#### User Authorization\nComing soon...","html":"<h2 id=\"creating-mean-application-step-by-step-guide\">Creating MEAN application: step by step guide</h2>\n<h3 id=\"table-of-content\">Table of Content</h3>\n<ul>\n<li><a href=\"#project-structure\">Project structure</a></li>\n<li><a href=\"#installing-prerequisites\">Installing prerequisites</a></li>\n<li><a href=\"#creating-server\">Creating server</a></li>\n<li><a href=\"#render-pages-with-nunjucks\">Render pages with Nunjucks</a></li>\n<li><a href=\"#middleware-to-render-html-requests-with-nunjucks\">Middleware to render *.html requests with Nunjucks</a></li>\n<li><a href=\"#accept-data-from-users\">Accept data from users</a></li>\n<li><a href=\"#work-with-mongodb-via-mongoose\">Work with MongoDB via Mongoose</a></li>\n<li><a href=\"#create-patient-model\">Create Patient model</a></li>\n<li><a href=\"#creating-post-patient-route\">Creating POST /patient route</a></li>\n<li><a href=\"#creating-get-patient-route\">Creating GET /patient route</a></li>\n<li><a href=\"#adjusting-home-page-to-list-available-operations\">Adjusting home page to list available operations</a></li>\n<li><a href=\"#routers\">Routers</a></li>\n<li><a href=\"#creating-patient-router\">Creating Patient router</a></li>\n<li><a href=\"#using-patient-router\">Using Patient router</a></li>\n<li><a href=\"#integrating-angularjs\">Integrating AngularJS</a></li>\n<li><a href=\"#integrating-resource\">Integrating $resource</a></li>\n<li><a href=\"#retrieving-list-of-patients\">Retrieving list of patients</a></li>\n<li><a href=\"#create-new-patient\">Create new patient</a></li>\n</ul>\n<h3 id=\"project-structure\">Project structure</h3>\n<p>Create root folder for our application:</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-built_in\">mkdir</span> myapp\n<span class=\"hljs-built_in\">cd</span> myapp\n</code></pre>\n<p>Create folder for models &amp; routes:</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-built_in\">mkdir</span> models\n<span class=\"hljs-built_in\">mkdir</span> routes\n</code></pre>\n<p>Create folder for frontend:</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-built_in\">mkdir</span> <span class=\"hljs-keyword\">public</span>\n<span class=\"hljs-built_in\">mkdir</span> <span class=\"hljs-keyword\">public</span>/lib\n<span class=\"hljs-built_in\">mkdir</span> <span class=\"hljs-keyword\">public</span>/src\n<span class=\"hljs-built_in\">mkdir</span> <span class=\"hljs-keyword\">public</span>/src/js\n<span class=\"hljs-built_in\">mkdir</span> <span class=\"hljs-keyword\">public</span>/src/css\n<span class=\"hljs-built_in\">mkdir</span> <span class=\"hljs-keyword\">public</span>/src/images\n<span class=\"hljs-built_in\">mkdir</span> <span class=\"hljs-keyword\">public</span>/views\n</code></pre>\n<h3 id=\"installing-prerequisites\">Installing prerequisites</h3>\n<p>Initialize Node project and install necessary modules:</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-built_in\">npm</span> init\n<span class=\"hljs-built_in\">npm</span> i express nunjucks mongoose body-parser -S\n</code></pre>\n<h3 id=\"creating-server\">Creating server</h3>\n<p>Create <code>index.js</code> file.</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-keyword\">var</span> express = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'express'</span>);\n<span class=\"hljs-keyword\">var</span> app = express();\n\napp.get(<span class=\"hljs-string\">'/'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n    res.send(<span class=\"hljs-string\">'Hello World!'</span>);\n});\n\napp.listen(<span class=\"hljs-number\">3000</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Listening http://localhost:3000...'</span>);\n});\n</code></pre>\n<p>Run it on the console with <code>node index</code>.\nOn the console you should see text:</p>\n<pre><code>Listening <span class=\"hljs-string\">http:</span><span class=\"hljs-comment\">//localhost:3000...</span>\n</code></pre><p>Navigate to the <a href=\"http://localhost:3000\">http://localhost:3000</a> on the browser.\nAs response you should see the text <code>Hello World!</code>.</p>\n<h3 id=\"render-pages-with-nunjucks\">Render pages with Nunjucks</h3>\n<p>Add <code>&#39;use strict&#39;</code> into beginning of the <code>index.js</code> to enable strict mode.</p>\n<p>Include <code>nunjucks</code> to use template engine in views.</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-attribute\">var nunjucks</span> = require(<span class=\"hljs-string\">'nunjucks'</span>);\n</code></pre>\n<p>Include built-in <code>path</code> module to work with paths:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-attribute\">var path</span> = require(<span class=\"hljs-string\">'path'</span>);\n</code></pre>\n<p>Set views path to <code>public/views</code>:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-keyword\">const</span> VIEW_PATH = path.<span class=\"hljs-keyword\">join</span>(__dirname, <span class=\"hljs-string\">'public'</span>, <span class=\"hljs-string\">'views'</span>);\n</code></pre>\n<p>Configure nunjucks, bind it with our express app and set view engine to it:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-comment\">// configure Nunjucks templating</span>\n<span class=\"hljs-selector-tag\">nunjucks</span><span class=\"hljs-selector-class\">.configure</span>(\n    VIEW_PATH, <span class=\"hljs-comment\">// tell nunjucks, that all views are in views/ folder</span>\n    {<span class=\"hljs-attribute\">express</span>: app} <span class=\"hljs-comment\">// tell nunjucks, that this is express app</span>\n);\n\n<span class=\"hljs-comment\">// set view engine to custom extension - njk</span>\n<span class=\"hljs-selector-tag\">app</span><span class=\"hljs-selector-class\">.set</span>(<span class=\"hljs-string\">'view engine'</span>, <span class=\"hljs-string\">'njk'</span>);\n</code></pre>\n<p>Change handler for root <code>/</code> to the following code:</p>\n<pre><code class=\"lang-js\">app.get(<span class=\"hljs-string\">'/'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(req, res)</span> </span>{\n    res.render(<span class=\"hljs-string\">'main'</span>, {myname: <span class=\"hljs-string\">'John Doe'</span>});\n});\n</code></pre>\n<p>In the above code we are rendering <code>main.njk</code> view with <code>myname=&#39;John Doe&#39;</code>.</p>\n<p>Create <code>public/views/main.njk</code> view with the following content:</p>\n<pre><code class=\"lang-html\"><span class=\"xml\"><span class=\"hljs-meta\">&lt;!doctype html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>My Application<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\nHello, </span><span class=\"hljs-template-variable\">{{ myname }}</span><span class=\"xml\">!\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></span>\n</code></pre>\n<p>Restart application and navigate to the home page in the browser: <code>http://localhost:3000/</code>.</p>\n<p>You should see the text <code>Hello, John Doe!</code>.</p>\n<h3 id=\"middleware-to-render-html-requests-with-nunjucks\">Middleware to render *.html requests with Nunjucks</h3>\n<p>Create middleware to render all <code>*.html</code> requests with <code>*.njk</code> files:</p>\n<pre><code class=\"lang-js\">app.use(<span class=\"hljs-string\">'*.html'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{ <span class=\"hljs-comment\">// render all html files with Nunjucks</span>\n\n    <span class=\"hljs-comment\">// show original URL in the console</span>\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Original URL: %s'</span>, req.originalUrl);\n\n    <span class=\"hljs-comment\">// generate path to view</span>\n    <span class=\"hljs-keyword\">let</span> view_path = path.join(VIEW_PATH, req.originalUrl);\n\n    <span class=\"hljs-comment\">// replace *.html to *.njk</span>\n    view_path = view_path.replace(<span class=\"hljs-regexp\">/\\..+/</span>, <span class=\"hljs-string\">'.njk'</span>);\n\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'File to render: %s'</span>, view_path);\n\n    <span class=\"hljs-comment\">// render template</span>\n    res.render(view_path);\n});\n</code></pre>\n<p>Now, if we navigate to the page <code>http://localhost:3000/patient.html</code>, then node will render the view <code>public/views/patient.njk</code> with <code>Nunjucks</code>.</p>\n<h3 id=\"content-of-index-js-\">Content of <code>index.js</code></h3>\n<p>Now our <code>index.js</code>:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-meta\">'use strict'</span>;\n\n<span class=\"hljs-keyword\">var</span> express = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'express'</span>);\n<span class=\"hljs-keyword\">var</span> app = express();\n<span class=\"hljs-keyword\">var</span> nunjucks = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'nunjucks'</span>);\n<span class=\"hljs-keyword\">var</span> path = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'path'</span>);\n\n<span class=\"hljs-keyword\">const</span> VIEW_PATH = path.join(__dirname, <span class=\"hljs-string\">'public'</span>, <span class=\"hljs-string\">'views'</span>);\n\n<span class=\"hljs-comment\">// configure Nunjucks templating</span>\nnunjucks.configure(\n    VIEW_PATH, <span class=\"hljs-comment\">// tell nunjucks, that all views are in views/ folder</span>\n    {<span class=\"hljs-attr\">express</span>: app} <span class=\"hljs-comment\">// tell nunjucks, that this is express app</span>\n);\n\n<span class=\"hljs-comment\">// set view engine to custom extension - njk</span>\napp.set(<span class=\"hljs-string\">'view engine'</span>, <span class=\"hljs-string\">'njk'</span>);\n\n\napp.use(<span class=\"hljs-string\">'*.html'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{ <span class=\"hljs-comment\">// render all html files with Nunjucks</span>\n\n    <span class=\"hljs-comment\">// show original URL in the console</span>\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Original URL: %s'</span>, req.originalUrl);\n\n    <span class=\"hljs-comment\">// generate path to view</span>\n    <span class=\"hljs-keyword\">let</span> view_path = path.join(VIEW_PATH, req.originalUrl);\n\n    <span class=\"hljs-comment\">// replace *.html to *.njk</span>\n    view_path = view_path.replace(<span class=\"hljs-regexp\">/\\..+$/</span>, <span class=\"hljs-string\">'.njk'</span>);\n\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'File to render: %s'</span>, view_path);\n\n    <span class=\"hljs-comment\">// render template</span>\n    res.render(view_path);\n});\n\n\napp.get(<span class=\"hljs-string\">'/'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n    res.render(<span class=\"hljs-string\">'main'</span>, {<span class=\"hljs-attr\">myname</span>: <span class=\"hljs-string\">'John Doe'</span>});\n});\n\napp.listen(<span class=\"hljs-number\">3000</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Listening http://localhost:3000...'</span>);\n});\n</code></pre>\n<h3 id=\"accept-data-from-users\">Accept data from users</h3>\n<p>Include <code>body-parser</code> module into our application. It parses request body and makes them available via <code>req.body</code>.</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-keyword\">var</span> bodyParser = <span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'body-parser'</span>);\n\napp.<span class=\"hljs-keyword\">use</span>(bodyParser.urlencoded({extended: <span class=\"hljs-keyword\">false</span>}));\n</code></pre>\n<p>Also change root route handler to the following:</p>\n<pre><code class=\"lang-js\">app.get(<span class=\"hljs-string\">'/'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(req, res)</span> </span>{\n    res.render(<span class=\"hljs-string\">'main'</span>);\n});\n</code></pre>\n<p>Change view <code>main.njk</code> to accept data from a user:</p>\n<pre><code class=\"lang-html\"><span class=\"hljs-meta\">&lt;!doctype html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>My Application<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">action</span>=<span class=\"hljs-string\">\"/patient/create\"</span> <span class=\"hljs-attr\">method</span>=<span class=\"hljs-string\">\"post\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>\n        First Name: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"firstName\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>\n        Last Name: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"lastName\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span>&gt;</span>Create New Patient<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n<p>It will send <code>POST</code> request to a route <code>/patient/create</code>, so let&#39;s create route handler for it:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-selector-tag\">app</span><span class=\"hljs-selector-class\">.post</span>(<span class=\"hljs-string\">'/patient/create'</span>, function (req, res) {\n    <span class=\"hljs-selector-tag\">console</span><span class=\"hljs-selector-class\">.log</span>(<span class=\"hljs-string\">'Request body:'</span>, req.body);\n    <span class=\"hljs-selector-tag\">res</span><span class=\"hljs-selector-class\">.render</span>(<span class=\"hljs-string\">'info'</span>, {<span class=\"hljs-attribute\">message</span>: <span class=\"hljs-string\">'Patient successfully created.'</span>, <span class=\"hljs-attribute\">url</span>: <span class=\"hljs-string\">'/'</span>});\n});\n</code></pre>\n<p>For now, the handler shows parsed request body on the console, also renders a view <code>public/views/info.njk</code> with a given message and return URL. Let&#39;s create that view:</p>\n<pre><code class=\"lang-html\"><span class=\"xml\"><span class=\"hljs-meta\">&lt;!doctype html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>My Application | Info<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>Message<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span></span><span class=\"hljs-template-variable\">{{ message }}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"</span></span></span><span class=\"hljs-template-variable\">{{ url }}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">\"</span>&gt;</span>Back<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></span>\n</code></pre>\n<p>Restart the application and navigate to the home page.\nEnter first and last names and submit the form.\nApplication will render info page with message and the URL to return.</p>\n<h3 id=\"content-of-index-js-\">Content of <code>index.js</code></h3>\n<pre><code class=\"lang-js\"><span class=\"hljs-meta\">'use strict'</span>;\n\n<span class=\"hljs-keyword\">var</span> express = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'express'</span>);\n<span class=\"hljs-keyword\">var</span> app = express();\n<span class=\"hljs-keyword\">var</span> nunjucks = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'nunjucks'</span>);\n<span class=\"hljs-keyword\">var</span> path = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'path'</span>);\n<span class=\"hljs-keyword\">var</span> bodyParser = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'body-parser'</span>);\n\n<span class=\"hljs-keyword\">const</span> VIEW_PATH = path.join(__dirname, <span class=\"hljs-string\">'public'</span>, <span class=\"hljs-string\">'views'</span>);\n\n<span class=\"hljs-comment\">// configure Nunjucks templating</span>\nnunjucks.configure(\n    VIEW_PATH, <span class=\"hljs-comment\">// tell nunjucks, that all views are in views/ folder</span>\n    {<span class=\"hljs-attr\">express</span>: app} <span class=\"hljs-comment\">// tell nunjucks, that this is express app</span>\n);\n\n<span class=\"hljs-comment\">// set view engine to custom extension - njk</span>\napp.set(<span class=\"hljs-string\">'view engine'</span>, <span class=\"hljs-string\">'njk'</span>);\n\napp.use(bodyParser.urlencoded({<span class=\"hljs-attr\">extended</span>: <span class=\"hljs-literal\">false</span>}));\n\napp.use(<span class=\"hljs-string\">'*.html'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{ <span class=\"hljs-comment\">// render all html files with Nunjucks</span>\n\n    <span class=\"hljs-comment\">// show original URL in the console</span>\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Original URL: %s'</span>, req.originalUrl);\n\n    <span class=\"hljs-comment\">// generate path to view</span>\n    <span class=\"hljs-keyword\">let</span> view_path = path.join(VIEW_PATH, req.originalUrl);\n\n    <span class=\"hljs-comment\">// replace *.html to *.njk</span>\n    view_path = view_path.replace(<span class=\"hljs-regexp\">/\\..+$/</span>, <span class=\"hljs-string\">'.njk'</span>);\n\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'File to render: %s'</span>, view_path);\n\n    <span class=\"hljs-comment\">// render template</span>\n    res.render(view_path);\n});\n\n\napp.get(<span class=\"hljs-string\">'/'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n    res.render(<span class=\"hljs-string\">'main'</span>);\n});\n\napp.post(<span class=\"hljs-string\">'/patient/create'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Request body:'</span>, req.body);\n    res.render(<span class=\"hljs-string\">'info'</span>, {<span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">'Patient successfully created.'</span>, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'/'</span>});\n});\n\napp.listen(<span class=\"hljs-number\">3000</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Listening http://localhost:3000...'</span>);\n});\n</code></pre>\n<h3 id=\"work-with-mongodb-via-mongoose\">Work with MongoDB via Mongoose</h3>\n<p><strong>NOTE: Make sure you have running MongoDB!</strong></p>\n<p>Include <code>mongoose</code> into our application:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-keyword\">var</span> mongoose = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'mongoose'</span>);\nmongoose.connect(<span class=\"hljs-string\">'mongodb://localhost:27017/mydb'</span>);\n<span class=\"hljs-keyword\">var</span> db = mongoose.connection;\n</code></pre>\n<p>Move all code into <code>open</code> event handler, it means our server will start after connection established to the DB:</p>\n<pre><code class=\"lang-js\">db.once(<span class=\"hljs-string\">'open'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-keyword\">const</span> VIEW_PATH = path.join(__dirname, <span class=\"hljs-string\">'public'</span>, <span class=\"hljs-string\">'views'</span>);\n\n    <span class=\"hljs-comment\">// configure Nunjucks templating</span>\n    nunjucks.configure(\n        VIEW_PATH, <span class=\"hljs-comment\">// tell nunjucks, that all views are in views/ folder</span>\n        {<span class=\"hljs-attr\">express</span>: app} <span class=\"hljs-comment\">// tell nunjucks, that this is express app</span>\n    );\n\n    <span class=\"hljs-comment\">// set view engine to custom extension - njk</span>\n    app.set(<span class=\"hljs-string\">'view engine'</span>, <span class=\"hljs-string\">'njk'</span>);\n\n    app.use(bodyParser.urlencoded({<span class=\"hljs-attr\">extended</span>: <span class=\"hljs-literal\">false</span>}));\n\n    app.use(<span class=\"hljs-string\">'*.html'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{ <span class=\"hljs-comment\">// render all html files with Nunjucks</span>\n\n        <span class=\"hljs-comment\">// show original URL in the console</span>\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Original URL: %s'</span>, req.originalUrl);\n\n        <span class=\"hljs-comment\">// generate path to view</span>\n        <span class=\"hljs-keyword\">let</span> view_path = path.join(VIEW_PATH, req.originalUrl);\n\n        <span class=\"hljs-comment\">// replace *.html to *.njk</span>\n        view_path = view_path.replace(<span class=\"hljs-regexp\">/\\..+$/</span>, <span class=\"hljs-string\">'.njk'</span>);\n\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'File to render: %s'</span>, view_path);\n\n        <span class=\"hljs-comment\">// render template</span>\n        res.render(view_path);\n    });\n\n\n    app.get(<span class=\"hljs-string\">'/'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n        res.render(<span class=\"hljs-string\">'main'</span>);\n    });\n\n    app.listen(<span class=\"hljs-number\">3000</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Listening http://localhost:3000...'</span>);\n    });\n});\n</code></pre>\n<h4 id=\"create-patient-model\">Create <code>Patient</code> model</h4>\n<p>Create <code>models/Patient.js</code> with the following content:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-keyword\">var</span> mongoose = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'mongoose'</span>);\n\n<span class=\"hljs-keyword\">var</span> PatientSchema = mongoose.Schema({\n    firstName: {<span class=\"hljs-keyword\">type</span>: <span class=\"hljs-built_in\">String</span>, required: <span class=\"hljs-literal\">true</span>, maxlength: <span class=\"hljs-number\">50</span>},\n    lastName: {<span class=\"hljs-keyword\">type</span>: <span class=\"hljs-built_in\">String</span>, required: <span class=\"hljs-literal\">true</span>, maxlength: <span class=\"hljs-number\">50</span>}\n});\n\n<span class=\"hljs-keyword\">var</span> Patient = mongoose.model(<span class=\"hljs-string\">'Patient'</span>, PatientSchema);\n\n<span class=\"hljs-built_in\">module</span>.exports = Patient;\n</code></pre>\n<p>Create <code>models/index.js</code> file with the following content:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-keyword\">var</span> PatientModel = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'./Patient'</span>);\n<span class=\"hljs-comment\">//var UserModel = require('./User');</span>\n\n<span class=\"hljs-built_in\">module</span>.exports.Patient = PatientModel;\n<span class=\"hljs-comment\">//module.exports.User = UserModel;</span>\n</code></pre>\n<p>We need <code>models/index.js</code> to include all models at once. In it we can list other models.</p>\n<p>Include our models into <code>index.js</code> (our application entry point) file:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-attribute\">var models</span> = require(<span class=\"hljs-string\">'./models'</span>);\n</code></pre>\n<h4 id=\"creating-post-patient-route\">Creating POST /patient route</h4>\n<p>This route will create new patient and save it into DB.</p>\n<p>Remove <code>/patient/create</code> route and create <code>post /patient</code> route with the following handler:</p>\n<pre><code class=\"lang-js\">app.post('/patient', <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\"></span>(req, res) {\n    console.log('Request body:', req.body);\n\n    // create model <span class=\"hljs-keyword\">and</span> fill fields from request <span class=\"hljs-keyword\">body</span>\n    let newPatient = <span class=\"hljs-keyword\">new</span> models.Patient(req.<span class=\"hljs-keyword\">body</span>);\n\n    // try to save patient\n    newPatient.save(<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\"></span>(err) {\n        // if there <span class=\"hljs-keyword\">is</span> error, show it <span class=\"hljs-keyword\">and</span> stop handler <span class=\"hljs-keyword\">with</span> <span class=\"hljs-keyword\">return</span>\n        <span class=\"hljs-keyword\">if</span> (err) {\n            <span class=\"hljs-keyword\">return</span> res.render(<span class=\"hljs-symbol\">'info</span>', {message: <span class=\"hljs-symbol\">'Error</span> occured: ' + err.message, url: <span class=\"hljs-string\">'/'</span>});\n        }\n\n        // <span class=\"hljs-keyword\">all</span> right, show success message\n        res.render(<span class=\"hljs-symbol\">'info</span>', {message: <span class=\"hljs-symbol\">'Patient</span> successfully created.', url: <span class=\"hljs-string\">'/'</span>});\n    });\n});\n</code></pre>\n<p>Above handler will try to save a patient and shows appropriate message (error or success).</p>\n<p>Move patient creation form into own view <code>public/views/create.njk</code>:</p>\n<pre><code class=\"lang-html\"><span class=\"hljs-meta\">&lt;!doctype html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>My Application | New Patient<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"/\"</span>&gt;</span>Back<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>New Patient<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">action</span>=<span class=\"hljs-string\">\"/patient\"</span> <span class=\"hljs-attr\">method</span>=<span class=\"hljs-string\">\"post\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>\n        First Name: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"firstName\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>\n        Last Name: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"lastName\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span>&gt;</span>Create New Patient<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n<h4 id=\"creating-get-patient-route\">Creating GET /patient route</h4>\n<p>This route will show list of existing patients.</p>\n<p>Create new route with the following handler:</p>\n<pre><code class=\"lang-js\">app.get(<span class=\"hljs-string\">'/patient'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n    models.Patient.find(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, patients</span>) </span>{\n        <span class=\"hljs-keyword\">if</span> (err) {\n            <span class=\"hljs-keyword\">return</span> res.render(<span class=\"hljs-string\">'info'</span>, {<span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">'Error occured: '</span> + err.message, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'/'</span>});\n        }\n\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'List of patients:'</span>, patients);\n        res.render(<span class=\"hljs-string\">'patients'</span>, {<span class=\"hljs-attr\">patients</span>: patients});\n    });\n});\n</code></pre>\n<p>Create new view for it <code>public/views/patients.njk</code>:</p>\n<pre><code class=\"lang-html\"><span class=\"xml\"><span class=\"hljs-meta\">&lt;!doctype html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>My Application | Patients<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"/\"</span>&gt;</span>Back<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>Patients<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">table</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">thead</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>#<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>First Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>Last Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">thead</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tbody</span>&gt;</span>\n\n    </span><span class=\"hljs-template-tag\">{% <span class=\"hljs-name\"><span class=\"hljs-name\">for</span></span> patient <span class=\"hljs-keyword\">in</span> patients %}</span><span class=\"xml\">\n\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{ loop.index }}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{ patient.firstName }}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{ patient.lastName }}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n\n    </span><span class=\"hljs-template-tag\">{% <span class=\"hljs-name\"><span class=\"hljs-name\">endfor</span></span> %}</span><span class=\"xml\">\n\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tbody</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">table</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></span>\n</code></pre>\n<p>Here we use <a href=\"https://mozilla.github.io/nunjucks/templating.html#for\">for/endfor</a> tag of Nunjucks.</p>\n<h4 id=\"adjusting-home-page-to-list-available-operations\">Adjusting home page to list available operations</h4>\n<p>Replace the content of the <code>public/views/main.njk</code> with this:</p>\n<pre><code class=\"lang-html\"><span class=\"hljs-meta\">&lt;!doctype html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>My Application<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"/patient\"</span>&gt;</span>Patients<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"/create.html\"</span>&gt;</span>New Patient<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n<h4 id=\"complete-index-js-content\">Complete <code>index.js</code> content</h4>\n<pre><code class=\"lang-js\"><span class=\"hljs-meta\">'use strict'</span>;\n\n<span class=\"hljs-keyword\">var</span> express = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'express'</span>);\n<span class=\"hljs-keyword\">var</span> app = express();\n<span class=\"hljs-keyword\">var</span> nunjucks = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'nunjucks'</span>);\n<span class=\"hljs-keyword\">var</span> path = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'path'</span>);\n<span class=\"hljs-keyword\">var</span> bodyParser = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'body-parser'</span>);\n<span class=\"hljs-keyword\">var</span> mongoose = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'mongoose'</span>);\n<span class=\"hljs-keyword\">var</span> models = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'./models'</span>);\n\nmongoose.connect(<span class=\"hljs-string\">'mongodb://localhost:27017/mydb'</span>);\n<span class=\"hljs-keyword\">var</span> db = mongoose.connection;\n\ndb.once(<span class=\"hljs-string\">'open'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-keyword\">const</span> VIEW_PATH = path.join(__dirname, <span class=\"hljs-string\">'public'</span>, <span class=\"hljs-string\">'views'</span>);\n\n    <span class=\"hljs-comment\">// configure Nunjucks templating</span>\n    nunjucks.configure(\n        VIEW_PATH, <span class=\"hljs-comment\">// tell nunjucks, that all views are in views/ folder</span>\n        {<span class=\"hljs-attr\">express</span>: app} <span class=\"hljs-comment\">// tell nunjucks, that this is express app</span>\n    );\n\n    <span class=\"hljs-comment\">// set view engine to custom extension - njk</span>\n    app.set(<span class=\"hljs-string\">'view engine'</span>, <span class=\"hljs-string\">'njk'</span>);\n\n    app.use(bodyParser.urlencoded({<span class=\"hljs-attr\">extended</span>: <span class=\"hljs-literal\">false</span>}));\n\n    app.use(<span class=\"hljs-string\">'*.html'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{ <span class=\"hljs-comment\">// render all html files with Nunjucks</span>\n\n        <span class=\"hljs-comment\">// show original URL in the console</span>\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Original URL: %s'</span>, req.originalUrl);\n\n        <span class=\"hljs-comment\">// generate path to view</span>\n        <span class=\"hljs-keyword\">let</span> view_path = path.join(VIEW_PATH, req.originalUrl);\n\n        <span class=\"hljs-comment\">// replace *.html to *.njk</span>\n        view_path = view_path.replace(<span class=\"hljs-regexp\">/\\..+$/</span>, <span class=\"hljs-string\">'.njk'</span>);\n\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'File to render: %s'</span>, view_path);\n\n        <span class=\"hljs-comment\">// render template</span>\n        res.render(view_path);\n    });\n\n\n    app.get(<span class=\"hljs-string\">'/'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n        res.render(<span class=\"hljs-string\">'main'</span>);\n    });\n\n    app.get(<span class=\"hljs-string\">'/patient'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n        models.Patient.find(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, patients</span>) </span>{\n            <span class=\"hljs-keyword\">if</span> (err) {\n                <span class=\"hljs-keyword\">return</span> res.render(<span class=\"hljs-string\">'info'</span>, {<span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">'Error occured: '</span> + err.message, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'/'</span>});\n            }\n\n            <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'List of patients:'</span>, patients);\n            res.render(<span class=\"hljs-string\">'patients'</span>, {<span class=\"hljs-attr\">patients</span>: patients});\n        });\n    });\n\n    app.post(<span class=\"hljs-string\">'/patient'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Request body:'</span>, req.body);\n\n        <span class=\"hljs-comment\">// create model and fill fields from request body</span>\n        <span class=\"hljs-keyword\">let</span> newPatient = <span class=\"hljs-keyword\">new</span> models.Patient(req.body);\n\n        <span class=\"hljs-comment\">// try to save patient</span>\n        newPatient.save(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err</span>) </span>{\n            <span class=\"hljs-comment\">// if there is error, show it and stop handler with return</span>\n            <span class=\"hljs-keyword\">if</span> (err) {\n                <span class=\"hljs-keyword\">return</span> res.render(<span class=\"hljs-string\">'info'</span>, {<span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">'Error occured: '</span> + err.message, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'/'</span>});\n            }\n\n            <span class=\"hljs-comment\">// all right, show success message</span>\n            res.render(<span class=\"hljs-string\">'info'</span>, {<span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">'Patient successfully created.'</span>, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'/'</span>});\n        });\n    });\n\n    app.listen(<span class=\"hljs-number\">3000</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Listening http://localhost:3000...'</span>);\n    });\n});\n</code></pre>\n<h4 id=\"checking-new-features\">Checking new features</h4>\n<ul>\n<li>Restart the application.</li>\n<li>Navigate to the home page in the browser.</li>\n<li>Try to create new patient<ul>\n<li>Submit the form without filling fields, you should see error message;</li>\n<li>Submit the form with correct data, you should see success message;</li>\n</ul>\n</li>\n<li>Navigate to Patients page, you should see list of existing patients</li>\n</ul>\n<h3 id=\"routers\">Routers</h3>\n<p>If we have <code>/patient</code> and <code>/user</code> routes keeping all route handlers in <code>index.js</code> is not the best practice.\nTo improve maintainability of our code base we will move group of routes into own router.</p>\n<h4 id=\"creating-patient-router\">Creating Patient router</h4>\n<p>Create <code>routes/Patient.js</code> file. Create router object and include our models too.</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-meta\">'use strict'</span>;\n\n<span class=\"hljs-keyword\">var</span> router = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'express'</span>).Router();\n<span class=\"hljs-keyword\">var</span> models = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'../models'</span>);\n</code></pre>\n<p>Move <code>.get(&#39;/patient&#39;)</code> and <code>.post(/patient)</code> handlers into <code>routes/Patient.js</code>. Replace <code>app.</code> with <code>router.</code> and <code>/patient</code> with <code>/</code>. Also export router instance.</p>\n<pre><code class=\"lang-js\">router\n    .get(<span class=\"hljs-string\">'/'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n        models.Patient.find(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, patients</span>) </span>{\n            <span class=\"hljs-keyword\">if</span> (err) {\n                <span class=\"hljs-keyword\">return</span> res.render(<span class=\"hljs-string\">'info'</span>, {<span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">'Error occured: '</span> + err.message, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'/'</span>});\n            }\n\n            <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'List of patients:'</span>, patients);\n            res.render(<span class=\"hljs-string\">'patients'</span>, {<span class=\"hljs-attr\">patients</span>: patients});\n        });\n    })\n    .post(<span class=\"hljs-string\">'/'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Request body:'</span>, req.body);\n\n        <span class=\"hljs-comment\">// create model and fill fields from request body</span>\n        <span class=\"hljs-keyword\">let</span> newPatient = <span class=\"hljs-keyword\">new</span> models.Patient(req.body);\n\n        <span class=\"hljs-comment\">// try to save patient</span>\n        newPatient.save(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err</span>) </span>{\n            <span class=\"hljs-comment\">// if there is error, show it and stop handler with return</span>\n            <span class=\"hljs-keyword\">if</span> (err) {\n                <span class=\"hljs-keyword\">return</span> res.render(<span class=\"hljs-string\">'info'</span>, {<span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">'Error occured: '</span> + err.message, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'/'</span>});\n            }\n\n            <span class=\"hljs-comment\">// all right, show success message</span>\n            res.render(<span class=\"hljs-string\">'info'</span>, {<span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">'Patient successfully created.'</span>, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'/'</span>});\n        });\n    });\n\n<span class=\"hljs-built_in\">module</span>.exports = router;\n</code></pre>\n<p>Create <code>routes/index.js</code> with the following content:</p>\n<pre><code class=\"lang-js\">var PatientRouter = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'./Patient'</span>);\n<span class=\"hljs-regexp\">//</span> var UserRouter = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'./user'</span>);\n\n<span class=\"hljs-built_in\">module</span>.exports.Patient = PatientRouter;\n<span class=\"hljs-regexp\">//</span> <span class=\"hljs-built_in\">module</span>.exports.User = UserRouter;\n</code></pre>\n<p>It allows us to include all routers with one require statement.</p>\n<p>Complete <code>routes/Patient.js</code>:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-meta\">'use strict'</span>;\n\n<span class=\"hljs-keyword\">var</span> router = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'express'</span>).Router();\n<span class=\"hljs-keyword\">var</span> models = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'../models'</span>);\n\nrouter\n    .get(<span class=\"hljs-string\">'/'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n        models.Patient.find(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, patients</span>) </span>{\n            <span class=\"hljs-keyword\">if</span> (err) {\n                <span class=\"hljs-keyword\">return</span> res.render(<span class=\"hljs-string\">'info'</span>, {<span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">'Error occured: '</span> + err.message, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'/'</span>});\n            }\n\n            <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'List of patients:'</span>, patients);\n            res.render(<span class=\"hljs-string\">'patients'</span>, {<span class=\"hljs-attr\">patients</span>: patients});\n        });\n    })\n    .post(<span class=\"hljs-string\">'/'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Request body:'</span>, req.body);\n\n        <span class=\"hljs-comment\">// create model and fill fields from request body</span>\n        <span class=\"hljs-keyword\">let</span> newPatient = <span class=\"hljs-keyword\">new</span> models.Patient(req.body);\n\n        <span class=\"hljs-comment\">// try to save patient</span>\n        newPatient.save(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err</span>) </span>{\n            <span class=\"hljs-comment\">// if there is error, show it and stop handler with return</span>\n            <span class=\"hljs-keyword\">if</span> (err) {\n                <span class=\"hljs-keyword\">return</span> res.render(<span class=\"hljs-string\">'info'</span>, {<span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">'Error occured: '</span> + err.message, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'/'</span>});\n            }\n\n            <span class=\"hljs-comment\">// all right, show success message</span>\n            res.render(<span class=\"hljs-string\">'info'</span>, {<span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">'Patient successfully created.'</span>, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'/'</span>});\n        });\n    });\n\n<span class=\"hljs-built_in\">module</span>.exports = router;\n</code></pre>\n<h4 id=\"using-patient-router\">Using Patient router</h4>\n<p>Remove including models from <code>index.js</code></p>\n<pre><code class=\"lang-js\"><span class=\"hljs-keyword\">var</span> models = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'./models'</span>); <span class=\"hljs-comment\">// remove this line</span>\n</code></pre>\n<p>Include router into <code>index.js</code></p>\n<pre><code class=\"lang-js\"><span class=\"hljs-attribute\">var routers</span> = require(<span class=\"hljs-string\">'./routes'</span>);\n</code></pre>\n<p>Replace <code>app.get(&#39;/patient&#39;, ...)</code> and <code>app.post(&#39;/patient&#39;, ...)</code> with this line:</p>\n<pre><code class=\"lang-js\">app.<span class=\"hljs-keyword\">use</span>(<span class=\"hljs-string\">'/patient'</span>, routers.Patient);\n</code></pre>\n<p>It means, use <code>routers.Patient</code> router for all routes starting with <code>/patient</code> URL.\nThat&#39;s why we replaced <code>/patient</code> to <code>/</code> in get/post router handlers.</p>\n<h4 id=\"complete-index-js-\">Complete <code>index.js</code></h4>\n<pre><code class=\"lang-js\"><span class=\"hljs-meta\">'use strict'</span>;\n\n<span class=\"hljs-keyword\">var</span> express = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'express'</span>);\n<span class=\"hljs-keyword\">var</span> app = express();\n<span class=\"hljs-keyword\">var</span> nunjucks = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'nunjucks'</span>);\n<span class=\"hljs-keyword\">var</span> path = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'path'</span>);\n<span class=\"hljs-keyword\">var</span> bodyParser = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'body-parser'</span>);\n<span class=\"hljs-keyword\">var</span> mongoose = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'mongoose'</span>);\n<span class=\"hljs-keyword\">var</span> routers = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'./routes'</span>);\n\nmongoose.connect(<span class=\"hljs-string\">'mongodb://localhost:27017/mydb'</span>);\n<span class=\"hljs-keyword\">var</span> db = mongoose.connection;\n\ndb.once(<span class=\"hljs-string\">'open'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-keyword\">const</span> VIEW_PATH = path.join(__dirname, <span class=\"hljs-string\">'public'</span>, <span class=\"hljs-string\">'views'</span>);\n\n    <span class=\"hljs-comment\">// configure Nunjucks templating</span>\n    nunjucks.configure(\n        VIEW_PATH, <span class=\"hljs-comment\">// tell nunjucks, that all views are in views/ folder</span>\n        {<span class=\"hljs-attr\">express</span>: app} <span class=\"hljs-comment\">// tell nunjucks, that this is express app</span>\n    );\n\n    <span class=\"hljs-comment\">// set view engine to custom extension - njk</span>\n    app.set(<span class=\"hljs-string\">'view engine'</span>, <span class=\"hljs-string\">'njk'</span>);\n\n    app.use(bodyParser.urlencoded({<span class=\"hljs-attr\">extended</span>: <span class=\"hljs-literal\">false</span>}));\n\n    app.use(<span class=\"hljs-string\">'*.html'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{ <span class=\"hljs-comment\">// render all html files with Nunjucks</span>\n\n        <span class=\"hljs-comment\">// show original URL in the console</span>\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Original URL: %s'</span>, req.originalUrl);\n\n        <span class=\"hljs-comment\">// generate path to view</span>\n        <span class=\"hljs-keyword\">let</span> view_path = path.join(VIEW_PATH, req.originalUrl);\n\n        <span class=\"hljs-comment\">// replace *.html to *.njk</span>\n        view_path = view_path.replace(<span class=\"hljs-regexp\">/\\..+$/</span>, <span class=\"hljs-string\">'.njk'</span>);\n\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'File to render: %s'</span>, view_path);\n\n        <span class=\"hljs-comment\">// render template</span>\n        res.render(view_path);\n    });\n\n\n    app.get(<span class=\"hljs-string\">'/'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n        res.render(<span class=\"hljs-string\">'main'</span>);\n    });\n\n    app.use(<span class=\"hljs-string\">'/patient'</span>, routers.Patient);\n\n    app.listen(<span class=\"hljs-number\">3000</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Listening http://localhost:3000...'</span>);\n    });\n});\n</code></pre>\n<h3 id=\"integrating-angularjs\">Integrating AngularJS</h3>\n<p>Initialize bower:</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-keyword\">bower </span>init\n</code></pre>\n<p>Create <code>.bowerrc</code> file on root path with the following content:</p>\n<pre><code class=\"lang-json\">{\n  <span class=\"hljs-attr\">\"directory\"</span>: <span class=\"hljs-string\">\"public/lib\"</span>\n}\n</code></pre>\n<p>Install necessary libraries:</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-keyword\">bower </span><span class=\"hljs-keyword\">install </span>angularjs -S\n<span class=\"hljs-keyword\">bower </span><span class=\"hljs-keyword\">install </span>angular-ui-router -S\n<span class=\"hljs-keyword\">bower </span><span class=\"hljs-keyword\">install </span>angular-resource -S\n</code></pre>\n<p>In <code>index.js</code> after <code>app.set(&#39;view engine&#39;, ...);</code> add following line:</p>\n<pre><code class=\"lang-js\">app.use(<span class=\"hljs-string\">'/assets'</span>, express.<span class=\"hljs-keyword\">static</span>(path.<span class=\"hljs-keyword\">join</span>(__dirname, <span class=\"hljs-string\">'public'</span>)));\n</code></pre>\n<p>It will serve assets from <code>public</code> directory. For example, <code>/assets/js/angular.js</code> means download it from <code>/public/js/angular.js</code>.</p>\n<p>Include libraries into <code>public/views/main.njk</code> just before the closing <code>&lt;/body&gt;</code> tag:</p>\n<pre><code class=\"lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"/assets/lib/angular/angular.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"/assets/lib/angular-ui-router/release/angular-ui-router.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"/assets/lib/angular-resource/angular-resource.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n</code></pre>\n<p>Create <code>public/src/js/app.js</code> with the following content:</p>\n<pre><code class=\"lang-js\">angular.<span class=\"hljs-built_in\">module</span>(<span class=\"hljs-string\">'MyApp'</span>, [<span class=\"hljs-string\">'ngResource'</span>, <span class=\"hljs-string\">'ui-router'</span>])\n    .controller(<span class=\"hljs-string\">'PatientCtrl'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">($scope)</span></span> {\n\n    });\n</code></pre>\n<p>This is our angular application. In it we require <code>ngResource</code> and <code>ui-router</code> modules.\nInclude it in the <code>public/views/main.njk</code> too just before closing body tag.</p>\n<pre><code class=\"lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"/assets/src/js/app.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n<p>Convert our main page into angular application putting <code>ng-app</code> directive into <code>&lt;html&gt;</code> tag:</p>\n<pre><code class=\"lang-html\">&lt;<span class=\"hljs-selector-tag\">html</span> lang=<span class=\"hljs-string\">\"en\"</span> ng-app=<span class=\"hljs-string\">\"MyApp\"</span>&gt;\n</code></pre>\n<p>We will change <code>public/views/main.njk</code> to show menu and container for views:</p>\n<pre><code class=\"lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">ui-sref</span>=<span class=\"hljs-string\">\"patientList\"</span>&gt;</span>Patients<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">ui-sref</span>=<span class=\"hljs-string\">\"patientCreate\"</span>&gt;</span>New Patient<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ui-view</span>/&gt;</span>\n</code></pre>\n<p>Values in the <code>ui-sref</code> attributes are states of UI Router.</p>\n<p><code>&lt;ui-view/&gt;</code> is the container for our partial views. When states changed partials loads into that container.</p>\n<p>Now let&#39;s create/configure states in <code>public/src/js/app.js</code>:</p>\n<pre><code class=\"lang-js\">angular.module(<span class=\"hljs-string\">'MyApp'</span>, [<span class=\"hljs-string\">'ngResource'</span>, <span class=\"hljs-string\">'ui.router'</span>])\n    .config(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">($stateProvider, $urlRouterProvider)</span> </span>{\n        $stateProvider\n            .state(<span class=\"hljs-string\">'patientList'</span>, {\n                url: <span class=\"hljs-string\">'/patient/list'</span>, <span class=\"hljs-comment\">// URL to show in the address bar</span>\n                templateUrl: <span class=\"hljs-string\">'/patients.html'</span>, <span class=\"hljs-comment\">// partial view to load into &lt;ui-view/&gt;</span>\n                controller: <span class=\"hljs-string\">'PatientsCtrl'</span> <span class=\"hljs-comment\">// controller to use in that partial view</span>\n            })\n            .state(<span class=\"hljs-string\">'patientCreate'</span>, {\n                url: <span class=\"hljs-string\">'/patient/create'</span>,\n                templateUrl: <span class=\"hljs-string\">'/create.html'</span>,\n                controller: <span class=\"hljs-string\">'PatientCtrl'</span>\n            });\n\n        <span class=\"hljs-comment\">// by default go to this address (patientList state)</span>\n        $urlRouterProvider.otherwise(<span class=\"hljs-string\">'/patient/list'</span>);\n    })\n    .controller(<span class=\"hljs-string\">'PatientCtrl'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">($scope)</span> </span>{\n\n    })\n    .controller(<span class=\"hljs-string\">'PatientsCtrl'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">($scope)</span> </span>{\n\n    });\n</code></pre>\n<p>As you know, our views <code>public/views/patients.njk</code> and <code>public/views/create.njk</code> are partials, not full HTML source, so we leave only necessary parts of them and delete unnecessary HTML tags.</p>\n<p>File <code>public/views/patients.njk</code>:</p>\n<pre><code class=\"lang-html\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>Patients<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">table</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">thead</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>#<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>First Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>Last Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">thead</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tbody</span>&gt;</span>\n\n    </span><span class=\"hljs-template-tag\">{% <span class=\"hljs-name\"><span class=\"hljs-name\">for</span></span> patient <span class=\"hljs-keyword\">in</span> patients %}</span><span class=\"xml\">\n\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{ loop.index }}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{ patient.firstName }}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{ patient.lastName }}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n\n    </span><span class=\"hljs-template-tag\">{% <span class=\"hljs-name\"><span class=\"hljs-name\">endfor</span></span> %}</span><span class=\"xml\">\n\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tbody</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">table</span>&gt;</span></span>\n</code></pre>\n<p>File <code>public/views/create.njk</code>:</p>\n<pre><code class=\"lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>New Patient<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">action</span>=<span class=\"hljs-string\">\"/patient\"</span> <span class=\"hljs-attr\">method</span>=<span class=\"hljs-string\">\"post\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>\n        First Name: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"firstName\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>\n        Last Name: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"lastName\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span>&gt;</span>Create New Patient<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n</code></pre>\n<p>File <code>public/views/main.njk</code>:</p>\n<pre><code class=\"lang-html\"><span class=\"hljs-meta\">&lt;!doctype html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span> <span class=\"hljs-attr\">ng-app</span>=<span class=\"hljs-string\">\"MyApp\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>My Application<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">ui-sref</span>=<span class=\"hljs-string\">\"patientList\"</span>&gt;</span>Patients<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">ui-sref</span>=<span class=\"hljs-string\">\"patientCreate\"</span>&gt;</span>New Patient<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ui-view</span>/&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"/assets/lib/angular/angular.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"/assets/lib/angular-ui-router/release/angular-ui-router.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"/assets/lib/angular-resource/angular-resource.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"/assets/src/js/app.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n<h4 id=\"content-of-index-js-\">Content of <code>index.js</code>:</h4>\n<pre><code class=\"lang-js\"><span class=\"hljs-meta\">'use strict'</span>;\n\n<span class=\"hljs-keyword\">var</span> express = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'express'</span>);\n<span class=\"hljs-keyword\">var</span> app = express();\n<span class=\"hljs-keyword\">var</span> nunjucks = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'nunjucks'</span>);\n<span class=\"hljs-keyword\">var</span> path = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'path'</span>);\n<span class=\"hljs-keyword\">var</span> bodyParser = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'body-parser'</span>);\n<span class=\"hljs-keyword\">var</span> mongoose = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'mongoose'</span>);\n<span class=\"hljs-keyword\">var</span> routers = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'./routes'</span>);\n\nmongoose.connect(<span class=\"hljs-string\">'mongodb://localhost:27017/mydb'</span>);\n<span class=\"hljs-keyword\">var</span> db = mongoose.connection;\n\ndb.once(<span class=\"hljs-string\">'open'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-keyword\">const</span> VIEW_PATH = path.join(__dirname, <span class=\"hljs-string\">'public'</span>, <span class=\"hljs-string\">'views'</span>);\n\n    <span class=\"hljs-comment\">// configure Nunjucks templating</span>\n    nunjucks.configure(\n        VIEW_PATH, <span class=\"hljs-comment\">// tell nunjucks, that all views are in views/ folder</span>\n        {<span class=\"hljs-attr\">express</span>: app} <span class=\"hljs-comment\">// tell nunjucks, that this is express app</span>\n    );\n\n    <span class=\"hljs-comment\">// set view engine to custom extension - njk</span>\n    app.set(<span class=\"hljs-string\">'view engine'</span>, <span class=\"hljs-string\">'njk'</span>);\n\n    app.use(<span class=\"hljs-string\">'/assets'</span>, express.static(path.join(__dirname, <span class=\"hljs-string\">'public'</span>)));\n\n    app.use(bodyParser.urlencoded({<span class=\"hljs-attr\">extended</span>: <span class=\"hljs-literal\">false</span>}));\n\n    app.use(<span class=\"hljs-string\">'*.html'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{ <span class=\"hljs-comment\">// render all html files with Nunjucks</span>\n\n        <span class=\"hljs-comment\">// show original URL in the console</span>\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Original URL: %s'</span>, req.originalUrl);\n\n        <span class=\"hljs-comment\">// generate path to view</span>\n        <span class=\"hljs-keyword\">let</span> view_path = path.join(VIEW_PATH, req.originalUrl);\n\n        <span class=\"hljs-comment\">// replace *.html to *.njk</span>\n        view_path = view_path.replace(<span class=\"hljs-regexp\">/\\..+$/</span>, <span class=\"hljs-string\">'.njk'</span>);\n\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'File to render: %s'</span>, view_path);\n\n        <span class=\"hljs-comment\">// render template</span>\n        res.render(view_path);\n    });\n\n\n    app.get(<span class=\"hljs-string\">'/'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n        res.render(<span class=\"hljs-string\">'main'</span>);\n    });\n\n    app.use(<span class=\"hljs-string\">'/patient'</span>, routers.Patient);\n\n    app.listen(<span class=\"hljs-number\">3000</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Listening http://localhost:3000...'</span>);\n    });\n});\n</code></pre>\n<h4 id=\"check-ui-router\">Check UI Router</h4>\n<p>For now you cannot create new patient. Also patients page does not show list of patients. But navigation should work. We will implement creating new patients and showing list of patients features later.</p>\n<ul>\n<li>Restart the application, then navigate to <code>http://localhost:3000</code>.\nIn the address bar you should see the URL <code>http://localhost:3000/#/patient/list</code>, because our UI Router loads it by default. </li>\n<li>Try to navigate by <code>Patients</code> and <code>New Patient</code> links.\nOn the page only URL on the address bar and container for our views should be changed. Navigation links should remain as is.</li>\n</ul>\n<h3 id=\"integrating-resource\">Integrating $resource</h3>\n<p>After integrating <code>$resource</code> we will have following functions:</p>\n<ul>\n<li><code>Patient.query()</code> - to retrieve list of patients</li>\n<li><code>Patient.get()</code> - to retrieve one patient by <code>id</code></li>\n<li><code>Patient.$save()</code> - to create new patient</li>\n<li><code>Patient.$update()</code> - to update existing patient by <code>id</code></li>\n<li><code>Patient.$delete()</code> - to delete existing patient by <code>id</code></li>\n</ul>\n<h4 id=\"retrieving-list-of-patients\">Retrieving list of patients</h4>\n<p>Create factory to work with Patient model in <code>public/src/js/app.js</code>:</p>\n<pre><code class=\"lang-js\">angular.module(<span class=\"hljs-string\">'MyApp'</span>, [<span class=\"hljs-string\">'ngResource'</span>, <span class=\"hljs-string\">'ui.router'</span>])\n    .config(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">($stateProvider, $urlRouterProvider)</span> </span>{\n        <span class=\"hljs-comment\">// ... doesn't changed ...</span>\n    })\n    .factory(<span class=\"hljs-string\">'Patient'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">($resource)</span> </span>{\n        <span class=\"hljs-keyword\">return</span> $resource(\n            <span class=\"hljs-string\">'/patient/:id'</span>, <span class=\"hljs-comment\">// URL to patient backend API</span>\n            {id: <span class=\"hljs-string\">'@_id'</span>}, <span class=\"hljs-comment\">// obtain id from _id field of patient object</span>\n            {\n                update: {\n                    method: <span class=\"hljs-string\">'PUT'</span> <span class=\"hljs-comment\">// for .update() method use PUT request</span>\n                }\n            }\n        );\n    })\n    .controller(<span class=\"hljs-string\">'PatientCtrl'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">($scope)</span> </span>{\n\n    })\n    .controller(<span class=\"hljs-string\">'PatientsCtrl'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">($scope, Patient)</span> </span>{\n        $scope.patients = Patient.query(); <span class=\"hljs-comment\">// get list of patients</span>\n    });\n</code></pre>\n<p>Change <code>public/views/patients.njk</code>:</p>\n<pre><code class=\"lang-html\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>Patients<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">table</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">thead</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>#<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>First Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>Last Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">thead</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tbody</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span> <span class=\"hljs-attr\">ng-repeat</span>=<span class=\"hljs-string\">\"patient in patients\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{ $index+1 }}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{ patient.firstName }}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{ patient.lastName }}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tbody</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">table</span>&gt;</span></span>\n</code></pre>\n<p>We removed <code>{%for/endfor%}</code> nunjucks tags.\nInstead used angular&#39;s <code>ng-repeat</code> tag.</p>\n<p>Nunjucsk uses <code>{{ }}</code> tags to render values, Angular uses same syntax, so there is conflict.\nWe have to configure Nunjucks&#39;s tags to something else, for example, to <code>{{{ }}}</code>, change <code>nunjucks.configure(...)</code> in <code>index.js</code> to the following:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-comment\">// configure Nunjucks templating</span>\n    <span class=\"hljs-selector-tag\">nunjucks</span><span class=\"hljs-selector-class\">.configure</span>(\n        VIEW_PATH, <span class=\"hljs-comment\">// tell nunjucks, that all views are in views/ folder</span>\n        {\n            <span class=\"hljs-attribute\">express</span>: app, <span class=\"hljs-comment\">// tell nunjucks, that this is express app</span>\n            <span class=\"hljs-attribute\">tags</span>: {\n                <span class=\"hljs-attribute\">variableStart</span>: <span class=\"hljs-string\">'{{{'</span>,\n                <span class=\"hljs-attribute\">variableEnd</span>: <span class=\"hljs-string\">'}}}'</span>\n            }\n        }\n    );\n</code></pre>\n<p>Add body parser for JSON format in <code>index.js</code> after <code>app.use(bodyParser.urlencoded({extended: false}));</code> call:</p>\n<pre><code class=\"lang-js\">    <span class=\"hljs-selector-tag\">app</span><span class=\"hljs-selector-class\">.use</span>(<span class=\"hljs-selector-tag\">bodyParser</span><span class=\"hljs-selector-class\">.json</span>());\n</code></pre>\n<p>Change <code>GET /</code> request handler in <code>routes/Patient.js</code> to response in JSON format, instead of rendering HTML page:</p>\n<pre><code class=\"lang-js\">router\n    .get(<span class=\"hljs-string\">'/'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n        models.Patient.find(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, patients</span>) </span>{\n            <span class=\"hljs-keyword\">if</span> (err) {\n                <span class=\"hljs-keyword\">return</span> res.json({<span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">'Error occured: '</span> + err.message});\n            }\n\n            <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'List of patients:'</span>, patients);\n            res.json(patients);\n        });\n    })\n</code></pre>\n<p>Restart the application and test patients list page.\nIt should show the list of patients.</p>\n<h4 id=\"content-of-changed-files\">Content of changed files</h4>\n<p>File <code>index.js</code>:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-meta\">'use strict'</span>;\n\n<span class=\"hljs-keyword\">var</span> express = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'express'</span>);\n<span class=\"hljs-keyword\">var</span> app = express();\n<span class=\"hljs-keyword\">var</span> nunjucks = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'nunjucks'</span>);\n<span class=\"hljs-keyword\">var</span> path = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'path'</span>);\n<span class=\"hljs-keyword\">var</span> bodyParser = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'body-parser'</span>);\n<span class=\"hljs-keyword\">var</span> mongoose = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'mongoose'</span>);\n<span class=\"hljs-keyword\">var</span> routers = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'./routes'</span>);\n\nmongoose.connect(<span class=\"hljs-string\">'mongodb://localhost:27017/mydb'</span>);\n<span class=\"hljs-keyword\">var</span> db = mongoose.connection;\n\ndb.once(<span class=\"hljs-string\">'open'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-keyword\">const</span> VIEW_PATH = path.join(__dirname, <span class=\"hljs-string\">'public'</span>, <span class=\"hljs-string\">'views'</span>);\n\n    <span class=\"hljs-comment\">// configure Nunjucks templating</span>\n    nunjucks.configure(\n        VIEW_PATH, <span class=\"hljs-comment\">// tell nunjucks, that all views are in views/ folder</span>\n        {\n            <span class=\"hljs-attr\">express</span>: app, <span class=\"hljs-comment\">// tell nunjucks, that this is express app</span>\n            tags: {\n                <span class=\"hljs-attr\">variableStart</span>: <span class=\"hljs-string\">'{{{'</span>,\n                <span class=\"hljs-attr\">variableEnd</span>: <span class=\"hljs-string\">'}}}'</span>\n            }\n        }\n    );\n\n    <span class=\"hljs-comment\">// set view engine to custom extension - njk</span>\n    app.set(<span class=\"hljs-string\">'view engine'</span>, <span class=\"hljs-string\">'njk'</span>);\n\n    app.use(<span class=\"hljs-string\">'/assets'</span>, express.static(path.join(__dirname, <span class=\"hljs-string\">'public'</span>)));\n\n    app.use(bodyParser.urlencoded({<span class=\"hljs-attr\">extended</span>: <span class=\"hljs-literal\">false</span>}));\n    app.use(bodyParser.json());\n\n    app.use(<span class=\"hljs-string\">'*.html'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{ <span class=\"hljs-comment\">// render all html files with Nunjucks</span>\n\n        <span class=\"hljs-comment\">// show original URL in the console</span>\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Original URL: %s'</span>, req.originalUrl);\n\n        <span class=\"hljs-comment\">// generate path to view</span>\n        <span class=\"hljs-keyword\">let</span> view_path = path.join(VIEW_PATH, req.originalUrl);\n\n        <span class=\"hljs-comment\">// replace *.html to *.njk</span>\n        view_path = view_path.replace(<span class=\"hljs-regexp\">/\\..+$/</span>, <span class=\"hljs-string\">'.njk'</span>);\n\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'File to render: %s'</span>, view_path);\n\n        <span class=\"hljs-comment\">// render template</span>\n        res.render(view_path);\n    });\n\n\n    app.get(<span class=\"hljs-string\">'/'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n        res.render(<span class=\"hljs-string\">'main'</span>);\n    });\n\n    app.use(<span class=\"hljs-string\">'/patient'</span>, routers.Patient);\n\n    app.listen(<span class=\"hljs-number\">3000</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Listening http://localhost:3000...'</span>);\n    });\n});\n</code></pre>\n<p>File <code>routes/Patient.js</code>:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-meta\">'use strict'</span>;\n\n<span class=\"hljs-keyword\">var</span> router = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'express'</span>).Router();\n<span class=\"hljs-keyword\">var</span> models = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'../models'</span>);\n\nrouter\n    .get(<span class=\"hljs-string\">'/'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n        models.Patient.find(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, patients</span>) </span>{\n            <span class=\"hljs-keyword\">if</span> (err) {\n                <span class=\"hljs-keyword\">return</span> res.json({<span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">'Error occured: '</span> + err.message});\n            }\n\n            <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'List of patients:'</span>, patients);\n            res.json(patients);\n        });\n    })\n    .post(<span class=\"hljs-string\">'/'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Request body:'</span>, req.body);\n\n        <span class=\"hljs-comment\">// create model and fill fields from request body</span>\n        <span class=\"hljs-keyword\">let</span> newPatient = <span class=\"hljs-keyword\">new</span> models.Patient(req.body);\n\n        <span class=\"hljs-comment\">// try to save patient</span>\n        newPatient.save(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err</span>) </span>{\n            <span class=\"hljs-comment\">// if there is error, show it and stop handler with return</span>\n            <span class=\"hljs-keyword\">if</span> (err) {\n                <span class=\"hljs-keyword\">return</span> res.render(<span class=\"hljs-string\">'info'</span>, {<span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">'Error occured: '</span> + err.message, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'/'</span>});\n            }\n\n            <span class=\"hljs-comment\">// all right, show success message</span>\n            res.render(<span class=\"hljs-string\">'info'</span>, {<span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">'Patient successfully created.'</span>, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'/'</span>});\n        });\n    });\n\n<span class=\"hljs-built_in\">module</span>.exports = router;\n</code></pre>\n<p>File <code>public/src/js/app.js</code>:</p>\n<pre><code class=\"lang-js\">angular.module(<span class=\"hljs-string\">'MyApp'</span>, [<span class=\"hljs-string\">'ngResource'</span>, <span class=\"hljs-string\">'ui.router'</span>])\n    .config(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">($stateProvider, $urlRouterProvider)</span> </span>{\n        $stateProvider\n            .state(<span class=\"hljs-string\">'patientList'</span>, {\n                url: <span class=\"hljs-string\">'/patient/list'</span>, <span class=\"hljs-comment\">// URL to show in the address bar</span>\n                templateUrl: <span class=\"hljs-string\">'/patients.html'</span>, <span class=\"hljs-comment\">// partial view to load into &lt;ui-view/&gt;</span>\n                controller: <span class=\"hljs-string\">'PatientsCtrl'</span> <span class=\"hljs-comment\">// controller to use in that partial view</span>\n            })\n            .state(<span class=\"hljs-string\">'patientCreate'</span>, {\n                url: <span class=\"hljs-string\">'/patient/create'</span>,\n                templateUrl: <span class=\"hljs-string\">'/create.html'</span>,\n                controller: <span class=\"hljs-string\">'PatientCtrl'</span>\n            });\n\n        <span class=\"hljs-comment\">// by default go to this address (patientList state)</span>\n        $urlRouterProvider.otherwise(<span class=\"hljs-string\">'/patient/list'</span>);\n    })\n    .factory(<span class=\"hljs-string\">'Patient'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">($resource)</span> </span>{\n        <span class=\"hljs-keyword\">return</span> $resource(\n            <span class=\"hljs-string\">'/patient/:id'</span>, <span class=\"hljs-comment\">// URL to patient backend API</span>\n            {id: <span class=\"hljs-string\">'@_id'</span>}, <span class=\"hljs-comment\">// obtain id from _id field of patient object</span>\n            {\n                update: {\n                    method: <span class=\"hljs-string\">'PUT'</span> <span class=\"hljs-comment\">// for .update() method use PUT request</span>\n                }\n            }\n        );\n    })\n    .controller(<span class=\"hljs-string\">'PatientCtrl'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">($scope)</span> </span>{\n\n    })\n    .controller(<span class=\"hljs-string\">'PatientsCtrl'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">($scope, Patient)</span> </span>{\n        $scope.patients = Patient.query(); <span class=\"hljs-comment\">// get list of patients</span>\n    });\n</code></pre>\n<p>File <code>public/views/patients.njk</code>:</p>\n<pre><code class=\"lang-html\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>Patients<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">table</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">thead</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>#<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>First Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>Last Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">thead</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tbody</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span> <span class=\"hljs-attr\">ng-repeat</span>=<span class=\"hljs-string\">\"patient in patients\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{ $index+1 }}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{ patient.firstName }}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{ patient.lastName }}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tbody</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">table</span>&gt;</span></span>\n</code></pre>\n<h4 id=\"create-new-patient\">Create new patient</h4>\n<p>To actually create new patient we need to implement functionality in the <code>PatientCtrl</code> controller in <code>public/src/js/app.js</code>. Change <code>PatientCtrl</code> to the following:</p>\n<pre><code class=\"lang-js\">angular.module(<span class=\"hljs-string\">'MyApp'</span>, [<span class=\"hljs-string\">'ngResource'</span>, <span class=\"hljs-string\">'ui.router'</span>])\n<span class=\"hljs-comment\">// ...</span>\n.controller(<span class=\"hljs-string\">'PatientCtrl'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">($scope, Patient, $state)</span> </span>{\n        $scope.patient = <span class=\"hljs-keyword\">new</span> Patient(); <span class=\"hljs-comment\">// create empty patient object</span>\n\n        $scope.addPatient = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">()</span> </span>{\n            <span class=\"hljs-comment\">// send ajax request to create new patient</span>\n            $scope.patient.$save(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(resp)</span> </span>{\n                console.log(<span class=\"hljs-string\">'Save response:'</span>, resp);\n\n                <span class=\"hljs-comment\">// after save go to the patients list</span>\n                $state.go(<span class=\"hljs-string\">'patientList'</span>);\n            });\n        }\n    })\n    <span class=\"hljs-comment\">// ...</span>\n</code></pre>\n<p>We inject <code>Patient</code> service into the controller to access its methods. We also inject <code>$state</code> provider to programmatically navigate between states. We use <code>$state.go(&#39;patientList&#39;)</code> to show Patients list page.</p>\n<p>We will change our form in <code>public/views/create.njk</code> to angular form:</p>\n<pre><code class=\"lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>New Patient<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"formPatient\"</span> <span class=\"hljs-attr\">novalidate</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>\n        First Name: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"firstName\"</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"patient.firstName\"</span> <span class=\"hljs-attr\">required</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>\n        Last Name: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"lastName\"</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"patient.lastName\"</span> <span class=\"hljs-attr\">required</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">ng-click</span>=<span class=\"hljs-string\">\"addPatient()\"</span> <span class=\"hljs-attr\">ng-disabled</span>=<span class=\"hljs-string\">\"formPatient.$invalid\"</span>&gt;</span>Create New Patient<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n</code></pre>\n<p><code>novalidate</code> attribute turn off HTML5 built in validations, AngularJS has own validations, so we don&#39;t need them. We also set <code>name</code> attribute of the form, then we can use it, for example, to enable/disable button according to the form state, if form is invalid (<code>formPatient.$invalid == true</code>), then we will disable <code>Create New Patient</code> button, if form is valid (<code>formPatient.$invalid == false</code>) then enable that button. To enable/disable the button we use <code>ng-disabled</code> attribute, if it is <code>true</code>, then button will be disabled, otherwise it will be enabled.</p>\n<p><code>ng-model</code> attribute will bind input to the <code>$scope.patient</code> object&#39;s fields.\nAfter filling all fields with valid values button will be enabled and we can click it.\n<code>ng-click</code> will bind <code>$scope.addPatient()</code> function to the button.</p>\n<p>Now we should change our backend to respond with JSON, instead of HTML, so we have to use <code>res.json()</code> instead of <code>res.render()</code>. Open <code>routes/Patient.js</code> and change <code>POST /</code> handler to the following code:</p>\n<pre><code class=\"lang-js\">router\n    // ...\n    .post(<span class=\"hljs-string\">'/'</span>, <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\"></span>(req, res) {\n        console.log('Request body:', req.body);\n\n        // create model <span class=\"hljs-keyword\">and</span> fill fields from request <span class=\"hljs-keyword\">body</span>\n        let newPatient = <span class=\"hljs-keyword\">new</span> models.Patient(req.<span class=\"hljs-keyword\">body</span>);\n\n        // try to save patient\n        newPatient.save(<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\"></span>(err) {\n            // if there <span class=\"hljs-keyword\">is</span> error, send it <span class=\"hljs-keyword\">and</span> stop handler <span class=\"hljs-keyword\">with</span> <span class=\"hljs-keyword\">return</span>\n            <span class=\"hljs-keyword\">if</span> (err) {\n                <span class=\"hljs-keyword\">return</span> res.json({message: <span class=\"hljs-symbol\">'Error</span> occured: ' + err.message});\n            }\n\n            // <span class=\"hljs-keyword\">all</span> right, show success message\n            res.json({message: <span class=\"hljs-symbol\">'Patient</span> successfully created.'});\n        });\n    });\n</code></pre>\n<p>Now restart the app and try to create some new patients.</p>\n<h4 id=\"content-of-changed-files\">Content of changed files</h4>\n<p>File <code>public/src/js/app.js</code>:</p>\n<pre><code class=\"lang-js\">angular.module(<span class=\"hljs-string\">'MyApp'</span>, [<span class=\"hljs-string\">'ngResource'</span>, <span class=\"hljs-string\">'ui.router'</span>])\n    .config(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">($stateProvider, $urlRouterProvider)</span> </span>{\n        $stateProvider\n            .state(<span class=\"hljs-string\">'patientList'</span>, {\n                url: <span class=\"hljs-string\">'/patient/list'</span>, <span class=\"hljs-comment\">// URL to show in the address bar</span>\n                templateUrl: <span class=\"hljs-string\">'/patients.html'</span>, <span class=\"hljs-comment\">// partial view to load into &lt;ui-view/&gt;</span>\n                controller: <span class=\"hljs-string\">'PatientsCtrl'</span> <span class=\"hljs-comment\">// controller to use in that partial view</span>\n            })\n            .state(<span class=\"hljs-string\">'patientCreate'</span>, {\n                url: <span class=\"hljs-string\">'/patient/create'</span>,\n                templateUrl: <span class=\"hljs-string\">'/create.html'</span>,\n                controller: <span class=\"hljs-string\">'PatientCtrl'</span>\n            });\n\n        <span class=\"hljs-comment\">// by default go to this address (patientList state)</span>\n        $urlRouterProvider.otherwise(<span class=\"hljs-string\">'/patient/list'</span>);\n    })\n    .factory(<span class=\"hljs-string\">'Patient'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">($resource)</span> </span>{\n        <span class=\"hljs-keyword\">return</span> $resource(\n            <span class=\"hljs-string\">'/patient/:id'</span>, <span class=\"hljs-comment\">// URL to patient backend API</span>\n            {id: <span class=\"hljs-string\">'@_id'</span>}, <span class=\"hljs-comment\">// obtain id from _id field of patient object</span>\n            {\n                update: {\n                    method: <span class=\"hljs-string\">'PUT'</span> <span class=\"hljs-comment\">// for .update() method use PUT request</span>\n                }\n            }\n        );\n    })\n    .controller(<span class=\"hljs-string\">'PatientCtrl'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">($scope, Patient, $state)</span> </span>{\n        $scope.patient = <span class=\"hljs-keyword\">new</span> Patient(); <span class=\"hljs-comment\">// create empty patient object</span>\n\n        $scope.addPatient = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">()</span> </span>{\n            <span class=\"hljs-comment\">// send ajax request to create new patient</span>\n            $scope.patient.$save(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(resp)</span> </span>{\n                console.log(<span class=\"hljs-string\">'Save response:'</span>, resp);\n\n                <span class=\"hljs-comment\">// after save go to the patients list</span>\n                $state.go(<span class=\"hljs-string\">'patientList'</span>);\n            });\n        }\n    })\n    .controller(<span class=\"hljs-string\">'PatientsCtrl'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">($scope, Patient)</span> </span>{\n        $scope.patients = Patient.query(); <span class=\"hljs-comment\">// get list of patients</span>\n    });\n</code></pre>\n<p>File <code>public/views/create.njk</code>:</p>\n<pre><code class=\"lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>New Patient<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"formPatient\"</span> <span class=\"hljs-attr\">novalidate</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>\n        First Name: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"firstName\"</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"patient.firstName\"</span> <span class=\"hljs-attr\">required</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>\n        Last Name: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"lastName\"</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"patient.lastName\"</span> <span class=\"hljs-attr\">required</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">ng-click</span>=<span class=\"hljs-string\">\"addPatient()\"</span> <span class=\"hljs-attr\">ng-disabled</span>=<span class=\"hljs-string\">\"formPatient.$invalid\"</span>&gt;</span>Create New Patient<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n</code></pre>\n<p>File <code>routes/Patient.js</code>:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-meta\">'use strict'</span>;\n\n<span class=\"hljs-keyword\">var</span> router = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'express'</span>).Router();\n<span class=\"hljs-keyword\">var</span> models = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'../models'</span>);\n\nrouter\n    .get(<span class=\"hljs-string\">'/'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n        models.Patient.find(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, patients</span>) </span>{\n            <span class=\"hljs-keyword\">if</span> (err) {\n                <span class=\"hljs-keyword\">return</span> res.json({<span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">'Error occured: '</span> + err.message});\n            }\n\n            <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'List of patients:'</span>, patients);\n            res.json(patients);\n        });\n    })\n    .post(<span class=\"hljs-string\">'/'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Request body:'</span>, req.body);\n\n        <span class=\"hljs-comment\">// create model and fill fields from request body</span>\n        <span class=\"hljs-keyword\">let</span> newPatient = <span class=\"hljs-keyword\">new</span> models.Patient(req.body);\n\n        <span class=\"hljs-comment\">// try to save patient</span>\n        newPatient.save(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err</span>) </span>{\n            <span class=\"hljs-comment\">// if there is error, send it and stop handler with return</span>\n            <span class=\"hljs-keyword\">if</span> (err) {\n                <span class=\"hljs-keyword\">return</span> res.json({<span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">'Error occured: '</span> + err.message});\n            }\n\n            <span class=\"hljs-comment\">// all right, show success message</span>\n            res.json({<span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">'Patient successfully created.'</span>});\n        });\n    });\n\n<span class=\"hljs-built_in\">module</span>.exports = router;\n</code></pre>\n<h4 id=\"updating-existing-patients\">Updating existing patients</h4>\n<p>Coming soon...</p>\n<h4 id=\"deleting-patient\">Deleting patient</h4>\n<p>Coming soon...</p>\n<h4 id=\"advanced-validation-in-models\">Advanced validation in models</h4>\n<p>Coming soon...</p>\n<h4 id=\"toaster-integration\">Toaster integration</h4>\n<p>Coming soon...</p>\n<h4 id=\"searching-patients\">Searching patients</h4>\n<p>Coming soon...</p>\n<h4 id=\"user-authorization\">User Authorization</h4>\n<p>Coming soon...</p>\n"},{"html_url":"https://gist.github.com/059ff2cb135529dd3de847d0011071ef","description":"ExpressJS application example using MongoDB via Mongoose","files":["https://gist.githubusercontent.com/umidjons/059ff2cb135529dd3de847d0011071ef/raw/21c9a4930bd015d0d410c9458163ad7ae312694c/expressjs-app-example-with-mongodb-mongoose.md"],"content":"ExpressJS application example using MongoDB via Mongoose\n===\n\nCreate folders:\n```\nmkdir myapp\ncd myapp\n```\n\nInstall express, mongoose, body-parser modules:\n```\nnpm init\nnpm i express mongoose body-parser -S\n```\n\nCreate `index.js` file:\n```js\n// create application\nvar express = require('express');\nvar app = express();\n\n\n// connect to the mongodb via mongoose\nvar mongoose = require('mongoose');\nmongoose.connect('mongodb://localhost:27017/test');\nvar db = mongoose.connection;\n\n\n// configure body parser\nvar bodyParser = require('body-parser');\napp.use(bodyParser.urlencoded({extended: false})); // accept data from forms\napp.use(bodyParser.json()); // accept data in json format\n\n\n// start application logic, when connection established to the DB\ndb.once('open', function () {\n\n    // create schema for Patient\n    var PatientSchema = mongoose.Schema(\n        {\n            firstName: {type: String, required: true, maxlength: 50},\n            lastName: {type: String, required: true, maxlength: 50},\n            middleName: {type: String, maxlength: 50},\n            address: {type: String, minlength: 10, maxlength: 500}\n        },\n        {\n            autoIndex: true, // disable auto index creation\n            minimize: false // do not remove empty fields\n        }\n    );\n\n    // create model from schema\n    var Patient = mongoose.model('Patient', PatientSchema);\n\n\n    // ------< routes >------\n\n    // root path\n    app.get('/', function (req, res) {\n        // find and return all patients\n        Patient.find(function (err, patients) {\n            // print found patients into the console\n            console.log('Found patients:', patients);\n\n            // return list of patients in JSON format\n            res.json(patients);\n        });\n    });\n\n    // create new patient\n    app.post('/create', function (req, res) {\n        var params = req.body;\n        console.log('Create new patient:', params);\n\n        // create model from received params\n        var newPatient = new Patient(params);\n\n        // try to save new patient\n        newPatient.save(function (err) {\n\n            if (err) {\n                console.log('Error occurred on creating new patient:', err);\n                return res.json({code: 1, error: err.message});\n            }\n\n            console.log('Success! Patient created');\n            res.json({code: 0, error: 'Patient created.'});\n        });\n    });\n\n    // ------< routes />------\n\n\n    // start application\n    app.listen(3000, function () {\n        console.log('Listening requests on http://localhost:3000');\n    });\n});\n```\n\nExample post request to create new patient\n```\nPOST /create HTTP/1.1\nHost: localhost:3000\nCache-Control: no-cache\nPostman-Token: 598337a5-f823-d6ce-b3c8-55901b241dd9\nContent-Type: application/x-www-form-urlencoded\n\nfirstName=John&lastName=Doe&middleName=Smith&address=USA%2C+New+York+city\n```","html":"<h1 id=\"expressjs-application-example-using-mongodb-via-mongoose\">ExpressJS application example using MongoDB via Mongoose</h1>\n<p>Create folders:</p>\n<pre><code><span class=\"hljs-built_in\">mkdir</span> myapp\n<span class=\"hljs-built_in\">cd</span> myapp\n</code></pre><p>Install express, mongoose, body-parser modules:</p>\n<pre><code><span class=\"hljs-built_in\">npm</span> init\n<span class=\"hljs-built_in\">npm</span> i express mongoose body-parser -S\n</code></pre><p>Create <code>index.js</code> file:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-comment\">// create application</span>\n<span class=\"hljs-keyword\">var</span> express = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'express'</span>);\n<span class=\"hljs-keyword\">var</span> app = express();\n\n\n<span class=\"hljs-comment\">// connect to the mongodb via mongoose</span>\n<span class=\"hljs-keyword\">var</span> mongoose = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'mongoose'</span>);\nmongoose.connect(<span class=\"hljs-string\">'mongodb://localhost:27017/test'</span>);\n<span class=\"hljs-keyword\">var</span> db = mongoose.connection;\n\n\n<span class=\"hljs-comment\">// configure body parser</span>\n<span class=\"hljs-keyword\">var</span> bodyParser = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'body-parser'</span>);\napp.use(bodyParser.urlencoded({<span class=\"hljs-attr\">extended</span>: <span class=\"hljs-literal\">false</span>})); <span class=\"hljs-comment\">// accept data from forms</span>\napp.use(bodyParser.json()); <span class=\"hljs-comment\">// accept data in json format</span>\n\n\n<span class=\"hljs-comment\">// start application logic, when connection established to the DB</span>\ndb.once(<span class=\"hljs-string\">'open'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n\n    <span class=\"hljs-comment\">// create schema for Patient</span>\n    <span class=\"hljs-keyword\">var</span> PatientSchema = mongoose.Schema(\n        {\n            <span class=\"hljs-attr\">firstName</span>: {<span class=\"hljs-attr\">type</span>: <span class=\"hljs-built_in\">String</span>, <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-attr\">maxlength</span>: <span class=\"hljs-number\">50</span>},\n            <span class=\"hljs-attr\">lastName</span>: {<span class=\"hljs-attr\">type</span>: <span class=\"hljs-built_in\">String</span>, <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-attr\">maxlength</span>: <span class=\"hljs-number\">50</span>},\n            <span class=\"hljs-attr\">middleName</span>: {<span class=\"hljs-attr\">type</span>: <span class=\"hljs-built_in\">String</span>, <span class=\"hljs-attr\">maxlength</span>: <span class=\"hljs-number\">50</span>},\n            <span class=\"hljs-attr\">address</span>: {<span class=\"hljs-attr\">type</span>: <span class=\"hljs-built_in\">String</span>, <span class=\"hljs-attr\">minlength</span>: <span class=\"hljs-number\">10</span>, <span class=\"hljs-attr\">maxlength</span>: <span class=\"hljs-number\">500</span>}\n        },\n        {\n            <span class=\"hljs-attr\">autoIndex</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-comment\">// disable auto index creation</span>\n            minimize: <span class=\"hljs-literal\">false</span> <span class=\"hljs-comment\">// do not remove empty fields</span>\n        }\n    );\n\n    <span class=\"hljs-comment\">// create model from schema</span>\n    <span class=\"hljs-keyword\">var</span> Patient = mongoose.model(<span class=\"hljs-string\">'Patient'</span>, PatientSchema);\n\n\n    <span class=\"hljs-comment\">// ------&lt; routes &gt;------</span>\n\n    <span class=\"hljs-comment\">// root path</span>\n    app.get(<span class=\"hljs-string\">'/'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n        <span class=\"hljs-comment\">// find and return all patients</span>\n        Patient.find(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, patients</span>) </span>{\n            <span class=\"hljs-comment\">// print found patients into the console</span>\n            <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Found patients:'</span>, patients);\n\n            <span class=\"hljs-comment\">// return list of patients in JSON format</span>\n            res.json(patients);\n        });\n    });\n\n    <span class=\"hljs-comment\">// create new patient</span>\n    app.post(<span class=\"hljs-string\">'/create'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n        <span class=\"hljs-keyword\">var</span> params = req.body;\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Create new patient:'</span>, params);\n\n        <span class=\"hljs-comment\">// create model from received params</span>\n        <span class=\"hljs-keyword\">var</span> newPatient = <span class=\"hljs-keyword\">new</span> Patient(params);\n\n        <span class=\"hljs-comment\">// try to save new patient</span>\n        newPatient.save(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err</span>) </span>{\n\n            <span class=\"hljs-keyword\">if</span> (err) {\n                <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Error occurred on creating new patient:'</span>, err);\n                <span class=\"hljs-keyword\">return</span> res.json({<span class=\"hljs-attr\">code</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">error</span>: err.message});\n            }\n\n            <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Success! Patient created'</span>);\n            res.json({<span class=\"hljs-attr\">code</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">error</span>: <span class=\"hljs-string\">'Patient created.'</span>});\n        });\n    });\n\n    <span class=\"hljs-comment\">// ------&lt; routes /&gt;------</span>\n\n\n    <span class=\"hljs-comment\">// start application</span>\n    app.listen(<span class=\"hljs-number\">3000</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Listening requests on http://localhost:3000'</span>);\n    });\n});\n</code></pre>\n<p>Example post request to create new patient</p>\n<pre><code><span class=\"hljs-keyword\">POST</span> <span class=\"hljs-string\">/create</span> HTTP/1.1\n<span class=\"hljs-attribute\">Host</span>: localhost:3000\n<span class=\"hljs-attribute\">Cache-Control</span>: no-cache\n<span class=\"hljs-attribute\">Postman-Token</span>: 598337a5-f823-d6ce-b3c8-55901b241dd9\n<span class=\"hljs-attribute\">Content-Type</span>: application/x-www-form-urlencoded\n\n<span class=\"ini\"><span class=\"hljs-attr\">firstName</span>=John&amp;lastName=Doe&amp;middleName=Smith&amp;address=USA%<span class=\"hljs-number\">2</span>C+New+York+city</span>\n</code></pre>"},{"html_url":"https://gist.github.com/278cd7ffc06903ba7abc","description":"Using Nunjucks with Express without consolidate.","files":["https://gist.githubusercontent.com/umidjons/278cd7ffc06903ba7abc/raw/af4d04c71dc35fcaf361b7415f7cf29de8c67265/nunjucks-express.md"],"content":"Using Nunjucks with Express without consolidate\n===\n\nInstall necessary components:\n\n```bash\nnpm init\nnpm i express nunjucks -S\n```\n\nFile `index.js`:\n\n```js\n'use strict';\n\nvar express = require('express');\nvar app = express();\nvar nunjucks = require('nunjucks');\nvar path = require('path');\n\nconst VIEW_PATH = path.join(__dirname, 'views');\n\n// configure Nunjucks templating\nnunjucks.configure(\n    VIEW_PATH, // tell nunjucks, that all views are in views/ folder\n    {express: app} // tell nunjucks, that this is express app\n);\n\n// set view engine to custom extension - njk\napp.set('view engine', 'njk');\n\napp\n    .use('*.html', function (req, res) { // render all html files with Nunjucks\n\n        // show original URL in the console\n        console.log('Original URL: %s', req.originalUrl);\n\n        // generate path to view\n        let view_path = path.join(VIEW_PATH, req.originalUrl);\n\n        // replace *.html to *.njk\n        view_path = view_path.replace(/\\..+/, '.njk');\n\n        console.log('File to render: %s', view_path);\n\n        // render template\n        res.render(view_path);\n    })\n    .get('/', function (req, res) {\n        // for home page just show this HTML\n        res.send('<h1>Home Page</h1>');\n    })\n    .get('/patient/:id?', function (req, res) {\n        // generate path to the specific view\n        let view_path = path.join(VIEW_PATH, 'patient.njk');\n\n        // pass id parameter to the view as patient_id variable\n        res.render(view_path, {patient_id: req.params.id});\n    })\n    .listen(3003);\n```\n\nFile `views/patient.njk`:\n\n```html\n<!doctype html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Patient Page</title>\n</head>\n<body>\n<h1>Patient Page</h1>\n\n{% if patient_id %}\n    <h4>Patient ID: {{ patient_id }}</h4>\n{% else %}\n    <h4>Patient ID not specified</h4>\n{% endif %}\n\n</body>\n</html>\n```\n\nRun application:\n\n```bash\nnode index\n```\n\nOn browser try to access following URLs:\n```\n* http://localhost:3003/\n* http://localhost:3003/patient\n* http://localhost:3003/patient/123\n* http://localhost:3003/patient.html\n```","html":"<h1 id=\"using-nunjucks-with-express-without-consolidate\">Using Nunjucks with Express without consolidate</h1>\n<p>Install necessary components:</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-built_in\">npm</span> init\n<span class=\"hljs-built_in\">npm</span> i express nunjucks -S\n</code></pre>\n<p>File <code>index.js</code>:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-meta\">'use strict'</span>;\n\n<span class=\"hljs-keyword\">var</span> express = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'express'</span>);\n<span class=\"hljs-keyword\">var</span> app = express();\n<span class=\"hljs-keyword\">var</span> nunjucks = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'nunjucks'</span>);\n<span class=\"hljs-keyword\">var</span> path = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'path'</span>);\n\n<span class=\"hljs-keyword\">const</span> VIEW_PATH = path.join(__dirname, <span class=\"hljs-string\">'views'</span>);\n\n<span class=\"hljs-comment\">// configure Nunjucks templating</span>\nnunjucks.configure(\n    VIEW_PATH, <span class=\"hljs-comment\">// tell nunjucks, that all views are in views/ folder</span>\n    {<span class=\"hljs-attr\">express</span>: app} <span class=\"hljs-comment\">// tell nunjucks, that this is express app</span>\n);\n\n<span class=\"hljs-comment\">// set view engine to custom extension - njk</span>\napp.set(<span class=\"hljs-string\">'view engine'</span>, <span class=\"hljs-string\">'njk'</span>);\n\napp\n    .use(<span class=\"hljs-string\">'*.html'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{ <span class=\"hljs-comment\">// render all html files with Nunjucks</span>\n\n        <span class=\"hljs-comment\">// show original URL in the console</span>\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Original URL: %s'</span>, req.originalUrl);\n\n        <span class=\"hljs-comment\">// generate path to view</span>\n        <span class=\"hljs-keyword\">let</span> view_path = path.join(VIEW_PATH, req.originalUrl);\n\n        <span class=\"hljs-comment\">// replace *.html to *.njk</span>\n        view_path = view_path.replace(<span class=\"hljs-regexp\">/\\..+/</span>, <span class=\"hljs-string\">'.njk'</span>);\n\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'File to render: %s'</span>, view_path);\n\n        <span class=\"hljs-comment\">// render template</span>\n        res.render(view_path);\n    })\n    .get(<span class=\"hljs-string\">'/'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n        <span class=\"hljs-comment\">// for home page just show this HTML</span>\n        res.send(<span class=\"hljs-string\">'&lt;h1&gt;Home Page&lt;/h1&gt;'</span>);\n    })\n    .get(<span class=\"hljs-string\">'/patient/:id?'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) </span>{\n        <span class=\"hljs-comment\">// generate path to the specific view</span>\n        <span class=\"hljs-keyword\">let</span> view_path = path.join(VIEW_PATH, <span class=\"hljs-string\">'patient.njk'</span>);\n\n        <span class=\"hljs-comment\">// pass id parameter to the view as patient_id variable</span>\n        res.render(view_path, {<span class=\"hljs-attr\">patient_id</span>: req.params.id});\n    })\n    .listen(<span class=\"hljs-number\">3003</span>);\n</code></pre>\n<p>File <code>views/patient.njk</code>:</p>\n<pre><code class=\"lang-html\"><span class=\"xml\"><span class=\"hljs-meta\">&lt;!doctype html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>Patient Page<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>Patient Page<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n\n</span><span class=\"hljs-template-tag\">{% <span class=\"hljs-name\"><span class=\"hljs-name\">if</span></span> patient_id %}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h4</span>&gt;</span>Patient ID: </span><span class=\"hljs-template-variable\">{{ patient_id }}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h4</span>&gt;</span>\n</span><span class=\"hljs-template-tag\">{% <span class=\"hljs-name\"><span class=\"hljs-name\">else</span></span> %}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h4</span>&gt;</span>Patient ID not specified<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h4</span>&gt;</span>\n</span><span class=\"hljs-template-tag\">{% <span class=\"hljs-name\"><span class=\"hljs-name\">endif</span></span> %}</span><span class=\"xml\">\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></span>\n</code></pre>\n<p>Run application:</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">index</span>\n</code></pre>\n<p>On browser try to access following URLs:</p>\n<pre><code>* <span class=\"hljs-string\">http:</span><span class=\"hljs-comment\">//localhost:3003/</span>\n* <span class=\"hljs-string\">http:</span><span class=\"hljs-comment\">//localhost:3003/patient</span>\n* <span class=\"hljs-string\">http:</span><span class=\"hljs-comment\">//localhost:3003/patient/123</span>\n* <span class=\"hljs-string\">http:</span><span class=\"hljs-comment\">//localhost:3003/patient.html</span>\n</code></pre>"},{"html_url":"https://gist.github.com/ca5cf06d37c1e303e539","description":"Git Tips","files":["https://gist.githubusercontent.com/umidjons/ca5cf06d37c1e303e539/raw/6ab7360ddb3e9da4b86d6c6ed248d528c66294e9/git-tips.md"],"content":"Cancel last commit and leave files and index\n====\n\n```bash\ngit reset --soft HEAD~1\n```","html":"<h1 id=\"cancel-last-commit-and-leave-files-and-index\">Cancel last commit and leave files and index</h1>\n<pre><code class=\"lang-bash\">git <span class=\"hljs-keyword\">reset</span> <span class=\"hljs-comment\">--soft HEAD~1</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/83763cff52cdeb8d4427","description":"Command Line Arguments example","files":["https://gist.githubusercontent.com/umidjons/83763cff52cdeb8d4427/raw/2428d876703f46c4380927f701de4f4f845707eb/command-line-args-nodejs.md"],"content":"Command Line Arguments example\n===\n\n```bash\nnpm init\nnpm install --save mongodb command-line-args\n```\n\nFile `app.js`:\n\n```javascript\nvar MongoClient=require('mongodb').MongoClient;\nvar commandLineArgs=require('command-line-args');\nvar assert=require('assert');\n\nvar options=commandLineOptions();\n\nMongoClient.connect('mongodb://localhost:27017/crunchbase11',function(err,db){\n  assert.equal(err,null);\n  console.log('Connected to MongoDB');\n\n  var query=queryDocument(options);\n  var projection={_id:0,name:1,founded_year:1,number_of_employees:1,crunchbase_url:1};\n\n  var cursor=db.collection('companies').find(query,projection);\n  var numMatches=0;\n\n  cursor.forEach(\n    function(doc){\n      console.log(doc);\n      ++numMatches;\n    },\n    function(err){\n      assert.equal(err,null);\n      console.log('Our query was:',JSON.stringify(query));\n      console.log('Matching documents:',numMatches);\n      return db.close();\n    }\n  );\n});\n\nfunction commandLineOptions(){\n  var cli=commandLineArgs([\n        {name:'firstYear',alias:'f',type:Number},\n        {name:'lastYear',alias:'l',type:Number},\n        {name:'employees',alias:'e',type:Number}\n      ]);\n\n  var options=cli.parse();\n\n  if(!(('firstYear' in options) && ('lastYear' in options))){\n    console.log(cli.getUsage({\n      title:'Usage',\n      description:'The two options below are required. The rest are optional'\n    }));\n    process.exit();\n  }\n\n  return options;\n}\n\nfunction queryDocument(options){\n  console.log(options);\n\n  var query={\n    founded_year:{\n      '$gte':options.firstYear,\n      '$lte':options.lastYear\n    }\n  };\n\n  if('employees' in options)\n    query.number_of_employees={'$gte':options.employees};\n\n  return query;\n}\n```\n\nRunning\n====\n\nWithout options specified\n\n```bash\n> node app\n\nUsage\n\n  The two options below are required. The rest are optional\n\nOptions\n\n  -f, --firstYear number\n  -l, --lastYear number\n  -e, --employees number\n```\n\nWith first and last year\n\n```bash\n> node app -f 2004 -l 2008\n...\n{ name: 'Eazeeloans',\n  crunchbase_url: 'http://www.crunchbase.com/company/eazeeloans',\n  number_of_employees: 25,\n  founded_year: 2006 }\n{ name: 'cotralis',\n  crunchbase_url: 'http://www.crunchbase.com/company/cotralis',\n  number_of_employees: 1,\n  founded_year: 2008 }\n{ name: 'Axon Solutions',\n  crunchbase_url: 'http://www.crunchbase.com/company/axon-solutions',\n  number_of_employees: null,\n  founded_year: 2004 }\nOur query was: {\"founded_year\":{\"$gte\":2004,\"$lte\":2008}}\nMatching documents: 7888\n```\n\nWith first, last years and employees count\n\n```bash\n> node app -f 2004 -l 2008 -e 100\n...\n{ name: 'Swiftprosys',\n  crunchbase_url: 'http://www.crunchbase.com/company/swiftprosys',\n  number_of_employees: 180,\n  founded_year: 2005 }\n{ name: 'G5 Entertainment',\n  crunchbase_url: 'http://www.crunchbase.com/company/g5-entertainment',\n  number_of_employees: 107,\n  founded_year: 2006 }\n{ name: 'NextLabs',\n  crunchbase_url: 'http://www.crunchbase.com/company/nextlabs',\n  number_of_employees: 100,\n  founded_year: 2004 }\nOur query was: {\"founded_year\":{\"$gte\":2004,\"$lte\":2008},\"number_of_employees\":{\"$gte\":100}}\nMatching documents: 333\n```","html":"<h1 id=\"command-line-arguments-example\">Command Line Arguments example</h1>\n<pre><code class=\"lang-bash\">npm init\nnpm install --<span class=\"hljs-keyword\">save</span> mongodb command-<span class=\"hljs-keyword\">line</span>-<span class=\"hljs-keyword\">args</span>\n</code></pre>\n<p>File <code>app.js</code>:</p>\n<pre><code class=\"lang-javascript\"><span class=\"hljs-keyword\">var</span> MongoClient=<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'mongodb'</span>).MongoClient;\n<span class=\"hljs-keyword\">var</span> commandLineArgs=<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'command-line-args'</span>);\n<span class=\"hljs-keyword\">var</span> assert=<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'assert'</span>);\n\n<span class=\"hljs-keyword\">var</span> options=commandLineOptions();\n\nMongoClient.connect(<span class=\"hljs-string\">'mongodb://localhost:27017/crunchbase11'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err,db</span>)</span>{\n  assert.equal(err,<span class=\"hljs-literal\">null</span>);\n  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Connected to MongoDB'</span>);\n\n  <span class=\"hljs-keyword\">var</span> query=queryDocument(options);\n  <span class=\"hljs-keyword\">var</span> projection={<span class=\"hljs-attr\">_id</span>:<span class=\"hljs-number\">0</span>,<span class=\"hljs-attr\">name</span>:<span class=\"hljs-number\">1</span>,<span class=\"hljs-attr\">founded_year</span>:<span class=\"hljs-number\">1</span>,<span class=\"hljs-attr\">number_of_employees</span>:<span class=\"hljs-number\">1</span>,<span class=\"hljs-attr\">crunchbase_url</span>:<span class=\"hljs-number\">1</span>};\n\n  <span class=\"hljs-keyword\">var</span> cursor=db.collection(<span class=\"hljs-string\">'companies'</span>).find(query,projection);\n  <span class=\"hljs-keyword\">var</span> numMatches=<span class=\"hljs-number\">0</span>;\n\n  cursor.forEach(\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">doc</span>)</span>{\n      <span class=\"hljs-built_in\">console</span>.log(doc);\n      ++numMatches;\n    },\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{\n      assert.equal(err,<span class=\"hljs-literal\">null</span>);\n      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Our query was:'</span>,<span class=\"hljs-built_in\">JSON</span>.stringify(query));\n      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Matching documents:'</span>,numMatches);\n      <span class=\"hljs-keyword\">return</span> db.close();\n    }\n  );\n});\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">commandLineOptions</span>(<span class=\"hljs-params\"></span>)</span>{\n  <span class=\"hljs-keyword\">var</span> cli=commandLineArgs([\n        {<span class=\"hljs-attr\">name</span>:<span class=\"hljs-string\">'firstYear'</span>,<span class=\"hljs-attr\">alias</span>:<span class=\"hljs-string\">'f'</span>,<span class=\"hljs-attr\">type</span>:<span class=\"hljs-built_in\">Number</span>},\n        {<span class=\"hljs-attr\">name</span>:<span class=\"hljs-string\">'lastYear'</span>,<span class=\"hljs-attr\">alias</span>:<span class=\"hljs-string\">'l'</span>,<span class=\"hljs-attr\">type</span>:<span class=\"hljs-built_in\">Number</span>},\n        {<span class=\"hljs-attr\">name</span>:<span class=\"hljs-string\">'employees'</span>,<span class=\"hljs-attr\">alias</span>:<span class=\"hljs-string\">'e'</span>,<span class=\"hljs-attr\">type</span>:<span class=\"hljs-built_in\">Number</span>}\n      ]);\n\n  <span class=\"hljs-keyword\">var</span> options=cli.parse();\n\n  <span class=\"hljs-keyword\">if</span>(!((<span class=\"hljs-string\">'firstYear'</span> <span class=\"hljs-keyword\">in</span> options) &amp;&amp; (<span class=\"hljs-string\">'lastYear'</span> <span class=\"hljs-keyword\">in</span> options))){\n    <span class=\"hljs-built_in\">console</span>.log(cli.getUsage({\n      <span class=\"hljs-attr\">title</span>:<span class=\"hljs-string\">'Usage'</span>,\n      <span class=\"hljs-attr\">description</span>:<span class=\"hljs-string\">'The two options below are required. The rest are optional'</span>\n    }));\n    process.exit();\n  }\n\n  <span class=\"hljs-keyword\">return</span> options;\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">queryDocument</span>(<span class=\"hljs-params\">options</span>)</span>{\n  <span class=\"hljs-built_in\">console</span>.log(options);\n\n  <span class=\"hljs-keyword\">var</span> query={\n    <span class=\"hljs-attr\">founded_year</span>:{\n      <span class=\"hljs-string\">'$gte'</span>:options.firstYear,\n      <span class=\"hljs-string\">'$lte'</span>:options.lastYear\n    }\n  };\n\n  <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-string\">'employees'</span> <span class=\"hljs-keyword\">in</span> options)\n    query.number_of_employees={<span class=\"hljs-string\">'$gte'</span>:options.employees};\n\n  <span class=\"hljs-keyword\">return</span> query;\n}\n</code></pre>\n<h1 id=\"running\">Running</h1>\n<p>Without options specified</p>\n<pre><code class=\"lang-bash\">&gt; <span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">app</span>\n\nUsage\n\n  The two options below are required. The rest are optional\n\nOptions\n\n  -f, --firstYear <span class=\"hljs-keyword\">number</span>\n  -l, --lastYear <span class=\"hljs-keyword\">number</span>\n  -e, --employees <span class=\"hljs-keyword\">number</span>\n</code></pre>\n<p>With first and last year</p>\n<pre><code class=\"lang-bash\">&gt; node app -<span class=\"hljs-keyword\">f</span> <span class=\"hljs-number\">2004</span> -<span class=\"hljs-keyword\">l</span> <span class=\"hljs-number\">2008</span>\n...\n{ name: <span class=\"hljs-string\">'Eazeeloans'</span>,\n  crunchbase_ur<span class=\"hljs-variable\">l:</span> <span class=\"hljs-string\">'http://www.crunchbase.com/company/eazeeloans'</span>,\n  number_of_employee<span class=\"hljs-variable\">s:</span> <span class=\"hljs-number\">25</span>,\n  founded_year: <span class=\"hljs-number\">2006</span> }\n{ name: <span class=\"hljs-string\">'cotralis'</span>,\n  crunchbase_ur<span class=\"hljs-variable\">l:</span> <span class=\"hljs-string\">'http://www.crunchbase.com/company/cotralis'</span>,\n  number_of_employee<span class=\"hljs-variable\">s:</span> <span class=\"hljs-number\">1</span>,\n  founded_year: <span class=\"hljs-number\">2008</span> }\n{ name: <span class=\"hljs-string\">'Axon Solutions'</span>,\n  crunchbase_ur<span class=\"hljs-variable\">l:</span> <span class=\"hljs-string\">'http://www.crunchbase.com/company/axon-solutions'</span>,\n  number_of_employee<span class=\"hljs-variable\">s:</span> null,\n  founded_year: <span class=\"hljs-number\">2004</span> }\nOur query <span class=\"hljs-keyword\">wa</span><span class=\"hljs-variable\">s:</span> {<span class=\"hljs-string\">\"founded_year\"</span>:{<span class=\"hljs-string\">\"$gte\"</span>:<span class=\"hljs-number\">2004</span>,<span class=\"hljs-string\">\"$lte\"</span>:<span class=\"hljs-number\">2008</span>}}\nMatching document<span class=\"hljs-variable\">s:</span> <span class=\"hljs-number\">7888</span>\n</code></pre>\n<p>With first, last years and employees count</p>\n<pre><code class=\"lang-bash\">&gt; node app -<span class=\"hljs-keyword\">f</span> <span class=\"hljs-number\">2004</span> -<span class=\"hljs-keyword\">l</span> <span class=\"hljs-number\">2008</span> -<span class=\"hljs-keyword\">e</span> <span class=\"hljs-number\">100</span>\n...\n{ name: <span class=\"hljs-string\">'Swiftprosys'</span>,\n  crunchbase_ur<span class=\"hljs-variable\">l:</span> <span class=\"hljs-string\">'http://www.crunchbase.com/company/swiftprosys'</span>,\n  number_of_employee<span class=\"hljs-variable\">s:</span> <span class=\"hljs-number\">180</span>,\n  founded_year: <span class=\"hljs-number\">2005</span> }\n{ name: <span class=\"hljs-string\">'G5 Entertainment'</span>,\n  crunchbase_ur<span class=\"hljs-variable\">l:</span> <span class=\"hljs-string\">'http://www.crunchbase.com/company/g5-entertainment'</span>,\n  number_of_employee<span class=\"hljs-variable\">s:</span> <span class=\"hljs-number\">107</span>,\n  founded_year: <span class=\"hljs-number\">2006</span> }\n{ name: <span class=\"hljs-string\">'NextLabs'</span>,\n  crunchbase_ur<span class=\"hljs-variable\">l:</span> <span class=\"hljs-string\">'http://www.crunchbase.com/company/nextlabs'</span>,\n  number_of_employee<span class=\"hljs-variable\">s:</span> <span class=\"hljs-number\">100</span>,\n  founded_year: <span class=\"hljs-number\">2004</span> }\nOur query <span class=\"hljs-keyword\">wa</span><span class=\"hljs-variable\">s:</span> {<span class=\"hljs-string\">\"founded_year\"</span>:{<span class=\"hljs-string\">\"$gte\"</span>:<span class=\"hljs-number\">2004</span>,<span class=\"hljs-string\">\"$lte\"</span>:<span class=\"hljs-number\">2008</span>},<span class=\"hljs-string\">\"number_of_employees\"</span>:{<span class=\"hljs-string\">\"$gte\"</span>:<span class=\"hljs-number\">100</span>}}\nMatching document<span class=\"hljs-variable\">s:</span> <span class=\"hljs-number\">333</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/1617cf046d0cc27296ec","description":"Curvor vs toArray(). mongoimport example","files":["https://gist.githubusercontent.com/umidjons/1617cf046d0cc27296ec/raw/3e8f172a31e289c9cb901c00babc3fb410c9faac/cursor-vs-toarray-mongoimport.md"],"content":"Curvor vs toArray(). mongoimport example\n===\n\nImport data in JSON format into database\n```bash\nmongoimport -d mydb -c mycollection objects.json\n```\n\nCheck imported data\n```bash\n# mongo\n> use mydb\n> db.mycollection.find().count()\n> db.mycollection.findOne()\n> exit\n```\n\nExample application\n```bash\nnpm init\nnpm install --save mongodb\n```\n\nRetrieving data from imported collection\n====\n\nNOT EFFICIENT WAY: `toArray(callback)` retrieves all documents from collection, then executes callback.\n\n```javascript\nvar MongoClient=require('mongodb').MongoClient,\n    assert=require('assert');\n\nMongoClient.connect('mongodb://localhost:27017/mydb',function(err,db){\n  assert.equal(err,null);\n  console.log('Successfully connected to MongoDB');\n\n  var query={some_field:'some value'};\n\n  db.collection('mycollection').find(query).toArray(function(err,docs){\n    assert.equal(err,null);\n    assert.notEqual(docs.length,0);\n\n    docs.forEach(function(doc){\n      console.log(doc.some_field+\"-\"+doc.some_other_field);\n    });\n\n    db.close();\n  });\n});\n```\n\nEFFICIENT WAY: retrieving data started on `cursor.forEach(callback,errhandler)` call and documents streamed to the callback (does not wait until all documents returned).\n\n```javascript\nvar MongoClient=require('mongodb').MongoClient,\n    assert=require('assert');\n\nMongoClient.connect('mongodb://localhost:27017/mydb',function(err,db){\n  assert.equal(err,null);\n  console.log('Successfully connected to MongoDB');\n\n  var query={some_field:'some value'};\n\n  var cursor=db.collection('mycollection').find(query);\n\n  cursor.forEach(\n      function(doc){\n        console.log(doc.some_field+\"-\"+doc.some_other_field);\n      },\n      function(err){\n        assert.equal(err,null);\n        return db.close();\n      }\n    );\n});\n```","html":"<h1 id=\"curvor-vs-toarray-mongoimport-example\">Curvor vs toArray(). mongoimport example</h1>\n<p>Import data in JSON format into database</p>\n<pre><code class=\"lang-bash\">mongoimport <span class=\"hljs-_\">-d</span> mydb -c mycollection objects.json\n</code></pre>\n<p>Check imported data</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-comment\"># mongo</span>\n&gt; use mydb\n&gt; db.mycollection.find().count()\n&gt; db.mycollection.findOne()\n&gt; <span class=\"hljs-keyword\">exit</span>\n</code></pre>\n<p>Example application</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-built_in\">npm</span> init\n<span class=\"hljs-built_in\">npm</span> install --save mongodb\n</code></pre>\n<h1 id=\"retrieving-data-from-imported-collection\">Retrieving data from imported collection</h1>\n<p>NOT EFFICIENT WAY: <code>toArray(callback)</code> retrieves all documents from collection, then executes callback.</p>\n<pre><code class=\"lang-javascript\"><span class=\"hljs-keyword\">var</span> MongoClient=<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'mongodb'</span>).MongoClient,\n    assert=<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'assert'</span>);\n\nMongoClient.connect(<span class=\"hljs-string\">'mongodb://localhost:27017/mydb'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err,db</span>)</span>{\n  assert.equal(err,<span class=\"hljs-literal\">null</span>);\n  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Successfully connected to MongoDB'</span>);\n\n  <span class=\"hljs-keyword\">var</span> query={<span class=\"hljs-attr\">some_field</span>:<span class=\"hljs-string\">'some value'</span>};\n\n  db.collection(<span class=\"hljs-string\">'mycollection'</span>).find(query).toArray(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err,docs</span>)</span>{\n    assert.equal(err,<span class=\"hljs-literal\">null</span>);\n    assert.notEqual(docs.length,<span class=\"hljs-number\">0</span>);\n\n    docs.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">doc</span>)</span>{\n      <span class=\"hljs-built_in\">console</span>.log(doc.some_field+<span class=\"hljs-string\">\"-\"</span>+doc.some_other_field);\n    });\n\n    db.close();\n  });\n});\n</code></pre>\n<p>EFFICIENT WAY: retrieving data started on <code>cursor.forEach(callback,errhandler)</code> call and documents streamed to the callback (does not wait until all documents returned).</p>\n<pre><code class=\"lang-javascript\"><span class=\"hljs-keyword\">var</span> MongoClient=<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'mongodb'</span>).MongoClient,\n    assert=<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'assert'</span>);\n\nMongoClient.connect(<span class=\"hljs-string\">'mongodb://localhost:27017/mydb'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err,db</span>)</span>{\n  assert.equal(err,<span class=\"hljs-literal\">null</span>);\n  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Successfully connected to MongoDB'</span>);\n\n  <span class=\"hljs-keyword\">var</span> query={<span class=\"hljs-attr\">some_field</span>:<span class=\"hljs-string\">'some value'</span>};\n\n  <span class=\"hljs-keyword\">var</span> cursor=db.collection(<span class=\"hljs-string\">'mycollection'</span>).find(query);\n\n  cursor.forEach(\n      <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">doc</span>)</span>{\n        <span class=\"hljs-built_in\">console</span>.log(doc.some_field+<span class=\"hljs-string\">\"-\"</span>+doc.some_other_field);\n      },\n      <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{\n        assert.equal(err,<span class=\"hljs-literal\">null</span>);\n        <span class=\"hljs-keyword\">return</span> db.close();\n      }\n    );\n});\n</code></pre>\n"},{"html_url":"https://gist.github.com/960cc251b33cbb52a30c","description":"Using third party API with superagent (HTTP(S) requests) module example","files":["https://gist.githubusercontent.com/umidjons/960cc251b33cbb52a30c/raw/3010463e467986a5c275de9fc3d9bb358ff2aaf6/superagent-http-requests-expressjs-nodejs.md"],"content":"Using third party API with superagent (HTTP(S) requests) module example\n===\n\n```bash\nnpm init\nnpm install --save express superagent\n```\n\nFile `service.js` simulates our third party API\n```javascript\nvar express=require('express');\nvar app=express();\n\napp.get('/date',function(req,res){\n  res.send({date_:new Date()});\n});\n\napp.listen(3001,function(){\n  console.info('Listening for incoming requests on http://localhost:3001');\n});\n```\n\nFile `index.js`\n```javascript\nvar express=require('express');\nvar app=express();\nvar superagent=require('superagent');\n\napp.get('/',function(req,res){\n  superagent\n  .get('http://localhost:3001/date')\n  .end(function(err,data){\n    console.log('Response:',data.body);\n    res.send(data.body.date_);\n  });\n});\n\napp.listen(3000,function(){\n  console.info('Running on http://localhost:3000');\n});\n```\n\nRun `service.js`, then `index.js`\n```bash\nnode service\n```\n\nIn another terminal\n```bash\nnode index\n```\n\nAccess home page `http://localhost:3000`.\nWe should see current date and time.","html":"<h1 id=\"using-third-party-api-with-superagent-http-s-requests-module-example\">Using third party API with superagent (HTTP(S) requests) module example</h1>\n<pre><code class=\"lang-bash\"><span class=\"hljs-built_in\">npm</span> init\n<span class=\"hljs-built_in\">npm</span> install --save express superagent\n</code></pre>\n<p>File <code>service.js</code> simulates our third party API</p>\n<pre><code class=\"lang-javascript\"><span class=\"hljs-keyword\">var</span> express=<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'express'</span>);\n<span class=\"hljs-keyword\">var</span> app=express();\n\napp.get(<span class=\"hljs-string\">'/date'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">req,res</span>)</span>{\n  res.send({<span class=\"hljs-attr\">date_</span>:<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>()});\n});\n\napp.listen(<span class=\"hljs-number\">3001</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n  <span class=\"hljs-built_in\">console</span>.info(<span class=\"hljs-string\">'Listening for incoming requests on http://localhost:3001'</span>);\n});\n</code></pre>\n<p>File <code>index.js</code></p>\n<pre><code class=\"lang-javascript\"><span class=\"hljs-keyword\">var</span> express=<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'express'</span>);\n<span class=\"hljs-keyword\">var</span> app=express();\n<span class=\"hljs-keyword\">var</span> superagent=<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'superagent'</span>);\n\napp.get(<span class=\"hljs-string\">'/'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">req,res</span>)</span>{\n  superagent\n  .get(<span class=\"hljs-string\">'http://localhost:3001/date'</span>)\n  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err,data</span>)</span>{\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Response:'</span>,data.body);\n    res.send(data.body.date_);\n  });\n});\n\napp.listen(<span class=\"hljs-number\">3000</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n  <span class=\"hljs-built_in\">console</span>.info(<span class=\"hljs-string\">'Running on http://localhost:3000'</span>);\n});\n</code></pre>\n<p>Run <code>service.js</code>, then <code>index.js</code></p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">service</span>\n</code></pre>\n<p>In another terminal</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">index</span>\n</code></pre>\n<p>Access home page <code>http://localhost:3000</code>.\nWe should see current date and time.</p>\n"},{"html_url":"https://gist.github.com/083e8ed4c1ca54555828","description":"Handling Error with Domain","files":["https://gist.githubusercontent.com/umidjons/083e8ed4c1ca54555828/raw/219d88db62d7c408f1fc27f4f44f85c4a1cc8e51/handling-error-with-domain-nodejs.md"],"content":"Handling error with domain\n===\n\nFile `app.js`\n```javascript\nvar domain=require('domain');\n\n// create domain and listen for errors\nvar d=domain.create();\nd.on('error',function(e){\n  console.log('Custom Error:',e);\n});\n\nd.run(function(){\n  // run error prone code here\n  setTimeout(function(){\n    throw new Error('Fail');\n  },Math.round()*100);\n});\n```","html":"<h1 id=\"handling-error-with-domain\">Handling error with domain</h1>\n<p>File <code>app.js</code></p>\n<pre><code class=\"lang-javascript\"><span class=\"hljs-keyword\">var</span> domain=<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'domain'</span>);\n\n<span class=\"hljs-comment\">// create domain and listen for errors</span>\n<span class=\"hljs-keyword\">var</span> d=domain.create();\nd.on(<span class=\"hljs-string\">'error'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">e</span>)</span>{\n  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Custom Error:'</span>,e);\n});\n\nd.run(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n  <span class=\"hljs-comment\">// run error prone code here</span>\n  setTimeout(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">'Fail'</span>);\n  },<span class=\"hljs-built_in\">Math</span>.round()*<span class=\"hljs-number\">100</span>);\n});\n</code></pre>\n"},{"html_url":"https://gist.github.com/a1300e542e3011d1ad57","description":"Socket.io example","files":["https://gist.githubusercontent.com/umidjons/a1300e542e3011d1ad57/raw/e6b2af49989e5334ea99c264c68e736bde200fb0/socket.io-example-expressjs-nodejs.md"],"content":"Socket.io example\n===\n\n```bash\nnpm init\nnpm install --save express body-parser socket.io morgan consolidate nunjucks\nmkdir -p public/views\n```\n\nFile `app.js`\n```javascript\nvar express=require('express'),\n    app=express(),\n    consolidate=require('consolidate'),\n    logger=require('morgan'),\n    path=require('path'),\n    bodyParser=require('body-parser'),\n    socketIO=require('socket.io'),\n    http=require('http');\n\n// configure template engine\napp.engine('html',consolidate.nunjucks);\napp.set('view engine','html');\napp.set('views',path.join(__dirname,'public','views'));\n\napp.use(logger('dev'));\napp.use(express.static(path.join(__dirname,'public')));\napp.use(bodyParser.urlencoded({extended:false}));\n\napp.get('/',function(req,res){\n  res.render('index');\n});\n\nvar server=http.createServer(app);\nvar io=socketIO.listen(server);\nio.sockets.on('connection',function(socket){\n  \n  // listen test1 event from client\n  socket.on('test1',function(data){\n    console.log('Received ',data);\n    \n    // trigger test2 event to client\n    socket.emit('test2', data.time+' from server');\n  });\n});\n\nserver.listen(3000,function(){\n  console.log('Listening on http://localhost:3000');\n});\n```\n\nFile `public\\views\\index.html`\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Socket.io example</title>\n</head>\n<body>\n  <h1>Socket.io example</h1>\n  \n  <p>Here we sending <em>test1</em> event to the server and listening for <em>test2</em> event from the server.</p>\n  \n  <button onclick=\"sendTest1()\">Emit 'test1'</button>\n  \n  Received Message: <pre id=\"received-message\">(empty)</pre>\n\n  <script src=\"/socket.io/socket.io.js\"></script>\n  <script>\n    var socket=io.connect('http://localhost:3000');\n    \n    // listen for 'test2'\n    socket.on('test2',function(data){\n      console.log('received %s',data);\n      document.querySelector('#received-message').innerText=data;\n    });\n\n    var sendTest1=function(){\n      var data=new Date();\n      // emit 'test1'\n      socket.emit('test1',{time:data});\n    }\n  </script>\n</body>\n</html>\n```","html":"<h1 id=\"socket-io-example\">Socket.io example</h1>\n<pre><code class=\"lang-bash\">npm init\nnpm install --save express body-parser socket<span class=\"hljs-selector-class\">.io</span> morgan consolidate nunjucks\nmkdir -<span class=\"hljs-selector-tag\">p</span> public/views\n</code></pre>\n<p>File <code>app.js</code></p>\n<pre><code class=\"lang-javascript\"><span class=\"hljs-keyword\">var</span> express=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'express'</span>),\n    app=express(),\n    consolidate=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'consolidate'</span>),\n    logger=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'morgan'</span>),\n    path=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'path'</span>),\n    bodyParser=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'body-parser'</span>),\n    socketIO=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'socket.io'</span>),\n    http=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'http'</span>);\n\n<span class=\"hljs-comment\">// configure template engine</span>\napp.engine(<span class=\"hljs-string\">'html'</span>,consolidate.nunjucks);\napp.set(<span class=\"hljs-string\">'view engine'</span>,<span class=\"hljs-string\">'html'</span>);\napp.set(<span class=\"hljs-string\">'views'</span>,path.join(__dirname,<span class=\"hljs-string\">'public'</span>,<span class=\"hljs-string\">'views'</span>));\n\napp.<span class=\"hljs-keyword\">use</span>(logger(<span class=\"hljs-string\">'dev'</span>));\napp.<span class=\"hljs-keyword\">use</span>(express.<span class=\"hljs-keyword\">static</span>(path.join(__dirname,<span class=\"hljs-string\">'public'</span>)));\napp.<span class=\"hljs-keyword\">use</span>(bodyParser.urlencoded({extended:<span class=\"hljs-keyword\">false</span>}));\n\napp.get(<span class=\"hljs-string\">'/'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(req,res)</span></span>{\n  res.render(<span class=\"hljs-string\">'index'</span>);\n});\n\n<span class=\"hljs-keyword\">var</span> server=http.createServer(app);\n<span class=\"hljs-keyword\">var</span> io=socketIO.listen(server);\nio.sockets.on(<span class=\"hljs-string\">'connection'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(socket)</span></span>{\n\n  <span class=\"hljs-comment\">// listen test1 event from client</span>\n  socket.on(<span class=\"hljs-string\">'test1'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(data)</span></span>{\n    console.log(<span class=\"hljs-string\">'Received '</span>,data);\n\n    <span class=\"hljs-comment\">// trigger test2 event to client</span>\n    socket.emit(<span class=\"hljs-string\">'test2'</span>, data.time+<span class=\"hljs-string\">' from server'</span>);\n  });\n});\n\nserver.listen(<span class=\"hljs-number\">3000</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n  console.log(<span class=\"hljs-string\">'Listening on http://localhost:3000'</span>);\n});\n</code></pre>\n<p>File <code>public\\views\\index.html</code></p>\n<pre><code class=\"lang-html\"><span class=\"hljs-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>Socket.io example<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>Socket.io example<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Here we sending <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">em</span>&gt;</span>test1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">em</span>&gt;</span> event to the server and listening for <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">em</span>&gt;</span>test2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">em</span>&gt;</span> event from the server.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onclick</span>=<span class=\"hljs-string\">\"sendTest1()\"</span>&gt;</span>Emit 'test1'<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n\n  Received Message: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pre</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"received-message\"</span>&gt;</span>(empty)<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">pre</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"/socket.io/socket.io.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">var</span> socket=io.connect(<span class=\"hljs-string\">'http://localhost:3000'</span>);\n\n    <span class=\"hljs-comment\">// listen for 'test2'</span>\n    socket.on(<span class=\"hljs-string\">'test2'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>)</span>{\n      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'received %s'</span>,data);\n      <span class=\"hljs-built_in\">document</span>.querySelector(<span class=\"hljs-string\">'#received-message'</span>).innerText=data;\n    });\n\n    <span class=\"hljs-keyword\">var</span> sendTest1=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n      <span class=\"hljs-keyword\">var</span> data=<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>();\n      <span class=\"hljs-comment\">// emit 'test1'</span>\n      socket.emit(<span class=\"hljs-string\">'test1'</span>,{<span class=\"hljs-attr\">time</span>:data});\n    }\n  </span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/635d28916e223e3cd7ba","description":"HTTP Security Headers with Helmet module in Express.js application.","files":["https://gist.githubusercontent.com/umidjons/635d28916e223e3cd7ba/raw/c6bee8b46b9be4356b62ffd4e41748e6e2a3f68f/http-security-headers-helmet-expressjs.md"],"content":"HTTP Security Headers with Helmet module in Express.js application\n===\n\n```bash\nnpm init\nnpm install --save express helmet\nvim app.js\n```\n\n`app.js` file:\n```javascript\nvar express=require('express'),\n    app=express(),\n    helmet=require('helmet');\n\napp.use(helmet());\n\napp.get('*',function(req,res){\n  res.send('hello world');\n});\n\napp.listen(3000);\n```\n\nAdded headers:\n```\nX-Content-Type-Options:nosniff\nX-Download-Options:noopen\nX-Frame-Options:SAMEORIGIN\nX-XSS-Protection:1; mode=block\n```\nIt also removes `X-Powered-By` header.","html":"<h1 id=\"http-security-headers-with-helmet-module-in-express-js-application\">HTTP Security Headers with Helmet module in Express.js application</h1>\n<pre><code class=\"lang-bash\"><span class=\"hljs-built_in\">npm</span> init\n<span class=\"hljs-built_in\">npm</span> install --save express helmet\nvim app.js\n</code></pre>\n<p><code>app.js</code> file:</p>\n<pre><code class=\"lang-javascript\"><span class=\"hljs-keyword\">var</span> express=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'express'</span>),\n    app=express(),\n    helmet=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'helmet'</span>);\n\napp.<span class=\"hljs-keyword\">use</span>(helmet());\n\napp.get(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(req,res)</span></span>{\n  res.send(<span class=\"hljs-string\">'hello world'</span>);\n});\n\napp.listen(<span class=\"hljs-number\">3000</span>);\n</code></pre>\n<p>Added headers:</p>\n<pre><code>X-Content-<span class=\"hljs-keyword\">Type</span>-<span class=\"hljs-keyword\">Options</span>:nosniff\nX-Download-<span class=\"hljs-keyword\">Options</span>:noopen\nX-Frame-<span class=\"hljs-keyword\">Options</span>:SAMEORIGIN\nX-XSS-Protection:<span class=\"hljs-number\">1</span>; mode=block\n</code></pre><p>It also removes <code>X-Powered-By</code> header.</p>\n"},{"html_url":"https://gist.github.com/c9f3e51fed6d183e89a2","description":"CSRF Preventing example in Express.js","files":["https://gist.githubusercontent.com/umidjons/c9f3e51fed6d183e89a2/raw/92eade63287c6454354172868196948341e544e3/csrf-expressjs.md"],"content":"CSRF Preventing example in Express.js\n===\n\n```bash\nnpm init\nnpm install --save express csurf cookie-parser body-parser consolidate nunjucks\nmkdir -p public/views\nvim app.js\n```\n\nFile `app.js`:\n```javascript\nvar express=require('express');\nvar app=express();\nvar cookieParser=require('cookie-parser');\nvar bodyParser=require('body-parser');\nvar csrf=require('csurf');\nvar consolidate=require('consolidate');\nvar path=require('path');\n\n// configure template engine\napp.engine('html',consolidate.nunjucks);\napp.set('view engine','html');\napp.set('views',path.join(__dirname,'public','views'));\n\n// configure middlewares\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname,'public','views')));\napp.use(bodyParser.urlencoded({extended:false}));\napp.use(csrf({cookie:true}));\n\n// routes\napp\n.get('/form',function(req,res){\n  res.render('send',{ csrfToken: req.csrfToken() }); // render send.html with csrfToken\n})\n.post('/process',function(req,res){\n  console.log('Request Body:',req.body);\n  res.send('Data is being processed.');\n})\n.listen(3000);\n```\n\nFile `public/views/send.html`:\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>CSRF Example</title>\n</head>\n<body>\n  <form action=\"/process\" method=\"POST\">\n    <input type=\"hidden\" name=\"_csrf\" value=\"{{csrfToken}}\">\n    Favorite Color: <input type=\"text\" name=\"favoriteColor\">\n    <button>Submit</button>\n  </form>\n</body>\n</html>\n```\n\nRun:\n```bash\nnode app.js\n```\n\nIn browser open `http://localhost:3000/form` and submit form.\n\nConsole output at server:\n```\nRequest Body: { _csrf: 'iv5QqjGY-tZz3PuJejXeb4I5C4nDN_uXVjpY',\n  favoriteColor: 'Yellow' }\n```","html":"<h1 id=\"csrf-preventing-example-in-express-js\">CSRF Preventing example in Express.js</h1>\n<pre><code class=\"lang-bash\">npm init\nnpm install --<span class=\"hljs-built_in\">save</span> <span class=\"hljs-built_in\">express</span> csurf cookie-parser body-parser consolidate nunjucks\n<span class=\"hljs-built_in\">mkdir</span> -p public/views\nvim app.js\n</code></pre>\n<p>File <code>app.js</code>:</p>\n<pre><code class=\"lang-javascript\"><span class=\"hljs-keyword\">var</span> express=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'express'</span>);\n<span class=\"hljs-keyword\">var</span> app=express();\n<span class=\"hljs-keyword\">var</span> cookieParser=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'cookie-parser'</span>);\n<span class=\"hljs-keyword\">var</span> bodyParser=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'body-parser'</span>);\n<span class=\"hljs-keyword\">var</span> csrf=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'csurf'</span>);\n<span class=\"hljs-keyword\">var</span> consolidate=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'consolidate'</span>);\n<span class=\"hljs-keyword\">var</span> path=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'path'</span>);\n\n<span class=\"hljs-comment\">// configure template engine</span>\napp.engine(<span class=\"hljs-string\">'html'</span>,consolidate.nunjucks);\napp.set(<span class=\"hljs-string\">'view engine'</span>,<span class=\"hljs-string\">'html'</span>);\napp.set(<span class=\"hljs-string\">'views'</span>,path.join(__dirname,<span class=\"hljs-string\">'public'</span>,<span class=\"hljs-string\">'views'</span>));\n\n<span class=\"hljs-comment\">// configure middlewares</span>\napp.<span class=\"hljs-keyword\">use</span>(cookieParser());\napp.<span class=\"hljs-keyword\">use</span>(express.<span class=\"hljs-keyword\">static</span>(path.join(__dirname,<span class=\"hljs-string\">'public'</span>,<span class=\"hljs-string\">'views'</span>)));\napp.<span class=\"hljs-keyword\">use</span>(bodyParser.urlencoded({extended:<span class=\"hljs-keyword\">false</span>}));\napp.<span class=\"hljs-keyword\">use</span>(csrf({cookie:<span class=\"hljs-keyword\">true</span>}));\n\n<span class=\"hljs-comment\">// routes</span>\napp\n.get(<span class=\"hljs-string\">'/form'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(req,res)</span></span>{\n  res.render(<span class=\"hljs-string\">'send'</span>,{ csrfToken: req.csrfToken() }); <span class=\"hljs-comment\">// render send.html with csrfToken</span>\n})\n.post(<span class=\"hljs-string\">'/process'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(req,res)</span></span>{\n  console.log(<span class=\"hljs-string\">'Request Body:'</span>,req.body);\n  res.send(<span class=\"hljs-string\">'Data is being processed.'</span>);\n})\n.listen(<span class=\"hljs-number\">3000</span>);\n</code></pre>\n<p>File <code>public/views/send.html</code>:</p>\n<pre><code class=\"lang-html\"><span class=\"xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>CSRF Example<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">action</span>=<span class=\"hljs-string\">\"/process\"</span> <span class=\"hljs-attr\">method</span>=<span class=\"hljs-string\">\"POST\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"hidden\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"_csrf\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"</span></span></span><span class=\"hljs-template-variable\">{{csrfToken}}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">\"</span>&gt;</span>\n    Favorite Color: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"favoriteColor\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span>&gt;</span>Submit<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></span>\n</code></pre>\n<p>Run:</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">app</span>.js\n</code></pre>\n<p>In browser open <code>http://localhost:3000/form</code> and submit form.</p>\n<p>Console output at server:</p>\n<pre><code><span class=\"hljs-selector-tag\">Request</span> <span class=\"hljs-selector-tag\">Body</span>: { <span class=\"hljs-attribute\">_csrf</span>: <span class=\"hljs-string\">'iv5QqjGY-tZz3PuJejXeb4I5C4nDN_uXVjpY'</span>,\n  favoriteColor: <span class=\"hljs-string\">'Yellow'</span> }\n</code></pre>"},{"html_url":"https://gist.github.com/47fb4e063957e181daea","description":"Less Middleware, Nunjucks example","files":["https://gist.githubusercontent.com/umidjons/47fb4e063957e181daea/raw/165b9b05d13645d49cb7371d8e9d40b905b77f5f/less-middleware-nunjucks-express.md"],"content":"Less Middleware, Nunjucks example\n===\n\n```bash\nnpm init\nnpm install --save express consolidate nunjucks less-middleware\nmkdir -p public/css\nmkdir -p public/views\n```\n\nFile `app.js`:\n```javascript\nvar express=require('express'),\n    app=express(),\n    path=require('path'),\n    less=require('less-middleware'),\n    consolidate=require('consolidate');\n\n// configure Less & static assets/views\napp.use(less(path.join(__dirname,'public')))\n  .use(express.static(path.join(__dirname,'public')));\n\n// configure view engine to Nunjucks\napp.engine('html',consolidate.nunjucks);\napp.set('view engine','html');\napp.set('views',path.join(__dirname,'public','views'));\n\n// routes\napp.get('/',function(req,res){\n  res.render('main');\n});\n\napp.listen(3000);\n```\n\nFile `public\\css\\styles.less`:\n```less\n// Variables\n@bgColor: #cccccc;\n@titleBgColor: #000;\n@textColor: red;\n\n// common styles\nbody{\n  background-color: @bgColor\n}\n\nh1{\n  color: @textColor;\n  background-color: @titleBgColor;\n}\n```\n\nFile `public\\views\\main.html`:\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <link rel=\"stylesheet\" href=\"css/styles.css\">\n  <title>Test</title>\n</head>\n<body>\n  <h1>Hello World</h1>\n</body>\n</html>\n```","html":"<h1 id=\"less-middleware-nunjucks-example\">Less Middleware, Nunjucks example</h1>\n<pre><code class=\"lang-bash\">npm init\nnpm install --save express consolidate nunjucks less-middleware\n<span class=\"hljs-built_in\">mkdir</span> -p <span class=\"hljs-keyword\">public</span>/css\n<span class=\"hljs-built_in\">mkdir</span> -p <span class=\"hljs-keyword\">public</span>/views\n</code></pre>\n<p>File <code>app.js</code>:</p>\n<pre><code class=\"lang-javascript\"><span class=\"hljs-keyword\">var</span> express=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'express'</span>),\n    app=express(),\n    path=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'path'</span>),\n    less=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'less-middleware'</span>),\n    consolidate=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'consolidate'</span>);\n\n<span class=\"hljs-comment\">// configure Less &amp; static assets/views</span>\napp.<span class=\"hljs-keyword\">use</span>(less(path.join(__dirname,<span class=\"hljs-string\">'public'</span>)))\n  .<span class=\"hljs-keyword\">use</span>(express.<span class=\"hljs-keyword\">static</span>(path.join(__dirname,<span class=\"hljs-string\">'public'</span>)));\n\n<span class=\"hljs-comment\">// configure view engine to Nunjucks</span>\napp.engine(<span class=\"hljs-string\">'html'</span>,consolidate.nunjucks);\napp.set(<span class=\"hljs-string\">'view engine'</span>,<span class=\"hljs-string\">'html'</span>);\napp.set(<span class=\"hljs-string\">'views'</span>,path.join(__dirname,<span class=\"hljs-string\">'public'</span>,<span class=\"hljs-string\">'views'</span>));\n\n<span class=\"hljs-comment\">// routes</span>\napp.get(<span class=\"hljs-string\">'/'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(req,res)</span></span>{\n  res.render(<span class=\"hljs-string\">'main'</span>);\n});\n\napp.listen(<span class=\"hljs-number\">3000</span>);\n</code></pre>\n<p>File <code>public\\css\\styles.less</code>:</p>\n<pre><code class=\"lang-less\"><span class=\"hljs-comment\">// Variables</span>\n<span class=\"hljs-variable\">@bgColor:</span> <span class=\"hljs-number\">#cccccc</span>;\n<span class=\"hljs-variable\">@titleBgColor:</span> <span class=\"hljs-number\">#000</span>;\n<span class=\"hljs-variable\">@textColor:</span> red;\n\n<span class=\"hljs-comment\">// common styles</span>\n<span class=\"hljs-selector-tag\">body</span>{\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-variable\">@bgColor</span>\n}\n\n<span class=\"hljs-selector-tag\">h1</span>{\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-variable\">@textColor</span>;\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-variable\">@titleBgColor</span>;\n}\n</code></pre>\n<p>File <code>public\\views\\main.html</code>:</p>\n<pre><code class=\"lang-html\"><span class=\"hljs-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"css/styles.css\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>Test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>Hello World<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/a7b26af9651df282ae51","description":"Nunjucks template engine, Consolidate, Stylus middleware example in Express.js","files":["https://gist.githubusercontent.com/umidjons/a7b26af9651df282ae51/raw/282b3f56553ee09bf6fac791026fd8185b624078/nunjucks-consolidate-stylus-expressjs.md"],"content":"Nunjucks template engine, Consolidate, Stylus middleware example in Express.js\n===\n\n```bash\nnpm init\nnpm install --save express stylus consolidate nunjucks\nmkdir public\nmkdir public\\css\nmkdir public\\views\n```\n\nFile: `app.js`\n```javascript\nvar express=require('express'),\n    app=express(),\n    stylus=require('stylus'),\n    path=require('path'),\n    consolidate=require('consolidate');\n\napp.use(stylus.middleware(path.join(__dirname,'public','css')));\napp.use(express.static(path.join(__dirname,'public')));\n\napp.engine('html',consolidate.nunjucks);\napp.set('view engine','html');\napp.set('views',path.join(__dirname,'public','views'));\n\napp.get('*',function(req,res){\n  res.render('main');\n});\n\napp.listen(3000);\n```\n\nFile `public\\css\\styles.styl`:\n```stylus\nbody\n  background grey\n\nh1\n  color lime\n  background black\n```\n\nFile `public\\views\\main.html`:\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <link rel=\"stylesheet\" href=\"css/styles.css\">\n  <title>Test Page</title>\n</head>\n<body>\n  <h1>Hello World</h1>\n</body>\n</html>\n```","html":"<h1 id=\"nunjucks-template-engine-consolidate-stylus-middleware-example-in-express-js\">Nunjucks template engine, Consolidate, Stylus middleware example in Express.js</h1>\n<pre><code class=\"lang-bash\">npm init\nnpm install --save express stylus consolidate nunjucks\n<span class=\"hljs-built_in\">mkdir</span> <span class=\"hljs-keyword\">public</span>\n<span class=\"hljs-built_in\">mkdir</span> <span class=\"hljs-keyword\">public</span>\\css\n<span class=\"hljs-built_in\">mkdir</span> <span class=\"hljs-keyword\">public</span>\\views\n</code></pre>\n<p>File: <code>app.js</code></p>\n<pre><code class=\"lang-javascript\"><span class=\"hljs-keyword\">var</span> express=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'express'</span>),\n    app=express(),\n    stylus=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'stylus'</span>),\n    path=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'path'</span>),\n    consolidate=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'consolidate'</span>);\n\napp.<span class=\"hljs-keyword\">use</span>(stylus.middleware(path.join(__dirname,<span class=\"hljs-string\">'public'</span>,<span class=\"hljs-string\">'css'</span>)));\napp.<span class=\"hljs-keyword\">use</span>(express.<span class=\"hljs-keyword\">static</span>(path.join(__dirname,<span class=\"hljs-string\">'public'</span>)));\n\napp.engine(<span class=\"hljs-string\">'html'</span>,consolidate.nunjucks);\napp.set(<span class=\"hljs-string\">'view engine'</span>,<span class=\"hljs-string\">'html'</span>);\napp.set(<span class=\"hljs-string\">'views'</span>,path.join(__dirname,<span class=\"hljs-string\">'public'</span>,<span class=\"hljs-string\">'views'</span>));\n\napp.get(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(req,res)</span></span>{\n  res.render(<span class=\"hljs-string\">'main'</span>);\n});\n\napp.listen(<span class=\"hljs-number\">3000</span>);\n</code></pre>\n<p>File <code>public\\css\\styles.styl</code>:</p>\n<pre><code class=\"lang-stylus\"><span class=\"hljs-selector-tag\">body</span>\n  <span class=\"hljs-attribute\">background</span> grey\n\n<span class=\"hljs-selector-tag\">h1</span>\n  <span class=\"hljs-attribute\">color</span> lime\n  <span class=\"hljs-attribute\">background</span> black\n</code></pre>\n<p>File <code>public\\views\\main.html</code>:</p>\n<pre><code class=\"lang-html\"><span class=\"hljs-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"css/styles.css\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>Test Page<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>Hello World<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/a9a522d13f702f9d7a6d","description":"Cluster example in Express.js","files":["https://gist.githubusercontent.com/umidjons/a9a522d13f702f9d7a6d/raw/959852c54ecc960277c320783719c9a9710a870f/express-cluster.md"],"content":"Cluster example in Express.js\n===\n\nCreate Express.js app & install necessary modules:\n\n```bash\nnpm init\nnpm install --save express cluster\nvim app.js\n```\n\n`app.js` file content:\n\n```javascript\nvar cluster=require('cluster'),\n    numCpus=require('os').cpus().length,\n    express=require('express');\n\nif(cluster.isMaster){\n  console.log('Fork %s worker(s) from master', numCpus);\n  \n  for(var i=0; i<numCpus; i++)\n    cluster.fork();\n\n  cluster.on('online',function(worker){\n    console.log('Worker is running on %s pid', worker.process.pid);\n  });\n\n  cluster.on('exit',function(worker,code,signal){\n    console.log('Worker with %s is closed', worker.process.id);\n  });\n} else if(cluster.isWorker){\n  // our express.js app\n  var port=3000;\n  console.log('Worker (%s) is now listening to http://localhost:%s', cluster.worker.process.pid, port);\n\n  var app=express();\n  app.get('*',function(req,res){\n    res.status(200).send('cluster '+cluster.worker.process.pid+' responded\\n');\n  });\n  app.listen(port);\n}\n```","html":"<h1 id=\"cluster-example-in-express-js\">Cluster example in Express.js</h1>\n<p>Create Express.js app &amp; install necessary modules:</p>\n<pre><code class=\"lang-bash\">npm init\nnpm install --<span class=\"hljs-keyword\">save</span> express <span class=\"hljs-keyword\">cluster</span>\nvim <span class=\"hljs-keyword\">app</span>.js\n</code></pre>\n<p><code>app.js</code> file content:</p>\n<pre><code class=\"lang-javascript\"><span class=\"hljs-keyword\">var</span> cluster=<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'cluster'</span>),\n    numCpus=<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'os'</span>).cpus().length,\n    express=<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'express'</span>);\n\n<span class=\"hljs-keyword\">if</span>(cluster.isMaster){\n  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Fork %s worker(s) from master'</span>, numCpus);\n\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">var</span> i=<span class=\"hljs-number\">0</span>; i&lt;numCpus; i++)\n    cluster.fork();\n\n  cluster.on(<span class=\"hljs-string\">'online'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">worker</span>)</span>{\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Worker is running on %s pid'</span>, worker.process.pid);\n  });\n\n  cluster.on(<span class=\"hljs-string\">'exit'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">worker,code,signal</span>)</span>{\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Worker with %s is closed'</span>, worker.process.id);\n  });\n} <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(cluster.isWorker){\n  <span class=\"hljs-comment\">// our express.js app</span>\n  <span class=\"hljs-keyword\">var</span> port=<span class=\"hljs-number\">3000</span>;\n  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Worker (%s) is now listening to http://localhost:%s'</span>, cluster.worker.process.pid, port);\n\n  <span class=\"hljs-keyword\">var</span> app=express();\n  app.get(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">req,res</span>)</span>{\n    res.status(<span class=\"hljs-number\">200</span>).send(<span class=\"hljs-string\">'cluster '</span>+cluster.worker.process.pid+<span class=\"hljs-string\">' responded\\n'</span>);\n  });\n  app.listen(port);\n}\n</code></pre>\n"},{"html_url":"https://gist.github.com/5fe798cbf14a1e9cccd3","description":"Настройка MongoDB","files":["https://gist.githubusercontent.com/umidjons/5fe798cbf14a1e9cccd3/raw/3e612a3817a117c8fca79c3d89f40941f0707ba8/configure-mongodb.md"],"content":"Настройка MongoDB\n===\n\nПуть установки `d:\\shopper\\mongodb`\n\nУстановить переменные системы\n===\n1. `Win + R`, наберем `control`, нажимаем `ENTER`\n2. В открывшемся окне в строке Поиск набрать `\"систем\"`\n3. В результатах поиска выбрать пункт `\"Изменение системных переменных среды\"`\n4. В path для системы добавить путь `d:\\shopper\\mongodb\\bin`\n5. Ok, Ok, Ok...\n\nЗапуск `cmd` от имени администратора\n===\n1. нажать кнопку Win\n2. набрать `cmd.exe` и нажать `CTRL + SHIFT + ENTER`\n\nКонфигурационный файл `mongod.cfg`\n===\n\n`engine` по умолчанию `WiredTiger`. В новых версиях x64 Windows работает нормально.\n\n```\nsystemLog:\n    destination: file\n    path: d:\\shopper\\mongodb\\log\\mongod.log\nstorage:\n    engine: mmapv1\n    dbPath: d:\\shopper\\mongodb\\data\n```\n\nУстановить MongoDB как службу\n===\n```\nd:\\SHOPPER\\mongodb\\bin\\mongod.exe --config d:\\SHOPPER\\mongodb\\bin\\mongod.cfg --install --serviceName MongoDB --serviceDisplayName MongoDB\n```\n\nЗапустить/остановить службу\n===\n```\nnet start MongoDB\nnet stop MongoDB\n```\n\nУдалить службу\n===\n```\nsc delete MongoDB\n```","html":"<h1 id=\"-mongodb\">Настройка MongoDB</h1>\n<p>Путь установки <code>d:\\shopper\\mongodb</code></p>\n<h1 id=\"-\">Установить переменные системы</h1>\n<ol>\n<li><code>Win + R</code>, наберем <code>control</code>, нажимаем <code>ENTER</code></li>\n<li>В открывшемся окне в строке Поиск набрать <code>&quot;систем&quot;</code></li>\n<li>В результатах поиска выбрать пункт <code>&quot;Изменение системных переменных среды&quot;</code></li>\n<li>В path для системы добавить путь <code>d:\\shopper\\mongodb\\bin</code></li>\n<li>Ok, Ok, Ok...</li>\n</ol>\n<h1 id=\"-cmd-\">Запуск <code>cmd</code> от имени администратора</h1>\n<ol>\n<li>нажать кнопку Win</li>\n<li>набрать <code>cmd.exe</code> и нажать <code>CTRL + SHIFT + ENTER</code></li>\n</ol>\n<h1 id=\"-mongod-cfg-\">Конфигурационный файл <code>mongod.cfg</code></h1>\n<p><code>engine</code> по умолчанию <code>WiredTiger</code>. В новых версиях x64 Windows работает нормально.</p>\n<pre><code><span class=\"hljs-attribute\">systemLog</span>:\n    <span class=\"hljs-attribute\">destination</span>: file\n    <span class=\"hljs-attribute\">path</span>: <span class=\"hljs-attribute\">d</span>:\\shopper\\mongodb\\log\\mongod.log\n<span class=\"hljs-attribute\">storage</span>:\n    <span class=\"hljs-attribute\">engine</span>: mmapv1\n    <span class=\"hljs-attribute\">dbPath</span>: <span class=\"hljs-attribute\">d</span>:\\shopper\\mongodb\\data\n</code></pre><h1 id=\"-mongodb-\">Установить MongoDB как службу</h1>\n<pre><code>d:<span class=\"hljs-symbol\">\\S</span>HOPPER<span class=\"hljs-symbol\">\\m</span>ongodb<span class=\"hljs-symbol\">\\b</span>in<span class=\"hljs-symbol\">\\m</span>ongod.exe --config d:<span class=\"hljs-symbol\">\\S</span>HOPPER<span class=\"hljs-symbol\">\\m</span>ongodb<span class=\"hljs-symbol\">\\b</span>in<span class=\"hljs-symbol\">\\m</span>ongod.cfg --install --serviceName MongoDB --serviceDisplayName MongoDB\n</code></pre><h1 id=\"-\">Запустить/остановить службу</h1>\n<pre><code><span class=\"hljs-built_in\">net</span> <span class=\"hljs-built_in\">start</span> MongoDB\n<span class=\"hljs-built_in\">net</span> stop MongoDB\n</code></pre><h1 id=\"-\">Удалить службу</h1>\n<pre><code>sc <span class=\"hljs-keyword\">delete</span> MongoDB\n</code></pre>"},{"html_url":"https://gist.github.com/2e5f2793e2d90e9f0674","description":"Using Redis as session store","files":["https://gist.githubusercontent.com/umidjons/2e5f2793e2d90e9f0674/raw/f4cd0deb79d682de99cb9bd44558881d37ed99ec/redis-as-session-store.md"],"content":"Using Redis as session store\n===\n\nInstall & run `Redis`. Default host & port: `localhost:6379`.\n\nInstall necessary packages:\n```bash\nnpm init\nnpm install --save express cookie-parser express-session connect-redis\n```\n\n```javascript\nvar express=require('express');\nvar app=express();\nvar cookieParser=require('cookie-parser');\nvar session=require('express-session');\nvar RedisStore=require('connect-redis')(session);\n\napp.use(cookieParser());\n\napp.use(session({\n  resave:true,\n  saveUninitialized:true,\n  store:new RedisStore({host:'localhost',port:6379}),\n  secret:'HELLO-WORLD',\n  cookie:{path:'/',maxAge:3600000}\n}));\n\napp.get('/',function(req,res){\n  console.log('Session ID:',req.sessionID);\n\n  if(!req.session.counter) \n    req.session.counter=0;\n\n  req.session.counter++;\n\n  res.send('Counter:'+req.session.counter);\n});\n\napp.listen(3000);\n```\n\nChecking stored sessions:\n\nRun Redis CLI\n```bash\nredis-cli\n```\n\nList all session IDs\n```\nkeys sess*\n```\n\nOutput:\n```\n1) \"sess:NDsf6P6ZbY7qp9h7vn00zr_t5tYlIgkn\"\n2) \"sess:WTsf6P6ZbY7qp1m0vn00zr_t5tOwIpaQ\"\n```\n\nOr, if we know session ID\n```\nget sess:NDsf6P6ZbY7qp9h7vn00zr_t5tYlIgkn\n```\n\nOutput\n```\n\"{\\\"cookie\\\":{\\\"originalMaxAge\\\":3600000,\\\"expires\\\":\\\"2016-01-15T05:33:32.701Z\\\",\\\"httpOnly\\\":true,\\\"path\\\":\\\"/\\\"},\\\"counter\\\":4}\"\n```","html":"<h1 id=\"using-redis-as-session-store\">Using Redis as session store</h1>\n<p>Install &amp; run <code>Redis</code>. Default host &amp; port: <code>localhost:6379</code>.</p>\n<p>Install necessary packages:</p>\n<pre><code class=\"lang-bash\">npm init\nnpm install --<span class=\"hljs-built_in\">save</span> <span class=\"hljs-built_in\">express</span> cookie-parser <span class=\"hljs-built_in\">express</span>-session connect-redis\n</code></pre>\n<pre><code class=\"lang-javascript\"><span class=\"hljs-keyword\">var</span> express=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'express'</span>);\n<span class=\"hljs-keyword\">var</span> app=express();\n<span class=\"hljs-keyword\">var</span> cookieParser=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'cookie-parser'</span>);\n<span class=\"hljs-keyword\">var</span> session=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'express-session'</span>);\n<span class=\"hljs-keyword\">var</span> RedisStore=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'connect-redis'</span>)(session);\n\napp.<span class=\"hljs-keyword\">use</span>(cookieParser());\n\napp.<span class=\"hljs-keyword\">use</span>(session({\n  resave:<span class=\"hljs-keyword\">true</span>,\n  saveUninitialized:<span class=\"hljs-keyword\">true</span>,\n  store:<span class=\"hljs-keyword\">new</span> RedisStore({host:<span class=\"hljs-string\">'localhost'</span>,port:<span class=\"hljs-number\">6379</span>}),\n  secret:<span class=\"hljs-string\">'HELLO-WORLD'</span>,\n  cookie:{path:<span class=\"hljs-string\">'/'</span>,maxAge:<span class=\"hljs-number\">3600000</span>}\n}));\n\napp.get(<span class=\"hljs-string\">'/'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(req,res)</span></span>{\n  console.log(<span class=\"hljs-string\">'Session ID:'</span>,req.sessionID);\n\n  <span class=\"hljs-keyword\">if</span>(!req.session.counter) \n    req.session.counter=<span class=\"hljs-number\">0</span>;\n\n  req.session.counter++;\n\n  res.send(<span class=\"hljs-string\">'Counter:'</span>+req.session.counter);\n});\n\napp.listen(<span class=\"hljs-number\">3000</span>);\n</code></pre>\n<p>Checking stored sessions:</p>\n<p>Run Redis CLI</p>\n<pre><code class=\"lang-bash\">redis-<span class=\"hljs-keyword\">cli</span>\n</code></pre>\n<p>List all session IDs</p>\n<pre><code><span class=\"hljs-built_in\">keys</span> sess*\n</code></pre><p>Output:</p>\n<pre><code><span class=\"hljs-number\">1</span>) <span class=\"hljs-string\">\"sess:NDsf6P6ZbY7qp9h7vn00zr_t5tYlIgkn\"</span>\n<span class=\"hljs-number\">2</span>) <span class=\"hljs-string\">\"sess:WTsf6P6ZbY7qp1m0vn00zr_t5tOwIpaQ\"</span>\n</code></pre><p>Or, if we know session ID</p>\n<pre><code>get sess:<span class=\"hljs-symbol\">NDsf6</span>P<span class=\"hljs-number\">6</span>ZbY<span class=\"hljs-number\">7</span>qp<span class=\"hljs-number\">9</span>h<span class=\"hljs-number\">7</span>v<span class=\"hljs-symbol\">n00</span>zr_t<span class=\"hljs-number\">5</span>tYlIgk<span class=\"hljs-symbol\">n</span>\n</code></pre><p>Output</p>\n<pre><code><span class=\"hljs-string\">\"{<span class=\"hljs-subst\">\\\"</span>cookie<span class=\"hljs-subst\">\\\"</span>:{<span class=\"hljs-subst\">\\\"</span>originalMaxAge<span class=\"hljs-subst\">\\\"</span>:3600000,<span class=\"hljs-subst\">\\\"</span>expires<span class=\"hljs-subst\">\\\"</span>:<span class=\"hljs-subst\">\\\"</span>2016-01-15T05:33:32.701Z<span class=\"hljs-subst\">\\\"</span>,<span class=\"hljs-subst\">\\\"</span>httpOnly<span class=\"hljs-subst\">\\\"</span>:true,<span class=\"hljs-subst\">\\\"</span>path<span class=\"hljs-subst\">\\\"</span>:<span class=\"hljs-subst\">\\\"</span>/<span class=\"hljs-subst\">\\\"</span>},<span class=\"hljs-subst\">\\\"</span>counter<span class=\"hljs-subst\">\\\"</span>:4}\"</span>\n</code></pre>"},{"html_url":"https://gist.github.com/6b0f278f3c87f3b9f8cd","description":"Compile MQL5 in console","files":["https://gist.githubusercontent.com/umidjons/6b0f278f3c87f3b9f8cd/raw/9661db8ddc7b8f7a579a65a9efe3e88b175a5d4f/compile-mql5.md"],"content":"Compile MQL5 from console\n===\n\n```\n\"c:\\Program Files\\MetaTrader 5\\metaeditor64.exe\" /portable /compile:candlestick_patterns.mq5 /inc:candlesticktype.mqh /log:mql.log\n```","html":"<h1 id=\"compile-mql5-from-console\">Compile MQL5 from console</h1>\n<pre><code><span class=\"hljs-string\">\"c:\\Program Files\\MetaTrader 5\\metaeditor64.exe\"</span> <span class=\"hljs-regexp\">/portable /</span><span class=\"hljs-string\">compile:</span>candlestick_patterns.mq5 <span class=\"hljs-regexp\">/inc:candlesticktype.mqh /</span><span class=\"hljs-string\">log:</span>mql.log\n</code></pre>"},{"html_url":"https://gist.github.com/5f772cb2fad891e66070","description":"Пример получения исторических баров","files":["https://gist.githubusercontent.com/umidjons/5f772cb2fad891e66070/raw/b2e505df500f5acc7479de4737d46cba09c7c2d3/copyrates-example.md"],"content":"Пример получения исторических баров\n===\n\n```mql\nint OnStart()\n  {\n   MqlRates rates[];\n   ArraySetAsSeries(rates,true);\n\n   int copied=CopyRates(Symbol(),PERIOD_CURRENT,0,100,rates);\n   if(copied>0)\n     {\n      Print(\"Скопированы баров: \",copied);\n\n      string format=\"open=%G, high=%G, low=%G, close=%G, volume=%d\";\n      string out;\n      int size=fmin(copied,10);\n\n      for(int i=0;i<size;i++)\n        {\n         MqlRates r=rates[i];\n         out=i+\": \"+TimeToString(r.time);\n         out+=\" \"+StringFormat(format,r.open,r.high,r.low,r.close,r.tick_volume);\n         Print(out);\n        }\n     }\n   else\n      Print(\"Не удалось получить исторические данные по символу \",Symbol());\n   return(INIT_SUCCEEDED);\n  }\n```","html":"<h1 id=\"-\">Пример получения исторических баров</h1>\n<pre><code class=\"lang-mql\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">OnStart</span>(<span class=\"hljs-params\"></span>)\n  </span>{\n   MqlRates rates[];\n   ArraySetAsSeries(rates,<span class=\"hljs-literal\">true</span>);\n\n   <span class=\"hljs-keyword\">int</span> copied=CopyRates(Symbol(),PERIOD_CURRENT,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">100</span>,rates);\n   <span class=\"hljs-keyword\">if</span>(copied&gt;<span class=\"hljs-number\">0</span>)\n     {\n      Print(<span class=\"hljs-string\">\"Скопированы баров: \"</span>,copied);\n\n      <span class=\"hljs-keyword\">string</span> format=<span class=\"hljs-string\">\"open=%G, high=%G, low=%G, close=%G, volume=%d\"</span>;\n      <span class=\"hljs-keyword\">string</span> <span class=\"hljs-keyword\">out</span>;\n      <span class=\"hljs-keyword\">int</span> size=fmin(copied,<span class=\"hljs-number\">10</span>);\n\n      <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;size;i++)\n        {\n         MqlRates r=rates[i];\n         <span class=\"hljs-keyword\">out</span>=i+<span class=\"hljs-string\">\": \"</span>+TimeToString(r.time);\n         <span class=\"hljs-keyword\">out</span>+=<span class=\"hljs-string\">\" \"</span>+StringFormat(format,r.open,r.high,r.low,r.close,r.tick_volume);\n         Print(<span class=\"hljs-keyword\">out</span>);\n        }\n     }\n   <span class=\"hljs-function\"><span class=\"hljs-keyword\">else</span>\n      <span class=\"hljs-title\">Print</span>(<span class=\"hljs-params\"><span class=\"hljs-string\">\"Не удалось получить исторические данные по символу \"</span>,Symbol(</span>))</span>;\n   <span class=\"hljs-keyword\">return</span>(INIT_SUCCEEDED);\n  }\n</code></pre>\n"},{"html_url":"https://gist.github.com/af10ea416c8e2e7359af","description":"async.parallel() example","files":["https://gist.githubusercontent.com/umidjons/af10ea416c8e2e7359af/raw/7f5973f7075e34503bf1d77f4d9220f4cd1d8ced/async-parallel-example.md"],"content":"async.parallel() example\n===\n\n```js\nvar mongojs=require('mongojs');\nvar db=mongojs('mydb',['users','orders','products']);\nvar async=require('async');\n\nvar userHasActivity=function(user_id,cbk){\n  async.parallel(\n    {\n      orders:function(callback){\n        db.orders.count({userId:user_id},callback);\n      },\n      products:function(callback){\n        db.products.count({userId:user_id},callback);\n      }\n    },\n    function(err,results){\n      console.log(err,results); // err = null results = { orders: 140, products: 0 }\n      var act_count=results.orders+results.products;\n      cbk(err,act_count>0);\n    }\n  );\n}\n\n// usage example\nuserHasActivity(req.params.id,function(err,hasActivity){\n    // todo: some logic\n});\n```","html":"<h1 id=\"async-parallel-example\">async.parallel() example</h1>\n<pre><code class=\"lang-js\"><span class=\"hljs-keyword\">var</span> mongojs=<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'mongojs'</span>);\n<span class=\"hljs-keyword\">var</span> db=mongojs(<span class=\"hljs-string\">'mydb'</span>,[<span class=\"hljs-string\">'users'</span>,<span class=\"hljs-string\">'orders'</span>,<span class=\"hljs-string\">'products'</span>]);\n<span class=\"hljs-keyword\">var</span> <span class=\"hljs-keyword\">async</span>=<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'async'</span>);\n\n<span class=\"hljs-keyword\">var</span> userHasActivity=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">user_id,cbk</span>)</span>{\n  <span class=\"hljs-keyword\">async</span>.parallel(\n    {\n      <span class=\"hljs-attr\">orders</span>:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">callback</span>)</span>{\n        db.orders.count({<span class=\"hljs-attr\">userId</span>:user_id},callback);\n      },\n      <span class=\"hljs-attr\">products</span>:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">callback</span>)</span>{\n        db.products.count({<span class=\"hljs-attr\">userId</span>:user_id},callback);\n      }\n    },\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err,results</span>)</span>{\n      <span class=\"hljs-built_in\">console</span>.log(err,results); <span class=\"hljs-comment\">// err = null results = { orders: 140, products: 0 }</span>\n      <span class=\"hljs-keyword\">var</span> act_count=results.orders+results.products;\n      cbk(err,act_count&gt;<span class=\"hljs-number\">0</span>);\n    }\n  );\n}\n\n<span class=\"hljs-comment\">// usage example</span>\nuserHasActivity(req.params.id,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err,hasActivity</span>)</span>{\n    <span class=\"hljs-comment\">// <span class=\"hljs-doctag\">todo:</span> some logic</span>\n});\n</code></pre>\n"},{"html_url":"https://gist.github.com/857013a6c8fbd1c99ada","description":"Authenticate a Node.js API with JSON Web Tokens","files":["https://gist.githubusercontent.com/umidjons/857013a6c8fbd1c99ada/raw/0ff67d78e66b287d587a9ad239512c8cfc55636c/authenticate-nodejs-api-with-jsonwebtoken.md"],"content":"Authenticate a Node.js API with JSON Web Tokens\n====\n\nOriginal article: https://scotch.io/tutorials/authenticate-a-node-js-api-with-json-web-tokens\n\nSet up AngularJS toaster (backend NodeJS app)\n====\n\n```bash\nmkdir au\ncd au\nvim package.json\n```\n\n`package.json` content:\n```json\n{\n\t\"name\":\"authapp\",\n\t\"main\":\"server.js\"\n}\n```\n\n```bash\nnpm install express body-parser morgan mongoose jsonwebtoken --save\n```\n\n```bash\nmkdir app\\models\nvim app\\models\\user.js\n```\n\n`user.js` content:\n```js\nvar mongoose = require('mongoose');\nvar Schema = mongoose.Schema;\nmodule.exports = mongoose.model('User', new Schema({\n  name: String,\n  password: String,\n  admin: Boolean\n}));\n```\n\n`config.js` content:\n```js\nmodule.exports = {\n  secret: 'SomeSecretString',\n  database: 'mongodb://localhost:27017/au'\n};\n```\n\n```bash\nvim server.js\n```\n\n`server.js` content:\n```js\nvar express = require('express');\nvar app = express();\nvar bodyParser = require('body-parser');\nvar morgan = require('morgan');\nvar mongoose = require('mongoose');\nvar jwt = require('jsonwebtoken');\nvar config = require('./config');\nvar User = require('./app/models/user');\n\nvar port = process.env.PORT || 3000;\nmongoose.connect(config.database);\n\napp.set('superSecret',config.secret);\n\napp.use(bodyParser.urlencoded({extended:false}));\napp.use(bodyParser.json());\n\napp.use(morgan('dev'));\n\napp.get('/',function(req,res){\n  res.send('Hello! The api is at http://localhost:'+port+'/api');\n});\n\napp.get('/setup',function(req,res){\n  // create a sample user\n  var nick = new User({\n    name: 'John Doe',\n    password: '123',\n    admin: true\n  });\n\n  // save the user\n  nick.save(function(err){\n    if(err) throw err;\n\n    console.log('User saved successfully');\n    res.json({success: true});\n  });\n});\n\nvar apiRoutes = express.Router();\n\napiRoutes.post('/authenticate',function(req,res){\n  User.findOne({name: req.body.name}, function(err,user){\n    if(err) throw err;\n\n    if(!user){\n      res.json({success:false, message:'Authentication failed! User not found.'});\n    }\n    else if(user){\n      if(user.password != req.body.password){\n\t\tres.json({success:false,message:'Authentication failed! Invalid password.'});\n      } else {\n\t\tvar token = jwt.sign({name:user.name}, app.get('superSecret'),{ expiresInMinutes: 1440});\n\t\tres.json({\n\t\t  success: true,\n\t\t  message: 'Enjoy your token!',\n\t\t  token: token\n\t\t});\n      }\n    }\n  });\n});\n\napiRoutes.use(function(req,res,next){\n  var token = req.body.token || req.query.token || req.headers['x-access-token'];\n  if(token){\n    jwt.verify(token, app.get('superSecret'), function(err,decoded){\n      if(err){\n\t\treturn res.json({success:false, message:'Failed to authenticate token.'});\n      } else {\n\t\treq.decoded = decoded;\n\t\tnext();\n      }\n    });\n  } else {\n    return res.status(403).send({\n      success: false,\n      message: 'No token provided.'\n    });\n  }\n});\n\napiRoutes.get('/',function(req,res){\n  res.json({message: 'Welcome to the coolest API on earth!'});\n});\n\napiRoutes.get('/users',function(req,res){\n  User.find({},function(err,users){\n    res.json(users);\n  });\n});\n\napp.use('/api', apiRoutes);\n\napp.listen(port);\n\nconsole.log('Magic happens at http://localhost:'+port);\n```\n\nCreate user\n```\nhttp://localhost:3000/setup\n```\n\nAuthenticate a user:\n```\npost request http://localhost:3000/api/authenticate\nwith body (x-www-form-urlencoded)\nname=John Doe\npassword=123\n```\n\nSave token from response:\n```json\n{\n  \"success\": true,\n  \"message\": \"Enjoy your token!\",\n  \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NjZhNWRmZWM0YTBmNWI4MWY3ZGUyN2EiLCJuYW1lIjoiSm9obiBEb2UiLCJwYXNzd29yZCI6IjEyMyIsImFkbWluIjp0cnVlLCJfX3YiOjB9.1lVy8FFahyEl1OBGHTNTn5c1r4xJZFgTsdJ-OsQpqvo\"\n}\n```\n\nAccess protected areas with this token:\n```\nhttp://localhost:3000/api/\nwith header\nx-access-token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NjZhNWRmZWM0YTBmNWI4MWY3ZGUyN2EiLCJuYW1lIjoiSm9obiBEb2UiLCJwYXNzd29yZCI6IjEyMyIsImFkbWluIjp0cnVlLCJfX3YiOjB9.1lVy8FFahyEl1OBGHTNTn5c1r4xJZFgTsdJ-OsQpqvo\n\nOR\ntoken query parameter\nhttp://localhost:3000/api/users?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NjZhNWRmZWM0YTBmNWI4MWY3ZGUyN2EiLCJuYW1lIjoiSm9obiBEb2UiLCJwYXNzd29yZCI6IjEyMyIsImFkbWluIjp0cnVlLCJfX3YiOjB9.1lVy8FFahyEl1OBGHTNTn5c1r4xJZFgTsdJ-OsQpqvo\n```\n\n","html":"<h1 id=\"authenticate-a-node-js-api-with-json-web-tokens\">Authenticate a Node.js API with JSON Web Tokens</h1>\n<p>Original article: <a href=\"https://scotch.io/tutorials/authenticate-a-node-js-api-with-json-web-tokens\">https://scotch.io/tutorials/authenticate-a-node-js-api-with-json-web-tokens</a></p>\n<h1 id=\"set-up-angularjs-toaster-backend-nodejs-app-\">Set up AngularJS toaster (backend NodeJS app)</h1>\n<pre><code class=\"lang-bash\"><span class=\"hljs-built_in\">mkdir</span> <span class=\"hljs-keyword\">au</span>\n<span class=\"hljs-keyword\">cd</span> <span class=\"hljs-keyword\">au</span>\n<span class=\"hljs-keyword\">vim</span> package.json\n</code></pre>\n<p><code>package.json</code> content:</p>\n<pre><code class=\"lang-json\">{\n    <span class=\"hljs-attr\">\"name\"</span>:<span class=\"hljs-string\">\"authapp\"</span>,\n    <span class=\"hljs-attr\">\"main\"</span>:<span class=\"hljs-string\">\"server.js\"</span>\n}\n</code></pre>\n<pre><code class=\"lang-bash\">npm <span class=\"hljs-keyword\">install </span>express <span class=\"hljs-keyword\">body-parser </span>morgan mongoose <span class=\"hljs-keyword\">jsonwebtoken </span>--save\n</code></pre>\n<pre><code class=\"lang-bash\"><span class=\"hljs-keyword\">mkdir</span> <span class=\"hljs-keyword\">app</span>\\models\nvim <span class=\"hljs-keyword\">app</span>\\models\\user.js\n</code></pre>\n<p><code>user.js</code> content:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-keyword\">var</span> mongoose = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'mongoose'</span>);\n<span class=\"hljs-keyword\">var</span> Schema = mongoose.Schema;\n<span class=\"hljs-built_in\">module</span>.exports = mongoose.model(<span class=\"hljs-string\">'User'</span>, <span class=\"hljs-keyword\">new</span> Schema({\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">String</span>,\n  <span class=\"hljs-attr\">password</span>: <span class=\"hljs-built_in\">String</span>,\n  <span class=\"hljs-attr\">admin</span>: <span class=\"hljs-built_in\">Boolean</span>\n}));\n</code></pre>\n<p><code>config.js</code> content:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-keyword\">module</span>.<span class=\"hljs-keyword\">exports</span> = {\n  secret: <span class=\"hljs-string\">'SomeSecretString'</span>,\n  database: <span class=\"hljs-string\">'mongodb://localhost:27017/au'</span>\n};\n</code></pre>\n<pre><code class=\"lang-bash\">vim <span class=\"hljs-keyword\">server</span>.js\n</code></pre>\n<p><code>server.js</code> content:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-keyword\">var</span> express = <span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'express'</span>);\n<span class=\"hljs-keyword\">var</span> app = express();\n<span class=\"hljs-keyword\">var</span> bodyParser = <span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'body-parser'</span>);\n<span class=\"hljs-keyword\">var</span> morgan = <span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'morgan'</span>);\n<span class=\"hljs-keyword\">var</span> mongoose = <span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'mongoose'</span>);\n<span class=\"hljs-keyword\">var</span> jwt = <span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'jsonwebtoken'</span>);\n<span class=\"hljs-keyword\">var</span> config = <span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'./config'</span>);\n<span class=\"hljs-keyword\">var</span> User = <span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'./app/models/user'</span>);\n\n<span class=\"hljs-keyword\">var</span> port = process.env.PORT || <span class=\"hljs-number\">3000</span>;\nmongoose.connect(config.database);\n\napp.set(<span class=\"hljs-string\">'superSecret'</span>,config.secret);\n\napp.<span class=\"hljs-keyword\">use</span>(bodyParser.urlencoded({extended:<span class=\"hljs-keyword\">false</span>}));\napp.<span class=\"hljs-keyword\">use</span>(bodyParser.json());\n\napp.<span class=\"hljs-keyword\">use</span>(morgan(<span class=\"hljs-string\">'dev'</span>));\n\napp.get(<span class=\"hljs-string\">'/'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(req,res)</span></span>{\n  res.send(<span class=\"hljs-string\">'Hello! The api is at http://localhost:'</span>+port+<span class=\"hljs-string\">'/api'</span>);\n});\n\napp.get(<span class=\"hljs-string\">'/setup'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(req,res)</span></span>{\n  <span class=\"hljs-comment\">// create a sample user</span>\n  <span class=\"hljs-keyword\">var</span> nick = <span class=\"hljs-keyword\">new</span> User({\n    name: <span class=\"hljs-string\">'John Doe'</span>,\n    password: <span class=\"hljs-string\">'123'</span>,\n    admin: <span class=\"hljs-keyword\">true</span>\n  });\n\n  <span class=\"hljs-comment\">// save the user</span>\n  nick.save(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(err)</span></span>{\n    <span class=\"hljs-keyword\">if</span>(err) <span class=\"hljs-keyword\">throw</span> err;\n\n    console.log(<span class=\"hljs-string\">'User saved successfully'</span>);\n    res.json({success: <span class=\"hljs-keyword\">true</span>});\n  });\n});\n\n<span class=\"hljs-keyword\">var</span> apiRoutes = express.Router();\n\napiRoutes.post(<span class=\"hljs-string\">'/authenticate'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(req,res)</span></span>{\n  User.findOne({name: req.body.name}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(err,user)</span></span>{\n    <span class=\"hljs-keyword\">if</span>(err) <span class=\"hljs-keyword\">throw</span> err;\n\n    <span class=\"hljs-keyword\">if</span>(!user){\n      res.json({success:<span class=\"hljs-keyword\">false</span>, message:<span class=\"hljs-string\">'Authentication failed! User not found.'</span>});\n    }\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(user){\n      <span class=\"hljs-keyword\">if</span>(user.password != req.body.password){\n        res.json({success:<span class=\"hljs-keyword\">false</span>,message:<span class=\"hljs-string\">'Authentication failed! Invalid password.'</span>});\n      } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-keyword\">var</span> token = jwt.sign({name:user.name}, app.get(<span class=\"hljs-string\">'superSecret'</span>),{ expiresInMinutes: <span class=\"hljs-number\">1440</span>});\n        res.json({\n          success: <span class=\"hljs-keyword\">true</span>,\n          message: <span class=\"hljs-string\">'Enjoy your token!'</span>,\n          token: token\n        });\n      }\n    }\n  });\n});\n\napiRoutes.<span class=\"hljs-keyword\">use</span>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(req,res,next)</span></span>{\n  <span class=\"hljs-keyword\">var</span> token = req.body.token || req.query.token || req.headers[<span class=\"hljs-string\">'x-access-token'</span>];\n  <span class=\"hljs-keyword\">if</span>(token){\n    jwt.verify(token, app.get(<span class=\"hljs-string\">'superSecret'</span>), <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(err,decoded)</span></span>{\n      <span class=\"hljs-keyword\">if</span>(err){\n        <span class=\"hljs-keyword\">return</span> res.json({success:<span class=\"hljs-keyword\">false</span>, message:<span class=\"hljs-string\">'Failed to authenticate token.'</span>});\n      } <span class=\"hljs-keyword\">else</span> {\n        req.decoded = decoded;\n        next();\n      }\n    });\n  } <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-keyword\">return</span> res.status(<span class=\"hljs-number\">403</span>).send({\n      success: <span class=\"hljs-keyword\">false</span>,\n      message: <span class=\"hljs-string\">'No token provided.'</span>\n    });\n  }\n});\n\napiRoutes.get(<span class=\"hljs-string\">'/'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(req,res)</span></span>{\n  res.json({message: <span class=\"hljs-string\">'Welcome to the coolest API on earth!'</span>});\n});\n\napiRoutes.get(<span class=\"hljs-string\">'/users'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(req,res)</span></span>{\n  User.find({},<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(err,users)</span></span>{\n    res.json(users);\n  });\n});\n\napp.<span class=\"hljs-keyword\">use</span>(<span class=\"hljs-string\">'/api'</span>, apiRoutes);\n\napp.listen(port);\n\nconsole.log(<span class=\"hljs-string\">'Magic happens at http://localhost:'</span>+port);\n</code></pre>\n<p>Create user</p>\n<pre><code><span class=\"hljs-symbol\">http:</span><span class=\"hljs-comment\">//localhost:3000/setup</span>\n</code></pre><p>Authenticate a user:</p>\n<pre><code><span class=\"hljs-keyword\">post</span> request http:<span class=\"hljs-comment\">//localhost:3000/api/authenticate</span>\nwith body (x-www-<span class=\"hljs-keyword\">form</span>-urlencoded)\nname=John <span class=\"hljs-keyword\">Doe</span>\npassword=123\n</code></pre><p>Save token from response:</p>\n<pre><code class=\"lang-json\">{\n  <span class=\"hljs-attr\">\"success\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-string\">\"Enjoy your token!\"</span>,\n  <span class=\"hljs-attr\">\"token\"</span>: <span class=\"hljs-string\">\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NjZhNWRmZWM0YTBmNWI4MWY3ZGUyN2EiLCJuYW1lIjoiSm9obiBEb2UiLCJwYXNzd29yZCI6IjEyMyIsImFkbWluIjp0cnVlLCJfX3YiOjB9.1lVy8FFahyEl1OBGHTNTn5c1r4xJZFgTsdJ-OsQpqvo\"</span>\n}\n</code></pre>\n<p>Access protected areas with this token:</p>\n<pre><code>http:<span class=\"hljs-comment\">//localhost:3000/api/</span>\nwith <span class=\"hljs-built_in\">header</span>\nx-access-<span class=\"hljs-built_in\">token</span>=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NjZhNWRmZWM0YTBmNWI4MWY3ZGUyN2EiLCJuYW1lIjoiSm9obiBEb2UiLCJwYXNzd29yZCI6IjEyMyIsImFkbWluIjp0cnVlLCJfX3YiOjB9<span class=\"hljs-number\">.1</span>lVy8FFahyEl1OBGHTNTn5c1r4xJZFgTsdJ-OsQpqvo\n\n<span class=\"hljs-keyword\">OR</span>\n<span class=\"hljs-built_in\">token</span> query parameter\nhttp:<span class=\"hljs-comment\">//localhost:3000/api/users?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NjZhNWRmZWM0YTBmNWI4MWY3ZGUyN2EiLCJuYW1lIjoiSm9obiBEb2UiLCJwYXNzd29yZCI6IjEyMyIsImFkbWluIjp0cnVlLCJfX3YiOjB9.1lVy8FFahyEl1OBGHTNTn5c1r4xJZFgTsdJ-OsQpqvo</span>\n</code></pre>"},{"html_url":"https://gist.github.com/0eaf7a6a2fb2516e48d7","description":"Using AngularJS toaster with NodeJS application example","files":["https://gist.githubusercontent.com/umidjons/0eaf7a6a2fb2516e48d7/raw/1733fe45b96481022d14003804d0b064dd36e73e/angularjs-toaster-in-nodejs-app.md"],"content":"Using AngularJS toaster with NodeJS application example\n====\n\nInstall angularjs, angular-animate and angular-toaster\n```bash\nbower install angularjs-toaster\n```\n\nInclude toaster's CSS and JS (File: `main.html`)\n```html\n<!doctype html>\n<html lang=\"en-US\" ng-app=\"MyApp\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<base href=\"/\">\n\t<link rel=\"stylesheet\" href=\"lib/angularjs-toaster/toaster.min.css\">\n\t<link rel=\"stylesheet\" href=\"src/css/styles.css\">\n\t<title>My App</title>\n</head>\n<body>\n\n<div class=\"container\">\n\n\t<toaster-container></toaster-container>\n\n</div>\n\n<script src=\"lib/jquery/dist/jquery.min.js\"></script>\n<script src=\"lib/angular/angular.min.js\"></script>\n<script src=\"lib/angular-animate/angular-animate.min.js\"></script>\n<script src=\"lib/angularjs-toaster/toaster.min.js\"></script>\n<script src=\"src/js/app.js\"></script>\n</body>\n</html>\n```\n\nConfigure AngularJS app (File: `app.js`):\n```js\nangular.module('MyApp',['ngAnimate','toaster'])\n  .config(function($httpProvider){\n    $httpProvider.interceptors.unshift(function($q,toaster){\n      return {\n        response     :function(response){\n          var hMsg=response.headers('X-MSG');\n          if(hMsg){\n            hMsg=decodeURI(hMsg);\n            var xMessages=JSON.parse(hMsg);\n            if(xMessages.length>0)\n              xMessages.forEach(function(xMsg){\n                if(xMsg.code && xMsg.message){\n                  if(xMsg.code==200) // success\n                    toaster.pop('success','',xMsg.message);\n                  else if(xMsg.code==455) // warning\n                    toaster.pop('warning','',xMsg.message);\n                  else\n                    toaster.pop('error','Error',xMsg.message); // error\n                }\n              });\n          }\n          return response || $q.when(response);\n        },\n        responseError:function(response){\n          return $q.reject(response);\n        }\n      };\n    });\n  })\n  .factory('F',function(toaster,$timeout){\n    var self={\n      isDef:function(v){return v && v!=null && angular.isDefined(v);},\n      msg  :{\n        error  :function(msg){$timeout(function(){toaster.pop('error','',msg);})},\n        warning:function(msg){$timeout(function(){toaster.pop('warning','',msg);})},\n        info   :function(msg){$timeout(function(){toaster.pop('info','',msg);})},\n        success:function(msg){$timeout(function(){toaster.pop('success','',msg);})}\n      }\n    };\n    return self;\n  })\n  .run(function($rootScope,F){\n    $rootScope._=_;\n    $rootScope.F=F;\n  });\n```\n\nConstants module (File: `constants.js`):\n```js\nvar constants_={\n  STATUS:{\n    SUCCESS:200,\n    WARNING:455,\n    ERROR  :400\n  }\n};\nmodule.exports=constants_;\n```\n\nMessage module (File: `msg.js`):\n```js\nvar Const=require('./constants');\n\nvar Msg={\n  SUCCESS:Const.STATUS.SUCCESS,\n  WARNING:Const.STATUS.WARNING,\n  ERROR  :Const.STATUS.ERROR,\n  /**\n   * Add message to X-MSG header as JSON string.\n   * @param res HTTP Response object instance\n   * @param {string} msg message text\n   * @param {int} status status code (200-success, 455-warning,400-error)\n   */\n  add    :function(res,msg,status){\n    status=status || this.SUCCESS;\n    var msg_={\n      message:msg,\n      code   :status\n    };\n\n    var hdr=res.get('X-MSG'); // get header\n\n    if(hdr) hdr=JSON.parse(decodeURI(hdr));\n    else hdr=[];\n\n    hdr.push(msg_);\n    hdr=encodeURI(JSON.stringify(hdr));\n\n    res.set('X-MSG',hdr); // set header\n  }\n};\n\nmodule.exports=Msg;\n```\n\nNodeJS application (File: `server.js`):\n```js\nvar path=require('path'),\n  express=require('express'),\n  app=express(),\n  bodyParser=require('body-parser'),\n  Msg=require('./msg');\n\napp.locals.publicPath=path.join(__dirname,'public');\napp.locals.viewPath=path.join(app.locals.publicPath,'views');\napp.locals.sendFileOptions={root:app.locals.publicPath};\n\napp\n  .use(express.static('./public'))\n  .use(bodyParser.json())\n  .get('/',function(req,res){\n    res.sendFile('main.html',app.locals.sendFileOptions);\n  })\n  .get('/testmsg',function(req,res){\n    Msg.add(res,'Success message is here',Msg.SUCCESS);\n    Msg.add(res,'Warning message is here',Msg.WARNING);\n    Msg.add(res,'Error message is here'  ,Msg.ERROR  );\n    res.json({txt:'some string'});\n  })\n  .listen(3000);\n```","html":"<h1 id=\"using-angularjs-toaster-with-nodejs-application-example\">Using AngularJS toaster with NodeJS application example</h1>\n<p>Install angularjs, angular-animate and angular-toaster</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-keyword\">bower </span><span class=\"hljs-keyword\">install </span>angularjs-toaster\n</code></pre>\n<p>Include toaster&#39;s CSS and JS (File: <code>main.html</code>)</p>\n<pre><code class=\"lang-html\"><span class=\"hljs-meta\">&lt;!doctype html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en-US\"</span> <span class=\"hljs-attr\">ng-app</span>=<span class=\"hljs-string\">\"MyApp\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">base</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"/\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"lib/angularjs-toaster/toaster.min.css\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"src/css/styles.css\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>My App<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"container\"</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">toaster-container</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">toaster-container</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"lib/jquery/dist/jquery.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"lib/angular/angular.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"lib/angular-animate/angular-animate.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"lib/angularjs-toaster/toaster.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"src/js/app.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n<p>Configure AngularJS app (File: <code>app.js</code>):</p>\n<pre><code class=\"lang-js\">angular.module(<span class=\"hljs-string\">'MyApp'</span>,[<span class=\"hljs-string\">'ngAnimate'</span>,<span class=\"hljs-string\">'toaster'</span>])\n  .config(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($httpProvider)</span></span>{\n    $httpProvider.interceptors.unshift(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($q,toaster)</span></span>{\n      <span class=\"hljs-keyword\">return</span> {\n        response     :<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(response)</span></span>{\n          <span class=\"hljs-keyword\">var</span> hMsg=response.headers(<span class=\"hljs-string\">'X-MSG'</span>);\n          <span class=\"hljs-keyword\">if</span>(hMsg){\n            hMsg=decodeURI(hMsg);\n            <span class=\"hljs-keyword\">var</span> xMessages=JSON.parse(hMsg);\n            <span class=\"hljs-keyword\">if</span>(xMessages.length&gt;<span class=\"hljs-number\">0</span>)\n              xMessages.<span class=\"hljs-keyword\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(xMsg)</span></span>{\n                <span class=\"hljs-keyword\">if</span>(xMsg.code &amp;&amp; xMsg.message){\n                  <span class=\"hljs-keyword\">if</span>(xMsg.code==<span class=\"hljs-number\">200</span>) <span class=\"hljs-comment\">// success</span>\n                    toaster.pop(<span class=\"hljs-string\">'success'</span>,<span class=\"hljs-string\">''</span>,xMsg.message);\n                  <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(xMsg.code==<span class=\"hljs-number\">455</span>) <span class=\"hljs-comment\">// warning</span>\n                    toaster.pop(<span class=\"hljs-string\">'warning'</span>,<span class=\"hljs-string\">''</span>,xMsg.message);\n                  <span class=\"hljs-keyword\">else</span>\n                    toaster.pop(<span class=\"hljs-string\">'error'</span>,<span class=\"hljs-string\">'Error'</span>,xMsg.message); <span class=\"hljs-comment\">// error</span>\n                }\n              });\n          }\n          <span class=\"hljs-keyword\">return</span> response || $q.when(response);\n        },\n        responseError:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(response)</span></span>{\n          <span class=\"hljs-keyword\">return</span> $q.reject(response);\n        }\n      };\n    });\n  })\n  .factory(<span class=\"hljs-string\">'F'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(toaster,$timeout)</span></span>{\n    <span class=\"hljs-keyword\">var</span> <span class=\"hljs-keyword\">self</span>={\n      isDef:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(v)</span></span>{<span class=\"hljs-keyword\">return</span> v &amp;&amp; v!=<span class=\"hljs-keyword\">null</span> &amp;&amp; angular.isDefined(v);},\n      msg  :{\n        error  :<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(msg)</span></span>{$timeout(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{toaster.pop(<span class=\"hljs-string\">'error'</span>,<span class=\"hljs-string\">''</span>,msg);})},\n        warning:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(msg)</span></span>{$timeout(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{toaster.pop(<span class=\"hljs-string\">'warning'</span>,<span class=\"hljs-string\">''</span>,msg);})},\n        info   :<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(msg)</span></span>{$timeout(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{toaster.pop(<span class=\"hljs-string\">'info'</span>,<span class=\"hljs-string\">''</span>,msg);})},\n        success:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(msg)</span></span>{$timeout(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{toaster.pop(<span class=\"hljs-string\">'success'</span>,<span class=\"hljs-string\">''</span>,msg);})}\n      }\n    };\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">self</span>;\n  })\n  .run(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($rootScope,F)</span></span>{\n    $rootScope._=_;\n    $rootScope.F=F;\n  });\n</code></pre>\n<p>Constants module (File: <code>constants.js</code>):</p>\n<pre><code class=\"lang-js\">var constants_={\n<span class=\"hljs-symbol\">  STATUS:</span>{\n<span class=\"hljs-symbol\">    SUCCESS:</span><span class=\"hljs-number\">200</span>,\n<span class=\"hljs-symbol\">    WARNING:</span><span class=\"hljs-number\">455</span>,\n    ERROR  :<span class=\"hljs-number\">400</span>\n  }\n};\nmodule.exports=constants_;\n</code></pre>\n<p>Message module (File: <code>msg.js</code>):</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-keyword\">var</span> <span class=\"hljs-keyword\">Const</span>=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'./constants'</span>);\n\n<span class=\"hljs-keyword\">var</span> Msg={\n  SUCCESS:<span class=\"hljs-keyword\">Const</span>.STATUS.SUCCESS,\n  WARNING:<span class=\"hljs-keyword\">Const</span>.STATUS.WARNING,\n  ERROR  :<span class=\"hljs-keyword\">Const</span>.STATUS.ERROR,\n  <span class=\"hljs-comment\">/**\n   * Add message to X-MSG header as JSON string.\n   * <span class=\"hljs-doctag\">@param</span> res HTTP Response object instance\n   * <span class=\"hljs-doctag\">@param</span> {string} msg message text\n   * <span class=\"hljs-doctag\">@param</span> {int} status status code (200-success, 455-warning,400-error)\n   */</span>\n  add    :<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(res,msg,status)</span></span>{\n    status=status || this.SUCCESS;\n    <span class=\"hljs-keyword\">var</span> msg_={\n      message:msg,\n      code   :status\n    };\n\n    <span class=\"hljs-keyword\">var</span> hdr=res.get(<span class=\"hljs-string\">'X-MSG'</span>); <span class=\"hljs-comment\">// get header</span>\n\n    <span class=\"hljs-keyword\">if</span>(hdr) hdr=JSON.parse(decodeURI(hdr));\n    <span class=\"hljs-keyword\">else</span> hdr=[];\n\n    hdr.push(msg_);\n    hdr=encodeURI(JSON.stringify(hdr));\n\n    res.set(<span class=\"hljs-string\">'X-MSG'</span>,hdr); <span class=\"hljs-comment\">// set header</span>\n  }\n};\n\nmodule.exports=Msg;\n</code></pre>\n<p>NodeJS application (File: <code>server.js</code>):</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-keyword\">var</span> path=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'path'</span>),\n  express=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'express'</span>),\n  app=express(),\n  bodyParser=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'body-parser'</span>),\n  Msg=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-string\">'./msg'</span>);\n\napp.locals.publicPath=path.join(__dirname,<span class=\"hljs-string\">'public'</span>);\napp.locals.viewPath=path.join(app.locals.publicPath,<span class=\"hljs-string\">'views'</span>);\napp.locals.sendFileOptions={root:app.locals.publicPath};\n\napp\n  .<span class=\"hljs-keyword\">use</span>(express.<span class=\"hljs-keyword\">static</span>(<span class=\"hljs-string\">'./public'</span>))\n  .<span class=\"hljs-keyword\">use</span>(bodyParser.json())\n  .get(<span class=\"hljs-string\">'/'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(req,res)</span></span>{\n    res.sendFile(<span class=\"hljs-string\">'main.html'</span>,app.locals.sendFileOptions);\n  })\n  .get(<span class=\"hljs-string\">'/testmsg'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(req,res)</span></span>{\n    Msg.add(res,<span class=\"hljs-string\">'Success message is here'</span>,Msg.SUCCESS);\n    Msg.add(res,<span class=\"hljs-string\">'Warning message is here'</span>,Msg.WARNING);\n    Msg.add(res,<span class=\"hljs-string\">'Error message is here'</span>  ,Msg.ERROR  );\n    res.json({txt:<span class=\"hljs-string\">'some string'</span>});\n  })\n  .listen(<span class=\"hljs-number\">3000</span>);\n</code></pre>\n"},{"html_url":"https://gist.github.com/b31236a31d2eb0ea60a8","description":"MongoDB beginners tips","files":["https://gist.githubusercontent.com/umidjons/b31236a31d2eb0ea60a8/raw/5ecd32057d5746c2529b75b48ca9a83b0c1cf577/mongodb-tips.md"],"content":"Get document's created timestamp\n```js\ndb.links.find()[0]._id.getTimestamp();\n// OUTPUT: ISODate(\"2015-11-27T04:24:40Z\")\n```\n\nCounter function to create sequences\n```js\nfunction counter(name){\n\tvar ret=db.counters.findAndModify({\n\t\tquery:{_id:name},\n\t\tupdate:{$inc:{next:1}},\n\t\tnew:true,\n\t\tupsert:true\n\t});\n\treturn ret.next;\n}\n```\n\nExample of using `counter()`\n```js\ndb.products.insert({_id:counter('products'),name:'product 1'});\ndb.products.insert({_id:counter('products'),name:'product 2'});\ndb.products.insert({_id:counter('products'),name:'product 3'});\n```\n\nShow inserted documents:\n```js\ndb.products.find().pretty();\n```\n\nOutput:\n```\n{ \"_id\" : 1, \"name\" : \"product 1\" }\n{ \"_id\" : 2, \"name\" : \"product 2\" }\n{ \"_id\" : 3, \"name\" : \"product 3\" }\n```\n\nShow counters current values:\n```js\ndb.counters.find().pretty()\n```\n\nOutput:\n```\n{ \"_id\" : \"products\", \"next\" : 3 }\n```\n\nAlternative to SQL statement `UPDATE QUIZZES SET AUTHOR='Mike' WHERE AUTHOR IS NULL`\n```js\ndb.quizzes.update({author:{$exists:0}},{$set:{author:\"Mike\"}},{multi:1})\n```\n\nAlternative to SQL statement `update products set price=price*1`\n```js\ndb.products.find().forEach(function(item){ db.products.update({_id:item._id},{$set:{price:item.price*1}}); })\n```","html":"<p>Get document&#39;s created timestamp</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-selector-tag\">db</span><span class=\"hljs-selector-class\">.links</span><span class=\"hljs-selector-class\">.find</span>()<span class=\"hljs-selector-attr\">[0]</span><span class=\"hljs-selector-class\">._id</span><span class=\"hljs-selector-class\">.getTimestamp</span>();\n<span class=\"hljs-comment\">// OUTPUT: ISODate(\"2015-11-27T04:24:40Z\")</span>\n</code></pre>\n<p>Counter function to create sequences</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">counter</span><span class=\"hljs-params\">(name)</span></span>{\n    <span class=\"hljs-keyword\">var</span> ret=db.counters.findAndModify({\n        query:{_id:name},\n        update:{$inc:{next:<span class=\"hljs-number\">1</span>}},\n        <span class=\"hljs-keyword\">new</span>:<span class=\"hljs-keyword\">true</span>,\n        upsert:<span class=\"hljs-keyword\">true</span>\n    });\n    <span class=\"hljs-keyword\">return</span> ret.next;\n}\n</code></pre>\n<p>Example of using <code>counter()</code></p>\n<pre><code class=\"lang-js\"><span class=\"hljs-selector-tag\">db</span><span class=\"hljs-selector-class\">.products</span><span class=\"hljs-selector-class\">.insert</span>({<span class=\"hljs-attribute\">_id</span>:<span class=\"hljs-built_in\">counter</span>(<span class=\"hljs-string\">'products'</span>),name:<span class=\"hljs-string\">'product 1'</span>});\n<span class=\"hljs-selector-tag\">db</span><span class=\"hljs-selector-class\">.products</span><span class=\"hljs-selector-class\">.insert</span>({<span class=\"hljs-attribute\">_id</span>:<span class=\"hljs-built_in\">counter</span>(<span class=\"hljs-string\">'products'</span>),name:<span class=\"hljs-string\">'product 2'</span>});\n<span class=\"hljs-selector-tag\">db</span><span class=\"hljs-selector-class\">.products</span><span class=\"hljs-selector-class\">.insert</span>({<span class=\"hljs-attribute\">_id</span>:<span class=\"hljs-built_in\">counter</span>(<span class=\"hljs-string\">'products'</span>),name:<span class=\"hljs-string\">'product 3'</span>});\n</code></pre>\n<p>Show inserted documents:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-selector-tag\">db</span><span class=\"hljs-selector-class\">.products</span><span class=\"hljs-selector-class\">.find</span>()<span class=\"hljs-selector-class\">.pretty</span>();\n</code></pre>\n<p>Output:</p>\n<pre><code>{ <span class=\"hljs-attr\">\"_id\"</span> : <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">\"name\"</span> : <span class=\"hljs-string\">\"product 1\"</span> }\n{ <span class=\"hljs-attr\">\"_id\"</span> : <span class=\"hljs-number\">2</span>, <span class=\"hljs-attr\">\"name\"</span> : <span class=\"hljs-string\">\"product 2\"</span> }\n{ <span class=\"hljs-attr\">\"_id\"</span> : <span class=\"hljs-number\">3</span>, <span class=\"hljs-attr\">\"name\"</span> : <span class=\"hljs-string\">\"product 3\"</span> }\n</code></pre><p>Show counters current values:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-selector-tag\">db</span><span class=\"hljs-selector-class\">.counters</span><span class=\"hljs-selector-class\">.find</span>()<span class=\"hljs-selector-class\">.pretty</span>()\n</code></pre>\n<p>Output:</p>\n<pre><code>{ <span class=\"hljs-attr\">\"_id\"</span> : <span class=\"hljs-string\">\"products\"</span>, <span class=\"hljs-attr\">\"next\"</span> : <span class=\"hljs-number\">3</span> }\n</code></pre><p>Alternative to SQL statement <code>UPDATE QUIZZES SET AUTHOR=&#39;Mike&#39; WHERE AUTHOR IS NULL</code></p>\n<pre><code class=\"lang-js\">db.quizzes.<span class=\"hljs-keyword\">update</span>({author:{$exists:<span class=\"hljs-number\">0</span>}},{$set:{author:<span class=\"hljs-string\">\"Mike\"</span>}},{multi:<span class=\"hljs-number\">1</span>})\n</code></pre>\n<p>Alternative to SQL statement <code>update products set price=price*1</code></p>\n<pre><code class=\"lang-js\">db.products.find().forEach(<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-literal\">item</span>){ db.products.update({_id:item._id},{$set:{price:item.price*<span class=\"hljs-number\">1</span>}}); })\n</code></pre>\n"},{"html_url":"https://gist.github.com/06bb3636aa36a1bb1741","description":"Show input controls validity in AngularJS","files":["https://gist.githubusercontent.com/umidjons/06bb3636aa36a1bb1741/raw/a4b23314202a731f38961dfbb3699be7ab09ac4c/input-controls-validity.md"],"content":"Show input controls validity in AngularJS\n===\n\n```css\n.ng-dirty.ng-invalid.form-control {\n    border-color: #a94442;\n    -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);\n}\n.ng-dirty.ng-invalid.form-control:focus {\n    border-color: #843534;\n    -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 6px #ce8483;\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 6px #ce8483;\n}\n.ng-dirty.ng-invalid + .input-group-addon {\n    color: #a94442;\n    background-color: #f2dede;\n    border-color: #a94442;\n}\ninput[type=checkbox].ng-invalid {\n    outline: 1px solid #a94442;\n    outline-offset: -1px;\n}\n```","html":"<h1 id=\"show-input-controls-validity-in-angularjs\">Show input controls validity in AngularJS</h1>\n<pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.ng-dirty</span><span class=\"hljs-selector-class\">.ng-invalid</span><span class=\"hljs-selector-class\">.form-control</span> {\n    <span class=\"hljs-attribute\">border-color</span>: <span class=\"hljs-number\">#a94442</span>;\n    <span class=\"hljs-attribute\">-webkit-box-shadow</span>: inset <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">1px</span> <span class=\"hljs-number\">1px</span> <span class=\"hljs-built_in\">rgba</span>(0, 0, 0, .075);\n    <span class=\"hljs-attribute\">box-shadow</span>: inset <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">1px</span> <span class=\"hljs-number\">1px</span> <span class=\"hljs-built_in\">rgba</span>(0, 0, 0, .075);\n}\n<span class=\"hljs-selector-class\">.ng-dirty</span><span class=\"hljs-selector-class\">.ng-invalid</span><span class=\"hljs-selector-class\">.form-control</span><span class=\"hljs-selector-pseudo\">:focus</span> {\n    <span class=\"hljs-attribute\">border-color</span>: <span class=\"hljs-number\">#843534</span>;\n    <span class=\"hljs-attribute\">-webkit-box-shadow</span>: inset <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">1px</span> <span class=\"hljs-number\">1px</span> <span class=\"hljs-built_in\">rgba</span>(0, 0, 0, .075), <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">6px</span> <span class=\"hljs-number\">#ce8483</span>;\n    <span class=\"hljs-attribute\">box-shadow</span>: inset <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">1px</span> <span class=\"hljs-number\">1px</span> <span class=\"hljs-built_in\">rgba</span>(0, 0, 0, .075), <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">6px</span> <span class=\"hljs-number\">#ce8483</span>;\n}\n<span class=\"hljs-selector-class\">.ng-dirty</span><span class=\"hljs-selector-class\">.ng-invalid</span> + <span class=\"hljs-selector-class\">.input-group-addon</span> {\n    <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#a94442</span>;\n    <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#f2dede</span>;\n    <span class=\"hljs-attribute\">border-color</span>: <span class=\"hljs-number\">#a94442</span>;\n}\n<span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-attr\">[type=checkbox]</span><span class=\"hljs-selector-class\">.ng-invalid</span> {\n    <span class=\"hljs-attribute\">outline</span>: <span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#a94442</span>;\n    <span class=\"hljs-attribute\">outline-offset</span>: -<span class=\"hljs-number\">1px</span>;\n}\n</code></pre>\n"},{"html_url":"https://gist.github.com/886f246e997b495e604d","description":"AngularJS `$formatters` and `$parsers` example","files":["https://gist.githubusercontent.com/umidjons/886f246e997b495e604d/raw/c5c7f427531c81298f5df426b6f5b465a3be91bb/formatters-parsers.md"],"content":"AngularJS `$formatters` and `$parsers` example\n===\n\nUnderstanding formatters and parsers:\n- Formatters change how model values will appear in the view.\n- Parsers change how view values will be saved in the model.\n\n```js\n  // formats text going to user (from model to view)\n  ngModel.$formatters.push(function(value) {\n    return value.toUpperCase();\n  });\n\n  // formats text from the user (from view to model)\n  ngModel.$parsers.push(function(value) {\n    return value.toLowerCase();\n  });\n```\n\nFormat number set programmatically via custom directive\n```js\nangular.module('MyApp',[])\n\t.directive('formatNumber',function($filter){\n\t\treturn {\n\t\t\trequire:'ngModel',\n\t\t\tlink   :function(scope,elem,attrs,ngModelCtrl){\n\t\t\t\t// formats text going to user (from model to view)\n\t\t\t\tngModelCtrl.$formatters.push(function(v){\n\t\t\t\t\treturn $filter('number')(v,2); // programmatically set value will be formatted\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t})\n\t.controller('SiteCtrl',function($scope){\n\t    // default value\n\t\t$scope.val={num:0};\n\t\t\n\t\t// change value programmatically\n\t\tsetTimeout(function(){\n\t\t\t$scope.val.num=123456.786; // in input will be shown as 123,456.79\n\t\t},1000);\n\t});\n```\n\nUsing `format-number` directive:\n```html\n<div ng-app=\"MyApp\" class=\"site-index\">\n\t<div ng-controller=\"SiteCtrl\" class=\"body-content\">\n\t\t<form name=\"form_1\">\n\t\t\t<input ng-model=\"val.num\" format-number>\n\t\t\tModel value:\n\t\t\t<pre>{{val.num}}</pre>\n\t\t</form>\n\t</div>\n</div>\n```","html":"<h1 id=\"angularjs-formatters-and-parsers-example\">AngularJS <code>$formatters</code> and <code>$parsers</code> example</h1>\n<p>Understanding formatters and parsers:</p>\n<ul>\n<li>Formatters change how model values will appear in the view.</li>\n<li>Parsers change how view values will be saved in the model.</li>\n</ul>\n<pre><code class=\"lang-js\">  <span class=\"hljs-comment\">// formats text going to user (from model to view)</span>\n  ngModel.$formatters.push(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(value)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> value.toUpperCase();\n  });\n\n  <span class=\"hljs-comment\">// formats text from the user (from view to model)</span>\n  ngModel.$parsers.push(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(value)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> value.toLowerCase();\n  });\n</code></pre>\n<p>Format number set programmatically via custom directive</p>\n<pre><code class=\"lang-js\">angular.module(<span class=\"hljs-string\">'MyApp'</span>,[])\n    .directive(<span class=\"hljs-string\">'formatNumber'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($filter)</span></span>{\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-keyword\">require</span>:<span class=\"hljs-string\">'ngModel'</span>,\n            link   :<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(scope,elem,attrs,ngModelCtrl)</span></span>{\n                <span class=\"hljs-comment\">// formats text going to user (from model to view)</span>\n                ngModelCtrl.$formatters.push(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(v)</span></span>{\n                    <span class=\"hljs-keyword\">return</span> $filter(<span class=\"hljs-string\">'number'</span>)(v,<span class=\"hljs-number\">2</span>); <span class=\"hljs-comment\">// programmatically set value will be formatted</span>\n                });\n            }\n        };\n    })\n    .controller(<span class=\"hljs-string\">'SiteCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($scope)</span></span>{\n        <span class=\"hljs-comment\">// default value</span>\n        $scope.val={num:<span class=\"hljs-number\">0</span>};\n\n        <span class=\"hljs-comment\">// change value programmatically</span>\n        setTimeout(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n            $scope.val.num=<span class=\"hljs-number\">123456.786</span>; <span class=\"hljs-comment\">// in input will be shown as 123,456.79</span>\n        },<span class=\"hljs-number\">1000</span>);\n    });\n</code></pre>\n<p>Using <code>format-number</code> directive:</p>\n<pre><code class=\"lang-html\">&lt;div ng-app=<span class=\"hljs-string\">\"MyApp\"</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"site-index\"</span>&gt;\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-controller</span>=<span class=\"hljs-string\">\"SiteCtrl\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"body-content\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"form_1\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"val.num\"</span> <span class=\"hljs-attr\">format-number</span>&gt;</span>\n            Model value:\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pre</span>&gt;</span>{{val.num}}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">pre</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/d07297271849d0b227df","description":"AngularJS 'ensureUnique' custom directive to check value uniqueness and use it in Yii2 app","files":["https://gist.githubusercontent.com/umidjons/d07297271849d0b227df/raw/1ff3f07d88364004217ad838c55d23633e2fa4ac/custom-directive-ensure-unique.md"],"content":"AngularJS 'ensureUnique' custom directive to check value uniqueness\n===\n\nCreate `Validation` module. Also configure HTTP request parameters.\n```js\nangular.module('Validation',[])\n\t.config(function($httpProvider){\n\t\t// Use x-www-form-urlencoded Content-Type\n\t\t$httpProvider.defaults.headers.post['Content-Type']='application/x-www-form-urlencoded;charset=utf-8';\n\t\t$httpProvider.defaults.headers.post['X-Requested-With']='XMLHttpRequest';\n\t\t/**\n\t\t * The workhorse; converts an object to x-www-form-urlencoded serialization.\n\t\t * @param {Object} obj\n\t\t * @return {String}\n\t\t */\n\t\tvar param=function(obj){\n\t\t\tvar query='',name,value,fullSubName,subName,subValue,innerObj,i;\n\t\t\tfor(name in obj){\n\t\t\t\tvalue=obj[name];\n\t\t\t\tif(value instanceof Array){\n\t\t\t\t\tfor(i=0; i<value.length; ++i){\n\t\t\t\t\t\tsubValue=value[i];\n\t\t\t\t\t\tfullSubName=name+'['+i+']';\n\t\t\t\t\t\tinnerObj={};\n\t\t\t\t\t\tinnerObj[fullSubName]=subValue;\n\t\t\t\t\t\tquery+=param(innerObj)+'&';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(value instanceof Object){\n\t\t\t\t\tfor(subName in value){\n\t\t\t\t\t\tsubValue=value[subName];\n\t\t\t\t\t\tfullSubName=name+'['+subName+']';\n\t\t\t\t\t\tinnerObj={};\n\t\t\t\t\t\tinnerObj[fullSubName]=subValue;\n\t\t\t\t\t\tquery+=param(innerObj)+'&';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(value!==undefined && value!==null)\n\t\t\t\t\tquery+=encodeURIComponent(name)+'='+encodeURIComponent(value)+'&';\n\t\t\t}\n\t\t\treturn query.length?query.substr(0,query.length-1):query;\n\t\t};\n\t\t// Override $http service's default transformRequest\n\t\t$httpProvider.defaults.transformRequest=[function(data){\n\t\t\treturn angular.isObject(data) && String(data)!=='[object File]'?param(data):data;\n\t\t}];\n\t})\n```\n\nCreate `ensureUnique` directive.\n```js\nangular.module('Validation')\n\t.directive('ensureUnique',function($http){\n\t\treturn {\n\t\t\trequire:'ngModel',\n\t\t\tlink   :function(scope,elem,attrs,ctrl){\n\t\t\t\tscope.$watch(attrs.ngModel,function(){\n\t\t\t\t\t// send http post request to backend, check field according to some logic\n\t\t\t\t\t// and return response in {field:'myfieldname',isUnique:true} format\n\t\t\t\t\t// according to the response it will set ng-unique class and form's errors attribute to unique=true|false\n\t\t\t\t\t$http.post('/site/ensure-unique',{ field : attrs.ngModel, _csrf : yii.getCsrfToken() })\n\t\t\t\t\t\t.success(function(data){ ctrl.$setValidity('unique',data.isUnique); })\n\t\t\t\t\t\t.error(function(){ ctrl.$setValidity('unique',false); });\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t});\n```\n\nUsing validation module\n```js\nangular.module('MyApp',['Validation'])\n\t.controller('SiteCtrl',function($scope){\n\n\t});\n```\n\nUsing `ensure-unique` directive:\n```html\n<div ng-app=\"MyApp\" class=\"site-index\">\n\t<div ng-controller=\"SiteCtrl\" class=\"body-content\">\n\t\t<form name=\"form_email\">\n\t\t\t<input ng-model=\"to\" type=\"email\" placeholder=\"Recipient\" ensure-unique>\n\t\t\t<pre>{{form_email|json}}</pre>\n\t\t</form>\n\t</div>\n</div>\n```\n\nChecking uniqueness logic in backend side sample code\n```php\n<?php\nnamespace app\\controllers;\n\nuse Yii;\nuse yii\\helpers\\Json;\nuse yii\\web\\Controller;\n\nclass SiteController extends Controller\n{\n    public function actionEnsureUnique()\n\t{\n\t    // checking uniqueness logic is here...\n\t    \n\t    // in sample logic we just use random true,false answers\n\t\t$results=[false,true];\n\t\t$field  =Yii::$app->request->post('field');\n\t\techo Json::encode(['field'=>$field,'isUnique'=>$results[array_rand($results)]]);\n\t}\n}\n```\n\nTo work with pretty URL in Yii2 set some options:\n```php\n<?php\n$params=require(__DIR__.'/params.php');\n$config=[\n    // ...\n\t'components'=>[\n\t\t'request'     =>[\n\t\t\t'baseUrl'            =>'',\n\t\t\t'cookieValidationKey'=>'5InFC54UhBcN82BjGzE5lASQDxf9OjdI',\n\t\t],\n\t\t'urlManager'  =>[\n\t\t\t'enablePrettyUrl'=>true,\n\t\t\t'showScriptName' =>false,\n\t\t],\n        // ...\n\t],\n    // ...\n\t'params'    =>$params,\n];\n```","html":"<h1 id=\"angularjs-ensureunique-custom-directive-to-check-value-uniqueness\">AngularJS &#39;ensureUnique&#39; custom directive to check value uniqueness</h1>\n<p>Create <code>Validation</code> module. Also configure HTTP request parameters.</p>\n<pre><code class=\"lang-js\">angular.module(<span class=\"hljs-string\">'Validation'</span>,[])\n    .config(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">$httpProvider</span>)</span>{\n        <span class=\"hljs-comment\">// Use x-www-form-urlencoded Content-Type</span>\n        $httpProvider.defaults.headers.post[<span class=\"hljs-string\">'Content-Type'</span>]=<span class=\"hljs-string\">'application/x-www-form-urlencoded;charset=utf-8'</span>;\n        $httpProvider.defaults.headers.post[<span class=\"hljs-string\">'X-Requested-With'</span>]=<span class=\"hljs-string\">'XMLHttpRequest'</span>;\n        <span class=\"hljs-comment\">/**\n         * The workhorse; converts an object to x-www-form-urlencoded serialization.\n         * @param {Object} obj\n         * @return {String}\n         */</span>\n        <span class=\"hljs-keyword\">var</span> param=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">obj</span>)</span>{\n            <span class=\"hljs-keyword\">var</span> query=<span class=\"hljs-string\">''</span>,name,value,fullSubName,subName,subValue,innerObj,i;\n            <span class=\"hljs-keyword\">for</span>(name <span class=\"hljs-keyword\">in</span> obj){\n                value=obj[name];\n                <span class=\"hljs-keyword\">if</span>(value <span class=\"hljs-keyword\">instanceof</span> <span class=\"hljs-built_in\">Array</span>){\n                    <span class=\"hljs-keyword\">for</span>(i=<span class=\"hljs-number\">0</span>; i&lt;value.length; ++i){\n                        subValue=value[i];\n                        fullSubName=name+<span class=\"hljs-string\">'['</span>+i+<span class=\"hljs-string\">']'</span>;\n                        innerObj={};\n                        innerObj[fullSubName]=subValue;\n                        query+=param(innerObj)+<span class=\"hljs-string\">'&amp;'</span>;\n                    }\n                }\n                <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(value <span class=\"hljs-keyword\">instanceof</span> <span class=\"hljs-built_in\">Object</span>){\n                    <span class=\"hljs-keyword\">for</span>(subName <span class=\"hljs-keyword\">in</span> value){\n                        subValue=value[subName];\n                        fullSubName=name+<span class=\"hljs-string\">'['</span>+subName+<span class=\"hljs-string\">']'</span>;\n                        innerObj={};\n                        innerObj[fullSubName]=subValue;\n                        query+=param(innerObj)+<span class=\"hljs-string\">'&amp;'</span>;\n                    }\n                }\n                <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(value!==<span class=\"hljs-literal\">undefined</span> &amp;&amp; value!==<span class=\"hljs-literal\">null</span>)\n                    query+=<span class=\"hljs-built_in\">encodeURIComponent</span>(name)+<span class=\"hljs-string\">'='</span>+<span class=\"hljs-built_in\">encodeURIComponent</span>(value)+<span class=\"hljs-string\">'&amp;'</span>;\n            }\n            <span class=\"hljs-keyword\">return</span> query.length?query.substr(<span class=\"hljs-number\">0</span>,query.length<span class=\"hljs-number\">-1</span>):query;\n        };\n        <span class=\"hljs-comment\">// Override $http service's default transformRequest</span>\n        $httpProvider.defaults.transformRequest=[<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>)</span>{\n            <span class=\"hljs-keyword\">return</span> angular.isObject(data) &amp;&amp; <span class=\"hljs-built_in\">String</span>(data)!==<span class=\"hljs-string\">'[object File]'</span>?param(data):data;\n        }];\n    })\n</code></pre>\n<p>Create <code>ensureUnique</code> directive.</p>\n<pre><code class=\"lang-js\">angular.module(<span class=\"hljs-string\">'Validation'</span>)\n    .directive(<span class=\"hljs-string\">'ensureUnique'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($http)</span></span>{\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-keyword\">require</span>:<span class=\"hljs-string\">'ngModel'</span>,\n            link   :<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(scope,elem,attrs,ctrl)</span></span>{\n                scope.$watch(attrs.ngModel,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n                    <span class=\"hljs-comment\">// send http post request to backend, check field according to some logic</span>\n                    <span class=\"hljs-comment\">// and return response in {field:'myfieldname',isUnique:true} format</span>\n                    <span class=\"hljs-comment\">// according to the response it will set ng-unique class and form's errors attribute to unique=true|false</span>\n                    $http.post(<span class=\"hljs-string\">'/site/ensure-unique'</span>,{ field : attrs.ngModel, _csrf : yii.getCsrfToken() })\n                        .success(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(data)</span></span>{ ctrl.$setValidity(<span class=\"hljs-string\">'unique'</span>,data.isUnique); })\n                        .error(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{ ctrl.$setValidity(<span class=\"hljs-string\">'unique'</span>,<span class=\"hljs-keyword\">false</span>); });\n                });\n            }\n        };\n    });\n</code></pre>\n<p>Using validation module</p>\n<pre><code class=\"lang-js\">angular.<span class=\"hljs-built_in\">module</span>(<span class=\"hljs-string\">'MyApp'</span>,[<span class=\"hljs-string\">'Validation'</span>])\n    .controller(<span class=\"hljs-string\">'SiteCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($scope)</span></span>{\n\n    });\n</code></pre>\n<p>Using <code>ensure-unique</code> directive:</p>\n<pre><code class=\"lang-html\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-app</span>=<span class=\"hljs-string\">\"MyApp\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"site-index\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-controller</span>=<span class=\"hljs-string\">\"SiteCtrl\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"body-content\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"form_email\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"to\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"email\"</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"Recipient\"</span> <span class=\"hljs-attr\">ensure-unique</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pre</span>&gt;</span></span><span class=\"hljs-template-variable\">{{form_email|json}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">pre</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n</code></pre>\n<p>Checking uniqueness logic in backend side sample code</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">app</span>\\<span class=\"hljs-title\">controllers</span>;\n\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">Yii</span>;\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">yii</span>\\<span class=\"hljs-title\">helpers</span>\\<span class=\"hljs-title\">Json</span>;\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">yii</span>\\<span class=\"hljs-title\">web</span>\\<span class=\"hljs-title\">Controller</span>;\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SiteController</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Controller</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">actionEnsureUnique</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-comment\">// checking uniqueness logic is here...</span>\n\n        <span class=\"hljs-comment\">// in sample logic we just use random true,false answers</span>\n        $results=[<span class=\"hljs-keyword\">false</span>,<span class=\"hljs-keyword\">true</span>];\n        $field  =Yii::$app-&gt;request-&gt;post(<span class=\"hljs-string\">'field'</span>);\n        <span class=\"hljs-keyword\">echo</span> Json::encode([<span class=\"hljs-string\">'field'</span>=&gt;$field,<span class=\"hljs-string\">'isUnique'</span>=&gt;$results[array_rand($results)]]);\n    }\n}</span>\n</code></pre>\n<p>To work with pretty URL in Yii2 set some options:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n$params=<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-keyword\">__DIR__</span>.<span class=\"hljs-string\">'/params.php'</span>);\n$config=[\n    <span class=\"hljs-comment\">// ...</span>\n    <span class=\"hljs-string\">'components'</span>=&gt;[\n        <span class=\"hljs-string\">'request'</span>     =&gt;[\n            <span class=\"hljs-string\">'baseUrl'</span>            =&gt;<span class=\"hljs-string\">''</span>,\n            <span class=\"hljs-string\">'cookieValidationKey'</span>=&gt;<span class=\"hljs-string\">'5InFC54UhBcN82BjGzE5lASQDxf9OjdI'</span>,\n        ],\n        <span class=\"hljs-string\">'urlManager'</span>  =&gt;[\n            <span class=\"hljs-string\">'enablePrettyUrl'</span>=&gt;<span class=\"hljs-keyword\">true</span>,\n            <span class=\"hljs-string\">'showScriptName'</span> =&gt;<span class=\"hljs-keyword\">false</span>,\n        ],\n        <span class=\"hljs-comment\">// ...</span>\n    ],\n    <span class=\"hljs-comment\">// ...</span>\n    <span class=\"hljs-string\">'params'</span>    =&gt;$params,\n];</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/8b739335fcb7c272dd5c","description":"AngularJS $interpolate & $interpolateProvider example","files":["https://gist.githubusercontent.com/umidjons/8b739335fcb7c272dd5c/raw/81d30fe09a67a7e24c3d71061a593521ade7c39f/interpolate-example.md"],"content":"AngularJS $interpolate & $interpolateProvider example\n===\n\n```js\nangular.module('EmailHelper',[])\n\t.config(['$interpolateProvider',function($interpolateProvider){\n\t\t// change default interpolation symbols\n\t\t$interpolateProvider.startSymbol('__'); // __ instead of {{\n\t\t$interpolateProvider.endSymbol('__'); // __ instead of }}\n\t}])\n\t.factory('EmailParser',['$interpolate',function($interpolate){\n\t\treturn {\n\t\t\t/**\n\t\t\t * Interpolates text with context\n\t\t\t * @param text string with substitution symbols, e.g.: Hello __name__.\n\t\t\t * @param context scope object for using in text, e.g.: {name:'Jack'}, with above text it will become 'Hello Jack.'\n\t\t\t * @returns {*} interpolated text with context\n\t\t\t */\n\t\t\tparse:function(text,context){\n\t\t\t\tvar tpl=$interpolate(text);\n\t\t\t\treturn tpl(context);\n\t\t\t}\n\t\t};\n\t}]);\n\nangular.module('MyApp',['EmailHelper'])\n\t.controller('SiteCtrl',['$scope','EmailParser',function($scope,EmailParser){\n\t\t// when $scope.emailBody changed, parse & interpolate it\n\t\t$scope.$watch('emailBody',function(body){\n\t\t\tif(body) $scope.previewText=EmailParser.parse(body,{to:$scope.to});\n\t\t});\n\t}]);\n```\n\nView content:\n\n```html\n<div ng-app=\"MyApp\" class=\"site-index\">\n\t<div ng-controller=\"SiteCtrl\" class=\"body-content\">\n\t\t<input ng-model=\"to\" type=\"email\" placeholder=\"Recipient\">\n\t\t<textarea ng-model=\"emailBody\" cols=\"30\" rows=\"10\"></textarea>\n\t\t<pre>__previewText__</pre>\n\t</div>\n</div>\n```","html":"<h1 id=\"angularjs-interpolate-interpolateprovider-example\">AngularJS $interpolate &amp; $interpolateProvider example</h1>\n<pre><code class=\"lang-js\">angular.module(<span class=\"hljs-string\">'EmailHelper'</span>,[])\n    .config([<span class=\"hljs-string\">'$interpolateProvider'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($interpolateProvider)</span></span>{\n        <span class=\"hljs-comment\">// change default interpolation symbols</span>\n        $interpolateProvider.startSymbol(<span class=\"hljs-string\">'__'</span>); <span class=\"hljs-comment\">// __ instead of {{</span>\n        $interpolateProvider.endSymbol(<span class=\"hljs-string\">'__'</span>); <span class=\"hljs-comment\">// __ instead of }}</span>\n    }])\n    .factory(<span class=\"hljs-string\">'EmailParser'</span>,[<span class=\"hljs-string\">'$interpolate'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($interpolate)</span></span>{\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-comment\">/**\n             * Interpolates text with context\n             * <span class=\"hljs-doctag\">@param</span> text string with substitution symbols, e.g.: Hello __name__.\n             * <span class=\"hljs-doctag\">@param</span> context scope object for using in text, e.g.: {name:'Jack'}, with above text it will become 'Hello Jack.'\n             * <span class=\"hljs-doctag\">@returns</span> {*} interpolated text with context\n             */</span>\n            parse:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(text,context)</span></span>{\n                <span class=\"hljs-keyword\">var</span> tpl=$interpolate(text);\n                <span class=\"hljs-keyword\">return</span> tpl(context);\n            }\n        };\n    }]);\n\nangular.module(<span class=\"hljs-string\">'MyApp'</span>,[<span class=\"hljs-string\">'EmailHelper'</span>])\n    .controller(<span class=\"hljs-string\">'SiteCtrl'</span>,[<span class=\"hljs-string\">'$scope'</span>,<span class=\"hljs-string\">'EmailParser'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($scope,EmailParser)</span></span>{\n        <span class=\"hljs-comment\">// when $scope.emailBody changed, parse &amp; interpolate it</span>\n        $scope.$watch(<span class=\"hljs-string\">'emailBody'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(body)</span></span>{\n            <span class=\"hljs-keyword\">if</span>(body) $scope.previewText=EmailParser.parse(body,{to:$scope.to});\n        });\n    }]);\n</code></pre>\n<p>View content:</p>\n<pre><code class=\"lang-html\">&lt;div ng-app=<span class=\"hljs-string\">\"MyApp\"</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"site-index\"</span>&gt;\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-controller</span>=<span class=\"hljs-string\">\"SiteCtrl\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"body-content\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"to\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"email\"</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"Recipient\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">textarea</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"emailBody\"</span> <span class=\"hljs-attr\">cols</span>=<span class=\"hljs-string\">\"30\"</span> <span class=\"hljs-attr\">rows</span>=<span class=\"hljs-string\">\"10\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">textarea</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pre</span>&gt;</span>__previewText__<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">pre</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/e774d0b6cf36e924f78a","description":"Getting started with Yii2 and AngularJS","files":["https://gist.githubusercontent.com/umidjons/e774d0b6cf36e924f78a/raw/70060dfb8dd998d8c38e9fa836d1454233376d3e/yii2-angularjs-composer-bower.md"],"content":"Installing Yii2 using composer\n====\n\nDownload Yii2 Basic application\n```bash\ncd domains\nmkdir mysite.uz\ncd mysite.uz\ncomposer create-project yiisoft/yii2-app-basic .\n```\n\nCreate `.htaccess` file\n```bash\nvim .htaccess\n```\n\n`mysite/.htaccess` file content:\n```\nRewriteEngine On\nRewriteCond %{REQUEST_URI} !^web\nRewriteRule ^(.*)$ web/$1 [L]\n```\n\nCreate another `.htaccess` file\n```bash\ncd web\nvim .htaccess\n```\n\n`mysite/web/.htaccess` file content:\n```\nRewriteEngine on\n\n# If a directory or a file exists, use it directly\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\n\n# Otherwise forward it to index.php\nRewriteRule . index.php\n```\n\nDownloading AngularJs\n```bash\ncd ..\nbower install angularjs\nbower install angular-route\n```\n\nCreate Angular Asset Bundle\n```bash\ncd assets\nvim AngularAsset.php\n```\n\n`AngularAsset.php` file content:\n```php\n<?php\nnamespace app\\assets;\n\nuse yii\\web\\AssetBundle;\nuse yii\\web\\View;\n\nclass AngularAsset extends AssetBundle\n{\n\tpublic $sourcePath=\"@bower\";\n\tpublic $js        =[\n\t\t'angular/angular.js',\n\t\t'angular-route/angular-route.js',\n\t];\n\tpublic $jsOptions =[\n\t\t'position'=>View::POS_HEAD,\n\t];\n}\n```\n\nAdd `AngularAsset` into application assets dependencies:\n```php\n<?php\n/**\n * @link http://www.yiiframework.com/\n * @copyright Copyright (c) 2008 Yii Software LLC\n * @license http://www.yiiframework.com/license/\n */\n\nnamespace app\\assets;\n\nuse yii\\web\\AssetBundle;\n\n/**\n * @author Qiang Xue <qiang.xue@gmail.com>\n * @since 2.0\n */\nclass AppAsset extends AssetBundle\n{\n    public $basePath = '@webroot';\n    public $baseUrl = '@web';\n    public $css = [\n        'css/site.css',\n    ];\n    public $js = [\n    ];\n    public $depends = [\n        'yii\\web\\YiiAsset',\n        'yii\\bootstrap\\BootstrapAsset',\n        'app\\assets\\AngularAsset',\n    ];\n}\n```\n\nCreate `js` folder and create `app.js` file:\n```bash\ncd web\nmkdir js\ncd js\nvim app.js\n```\n\n`app.js` file content:\n```js\nangular.module('MyApp',['ngRoute'])\n\t.controller('SiteCtrl',function($scope){\n\t\t$scope.testString='Hello World!';\n\t});\n```\n\nAdd `app.js` into `AppAsset` bundle:\n```php\n<?php\nclass AppAsset extends AssetBundle\n{\n    //...\n\tpublic $js      =[\n\t\t'js/app.js',\n\t];\n\t//...\n}\n```\n\nModify `views\\site\\index.php` content to the following to test angularjs app:\n```php\n<?php\n/* @var $this yii\\web\\View */\n$this->title='My Yii Application';\n?>\n<div ng-app=\"MyApp\" class=\"site-index\">\n\t<div ng-controller=\"SiteCtrl\" class=\"body-content\">\n\t\tTest string: {{testString}}\n\t</div>\n</div>\n```\n\nConfigure AngularJS HTTP request to work with Yii2\n====\n\n```js\nangular.module('MyApp',[])\n\t.config(function($httpProvider){\n\t\t// Use x-www-form-urlencoded Content-Type\n\t\t$httpProvider.defaults.headers.post['Content-Type']='application/x-www-form-urlencoded;charset=utf-8';\n\t\t$httpProvider.defaults.headers.post['X-Requested-With']='XMLHttpRequest';\n\t\t/**\n\t\t * The workhorse; converts an object to x-www-form-urlencoded serialization.\n\t\t * @param {Object} obj\n\t\t * @return {String}\n\t\t */\n\t\tvar param=function(obj){\n\t\t\tvar query='',name,value,fullSubName,subName,subValue,innerObj,i;\n\t\t\tfor(name in obj){\n\t\t\t\tvalue=obj[name];\n\t\t\t\tif(value instanceof Array){\n\t\t\t\t\tfor(i=0; i<value.length; ++i){\n\t\t\t\t\t\tsubValue=value[i];\n\t\t\t\t\t\tfullSubName=name+'['+i+']';\n\t\t\t\t\t\tinnerObj={};\n\t\t\t\t\t\tinnerObj[fullSubName]=subValue;\n\t\t\t\t\t\tquery+=param(innerObj)+'&';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(value instanceof Object){\n\t\t\t\t\tfor(subName in value){\n\t\t\t\t\t\tsubValue=value[subName];\n\t\t\t\t\t\tfullSubName=name+'['+subName+']';\n\t\t\t\t\t\tinnerObj={};\n\t\t\t\t\t\tinnerObj[fullSubName]=subValue;\n\t\t\t\t\t\tquery+=param(innerObj)+'&';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(value!==undefined && value!==null)\n\t\t\t\t\tquery+=encodeURIComponent(name)+'='+encodeURIComponent(value)+'&';\n\t\t\t}\n\t\t\treturn query.length?query.substr(0,query.length-1):query;\n\t\t};\n\t\t// Override $http service's default transformRequest\n\t\t$httpProvider.defaults.transformRequest=[function(data){\n\t\t\treturn angular.isObject(data) && String(data)!=='[object File]'?param(data):data;\n\t\t}];\n\t});\n```\n\nEnable pretty URL in Yii2 (`config/web.php` file):\n```php\n<?php\n$config=[\n    // ...\n\t'components'=>[\n\t\t'request'     =>[\n\t\t\t'baseUrl'            =>'',\n\t\t\t// ...\n\t\t],\n\t\t'urlManager'  =>[\n\t\t\t'enablePrettyUrl'=>true,\n\t\t\t'showScriptName' =>false,\n\t\t],\n        // ...\n\t],\n    // ...\n\t'params'    =>$params,\n];\n```\n\nInstalling `FontAwesome`\n=====\n\n```bash\ncd mysite.uz\nbower install fontawesome\nvim assets/FontAwesomeAsset.php\n```\n\nContent of the FontAwesomeAsset.php\n```php\n<?php\n\nnamespace app\\assets;\n\nuse yii\\web\\AssetBundle;\n\nclass FontAwesomeAsset extends AssetBundle\n{\n\tpublic $sourcePath=\"@bower\";\n\tpublic $css       =[\n\t\t'font-awesome/css/font-awesome.css',\n\t];\n}\n```\n\nAdd `FontAwesomeAsset` into `depends` list of the `AppAsset`:\n```php\n<?php\n// ...\nclass AppAsset extends AssetBundle\n{\n    // ...\n\tpublic $depends =[\n\t\t'yii\\web\\YiiAsset',\n\t\t'yii\\bootstrap\\BootstrapAsset',\n\t\t'app\\assets\\FontAwesomeAsset',\n\t\t'app\\assets\\AngularAsset',\n        // ...\n\t];\n}\n```\n\nTest it:\n```html\n<i class=\"fa fa-user\"></i>\n```","html":"<h1 id=\"installing-yii2-using-composer\">Installing Yii2 using composer</h1>\n<p>Download Yii2 Basic application</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-string\">cd </span><span class=\"hljs-string\">domains\n</span><span class=\"hljs-string\">mkdir </span><span class=\"hljs-string\">mysite.</span><span class=\"hljs-string\">uz\n</span><span class=\"hljs-string\">cd </span><span class=\"hljs-string\">mysite.</span><span class=\"hljs-string\">uz\n</span><span class=\"hljs-string\">composer </span><span class=\"hljs-built_in\">create-project</span> <span class=\"hljs-string\">yiisoft/</span><span class=\"hljs-string\">yii2-app-</span><span class=\"hljs-string\">basic </span>.\n</code></pre>\n<p>Create <code>.htaccess</code> file</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-selector-tag\">vim</span> <span class=\"hljs-selector-class\">.htaccess</span>\n</code></pre>\n<p><code>mysite/.htaccess</code> file content:</p>\n<pre><code><span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteEngine</span></span> <span class=\"hljs-literal\">On</span>\n<span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteCond</span></span> <span class=\"hljs-variable\">%{REQUEST_URI}</span> !^web\n<span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteRule</span></span> ^(.*)$ web/<span class=\"hljs-number\">$1</span><span class=\"hljs-meta\"> [L]</span>\n</code></pre><p>Create another <code>.htaccess</code> file</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-keyword\">cd</span> web\n<span class=\"hljs-keyword\">vim</span> .htaccess\n</code></pre>\n<p><code>mysite/web/.htaccess</code> file content:</p>\n<pre><code><span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteEngine</span></span> <span class=\"hljs-literal\">on</span>\n\n<span class=\"hljs-comment\"># If a directory or a file exists, use it directly</span>\n<span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteCond</span></span> <span class=\"hljs-variable\">%{REQUEST_FILENAME}</span> !-f\n<span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteCond</span></span> <span class=\"hljs-variable\">%{REQUEST_FILENAME}</span> !-d\n\n<span class=\"hljs-comment\"># Otherwise forward it to index.php</span>\n<span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteRule</span></span> . index.php\n</code></pre><p>Downloading AngularJs</p>\n<pre><code class=\"lang-bash\">cd ..\n<span class=\"hljs-keyword\">bower </span><span class=\"hljs-keyword\">install </span>angularjs\n<span class=\"hljs-keyword\">bower </span><span class=\"hljs-keyword\">install </span>angular-route\n</code></pre>\n<p>Create Angular Asset Bundle</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-keyword\">cd</span> assets\n<span class=\"hljs-keyword\">vim</span> AngularAsset.php\n</code></pre>\n<p><code>AngularAsset.php</code> file content:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">app</span>\\<span class=\"hljs-title\">assets</span>;\n\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">yii</span>\\<span class=\"hljs-title\">web</span>\\<span class=\"hljs-title\">AssetBundle</span>;\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">yii</span>\\<span class=\"hljs-title\">web</span>\\<span class=\"hljs-title\">View</span>;\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AngularAsset</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">AssetBundle</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> $sourcePath=<span class=\"hljs-string\">\"@bower\"</span>;\n    <span class=\"hljs-keyword\">public</span> $js        =[\n        <span class=\"hljs-string\">'angular/angular.js'</span>,\n        <span class=\"hljs-string\">'angular-route/angular-route.js'</span>,\n    ];\n    <span class=\"hljs-keyword\">public</span> $jsOptions =[\n        <span class=\"hljs-string\">'position'</span>=&gt;View::POS_HEAD,\n    ];\n}</span>\n</code></pre>\n<p>Add <code>AngularAsset</code> into application assets dependencies:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-comment\">/**\n * <span class=\"hljs-doctag\">@link</span> http://www.yiiframework.com/\n * <span class=\"hljs-doctag\">@copyright</span> Copyright (c) 2008 Yii Software LLC\n * <span class=\"hljs-doctag\">@license</span> http://www.yiiframework.com/license/\n */</span>\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">app</span>\\<span class=\"hljs-title\">assets</span>;\n\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">yii</span>\\<span class=\"hljs-title\">web</span>\\<span class=\"hljs-title\">AssetBundle</span>;\n\n<span class=\"hljs-comment\">/**\n * <span class=\"hljs-doctag\">@author</span> Qiang Xue &lt;qiang.xue<span class=\"hljs-doctag\">@gmail</span>.com&gt;\n * <span class=\"hljs-doctag\">@since</span> 2.0\n */</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AppAsset</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">AssetBundle</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> $basePath = <span class=\"hljs-string\">'@webroot'</span>;\n    <span class=\"hljs-keyword\">public</span> $baseUrl = <span class=\"hljs-string\">'@web'</span>;\n    <span class=\"hljs-keyword\">public</span> $css = [\n        <span class=\"hljs-string\">'css/site.css'</span>,\n    ];\n    <span class=\"hljs-keyword\">public</span> $js = [\n    ];\n    <span class=\"hljs-keyword\">public</span> $depends = [\n        <span class=\"hljs-string\">'yii\\web\\YiiAsset'</span>,\n        <span class=\"hljs-string\">'yii\\bootstrap\\BootstrapAsset'</span>,\n        <span class=\"hljs-string\">'app\\assets\\AngularAsset'</span>,\n    ];\n}</span>\n</code></pre>\n<p>Create <code>js</code> folder and create <code>app.js</code> file:</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-keyword\">cd</span> web\n<span class=\"hljs-keyword\">mkdir</span> js\n<span class=\"hljs-keyword\">cd</span> js\nvim <span class=\"hljs-keyword\">app</span>.js\n</code></pre>\n<p><code>app.js</code> file content:</p>\n<pre><code class=\"lang-js\">angular.module(<span class=\"hljs-string\">'MyApp'</span>,[<span class=\"hljs-string\">'ngRoute'</span>])\n    .controller(<span class=\"hljs-string\">'SiteCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($scope)</span></span>{\n        $scope.testString=<span class=\"hljs-string\">'Hello World!'</span>;\n    });\n</code></pre>\n<p>Add <code>app.js</code> into <code>AppAsset</code> bundle:</p>\n<pre><code class=\"lang-php\">&lt;?php\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AppAsset</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">AssetBundle</span></span>\n{\n    <span class=\"hljs-comment\">//...</span>\n    public $js      =[\n        <span class=\"hljs-symbol\">'js</span>/app.js',\n    ];\n    <span class=\"hljs-comment\">//...</span>\n}\n</code></pre>\n<p>Modify <code>views\\site\\index.php</code> content to the following to test angularjs app:</p>\n<pre><code class=\"lang-php\"><span class=\"xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-comment\">/* <span class=\"hljs-doctag\">@var</span> $this yii\\web\\View */</span>\n<span class=\"hljs-keyword\">$this</span>-&gt;title=<span class=\"hljs-string\">'My Yii Application'</span>;\n<span class=\"hljs-meta\">?&gt;</span></span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-app</span>=<span class=\"hljs-string\">\"MyApp\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"site-index\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-controller</span>=<span class=\"hljs-string\">\"SiteCtrl\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"body-content\"</span>&gt;</span>\n        Test string: </span><span class=\"hljs-template-variable\">{{testString}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n</code></pre>\n<h1 id=\"configure-angularjs-http-request-to-work-with-yii2\">Configure AngularJS HTTP request to work with Yii2</h1>\n<pre><code class=\"lang-js\">angular.module(<span class=\"hljs-string\">'MyApp'</span>,[])\n    .config(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">$httpProvider</span>)</span>{\n        <span class=\"hljs-comment\">// Use x-www-form-urlencoded Content-Type</span>\n        $httpProvider.defaults.headers.post[<span class=\"hljs-string\">'Content-Type'</span>]=<span class=\"hljs-string\">'application/x-www-form-urlencoded;charset=utf-8'</span>;\n        $httpProvider.defaults.headers.post[<span class=\"hljs-string\">'X-Requested-With'</span>]=<span class=\"hljs-string\">'XMLHttpRequest'</span>;\n        <span class=\"hljs-comment\">/**\n         * The workhorse; converts an object to x-www-form-urlencoded serialization.\n         * @param {Object} obj\n         * @return {String}\n         */</span>\n        <span class=\"hljs-keyword\">var</span> param=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">obj</span>)</span>{\n            <span class=\"hljs-keyword\">var</span> query=<span class=\"hljs-string\">''</span>,name,value,fullSubName,subName,subValue,innerObj,i;\n            <span class=\"hljs-keyword\">for</span>(name <span class=\"hljs-keyword\">in</span> obj){\n                value=obj[name];\n                <span class=\"hljs-keyword\">if</span>(value <span class=\"hljs-keyword\">instanceof</span> <span class=\"hljs-built_in\">Array</span>){\n                    <span class=\"hljs-keyword\">for</span>(i=<span class=\"hljs-number\">0</span>; i&lt;value.length; ++i){\n                        subValue=value[i];\n                        fullSubName=name+<span class=\"hljs-string\">'['</span>+i+<span class=\"hljs-string\">']'</span>;\n                        innerObj={};\n                        innerObj[fullSubName]=subValue;\n                        query+=param(innerObj)+<span class=\"hljs-string\">'&amp;'</span>;\n                    }\n                }\n                <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(value <span class=\"hljs-keyword\">instanceof</span> <span class=\"hljs-built_in\">Object</span>){\n                    <span class=\"hljs-keyword\">for</span>(subName <span class=\"hljs-keyword\">in</span> value){\n                        subValue=value[subName];\n                        fullSubName=name+<span class=\"hljs-string\">'['</span>+subName+<span class=\"hljs-string\">']'</span>;\n                        innerObj={};\n                        innerObj[fullSubName]=subValue;\n                        query+=param(innerObj)+<span class=\"hljs-string\">'&amp;'</span>;\n                    }\n                }\n                <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(value!==<span class=\"hljs-literal\">undefined</span> &amp;&amp; value!==<span class=\"hljs-literal\">null</span>)\n                    query+=<span class=\"hljs-built_in\">encodeURIComponent</span>(name)+<span class=\"hljs-string\">'='</span>+<span class=\"hljs-built_in\">encodeURIComponent</span>(value)+<span class=\"hljs-string\">'&amp;'</span>;\n            }\n            <span class=\"hljs-keyword\">return</span> query.length?query.substr(<span class=\"hljs-number\">0</span>,query.length<span class=\"hljs-number\">-1</span>):query;\n        };\n        <span class=\"hljs-comment\">// Override $http service's default transformRequest</span>\n        $httpProvider.defaults.transformRequest=[<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>)</span>{\n            <span class=\"hljs-keyword\">return</span> angular.isObject(data) &amp;&amp; <span class=\"hljs-built_in\">String</span>(data)!==<span class=\"hljs-string\">'[object File]'</span>?param(data):data;\n        }];\n    });\n</code></pre>\n<p>Enable pretty URL in Yii2 (<code>config/web.php</code> file):</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n$config=[\n    <span class=\"hljs-comment\">// ...</span>\n    <span class=\"hljs-string\">'components'</span>=&gt;[\n        <span class=\"hljs-string\">'request'</span>     =&gt;[\n            <span class=\"hljs-string\">'baseUrl'</span>            =&gt;<span class=\"hljs-string\">''</span>,\n            <span class=\"hljs-comment\">// ...</span>\n        ],\n        <span class=\"hljs-string\">'urlManager'</span>  =&gt;[\n            <span class=\"hljs-string\">'enablePrettyUrl'</span>=&gt;<span class=\"hljs-keyword\">true</span>,\n            <span class=\"hljs-string\">'showScriptName'</span> =&gt;<span class=\"hljs-keyword\">false</span>,\n        ],\n        <span class=\"hljs-comment\">// ...</span>\n    ],\n    <span class=\"hljs-comment\">// ...</span>\n    <span class=\"hljs-string\">'params'</span>    =&gt;$params,\n];</span>\n</code></pre>\n<h1 id=\"installing-fontawesome-\">Installing <code>FontAwesome</code></h1>\n<pre><code class=\"lang-bash\">cd mysite<span class=\"hljs-selector-class\">.uz</span>\nbower install fontawesome\nvim assets/FontAwesomeAsset.php\n</code></pre>\n<p>Content of the FontAwesomeAsset.php</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">app</span>\\<span class=\"hljs-title\">assets</span>;\n\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">yii</span>\\<span class=\"hljs-title\">web</span>\\<span class=\"hljs-title\">AssetBundle</span>;\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FontAwesomeAsset</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">AssetBundle</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> $sourcePath=<span class=\"hljs-string\">\"@bower\"</span>;\n    <span class=\"hljs-keyword\">public</span> $css       =[\n        <span class=\"hljs-string\">'font-awesome/css/font-awesome.css'</span>,\n    ];\n}</span>\n</code></pre>\n<p>Add <code>FontAwesomeAsset</code> into <code>depends</code> list of the <code>AppAsset</code>:</p>\n<pre><code class=\"lang-php\">&lt;?php\n<span class=\"hljs-comment\">// ...</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AppAsset</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">AssetBundle</span></span>\n{\n    <span class=\"hljs-comment\">// ...</span>\n    public $depends =[\n        <span class=\"hljs-symbol\">'yii</span>\\web\\<span class=\"hljs-type\">YiiAsset</span>',\n        <span class=\"hljs-symbol\">'yii</span>\\bootstrap\\<span class=\"hljs-type\">BootstrapAsset</span>',\n        <span class=\"hljs-symbol\">'app</span>\\assets\\<span class=\"hljs-type\">FontAwesomeAsset</span>',\n        <span class=\"hljs-symbol\">'app</span>\\assets\\<span class=\"hljs-type\">AngularAsset</span>',\n        <span class=\"hljs-comment\">// ...</span>\n    ];\n}\n</code></pre>\n<p>Test it:</p>\n<pre><code class=\"lang-html\">&lt;i <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"fa fa-user\"</span>&gt;<span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/47bfd9698eb10d4087e9","description":"Installing and configuring OpenVPN","files":["https://gist.githubusercontent.com/umidjons/47bfd9698eb10d4087e9/raw/f438053e2e9bb4b70a0709a7946c3b02e6b1fbfc/open-vpn-configuration.md"],"content":"Installing and configuring OpenVPN\n===\n\nDownload appropriate openvpn installer for your OS [here](https://openvpn.net/index.php/download/community-downloads.html)\n\nFind free public VPN server. For example here: http://www.vpngate.net/en/\n\nDownload OpenVPN config file into `C:\\Program Files\\OpenVPN\\config\\`.\n\nRun OpenVPN GUI (on Windows).\n\nFrom its context menu connect to the VPN server.\n\nThat's all, enjoy.","html":"<h1 id=\"installing-and-configuring-openvpn\">Installing and configuring OpenVPN</h1>\n<p>Download appropriate openvpn installer for your OS <a href=\"https://openvpn.net/index.php/download/community-downloads.html\">here</a></p>\n<p>Find free public VPN server. For example here: <a href=\"http://www.vpngate.net/en/\">http://www.vpngate.net/en/</a></p>\n<p>Download OpenVPN config file into <code>C:\\Program Files\\OpenVPN\\config\\</code>.</p>\n<p>Run OpenVPN GUI (on Windows).</p>\n<p>From its context menu connect to the VPN server.</p>\n<p>That&#39;s all, enjoy.</p>\n"},{"html_url":"https://gist.github.com/b2db32e32f8b0bcd1946","description":"Working with Oracle DB objects","files":["https://gist.githubusercontent.com/umidjons/b2db32e32f8b0bcd1946/raw/8c1bc963768c4c75d64306d71192e82baba4e580/working-with-oracle-objects-examples.md"],"content":"Working with Oracle DB objects\n===\n\nCreate a table:\n```plsql\ncreate table my_table_3\n(\n  col_1 varchar2(2) not null,\n  col_2 clob,\n  col_3 number(1) not null default 1\n);\n```\n\nAdd a column to the table:\n```plsql\nalter table my_table add col_3 number(2);\n```\n\nModify the column:\n```plsql\nalter table my_table modify col_3 number(5);\n```\n\nRemove the column:\n```plsql\nalter table my_table drop column col_7;\n```\n\nSet column's comment:\n```plsql\ncomment on column my_table.col_3 is 'Third column comment.';\n```\n\nRemove `not null` constraint from the table's column:\n```plsql\nalter table my_table modify my_col_1 null;\n```\n\nCreate a unique constraint:\n```plsql\nalter table my_table_2 add constraint uk_my_table_2_col_4 unique (col_4);\n```\n\nModify a unique index:\n```plsql\nalter table my_table drop constraint uk_my_idx;\ndrop index uk_my_idx;\ncreate unique index uk_my_idx on my_table(my_col_1,my_col_2);\n```\n\nCreate a primary key:\n```plsql\nalter table my_table add constraint pk_my_table_col_1 primary key (col_1);\n```\n\nCreate a foreign key:\n```plsql\nalter table my_table add constraint fk_my_table_2_col_5\nforeign key (col_2)\nreferences my_table_2 (col_5);\n```\n\nCreate a sequence:\n```plsql\ncreate sequence seq_col_1 minvalue 1 maxvalue 9999\nstart with 1 increment by 1 cache 20 cycle order;\n```\n\nCreate a trigger:\n```plsql\ncreate or replace trigger my_trigger\n  before insert on my_table\n  for each row\nbegin\n  :new.id := seq_col_1.nextval;\nend my_trigger;\n/\n```\n\nCreate a table from select query result:\n```plsql\ncreate table my_table as \nselect col_1, col_3, col_4 from my_other_table where col_3=123;\n```\n\nCreate a package:\n```plsql\ncreate or replace package my_pkg is\n   MY_CONST_1 constant number(1):=7;\n   MY_CONST_2 constant varchar2(100):='some value';\n   function my_func return my_table.col_2%type;\n   procedure my_proc(param1 number(4));\nend;\n/\n\ncreate or replace package body my_pkg is\n  function my_func return my_table.col_2%type is\n    var_1 my_table.col_2%type := null;\n  begin\n    -- some logic...\n    return var_1;\n  end;\n  \n  procedure my_proc(param1 number(4)) is\n  begin\n    -- some logic...\n  end;\n  \n  procedure my_private_proc(param1 in out my_table%rowtype) is\n  begin\n    -- some logic...\n  end;\nend;\n/\n```","html":"<h1 id=\"working-with-oracle-db-objects\">Working with Oracle DB objects</h1>\n<p>Create a table:</p>\n<pre><code class=\"lang-plsql\"><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">table</span> my_table_3\n(\n  col_1 varchar2(<span class=\"hljs-number\">2</span>) <span class=\"hljs-keyword\">not</span> <span class=\"hljs-literal\">null</span>,\n  col_2 <span class=\"hljs-keyword\">clob</span>,\n  col_3 <span class=\"hljs-built_in\">number</span>(<span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">not</span> <span class=\"hljs-literal\">null</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-number\">1</span>\n);\n</code></pre>\n<p>Add a column to the table:</p>\n<pre><code class=\"lang-plsql\"><span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> my_table <span class=\"hljs-keyword\">add</span> col_3 <span class=\"hljs-built_in\">number</span>(<span class=\"hljs-number\">2</span>);\n</code></pre>\n<p>Modify the column:</p>\n<pre><code class=\"lang-plsql\"><span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> my_table <span class=\"hljs-keyword\">modify</span> col_3 <span class=\"hljs-built_in\">number</span>(<span class=\"hljs-number\">5</span>);\n</code></pre>\n<p>Remove the column:</p>\n<pre><code class=\"lang-plsql\"><span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> my_table <span class=\"hljs-keyword\">drop</span> <span class=\"hljs-keyword\">column</span> col_7;\n</code></pre>\n<p>Set column&#39;s comment:</p>\n<pre><code class=\"lang-plsql\"><span class=\"hljs-keyword\">comment</span> <span class=\"hljs-keyword\">on</span> <span class=\"hljs-keyword\">column</span> my_table.col_3 <span class=\"hljs-keyword\">is</span> <span class=\"hljs-string\">'Third column comment.'</span>;\n</code></pre>\n<p>Remove <code>not null</code> constraint from the table&#39;s column:</p>\n<pre><code class=\"lang-plsql\"><span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> my_table <span class=\"hljs-keyword\">modify</span> my_col_1 <span class=\"hljs-literal\">null</span>;\n</code></pre>\n<p>Create a unique constraint:</p>\n<pre><code class=\"lang-plsql\"><span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> my_table_2 <span class=\"hljs-keyword\">add</span> <span class=\"hljs-keyword\">constraint</span> uk_my_table_2_col_4 <span class=\"hljs-keyword\">unique</span> (col_4);\n</code></pre>\n<p>Modify a unique index:</p>\n<pre><code class=\"lang-plsql\"><span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> my_table <span class=\"hljs-keyword\">drop</span> <span class=\"hljs-keyword\">constraint</span> uk_my_idx;\n<span class=\"hljs-keyword\">drop</span> <span class=\"hljs-keyword\">index</span> uk_my_idx;\n<span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">unique</span> <span class=\"hljs-keyword\">index</span> uk_my_idx <span class=\"hljs-keyword\">on</span> my_table(my_col_1,my_col_2);\n</code></pre>\n<p>Create a primary key:</p>\n<pre><code class=\"lang-plsql\"><span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> my_table <span class=\"hljs-keyword\">add</span> <span class=\"hljs-keyword\">constraint</span> pk_my_table_col_1 primary <span class=\"hljs-keyword\">key</span> (col_1);\n</code></pre>\n<p>Create a foreign key:</p>\n<pre><code class=\"lang-plsql\"><span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> my_table <span class=\"hljs-keyword\">add</span> <span class=\"hljs-keyword\">constraint</span> fk_my_table_2_col_5\nforeign <span class=\"hljs-keyword\">key</span> (col_2)\n<span class=\"hljs-keyword\">references</span> my_table_2 (col_5);\n</code></pre>\n<p>Create a sequence:</p>\n<pre><code class=\"lang-plsql\"><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">sequence</span> seq_col_1 <span class=\"hljs-keyword\">minvalue</span> <span class=\"hljs-number\">1</span> maxvalue <span class=\"hljs-number\">9999</span>\n<span class=\"hljs-keyword\">start</span> <span class=\"hljs-keyword\">with</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">increment</span> <span class=\"hljs-keyword\">by</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">cache</span> <span class=\"hljs-number\">20</span> <span class=\"hljs-keyword\">cycle</span> <span class=\"hljs-keyword\">order</span>;\n</code></pre>\n<p>Create a trigger:</p>\n<pre><code class=\"lang-plsql\"><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">or</span> <span class=\"hljs-keyword\">replace</span> <span class=\"hljs-keyword\">trigger</span> my_trigger\n  <span class=\"hljs-keyword\">before</span> <span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">on</span> my_table\n  <span class=\"hljs-keyword\">for</span> <span class=\"hljs-keyword\">each</span> <span class=\"hljs-keyword\">row</span>\n<span class=\"hljs-keyword\">begin</span>\n  :new.id := seq_col_1.nextval;\n<span class=\"hljs-keyword\">end</span> my_trigger;\n/\n</code></pre>\n<p>Create a table from select query result:</p>\n<pre><code class=\"lang-plsql\"><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">table</span> my_table <span class=\"hljs-keyword\">as</span> \n<span class=\"hljs-keyword\">select</span> col_1, col_3, col_4 <span class=\"hljs-keyword\">from</span> my_other_table <span class=\"hljs-keyword\">where</span> col_3=<span class=\"hljs-number\">123</span>;\n</code></pre>\n<p>Create a package:</p>\n<pre><code class=\"lang-plsql\"><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">or</span> replace package my_pkg <span class=\"hljs-keyword\">is</span>\n   MY_CONST_1 constant number(<span class=\"hljs-number\">1</span>):=<span class=\"hljs-number\">7</span>;\n   MY_CONST_2 constant varchar2(<span class=\"hljs-number\">100</span>):=<span class=\"hljs-string\">'some value'</span>;\n   <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">my_func</span> <span class=\"hljs-title\">return</span> <span class=\"hljs-title\">my_table</span>.<span class=\"hljs-title\">col_2</span>%<span class=\"hljs-title\">type</span>;</span>\n   <span class=\"hljs-function\"><span class=\"hljs-keyword\">procedure</span> <span class=\"hljs-title\">my_proc</span><span class=\"hljs-params\">(param1 number(4)</span>);</span>\n<span class=\"hljs-keyword\">end</span>;\n/\n\n<span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">or</span> replace package body my_pkg <span class=\"hljs-keyword\">is</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">my_func</span> <span class=\"hljs-title\">return</span> <span class=\"hljs-title\">my_table</span>.<span class=\"hljs-title\">col_2</span>%<span class=\"hljs-title\">type</span> <span class=\"hljs-title\">is</span>\n    <span class=\"hljs-title\">var_1</span> <span class=\"hljs-title\">my_table</span>.<span class=\"hljs-title\">col_2</span>%<span class=\"hljs-title\">type</span> :</span>= null;\n  <span class=\"hljs-keyword\">begin</span>\n    -- some logic...\n    return var_1;\n  <span class=\"hljs-keyword\">end</span>;\n\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">procedure</span> <span class=\"hljs-title\">my_proc</span><span class=\"hljs-params\">(param1 number(4)</span>) <span class=\"hljs-title\">is</span>\n  <span class=\"hljs-title\">begin</span>\n    -- <span class=\"hljs-title\">some</span> <span class=\"hljs-title\">logic</span>...\n  <span class=\"hljs-title\">end</span>;</span>\n\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">procedure</span> <span class=\"hljs-title\">my_private_proc</span><span class=\"hljs-params\">(param1 <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">out</span> my_table%rowtype)</span> <span class=\"hljs-title\">is</span>\n  <span class=\"hljs-title\">begin</span>\n    -- <span class=\"hljs-title\">some</span> <span class=\"hljs-title\">logic</span>...\n  <span class=\"hljs-title\">end</span>;</span>\n<span class=\"hljs-keyword\">end</span>;\n/\n</code></pre>\n"},{"html_url":"https://gist.github.com/36fea02e31a7c2bc272b","description":"Yii: Translations from Oracle DB","files":["https://gist.githubusercontent.com/umidjons/36fea02e31a7c2bc272b/raw/93f3a49ef4c00ea3fd08245686aee9a70cfa9260/translation-from-db-yii.md"],"content":"Translations from Oracle DB\n===\n\nExecute following queries in Oracle DB:\n```plsql\ncreate table yii_message_source\n(\n    id number,\n    category varchar2(32),\n    message varchar2(4000)\n);\nalter table yii_message_source add constraint PK_MSG_ID primary key (id);\n\ncreate table yii_message(\n\tid number,\n    language varchar2(16),\n    translation varchar2(4000)\n);\nalter table yii_message add constraint PK_MSG_LANG primary key(id,language);\nalter table yii_message add constraint FK_MSG_SRC foreign key (id) references yii_message_source (id) on delete cascade;\n\ncreate sequence YII_MESSAGE_ID minvalue 1 maxvalue 999999999 start with 1 increment by 1 nocache;\n\ncreate or replace trigger add_yii_message_source\n\tbefore insert on yii_message_source\n\tfor each row\n\twhen (new.id is null)\ndeclare\n\tseq_ number(18);\nbegin\n\tselect yii_message_id.nextval into seq_ from dual;\n\t:new.id := seq_;\nend;\n```\n\nFill `yii_message_source` table with primary words.\nFill `yii_message` table with translations.\n\nCreate following class in your `components` directory:\n```php\n<?php\nclass DbMessageSource extends CDbMessageSource\n{\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic function loadMessages($category,$language)\n\t{\n\t\treturn parent::loadMessages($category,$language);\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic function loadMessagesFromDb($category,$language)\n\t{\n\t\t$rows    =$this->getDbConnection()->createCommand(\"\n\t\t\tselect message, translation\n\t\t\tfrom {$this->sourceMessageTable} t1, {$this->translatedMessageTable} t2\n\t\t\twhere t1.id=t2.id and category=:category and language=:language\")\n\t\t\t->queryAll(true,[':category'=>$category,':language'=>$language]);\n\t\t$messages=[];\n\t\tforeach($rows as $row)\n\t\t\t$messages[$row['MESSAGE']]=$row['TRANSLATION'];\n\n\t\treturn $messages;\n\t}\n}\n```\n\nConfigure `messages` component as following:\n```php\n<?php\nreturn [\n\t// ...\n\t// application components\n\t'components'    =>[\n\t    // ...\n\t\t'messages'     =>[\n\t\t\t'class'                 =>'DbMessageSource',\n\t\t\t'sourceMessageTable'    =>'YII_MESSAGE_SOURCE',\n\t\t\t'translatedMessageTable'=>'YII_MESSAGE',\n\t\t\t'cacheID'               =>'cache',\n\t\t\t'cachingDuration'       =>3600,\n\t\t],\n\t\t// ...\n\t],\n];\n```\n","html":"<h1 id=\"translations-from-oracle-db\">Translations from Oracle DB</h1>\n<p>Execute following queries in Oracle DB:</p>\n<pre><code class=\"lang-plsql\"><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">table</span> yii_message_source\n(\n    <span class=\"hljs-keyword\">id</span> <span class=\"hljs-built_in\">number</span>,\n    <span class=\"hljs-keyword\">category</span> varchar2(<span class=\"hljs-number\">32</span>),\n    message varchar2(<span class=\"hljs-number\">4000</span>)\n);\n<span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> yii_message_source <span class=\"hljs-keyword\">add</span> <span class=\"hljs-keyword\">constraint</span> PK_MSG_ID primary <span class=\"hljs-keyword\">key</span> (<span class=\"hljs-keyword\">id</span>);\n\n<span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">table</span> yii_message(\n    <span class=\"hljs-keyword\">id</span> <span class=\"hljs-built_in\">number</span>,\n    <span class=\"hljs-keyword\">language</span> varchar2(<span class=\"hljs-number\">16</span>),\n    <span class=\"hljs-keyword\">translation</span> varchar2(<span class=\"hljs-number\">4000</span>)\n);\n<span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> yii_message <span class=\"hljs-keyword\">add</span> <span class=\"hljs-keyword\">constraint</span> PK_MSG_LANG primary <span class=\"hljs-keyword\">key</span>(<span class=\"hljs-keyword\">id</span>,<span class=\"hljs-keyword\">language</span>);\n<span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> yii_message <span class=\"hljs-keyword\">add</span> <span class=\"hljs-keyword\">constraint</span> FK_MSG_SRC foreign <span class=\"hljs-keyword\">key</span> (<span class=\"hljs-keyword\">id</span>) <span class=\"hljs-keyword\">references</span> yii_message_source (<span class=\"hljs-keyword\">id</span>) <span class=\"hljs-keyword\">on</span> <span class=\"hljs-keyword\">delete</span> <span class=\"hljs-keyword\">cascade</span>;\n\n<span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">sequence</span> YII_MESSAGE_ID <span class=\"hljs-keyword\">minvalue</span> <span class=\"hljs-number\">1</span> maxvalue <span class=\"hljs-number\">999999999</span> <span class=\"hljs-keyword\">start</span> <span class=\"hljs-keyword\">with</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">increment</span> <span class=\"hljs-keyword\">by</span> <span class=\"hljs-number\">1</span> nocache;\n\n<span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">or</span> <span class=\"hljs-keyword\">replace</span> <span class=\"hljs-keyword\">trigger</span> add_yii_message_source\n    <span class=\"hljs-keyword\">before</span> <span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">on</span> yii_message_source\n    <span class=\"hljs-keyword\">for</span> <span class=\"hljs-keyword\">each</span> <span class=\"hljs-keyword\">row</span>\n    <span class=\"hljs-keyword\">when</span> (new.id <span class=\"hljs-keyword\">is</span> <span class=\"hljs-literal\">null</span>)\n<span class=\"hljs-keyword\">declare</span>\n    seq_ <span class=\"hljs-built_in\">number</span>(<span class=\"hljs-number\">18</span>);\n<span class=\"hljs-keyword\">begin</span>\n    <span class=\"hljs-keyword\">select</span> yii_message_id.nextval <span class=\"hljs-keyword\">into</span> seq_ <span class=\"hljs-keyword\">from</span> dual;\n    :new.id := seq_;\n<span class=\"hljs-keyword\">end</span>;\n</code></pre>\n<p>Fill <code>yii_message_source</code> table with primary words.\nFill <code>yii_message</code> table with translations.</p>\n<p>Create following class in your <code>components</code> directory:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DbMessageSource</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CDbMessageSource</span>\n</span>{\n    <span class=\"hljs-comment\">/**\n     * <span class=\"hljs-doctag\">@inheritdoc</span>\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">loadMessages</span><span class=\"hljs-params\">($category,$language)</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">parent</span>::loadMessages($category,$language);\n    }\n\n    <span class=\"hljs-comment\">/**\n     * <span class=\"hljs-doctag\">@inheritdoc</span>\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">loadMessagesFromDb</span><span class=\"hljs-params\">($category,$language)</span>\n    </span>{\n        $rows    =<span class=\"hljs-keyword\">$this</span>-&gt;getDbConnection()-&gt;createCommand(<span class=\"hljs-string\">\"\n            select message, translation\n            from {$this-&gt;sourceMessageTable} t1, {$this-&gt;translatedMessageTable} t2\n            where t1.id=t2.id and category=:category and language=:language\"</span>)\n            -&gt;queryAll(<span class=\"hljs-keyword\">true</span>,[<span class=\"hljs-string\">':category'</span>=&gt;$category,<span class=\"hljs-string\">':language'</span>=&gt;$language]);\n        $messages=[];\n        <span class=\"hljs-keyword\">foreach</span>($rows <span class=\"hljs-keyword\">as</span> $row)\n            $messages[$row[<span class=\"hljs-string\">'MESSAGE'</span>]]=$row[<span class=\"hljs-string\">'TRANSLATION'</span>];\n\n        <span class=\"hljs-keyword\">return</span> $messages;\n    }\n}</span>\n</code></pre>\n<p>Configure <code>messages</code> component as following:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">return</span> [\n    <span class=\"hljs-comment\">// ...</span>\n    <span class=\"hljs-comment\">// application components</span>\n    <span class=\"hljs-string\">'components'</span>    =&gt;[\n        <span class=\"hljs-comment\">// ...</span>\n        <span class=\"hljs-string\">'messages'</span>     =&gt;[\n            <span class=\"hljs-string\">'class'</span>                 =&gt;<span class=\"hljs-string\">'DbMessageSource'</span>,\n            <span class=\"hljs-string\">'sourceMessageTable'</span>    =&gt;<span class=\"hljs-string\">'YII_MESSAGE_SOURCE'</span>,\n            <span class=\"hljs-string\">'translatedMessageTable'</span>=&gt;<span class=\"hljs-string\">'YII_MESSAGE'</span>,\n            <span class=\"hljs-string\">'cacheID'</span>               =&gt;<span class=\"hljs-string\">'cache'</span>,\n            <span class=\"hljs-string\">'cachingDuration'</span>       =&gt;<span class=\"hljs-number\">3600</span>,\n        ],\n        <span class=\"hljs-comment\">// ...</span>\n    ],\n];</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/643460259d983ab7db6e","description":"Configure OpenServer nginx for Yii","files":["https://gist.githubusercontent.com/umidjons/643460259d983ab7db6e/raw/e75d7cf0b4994d37aecbebcc13d4c2ce7471a9a7/openserver-nginx-yii.md"],"content":"Configure OpenServer nginx for Yii\n===\n\nTo configure nginx for specific domain we should copy nginx configuration into\nthat domain's directory.\nSuppose, I have `mysite.uz` domain. Then I should copy `c:\\OpenServer\\userdata\\config\\Nginx-1.9_vhost.conf` into `c:\\OpenServer\\domains\\mysite.uz\\Nginx-1.9_vhost.conf`.\n\nAdd some configuration entries to enable pretty URL and to deny access to the specific directories:\n```conf\nserver {\n    listen         %ip%:%httpport%;\n    listen         %ip%:%httpsport% ssl;\n    server_name    %host% %aliases%;\n    # if ($request_method !~* ^(GET|HEAD|POST)$ ){return 403;}\n    location ~ /\\. {deny all;}\n\n    location / {\n        root       \"%hostdir%\";\n        index      index.php index.html index.htm;\n        # enable Yii's pretty URL\n        try_files $uri $uri/ /index.php?$query_string;\n    }\n\n    # deny access to specific locations\n    location ~ /(protected|framework|nbproject) {\n        deny all;\n        access_log off;\n        log_not_found off;\n    }\n\n    # other configuration options remains as is\n    location ~ \\.php$ {\n      # ...\n    }\n}\n```\n\nRestart OpenServer.\n\nMore information about custom configuration for the domain is here http://open-server.ru/docs/#voprosy-i-otvety\n\nDiscussion about OpenServer's Nginx and Yii urlManager is here http://open-server.ru/forum/viewtopic.php?f=1&t=1441","html":"<h1 id=\"configure-openserver-nginx-for-yii\">Configure OpenServer nginx for Yii</h1>\n<p>To configure nginx for specific domain we should copy nginx configuration into\nthat domain&#39;s directory.\nSuppose, I have <code>mysite.uz</code> domain. Then I should copy <code>c:\\OpenServer\\userdata\\config\\Nginx-1.9_vhost.conf</code> into <code>c:\\OpenServer\\domains\\mysite.uz\\Nginx-1.9_vhost.conf</code>.</p>\n<p>Add some configuration entries to enable pretty URL and to deny access to the specific directories:</p>\n<pre><code class=\"lang-conf\"><span class=\"hljs-section\">server</span> {\n    <span class=\"hljs-attribute\">listen</span>         %ip%:%httpport%;\n    <span class=\"hljs-attribute\">listen</span>         %ip%:%httpsport% ssl;\n    <span class=\"hljs-attribute\">server_name</span>    %host% %aliases%;\n    <span class=\"hljs-comment\"># if ($request_method !~* ^(GET|HEAD|POST)$ ){return 403;}</span>\n    <span class=\"hljs-attribute\">location</span> <span class=\"hljs-regexp\">~ /\\.</span> {<span class=\"hljs-attribute\">deny</span> all;}\n\n    <span class=\"hljs-attribute\">location</span> / {\n        <span class=\"hljs-attribute\">root</span>       <span class=\"hljs-string\">\"%hostdir%\"</span>;\n        <span class=\"hljs-attribute\">index</span>      index.php index.html index.htm;\n        <span class=\"hljs-comment\"># enable Yii's pretty URL</span>\n        <span class=\"hljs-attribute\">try_files</span> <span class=\"hljs-variable\">$uri</span> <span class=\"hljs-variable\">$uri</span>/ /index.php?<span class=\"hljs-variable\">$query_string</span>;\n    }\n\n    <span class=\"hljs-comment\"># deny access to specific locations</span>\n    <span class=\"hljs-attribute\">location</span> <span class=\"hljs-regexp\">~ /(protected|framework|nbproject)</span> {\n        <span class=\"hljs-attribute\">deny</span> all;\n        <span class=\"hljs-attribute\">access_log</span> <span class=\"hljs-literal\">off</span>;\n        <span class=\"hljs-attribute\">log_not_found</span> <span class=\"hljs-literal\">off</span>;\n    }\n\n    <span class=\"hljs-comment\"># other configuration options remains as is</span>\n    <span class=\"hljs-attribute\">location</span> <span class=\"hljs-regexp\">~ \\.php$</span> {\n      <span class=\"hljs-comment\"># ...</span>\n    }\n}\n</code></pre>\n<p>Restart OpenServer.</p>\n<p>More information about custom configuration for the domain is here <a href=\"http://open-server.ru/docs/#voprosy-i-otvety\">http://open-server.ru/docs/#voprosy-i-otvety</a></p>\n<p>Discussion about OpenServer&#39;s Nginx and Yii urlManager is here <a href=\"http://open-server.ru/forum/viewtopic.php?f=1&amp;t=1441\">http://open-server.ru/forum/viewtopic.php?f=1&amp;t=1441</a></p>\n"},{"html_url":"https://gist.github.com/dca883c90b9df138caa5","description":"Custom LogRoute to log entries into Oracle DB via OCI interface","files":["https://gist.githubusercontent.com/umidjons/dca883c90b9df138caa5/raw/fa55fb439b8f5fda222ea7f25465a3f9bdfa1310/custom-log-route-oci.md"],"content":"Custom LogRoute to log entries into Oracle DB via OCI interface\n===\n\nLog route implementation:\n```php\n<?php\n\nclass ELogDb extends CDbLogRoute\n{\n\tprotected function createLogTable($db,$tableName)\n\t{\n\t\t// create table and sequence\n\t\t$sql=\"CREATE TABLE {$this->logTableName} (\n\t\t\t\t\t\tID       NUMBER(18),\n\t\t\t\t\t\tLEVEL_   VARCHAR2(128),\n\t\t\t\t\t\tCATEGORY VARCHAR2(128),\n\t\t\t\t\t\tLOGTIME  DATE,\n\t\t\t\t\t\tIP       VARCHAR2(50),\n\t\t\t\t\t\tUSERID   NUMBER(18),\n\t\t\t\t\t\tUSERNAME VARCHAR2(50),\n\t\t\t\t\t\tURL      VARCHAR2(1000),\n\t\t\t\t\t\tMESSAGE  CLOB\n\t\t\t\t\t)\";\n\t\tYii::app()->odb->exec($sql);\n\t\t$sql=\"CREATE SEQUENCE SEQ_{$this->logTableName} MINVALUE 1 MAXVALUE 999999999999999999 START WITH 1 INCREMENT BY 1 CYCLE ORDER\";\n\t\tYii::app()->odb->exec($sql);\n\t}\n\n\tprotected function processLogs($logs)\n\t{\n\t\tforeach($logs as $log)\n\t\t{\n\t\t\t$v_get ='$_GET:'.print_r($_GET,true);\n\t\t\t$v_post='$_POST:'.print_r($_POST,true);\n\t\t\t$msg   =implode(\"\\n\\n\\n\",[$log[0],$v_get,$v_post]);\n\t\t\tYii::app()->odb->exec('begin logger.log(:pLevel,:pCategory,:pIp,:pUser,:pUsername,:pUrl,:pMsg); end;',[\n\t\t\t\t':pLevel'   =>$log[1],\n\t\t\t\t':pCategory'=>$log[2],\n\t\t\t\t':pIp'      =>Yii::app()->request->userHostAddress,\n\t\t\t\t':pUser'    =>Yii::app()->user->id,\n\t\t\t\t':pUsername'=>Yii::app()->user->name,\n\t\t\t\t':pUrl'     =>Yii::app()->request->url,\n\t\t\t\t':pMsg'     =>[$msg,OCI_B_CLOB,-1,false],\n\t\t\t]);\n\t\t}\n\t}\n}\n```\n\nLogger package implementation\n\nPackage header:\n```plsql\ncreate or replace package LOGGER is\n\n\tprocedure log(pLevel    yiilog.level_%type,\n\t\t\t\t  pCategory yiilog.category%type,\n\t\t\t\t  pIP       yiilog.ip%type,\n\t\t\t\t  pUser     yiilog.userid%type,\n\t\t\t\t  pUsername yiilog.username%type,\n\t\t\t\t  pUrl      yiilog.url%type,\n\t\t\t\t  pMsg      yiilog.message%type);\n\nend LOGGER;\n```\n\nPackage body:\n```plsql\ncreate or replace package body LOGGER is\n\n\tprocedure log(pLevel    yiilog.level_%type,\n\t\t\t\t  pCategory yiilog.category%type,\n\t\t\t\t  pIP       yiilog.ip%type,\n\t\t\t\t  pUser     yiilog.userid%type,\n\t\t\t\t  pUsername yiilog.username%type,\n\t\t\t\t  pUrl      yiilog.url%type,\n\t\t\t\t  pMsg      yiilog.message%type) is\n\t\tPRAGMA AUTONOMOUS_TRANSACTION;\n\t\trow_ yiilog%rowtype;\n\tbegin\n\t\trow_.id       := seq_yiilog.Nextval;\n\t\trow_.level_   := pLevel;\n\t\trow_.category := pCategory;\n\t\trow_.logtime  := sysdate;\n\t\trow_.ip       := pIP;\n\t\trow_.userid   := pUser;\n\t\trow_.username := pUsername;\n\t\trow_.url      := pUrl;\n\t\trow_.message  := pMsg;\n\t\tinsert into yiilog values row_;\n\t\tcommit;\n\tend;\n\nend LOGGER;\n```\n\nNecessary sequence implementation:\n```plsql\n-- Create sequence \ncreate sequence SEQ_YIILOG\nminvalue 1\nmaxvalue 999999999999999999\nstart with 1\nincrement by 1\ncache 20\ncycle\norder;\n```\n\nConfigure component:\n```php\n<?php\nreturn [\n\t'preload'   =>['log'],\n\t'import'    =>[\n\t\t'application.models.*',\n\t\t'application.models.task.*',\n\t\t'application.components.*',\n\t],\n\t'components'=>[\n\t\t'odb'=>[\n\t\t\t'class'           =>'EOciConnection', // https://gist.github.com/umidjons/c572446825b2d8300048\n\t\t\t'connectionString'=>'MYTNS',\n\t\t\t'username'        =>'MYUSER',\n\t\t\t'password'        =>'MYPSWD',\n\t\t\t'charset'         =>'AL32UTF8',\n\t\t\t'persistent'      =>true,\n\t\t],\n\t\t'log'=>[\n\t\t\t'class' =>'CLogRouter',\n\t\t\t'routes'=>[\n\t\t\t\t[\n\t\t\t\t\t'class'             =>'ext.logdb.ELogDb',\n\t\t\t\t\t'connectionID'      =>'odb',\n\t\t\t\t\t'autoCreateLogTable'=>false,\n\t\t\t\t\t'levels'            =>'error,warning,info',\n\t\t\t\t\t'logTableName'      =>'YIILOG',\n\t\t\t\t],\n\t\t\t],\n\t\t],\n\t],\n];\n```","html":"<h1 id=\"custom-logroute-to-log-entries-into-oracle-db-via-oci-interface\">Custom LogRoute to log entries into Oracle DB via OCI interface</h1>\n<p>Log route implementation:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ELogDb</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CDbLogRoute</span>\n</span>{\n    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">createLogTable</span><span class=\"hljs-params\">($db,$tableName)</span>\n    </span>{\n        <span class=\"hljs-comment\">// create table and sequence</span>\n        $sql=<span class=\"hljs-string\">\"CREATE TABLE {$this-&gt;logTableName} (\n                        ID       NUMBER(18),\n                        LEVEL_   VARCHAR2(128),\n                        CATEGORY VARCHAR2(128),\n                        LOGTIME  DATE,\n                        IP       VARCHAR2(50),\n                        USERID   NUMBER(18),\n                        USERNAME VARCHAR2(50),\n                        URL      VARCHAR2(1000),\n                        MESSAGE  CLOB\n                    )\"</span>;\n        Yii::app()-&gt;odb-&gt;exec($sql);\n        $sql=<span class=\"hljs-string\">\"CREATE SEQUENCE SEQ_{$this-&gt;logTableName} MINVALUE 1 MAXVALUE 999999999999999999 START WITH 1 INCREMENT BY 1 CYCLE ORDER\"</span>;\n        Yii::app()-&gt;odb-&gt;exec($sql);\n    }\n\n    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">processLogs</span><span class=\"hljs-params\">($logs)</span>\n    </span>{\n        <span class=\"hljs-keyword\">foreach</span>($logs <span class=\"hljs-keyword\">as</span> $log)\n        {\n            $v_get =<span class=\"hljs-string\">'$_GET:'</span>.print_r($_GET,<span class=\"hljs-keyword\">true</span>);\n            $v_post=<span class=\"hljs-string\">'$_POST:'</span>.print_r($_POST,<span class=\"hljs-keyword\">true</span>);\n            $msg   =implode(<span class=\"hljs-string\">\"\\n\\n\\n\"</span>,[$log[<span class=\"hljs-number\">0</span>],$v_get,$v_post]);\n            Yii::app()-&gt;odb-&gt;exec(<span class=\"hljs-string\">'begin logger.log(:pLevel,:pCategory,:pIp,:pUser,:pUsername,:pUrl,:pMsg); end;'</span>,[\n                <span class=\"hljs-string\">':pLevel'</span>   =&gt;$log[<span class=\"hljs-number\">1</span>],\n                <span class=\"hljs-string\">':pCategory'</span>=&gt;$log[<span class=\"hljs-number\">2</span>],\n                <span class=\"hljs-string\">':pIp'</span>      =&gt;Yii::app()-&gt;request-&gt;userHostAddress,\n                <span class=\"hljs-string\">':pUser'</span>    =&gt;Yii::app()-&gt;user-&gt;id,\n                <span class=\"hljs-string\">':pUsername'</span>=&gt;Yii::app()-&gt;user-&gt;name,\n                <span class=\"hljs-string\">':pUrl'</span>     =&gt;Yii::app()-&gt;request-&gt;url,\n                <span class=\"hljs-string\">':pMsg'</span>     =&gt;[$msg,OCI_B_CLOB,<span class=\"hljs-number\">-1</span>,<span class=\"hljs-keyword\">false</span>],\n            ]);\n        }\n    }\n}</span>\n</code></pre>\n<p>Logger package implementation</p>\n<p>Package header:</p>\n<pre><code class=\"lang-plsql\">create <span class=\"hljs-keyword\">or</span> replace package LOGGER <span class=\"hljs-keyword\">is</span>\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">procedure</span> <span class=\"hljs-title\">log</span><span class=\"hljs-params\">(pLevel    yiilog.level_%<span class=\"hljs-keyword\">type</span>,\n                  pCategory yiilog.category%<span class=\"hljs-keyword\">type</span>,\n                  pIP       yiilog.ip%<span class=\"hljs-keyword\">type</span>,\n                  pUser     yiilog.userid%<span class=\"hljs-keyword\">type</span>,\n                  pUsername yiilog.username%<span class=\"hljs-keyword\">type</span>,\n                  pUrl      yiilog.url%<span class=\"hljs-keyword\">type</span>,\n                  pMsg      yiilog.<span class=\"hljs-keyword\">message</span>%<span class=\"hljs-keyword\">type</span>)</span>;</span>\n\n<span class=\"hljs-keyword\">end</span> LOGGER;\n</code></pre>\n<p>Package body:</p>\n<pre><code class=\"lang-plsql\"><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">or</span> <span class=\"hljs-keyword\">replace</span> <span class=\"hljs-keyword\">package</span> <span class=\"hljs-keyword\">body</span> LOGGER <span class=\"hljs-keyword\">is</span>\n\n    <span class=\"hljs-keyword\">procedure</span> <span class=\"hljs-keyword\">log</span>(pLevel    yiilog.level_%<span class=\"hljs-keyword\">type</span>,\n                  pCategory yiilog.category%<span class=\"hljs-keyword\">type</span>,\n                  pIP       yiilog.ip%<span class=\"hljs-keyword\">type</span>,\n                  pUser     yiilog.userid%<span class=\"hljs-keyword\">type</span>,\n                  pUsername yiilog.username%<span class=\"hljs-keyword\">type</span>,\n                  pUrl      yiilog.url%<span class=\"hljs-keyword\">type</span>,\n                  pMsg      yiilog.message%<span class=\"hljs-keyword\">type</span>) <span class=\"hljs-keyword\">is</span>\n        <span class=\"hljs-keyword\">PRAGMA</span> AUTONOMOUS_TRANSACTION;\n        row_ yiilog%rowtype;\n    <span class=\"hljs-keyword\">begin</span>\n        row_.id       := seq_yiilog.Nextval;\n        row_.level_   := pLevel;\n        row_.category := pCategory;\n        row_.logtime  := sysdate;\n        row_.ip       := pIP;\n        row_.userid   := pUser;\n        row_.username := pUsername;\n        row_.url      := pUrl;\n        row_.message  := pMsg;\n        <span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> yiilog <span class=\"hljs-keyword\">values</span> row_;\n        <span class=\"hljs-keyword\">commit</span>;\n    <span class=\"hljs-keyword\">end</span>;\n\n<span class=\"hljs-keyword\">end</span> LOGGER;\n</code></pre>\n<p>Necessary sequence implementation:</p>\n<pre><code class=\"lang-plsql\"><span class=\"hljs-comment\">-- Create sequence </span>\n<span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">sequence</span> SEQ_YIILOG\n<span class=\"hljs-keyword\">minvalue</span> <span class=\"hljs-number\">1</span>\nmaxvalue <span class=\"hljs-number\">999999999999999999</span>\n<span class=\"hljs-keyword\">start</span> <span class=\"hljs-keyword\">with</span> <span class=\"hljs-number\">1</span>\n<span class=\"hljs-keyword\">increment</span> <span class=\"hljs-keyword\">by</span> <span class=\"hljs-number\">1</span>\n<span class=\"hljs-keyword\">cache</span> <span class=\"hljs-number\">20</span>\n<span class=\"hljs-keyword\">cycle</span>\n<span class=\"hljs-keyword\">order</span>;\n</code></pre>\n<p>Configure component:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">return</span> [\n    <span class=\"hljs-string\">'preload'</span>   =&gt;[<span class=\"hljs-string\">'log'</span>],\n    <span class=\"hljs-string\">'import'</span>    =&gt;[\n        <span class=\"hljs-string\">'application.models.*'</span>,\n        <span class=\"hljs-string\">'application.models.task.*'</span>,\n        <span class=\"hljs-string\">'application.components.*'</span>,\n    ],\n    <span class=\"hljs-string\">'components'</span>=&gt;[\n        <span class=\"hljs-string\">'odb'</span>=&gt;[\n            <span class=\"hljs-string\">'class'</span>           =&gt;<span class=\"hljs-string\">'EOciConnection'</span>, <span class=\"hljs-comment\">// https://gist.github.com/umidjons/c572446825b2d8300048</span>\n            <span class=\"hljs-string\">'connectionString'</span>=&gt;<span class=\"hljs-string\">'MYTNS'</span>,\n            <span class=\"hljs-string\">'username'</span>        =&gt;<span class=\"hljs-string\">'MYUSER'</span>,\n            <span class=\"hljs-string\">'password'</span>        =&gt;<span class=\"hljs-string\">'MYPSWD'</span>,\n            <span class=\"hljs-string\">'charset'</span>         =&gt;<span class=\"hljs-string\">'AL32UTF8'</span>,\n            <span class=\"hljs-string\">'persistent'</span>      =&gt;<span class=\"hljs-keyword\">true</span>,\n        ],\n        <span class=\"hljs-string\">'log'</span>=&gt;[\n            <span class=\"hljs-string\">'class'</span> =&gt;<span class=\"hljs-string\">'CLogRouter'</span>,\n            <span class=\"hljs-string\">'routes'</span>=&gt;[\n                [\n                    <span class=\"hljs-string\">'class'</span>             =&gt;<span class=\"hljs-string\">'ext.logdb.ELogDb'</span>,\n                    <span class=\"hljs-string\">'connectionID'</span>      =&gt;<span class=\"hljs-string\">'odb'</span>,\n                    <span class=\"hljs-string\">'autoCreateLogTable'</span>=&gt;<span class=\"hljs-keyword\">false</span>,\n                    <span class=\"hljs-string\">'levels'</span>            =&gt;<span class=\"hljs-string\">'error,warning,info'</span>,\n                    <span class=\"hljs-string\">'logTableName'</span>      =&gt;<span class=\"hljs-string\">'YIILOG'</span>,\n                ],\n            ],\n        ],\n    ],\n];</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/93e69803f2d00e392cd9","description":"Remove duplicated items from array of items, which each items is also associative array.","files":["https://gist.githubusercontent.com/umidjons/93e69803f2d00e392cd9/raw/a1f20402a94492f889fedc0f8656e17376d9cbd2/unique-multi-array-by-key.md"],"content":"Remove duplicated items from array of items, which each items is also associative array.\n===\n\nFunction implementation:\n```php\n<?php\n/**\n * Removes duplicates from multidimensional associative array by key.\n * Ignores items from resulting array with the same key.\n * If key is not set in the item, that item will be ignored from resulting array.\n * @param array  $array array of associative arrays with key.\n * @param string $key   associative array key to check for duplicates.\n * @return array resulting array of associative arrays.\n */\nfunction array_unique_by_key($array,$key)\n{\n\t$tmp   =[];\n\t$result=[];\n\tforeach($array as $item)\n\t{\n\t\tif(!isset($item[$key]))\n\t\t\tcontinue;\n\t\tif(!in_array($item[$key],$tmp))\n\t\t{\n\t\t\t$tmp[]   =$item[$key];\n\t\t\t$result[]=$item;\n\t\t}\n\t}\n\treturn $result;\n}\n```\n\nSuppose, our example array is following:\n```php\n<?php\n$array  =[\n\t['name'=>'Jhon','age'=>23],\n\t['name'=>'Jane','age'=>20],\n\t['name'=>'Dizel','age'=>18],\n\t['name'=>'Done','age'=>31],\n\t['name'=>'Jhon','age'=>18],\n];\n```\n\nTo leave items by `name` we will call following:\n```php\n<?php\n$by_name=array_unique_by_key($array,'name');\necho '<pre>'.print_r($by_name,true).'</pre>';\n```\n\nOutput will be as following:\n```\nArray\n(\n    [0] => Array\n        (\n            [name] => Jhon\n            [age] => 23\n        )\n\n    [1] => Array\n        (\n            [name] => Jane\n            [age] => 20\n        )\n\n    [2] => Array\n        (\n            [name] => Dizel\n            [age] => 18\n        )\n\n    [3] => Array\n        (\n            [name] => Done\n            [age] => 31\n        )\n\n)\n```\n\nTo leave items by `age` we will call following:\n```php\n<?php\n$by_age=array_unique_by_key($array,'age');\necho '<pre>'.print_r($by_age,true).'</pre>';\n```\n\nOutput will be as following:\n```\nArray\n(\n    [0] => Array\n        (\n            [name] => Jhon\n            [age] => 23\n        )\n\n    [1] => Array\n        (\n            [name] => Jane\n            [age] => 20\n        )\n\n    [2] => Array\n        (\n            [name] => Dizel\n            [age] => 18\n        )\n\n    [3] => Array\n        (\n            [name] => Done\n            [age] => 31\n        )\n\n)\n```","html":"<h1 id=\"remove-duplicated-items-from-array-of-items-which-each-items-is-also-associative-array-\">Remove duplicated items from array of items, which each items is also associative array.</h1>\n<p>Function implementation:</p>\n<pre><code class=\"lang-php\">&lt;?php\n/**\n * Removes duplicates from multidimensional associative<span class=\"hljs-built_in\"> array </span>by key.\n * Ignores items from resulting<span class=\"hljs-built_in\"> array </span>with the same key.\n * If key is<span class=\"hljs-built_in\"> not </span>set in the item, that item will be ignored from resulting array.\n * @param<span class=\"hljs-built_in\"> array </span> $array<span class=\"hljs-built_in\"> array </span>of associative arrays with key.\n * @param string $key   associative<span class=\"hljs-built_in\"> array </span>key to<span class=\"hljs-built_in\"> check </span>for duplicates.\n * @return<span class=\"hljs-built_in\"> array </span>resulting<span class=\"hljs-built_in\"> array </span>of associative arrays.\n */\nfunction array_unique_by_key($array,$key)\n{\n    $tmp   =[];\n    $result=[];\n    foreach($array as $item)\n    {\n        if(!isset($item[$key]))\n            continue;\n        if(!in_array($item[$key],$tmp))\n        {\n            $tmp[]   =$item[$key];\n            $result[]=$item;\n        }\n    }\n   <span class=\"hljs-built_in\"> return </span>$result;\n}\n</code></pre>\n<p>Suppose, our example array is following:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n$array  =[\n    [<span class=\"hljs-string\">'name'</span>=&gt;<span class=\"hljs-string\">'Jhon'</span>,<span class=\"hljs-string\">'age'</span>=&gt;<span class=\"hljs-number\">23</span>],\n    [<span class=\"hljs-string\">'name'</span>=&gt;<span class=\"hljs-string\">'Jane'</span>,<span class=\"hljs-string\">'age'</span>=&gt;<span class=\"hljs-number\">20</span>],\n    [<span class=\"hljs-string\">'name'</span>=&gt;<span class=\"hljs-string\">'Dizel'</span>,<span class=\"hljs-string\">'age'</span>=&gt;<span class=\"hljs-number\">18</span>],\n    [<span class=\"hljs-string\">'name'</span>=&gt;<span class=\"hljs-string\">'Done'</span>,<span class=\"hljs-string\">'age'</span>=&gt;<span class=\"hljs-number\">31</span>],\n    [<span class=\"hljs-string\">'name'</span>=&gt;<span class=\"hljs-string\">'Jhon'</span>,<span class=\"hljs-string\">'age'</span>=&gt;<span class=\"hljs-number\">18</span>],\n];</span>\n</code></pre>\n<p>To leave items by <code>name</code> we will call following:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n$by_name=array_unique_by_key($array,<span class=\"hljs-string\">'name'</span>);\n<span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">'&lt;pre&gt;'</span>.print_r($by_name,<span class=\"hljs-keyword\">true</span>).<span class=\"hljs-string\">'&lt;/pre&gt;'</span>;</span>\n</code></pre>\n<p>Output will be as following:</p>\n<pre><code><span class=\"hljs-keyword\">Array</span>\n(\n    [<span class=\"hljs-number\">0</span>] =&gt; <span class=\"hljs-keyword\">Array</span>\n        (\n            [name] =&gt; Jhon\n            [age] =&gt; <span class=\"hljs-number\">23</span>\n        )\n\n    [<span class=\"hljs-number\">1</span>] =&gt; <span class=\"hljs-keyword\">Array</span>\n        (\n            [name] =&gt; Jane\n            [age] =&gt; <span class=\"hljs-number\">20</span>\n        )\n\n    [<span class=\"hljs-number\">2</span>] =&gt; <span class=\"hljs-keyword\">Array</span>\n        (\n            [name] =&gt; Dizel\n            [age] =&gt; <span class=\"hljs-number\">18</span>\n        )\n\n    [<span class=\"hljs-number\">3</span>] =&gt; <span class=\"hljs-keyword\">Array</span>\n        (\n            [name] =&gt; Done\n            [age] =&gt; <span class=\"hljs-number\">31</span>\n        )\n\n)\n</code></pre><p>To leave items by <code>age</code> we will call following:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n$by_age=array_unique_by_key($array,<span class=\"hljs-string\">'age'</span>);\n<span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">'&lt;pre&gt;'</span>.print_r($by_age,<span class=\"hljs-keyword\">true</span>).<span class=\"hljs-string\">'&lt;/pre&gt;'</span>;</span>\n</code></pre>\n<p>Output will be as following:</p>\n<pre><code><span class=\"hljs-keyword\">Array</span>\n(\n    [<span class=\"hljs-number\">0</span>] =&gt; <span class=\"hljs-keyword\">Array</span>\n        (\n            [name] =&gt; Jhon\n            [age] =&gt; <span class=\"hljs-number\">23</span>\n        )\n\n    [<span class=\"hljs-number\">1</span>] =&gt; <span class=\"hljs-keyword\">Array</span>\n        (\n            [name] =&gt; Jane\n            [age] =&gt; <span class=\"hljs-number\">20</span>\n        )\n\n    [<span class=\"hljs-number\">2</span>] =&gt; <span class=\"hljs-keyword\">Array</span>\n        (\n            [name] =&gt; Dizel\n            [age] =&gt; <span class=\"hljs-number\">18</span>\n        )\n\n    [<span class=\"hljs-number\">3</span>] =&gt; <span class=\"hljs-keyword\">Array</span>\n        (\n            [name] =&gt; Done\n            [age] =&gt; <span class=\"hljs-number\">31</span>\n        )\n\n)\n</code></pre>"},{"html_url":"https://gist.github.com/c637b6f39af068a56cda","description":"Convert Unicode sequences to normal text (letters).","files":["https://gist.githubusercontent.com/umidjons/c637b6f39af068a56cda/raw/466c3fc5b2c0a0c28cc97f1f4f88100db1173cf3/convert-unicode-sequences-to-text-string.md"],"content":"Convert Unicode sequences to normal text (letters).\n===\n\n```php\n<?php\n/**\n * Converts unicode sequences into normal letters.\n * @param string $str escaped unicode sequences\n * @return mixed converted normal string with letters.\n */\nfunction unicode2text($str)\n{\n\treturn preg_replace('/\\\\\\\\u([0-9a-z]{4})/u','&#x$1;',$str);\n}\n\n$err='\\u041d\\u0435 \\u0441\\u043e\\u043e\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0438\\u0435 \\u0441\\u043f\\u0440\\u0430\\u0432\\u043e\\u0447\\u043d\\u0438\\u043a\\u0443 \\u043e\\u0442\\u0440\\u0430\\u0441\\u043b\\u0438 \\u043d\\u0430\\u0440\\u043e\\u0434\\u043d\\u043e\\u0433\\u043e \\u0445\\u043e\\u0437\\u044f\\u0439\\u0441\\u0442\\u0432\\u0430';\n$err=unicode2text($err); // $err='Не соответствие справочнику отрасли народного хозяйства'\n```","html":"<h1 id=\"convert-unicode-sequences-to-normal-text-letters-\">Convert Unicode sequences to normal text (letters).</h1>\n<pre><code class=\"lang-php\">&lt;?php\n/**\n * Converts unicode sequences into normal letters.\n * @param string <span class=\"hljs-formula\">$str escaped unicode sequences\n * @return mixed converted normal string with letters.\n */\nfunction unicode2text($</span>str)\n{\n    return preg_replace('/<span class=\"hljs-tag\">\\<span class=\"hljs-name\">\\</span></span><span class=\"hljs-tag\">\\<span class=\"hljs-name\">\\</span></span>u([0-9a-z]{4})/u','&amp;#x<span class=\"hljs-formula\">$1;',$</span>str);\n}\n\n<span class=\"hljs-formula\">$err='<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>041d<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0435 <span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0441<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>043e<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>043e<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0442<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0432<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0435<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0442<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0441<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0442<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0432<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0438<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0435 <span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0441<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>043f<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0440<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0430<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0432<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>043e<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0447<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>043d<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0438<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>043a<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0443 <span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>043e<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0442<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0440<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0430<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0441<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>043b<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0438 <span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>043d<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0430<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0440<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>043e<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0434<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>043d<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>043e<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0433<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>043e <span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0445<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>043e<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0437<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>044f<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0439<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0441<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0442<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0432<span class=\"hljs-tag\">\\<span class=\"hljs-name\">u</span></span>0430';\n$</span>err=unicode2text(<span class=\"hljs-formula\">$err); // $</span>err='Не соответствие справочнику отрасли народного хозяйства'\n</code></pre>\n"},{"html_url":"https://gist.github.com/c5cc2038c0ed0260fba3","description":"Export data into CSV in UTF-8 encoding","files":["https://gist.githubusercontent.com/umidjons/c5cc2038c0ed0260fba3/raw/f74fca5e90b0284c261675be34651b7188f178ce/export-into-csv-utf8.md"],"content":"Export data into CSV in UTF-8 encoding\n===\n\n```php\n<?php\nclass Csver extends CComponent\n{\n\tprivate $options;\n\tprivate $fileName;\n\tprivate $url;\n\n\tfunction __construct(array $options)\n\t{\n\t\t$this->options =$options;\n\t\t$dir           ='uploads/export/'; // dir to export CSV file\n\t\t$tmpFilename   =@tempnam($dir,'export'); // create temp file\n\t\t$this->fileName=$tmpFilename.\".csv\"; // add extension\n\t\trename($tmpFilename,$this->fileName);\n\t\t$this->url=$dir.basename($this->fileName); // generate URL to download a file\n\t}\n\n\t/**\n\t * Adds special symbols to represent value as text.\n\t * @param string $val value\n\t * @return string formatted value\n\t */\n\tprivate function asText($val) { return '=\"'.$val.'\"'; }\n\n\t/**\n\t * Exports data to CSV.\n\t * @param array  $input_array data to be exported.\n\t * @param string $delimiter   delimiter, default ';'.\n\t * @param bool   $download    false - return url and path, true - force download.\n\t * @return array url and path of the generated file as [path=>xxx,url=>yyy]\n\t */\n\tpublic function export($input_array,$delimiter=';',$download=false)\n\t{\n\t\t// open temporary file\n\t\t$fp=fopen($this->fileName,'w');\n\n\t\t// write BOM into UTF-8 encoded file to properly display characters\n\t\tfwrite($fp,pack(\"CCC\",0xef,0xbb,0xbf));\n\n\t\t// convert to right encoding\n\t\tforeach($input_array as &$row)\n\t\t{\n\t\t\t$idx=0;\n\t\t\tforeach($row as $key=>$val)\n\t\t\t{\n\t\t\t\tif(is_numeric($key))\n\t\t\t\t\t$row[$key]=$this->asText($val);\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif($this->options['header'][$idx]['type']=='text')\n\t\t\t\t\t\t$row[$key]=$this->asText($row[$key]);\n\t\t\t\t}\n\t\t\t\t$idx++;\n\t\t\t}\n\t\t}\n\n\t\t// put header\n\t\tif(!empty($this->options['header']))\n\t\t{\n\t\t\t$col_keys=array_keys($input_array[0]);\n\t\t\t$idx     =0;\n\t\t\tforeach($this->options['header'] as $hdr)\n\t\t\t{\n\t\t\t\t$header[$col_keys[$idx]]=isset($hdr['title'])?$hdr['title']:'';\n\t\t\t\t$idx++;\n\t\t\t}\n\t\t\tarray_unshift($input_array,$header);\n\t\t}\n\t\t// write as CSV\n\t\tforeach($input_array as $line)\n\t\t\tfputcsv($fp,$line,$delimiter);\n\n\t\t// close file\n\t\tfclose($fp);\n\n\t\tif(!$download)\n\t\t\t// return info\n\t\t\treturn ['file'=>$this->fileName,'url'=>$this->url,];\n\t\telse\n\t\t{\n\t\t\t// open temporary file\n\t\t\t$fp=fopen($this->fileName,'rb');\n\n\t\t\t// modify header to be downloadable csv file\n\t\t\theader('Content-Type: application/csv');\n\t\t\theader('Content-Disposition: attachement; filename=\"'.basename($this->fileName).'\";');\n\n\t\t\t// Send file to browser for download\n\t\t\tfpassthru($fp);\n\t\t}\n\t}\n}\n```\n\nUsage example:\n```php\n<?php\n\nclass F\n{\n\tconst HTTP_SUCCESS=200;\n\tconst HTTP_WARNING=455;\n\tconst HTTP_ERROR  =400;\n\n\tpublic static function response($response)\n\t{\n\t\techo CJSON::encode($response);\n\t}\n\n\tpublic static function resp($code=0,$message='',$content='',$set_header=true,$force_log=false)\n\t{\n\t\tif($set_header)\n\t\t\theader('Content-Type: application/json');\n\t\t$data=['code'=>$code,'message'=>$message,'content'=>$content];\n\t\tif($force_log)\n\t\t\tYii::log('Response: '.print_r($data,true));\n\t\treturn F::response($data);\n\t}\n}\n\nclass SiteController extends CComponent\n{\n\tpublic static function remove_columns(array &$array,array $column_keys)\n\t{\n\t\tif(!empty($array) && !empty($column_keys))\n\t\t\tforeach($array as &$item)\n\t\t\t\tforeach($column_keys as $key)\n\t\t\t\t\tunset($item[$key]);\n\t}\n\n\tprivate function _export($headers,$rows,$remove_columns=[])\n\t{\n\t\tif(!empty($rows))\n\t\t{\n\t\t\t// remove unnecessary columns\n\t\t\tif(!empty($remove_columns))\n\t\t\t\tself::remove_columns($rows,$remove_columns);\n\n\t\t\t// export data into CSV file\n\t\t\t$exporter=new Csver(['header'=>$headers]);\n\t\t\t$info    =$exporter->export($rows);\n\t\t\tif(isset($info['url']))\n\t\t\t{\n\t\t\t\t$info['url']='/'.$info['url'];\n\t\t\t\treturn F::resp(F::HTTP_SUCCESS,Yii::t('zr','Данные успешно экспортированы.'),$info);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\treturn F::resp(F::HTTP_WARNING,Yii::t('zr','Нет данных'));\n\t}\n\n\tpublic function actionExport()\n\t{\n\t\t$sql    =\"select id,username,name,birthday,email from users where state=1\";\n\t\t$rows   =Yii::app()->db->createCommand($sql)->queryAll();\n\t\t$headers=[\n\t\t\t['title'=>Yii::t('zr','Код пользователя'),'type'=>'text'],\n\t\t\t['title'=>Yii::t('zr','Логин пользователя')],\n\t\t\t['title'=>Yii::t('zr','Наименование пользователя')],\n\t\t\t['title'=>Yii::t('zr','Дата рождения'),'type'=>'text'],\n\t\t\t['title'=>Yii::t('zr','Эл.почта')],\n\t\t];\n\t\treturn $this->_export($headers,$rows);\n\t}\n\n}\n```","html":"<h1 id=\"export-data-into-csv-in-utf-8-encoding\">Export data into CSV in UTF-8 encoding</h1>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Csver</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CComponent</span>\n</span>{\n    <span class=\"hljs-keyword\">private</span> $options;\n    <span class=\"hljs-keyword\">private</span> $fileName;\n    <span class=\"hljs-keyword\">private</span> $url;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__construct</span><span class=\"hljs-params\">(array $options)</span>\n    </span>{\n        <span class=\"hljs-keyword\">$this</span>-&gt;options =$options;\n        $dir           =<span class=\"hljs-string\">'uploads/export/'</span>; <span class=\"hljs-comment\">// dir to export CSV file</span>\n        $tmpFilename   =@tempnam($dir,<span class=\"hljs-string\">'export'</span>); <span class=\"hljs-comment\">// create temp file</span>\n        <span class=\"hljs-keyword\">$this</span>-&gt;fileName=$tmpFilename.<span class=\"hljs-string\">\".csv\"</span>; <span class=\"hljs-comment\">// add extension</span>\n        rename($tmpFilename,<span class=\"hljs-keyword\">$this</span>-&gt;fileName);\n        <span class=\"hljs-keyword\">$this</span>-&gt;url=$dir.basename(<span class=\"hljs-keyword\">$this</span>-&gt;fileName); <span class=\"hljs-comment\">// generate URL to download a file</span>\n    }\n\n    <span class=\"hljs-comment\">/**\n     * Adds special symbols to represent value as text.\n     * <span class=\"hljs-doctag\">@param</span> string $val value\n     * <span class=\"hljs-doctag\">@return</span> string formatted value\n     */</span>\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">asText</span><span class=\"hljs-params\">($val)</span> </span>{ <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'=\"'</span>.$val.<span class=\"hljs-string\">'\"'</span>; }\n\n    <span class=\"hljs-comment\">/**\n     * Exports data to CSV.\n     * <span class=\"hljs-doctag\">@param</span> array  $input_array data to be exported.\n     * <span class=\"hljs-doctag\">@param</span> string $delimiter   delimiter, default ';'.\n     * <span class=\"hljs-doctag\">@param</span> bool   $download    false - return url and path, true - force download.\n     * <span class=\"hljs-doctag\">@return</span> array url and path of the generated file as [path=&gt;xxx,url=&gt;yyy]\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">export</span><span class=\"hljs-params\">($input_array,$delimiter=<span class=\"hljs-string\">';'</span>,$download=false)</span>\n    </span>{\n        <span class=\"hljs-comment\">// open temporary file</span>\n        $fp=fopen(<span class=\"hljs-keyword\">$this</span>-&gt;fileName,<span class=\"hljs-string\">'w'</span>);\n\n        <span class=\"hljs-comment\">// write BOM into UTF-8 encoded file to properly display characters</span>\n        fwrite($fp,pack(<span class=\"hljs-string\">\"CCC\"</span>,<span class=\"hljs-number\">0xef</span>,<span class=\"hljs-number\">0xbb</span>,<span class=\"hljs-number\">0xbf</span>));\n\n        <span class=\"hljs-comment\">// convert to right encoding</span>\n        <span class=\"hljs-keyword\">foreach</span>($input_array <span class=\"hljs-keyword\">as</span> &amp;$row)\n        {\n            $idx=<span class=\"hljs-number\">0</span>;\n            <span class=\"hljs-keyword\">foreach</span>($row <span class=\"hljs-keyword\">as</span> $key=&gt;$val)\n            {\n                <span class=\"hljs-keyword\">if</span>(is_numeric($key))\n                    $row[$key]=<span class=\"hljs-keyword\">$this</span>-&gt;asText($val);\n                <span class=\"hljs-keyword\">else</span>\n                {\n                    <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">$this</span>-&gt;options[<span class=\"hljs-string\">'header'</span>][$idx][<span class=\"hljs-string\">'type'</span>]==<span class=\"hljs-string\">'text'</span>)\n                        $row[$key]=<span class=\"hljs-keyword\">$this</span>-&gt;asText($row[$key]);\n                }\n                $idx++;\n            }\n        }\n\n        <span class=\"hljs-comment\">// put header</span>\n        <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">empty</span>(<span class=\"hljs-keyword\">$this</span>-&gt;options[<span class=\"hljs-string\">'header'</span>]))\n        {\n            $col_keys=array_keys($input_array[<span class=\"hljs-number\">0</span>]);\n            $idx     =<span class=\"hljs-number\">0</span>;\n            <span class=\"hljs-keyword\">foreach</span>(<span class=\"hljs-keyword\">$this</span>-&gt;options[<span class=\"hljs-string\">'header'</span>] <span class=\"hljs-keyword\">as</span> $hdr)\n            {\n                $header[$col_keys[$idx]]=<span class=\"hljs-keyword\">isset</span>($hdr[<span class=\"hljs-string\">'title'</span>])?$hdr[<span class=\"hljs-string\">'title'</span>]:<span class=\"hljs-string\">''</span>;\n                $idx++;\n            }\n            array_unshift($input_array,$header);\n        }\n        <span class=\"hljs-comment\">// write as CSV</span>\n        <span class=\"hljs-keyword\">foreach</span>($input_array <span class=\"hljs-keyword\">as</span> $line)\n            fputcsv($fp,$line,$delimiter);\n\n        <span class=\"hljs-comment\">// close file</span>\n        fclose($fp);\n\n        <span class=\"hljs-keyword\">if</span>(!$download)\n            <span class=\"hljs-comment\">// return info</span>\n            <span class=\"hljs-keyword\">return</span> [<span class=\"hljs-string\">'file'</span>=&gt;<span class=\"hljs-keyword\">$this</span>-&gt;fileName,<span class=\"hljs-string\">'url'</span>=&gt;<span class=\"hljs-keyword\">$this</span>-&gt;url,];\n        <span class=\"hljs-keyword\">else</span>\n        {\n            <span class=\"hljs-comment\">// open temporary file</span>\n            $fp=fopen(<span class=\"hljs-keyword\">$this</span>-&gt;fileName,<span class=\"hljs-string\">'rb'</span>);\n\n            <span class=\"hljs-comment\">// modify header to be downloadable csv file</span>\n            header(<span class=\"hljs-string\">'Content-Type: application/csv'</span>);\n            header(<span class=\"hljs-string\">'Content-Disposition: attachement; filename=\"'</span>.basename(<span class=\"hljs-keyword\">$this</span>-&gt;fileName).<span class=\"hljs-string\">'\";'</span>);\n\n            <span class=\"hljs-comment\">// Send file to browser for download</span>\n            fpassthru($fp);\n        }\n    }\n}</span>\n</code></pre>\n<p>Usage example:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">F</span>\n</span>{\n    <span class=\"hljs-keyword\">const</span> HTTP_SUCCESS=<span class=\"hljs-number\">200</span>;\n    <span class=\"hljs-keyword\">const</span> HTTP_WARNING=<span class=\"hljs-number\">455</span>;\n    <span class=\"hljs-keyword\">const</span> HTTP_ERROR  =<span class=\"hljs-number\">400</span>;\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">response</span><span class=\"hljs-params\">($response)</span>\n    </span>{\n        <span class=\"hljs-keyword\">echo</span> CJSON::encode($response);\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">resp</span><span class=\"hljs-params\">($code=<span class=\"hljs-number\">0</span>,$message=<span class=\"hljs-string\">''</span>,$content=<span class=\"hljs-string\">''</span>,$set_header=true,$force_log=false)</span>\n    </span>{\n        <span class=\"hljs-keyword\">if</span>($set_header)\n            header(<span class=\"hljs-string\">'Content-Type: application/json'</span>);\n        $data=[<span class=\"hljs-string\">'code'</span>=&gt;$code,<span class=\"hljs-string\">'message'</span>=&gt;$message,<span class=\"hljs-string\">'content'</span>=&gt;$content];\n        <span class=\"hljs-keyword\">if</span>($force_log)\n            Yii::log(<span class=\"hljs-string\">'Response: '</span>.print_r($data,<span class=\"hljs-keyword\">true</span>));\n        <span class=\"hljs-keyword\">return</span> F::response($data);\n    }\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SiteController</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CComponent</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">remove_columns</span><span class=\"hljs-params\">(array &amp;$array,array $column_keys)</span>\n    </span>{\n        <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">empty</span>($array) &amp;&amp; !<span class=\"hljs-keyword\">empty</span>($column_keys))\n            <span class=\"hljs-keyword\">foreach</span>($array <span class=\"hljs-keyword\">as</span> &amp;$item)\n                <span class=\"hljs-keyword\">foreach</span>($column_keys <span class=\"hljs-keyword\">as</span> $key)\n                    <span class=\"hljs-keyword\">unset</span>($item[$key]);\n    }\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_export</span><span class=\"hljs-params\">($headers,$rows,$remove_columns=[])</span>\n    </span>{\n        <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">empty</span>($rows))\n        {\n            <span class=\"hljs-comment\">// remove unnecessary columns</span>\n            <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">empty</span>($remove_columns))\n                <span class=\"hljs-keyword\">self</span>::remove_columns($rows,$remove_columns);\n\n            <span class=\"hljs-comment\">// export data into CSV file</span>\n            $exporter=<span class=\"hljs-keyword\">new</span> Csver([<span class=\"hljs-string\">'header'</span>=&gt;$headers]);\n            $info    =$exporter-&gt;export($rows);\n            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>($info[<span class=\"hljs-string\">'url'</span>]))\n            {\n                $info[<span class=\"hljs-string\">'url'</span>]=<span class=\"hljs-string\">'/'</span>.$info[<span class=\"hljs-string\">'url'</span>];\n                <span class=\"hljs-keyword\">return</span> F::resp(F::HTTP_SUCCESS,Yii::t(<span class=\"hljs-string\">'zr'</span>,<span class=\"hljs-string\">'Данные успешно экспортированы.'</span>),$info);\n            }\n        }\n        <span class=\"hljs-keyword\">else</span>\n            <span class=\"hljs-keyword\">return</span> F::resp(F::HTTP_WARNING,Yii::t(<span class=\"hljs-string\">'zr'</span>,<span class=\"hljs-string\">'Нет данных'</span>));\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">actionExport</span><span class=\"hljs-params\">()</span>\n    </span>{\n        $sql    =<span class=\"hljs-string\">\"select id,username,name,birthday,email from users where state=1\"</span>;\n        $rows   =Yii::app()-&gt;db-&gt;createCommand($sql)-&gt;queryAll();\n        $headers=[\n            [<span class=\"hljs-string\">'title'</span>=&gt;Yii::t(<span class=\"hljs-string\">'zr'</span>,<span class=\"hljs-string\">'Код пользователя'</span>),<span class=\"hljs-string\">'type'</span>=&gt;<span class=\"hljs-string\">'text'</span>],\n            [<span class=\"hljs-string\">'title'</span>=&gt;Yii::t(<span class=\"hljs-string\">'zr'</span>,<span class=\"hljs-string\">'Логин пользователя'</span>)],\n            [<span class=\"hljs-string\">'title'</span>=&gt;Yii::t(<span class=\"hljs-string\">'zr'</span>,<span class=\"hljs-string\">'Наименование пользователя'</span>)],\n            [<span class=\"hljs-string\">'title'</span>=&gt;Yii::t(<span class=\"hljs-string\">'zr'</span>,<span class=\"hljs-string\">'Дата рождения'</span>),<span class=\"hljs-string\">'type'</span>=&gt;<span class=\"hljs-string\">'text'</span>],\n            [<span class=\"hljs-string\">'title'</span>=&gt;Yii::t(<span class=\"hljs-string\">'zr'</span>,<span class=\"hljs-string\">'Эл.почта'</span>)],\n        ];\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">$this</span>-&gt;_export($headers,$rows);\n    }\n\n}</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/a54b35dc9d3974a318b1","description":"Clone/copy javascript object (not DOM object)","files":["https://gist.githubusercontent.com/umidjons/a54b35dc9d3974a318b1/raw/93692d9bf91e83afb2115bc0fc56f4eaaf7c7b65/clone-copy-js-object.md"],"content":"Clone/copy javascript object (not DOM object)\n===\n\nNote that the .clone() method in jQuery only clones DOM elements.\nIn order to clone JavaScript objects, you can do:\n\n```javascript\n// Shallow copy\nvar newObject = jQuery.extend({}, oldObject);\n\n// Deep copy\nvar newObject = jQuery.extend(true, {}, oldObject);\n```\n\nOriginal answer is [here](http://stackoverflow.com/a/122704).","html":"<h1 id=\"clone-copy-javascript-object-not-dom-object-\">Clone/copy javascript object (not DOM object)</h1>\n<p>Note that the .clone() method in jQuery only clones DOM elements.\nIn order to clone JavaScript objects, you can do:</p>\n<pre><code class=\"lang-javascript\">// Shallow <span class=\"hljs-keyword\">copy</span><span class=\"bash\">\nvar newObject = jQuery.extend({}, oldObject);\n</span>\n// Deep <span class=\"hljs-keyword\">copy</span><span class=\"bash\">\nvar newObject = jQuery.extend(<span class=\"hljs-literal\">true</span>, {}, oldObject);</span>\n</code></pre>\n<p>Original answer is <a href=\"http://stackoverflow.com/a/122704\">here</a>.</p>\n"},{"html_url":"https://gist.github.com/911a258d0e6aa52a8b03","description":"Replace TAB with SPACE using RegExp","files":["https://gist.githubusercontent.com/umidjons/911a258d0e6aa52a8b03/raw/05f89c7bbb54a2c21ffe8ee468185f955852144a/replace-tabs-to-spaces.md"],"content":"Replace TAB with SPACE using RegExp\n===\n\nFind rows which contains TAB.\n```sql\nselect t.object_code, t.my_col, regexp_replace(t.my_col,'('||chr(9)||')+',' ') my_col_wo_tab \nfrom my_table t\nwhere regexp_like(t.my_col,'('||chr(9)||')+')\n```\n\nReplace TABs to SPACE.\n```sql\nupdate my_table\nset my_col=trim(regexp_replace(my_col,'('||chr(9)||')+',' '))\nwhere regexp_like(my_col,'('||chr(9)||')+')\n```","html":"<h1 id=\"replace-tab-with-space-using-regexp\">Replace TAB with SPACE using RegExp</h1>\n<p>Find rows which contains TAB.</p>\n<pre><code class=\"lang-sql\"><span class=\"hljs-keyword\">select</span> t.object_code, t.my_col, regexp_replace(t.my_col,<span class=\"hljs-string\">'('</span>||<span class=\"hljs-keyword\">chr</span>(<span class=\"hljs-number\">9</span>)||<span class=\"hljs-string\">')+'</span>,<span class=\"hljs-string\">' '</span>) my_col_wo_tab \n<span class=\"hljs-keyword\">from</span> my_table t\n<span class=\"hljs-keyword\">where</span> <span class=\"hljs-keyword\">regexp_like</span>(t.my_col,<span class=\"hljs-string\">'('</span>||<span class=\"hljs-keyword\">chr</span>(<span class=\"hljs-number\">9</span>)||<span class=\"hljs-string\">')+'</span>)\n</code></pre>\n<p>Replace TABs to SPACE.</p>\n<pre><code class=\"lang-sql\"><span class=\"hljs-keyword\">update</span> my_table\n<span class=\"hljs-keyword\">set</span> my_col=<span class=\"hljs-keyword\">trim</span>(regexp_replace(my_col,<span class=\"hljs-string\">'('</span>||<span class=\"hljs-keyword\">chr</span>(<span class=\"hljs-number\">9</span>)||<span class=\"hljs-string\">')+'</span>,<span class=\"hljs-string\">' '</span>))\n<span class=\"hljs-keyword\">where</span> <span class=\"hljs-keyword\">regexp_like</span>(my_col,<span class=\"hljs-string\">'('</span>||<span class=\"hljs-keyword\">chr</span>(<span class=\"hljs-number\">9</span>)||<span class=\"hljs-string\">')+'</span>)\n</code></pre>\n"},{"html_url":"https://gist.github.com/ab3b364cb282537bc493","description":"Overwrite email validation","files":["https://gist.githubusercontent.com/umidjons/ab3b364cb282537bc493/raw/e4318c03368dacb95fbac154af4b02b7dbdc7d00/custom-email-validation-angularjs.md"],"content":"Overwrite email validation\n===\n\n```html\n<script src=\"js/jquery.min.js\"></script>\n<script src=\"js/angular.min.js\"></script>\n<script src=\"js/angular-messages.min.js\"></script>\n<script>\n\tangular.module('App',['ngMessages'])\n\t\t.directive('myEmail',function(){\n\t\t\tvar EMAIL_REGEXP=/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,6}$/i; // custom regexp is here\n\t\t\treturn {\n\t\t\t\trequire :'ngModel',\n\t\t\t\trestrict:'A',\n\t\t\t\tlink    :function(scope,elm,attrs,ctrl){\n\t\t\t\t\tif(ctrl && ctrl.$validators.email){\n\t\t\t\t\t\tctrl.$validators.email=function(modelValue){\n\t\t\t\t\t\t\treturn ctrl.$isEmpty(modelValue) || EMAIL_REGEXP.test(modelValue);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t})\n\t\t.controller('MyCtrl',function($scope){});\n</script>\n\n<div ng-app=\"App\" ng-controller=\"MyCtrl\">\n\t<form name=\"myform\">\n\t\t<div class=\"col-sm-3\">\n\t\t\t<label>Email</label>\n\t\t\t<input name=\"userEmail\" ng-model=\"user.email\" maxlength=\"50\" class=\"form-control\" type=\"email\" my-email required>\n\t\t\t<div ng-messages=\"myform.userEmail.$error\" class=\"text-danger\">\n\t\t\t\t<div ng-message=\"required\">Please, enter your email address.</div>\n\t\t\t\t<div ng-message=\"email\">Specified email address is invalid.</div>\n\t\t\t</div>\n\t\t</div>\n\t</form>\n</div>\n```","html":"<h1 id=\"overwrite-email-validation\">Overwrite email validation</h1>\n<pre><code class=\"lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"js/jquery.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"js/angular.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"js/angular-messages.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    angular.module(<span class=\"hljs-string\">'App'</span>,[<span class=\"hljs-string\">'ngMessages'</span>])\n        .directive(<span class=\"hljs-string\">'myEmail'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n            <span class=\"hljs-keyword\">var</span> EMAIL_REGEXP=<span class=\"hljs-regexp\">/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,6}$/i</span>; <span class=\"hljs-comment\">// custom regexp is here</span>\n            <span class=\"hljs-keyword\">return</span> {\n                <span class=\"hljs-attr\">require</span> :<span class=\"hljs-string\">'ngModel'</span>,\n                <span class=\"hljs-attr\">restrict</span>:<span class=\"hljs-string\">'A'</span>,\n                <span class=\"hljs-attr\">link</span>    :<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">scope,elm,attrs,ctrl</span>)</span>{\n                    <span class=\"hljs-keyword\">if</span>(ctrl &amp;&amp; ctrl.$validators.email){\n                        ctrl.$validators.email=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">modelValue</span>)</span>{\n                            <span class=\"hljs-keyword\">return</span> ctrl.$isEmpty(modelValue) || EMAIL_REGEXP.test(modelValue);\n                        };\n                    }\n                }\n            };\n        })\n        .controller(<span class=\"hljs-string\">'MyCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">$scope</span>)</span>{});\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-app</span>=<span class=\"hljs-string\">\"App\"</span> <span class=\"hljs-attr\">ng-controller</span>=<span class=\"hljs-string\">\"MyCtrl\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"myform\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-3\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Email<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"userEmail\"</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"user.email\"</span> <span class=\"hljs-attr\">maxlength</span>=<span class=\"hljs-string\">\"50\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-control\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"email\"</span> <span class=\"hljs-attr\">my-email</span> <span class=\"hljs-attr\">required</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-messages</span>=<span class=\"hljs-string\">\"myform.userEmail.$error\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"text-danger\"</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-message</span>=<span class=\"hljs-string\">\"required\"</span>&gt;</span>Please, enter your email address.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-message</span>=<span class=\"hljs-string\">\"email\"</span>&gt;</span>Specified email address is invalid.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/0693e138267062f2b929","description":"Run only one copy of the bash script example","files":["https://gist.githubusercontent.com/umidjons/0693e138267062f2b929/raw/2bb974534c3f867351fa4e439014f86f9e4dc79c/only-one-script-run.md"],"content":"Run only one copy of the bash script example\n===\n\n`MailSender.php` is long running task. Only one instance of the script must\nbe run at a same time. To prevent executing parallel script instances we can\nuse `flock` utility tool.\n\nCrontab entry:\n```bash\n* * * * * /bin/bash /u01/project/local/jobs/MailSender.sh\n```\n\n`MailSender.sh` script content:\n\n```bash\n#!/bin/bash\n\n# variables\nNAME=\"MailSender\"\nJOBS_PATH=/u01/project/local/jobs\nSCRIPT_FILE=\"$JOBS_PATH/src/$NAME.php\"\nLOG_FILE=\"$JOBS_PATH/log/$NAME.log\"\nLOCK_FILE=\"$JOBS_PATH/$NAME.lock\"\nCONFIG_FILE=\"$JOBS_PATH/Config.sh\"\n\n# initialize environment\nsource $CONFIG_FILE\n\n# run task\n/usr/bin/flock -n $LOCK_FILE /usr/bin/php -f $SCRIPT_FILE >> $LOG_FILE 2>&1\n#----flock------------------|----command-----------------------------------|\n```\n\n`Config.sh` content:\n\n```bash\n#!/bin/bash\n\n# User specific environment and startup programs\nexport ORACLE_BASE=/usr/lib/oracle/11.2\nexport ORACLE_HOME=$ORACLE_BASE/client\nexport TNS_ADMIN=$ORACLE_HOME/network\nexport NLS_LANG=AMERICAN_AMERICA.AL32UTF8\nexport NLS_DATE_FORMAT=\"DD.MM.YYYY HH24:MI:SS\"\nexport PATH=$PATH:$ORACLE_HOME/bin\nexport LD_LIBRARY_PATH=$ORACLE_HOME/lib\n\nPATH=$PATH:$HOME/bin:$ORACLE_HOME/bin\nexport PATH\n```","html":"<h1 id=\"run-only-one-copy-of-the-bash-script-example\">Run only one copy of the bash script example</h1>\n<p><code>MailSender.php</code> is long running task. Only one instance of the script must\nbe run at a same time. To prevent executing parallel script instances we can\nuse <code>flock</code> utility tool.</p>\n<p>Crontab entry:</p>\n<pre><code class=\"lang-bash\">* * * * * <span class=\"hljs-regexp\">/bin/</span>bash <span class=\"hljs-regexp\">/u01/</span><span class=\"hljs-keyword\">project</span><span class=\"hljs-regexp\">/local/</span>jobs<span class=\"hljs-regexp\">/MailSender.sh</span>\n</code></pre>\n<p><code>MailSender.sh</code> script content:</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-meta\">#!/bin/bash\n</span>\n<span class=\"hljs-comment\"># variables</span>\nNAME=<span class=\"hljs-string\">\"MailSender\"</span>\nJOBS_PATH=/u01/project/<span class=\"hljs-built_in\">local</span>/<span class=\"hljs-built_in\">jobs</span>\nSCRIPT_FILE=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">$JOBS_PATH</span>/src/<span class=\"hljs-variable\">$NAME</span>.php\"</span>\nLOG_FILE=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">$JOBS_PATH</span>/log/<span class=\"hljs-variable\">$NAME</span>.log\"</span>\nLOCK_FILE=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">$JOBS_PATH</span>/<span class=\"hljs-variable\">$NAME</span>.lock\"</span>\nCONFIG_FILE=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">$JOBS_PATH</span>/Config.sh\"</span>\n\n<span class=\"hljs-comment\"># initialize environment</span>\n<span class=\"hljs-built_in\">source</span> <span class=\"hljs-variable\">$CONFIG_FILE</span>\n\n<span class=\"hljs-comment\"># run task</span>\n/usr/bin/flock -n <span class=\"hljs-variable\">$LOCK_FILE</span> /usr/bin/php <span class=\"hljs-_\">-f</span> <span class=\"hljs-variable\">$SCRIPT_FILE</span> &gt;&gt; <span class=\"hljs-variable\">$LOG_FILE</span> 2&gt;&amp;1\n<span class=\"hljs-comment\">#----flock------------------|----command-----------------------------------|</span>\n</code></pre>\n<p><code>Config.sh</code> content:</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-meta\">#!/bin/bash\n</span>\n<span class=\"hljs-comment\"># User specific environment and startup programs</span>\n<span class=\"hljs-built_in\">export</span> ORACLE_BASE=/usr/lib/oracle/11.2\n<span class=\"hljs-built_in\">export</span> ORACLE_HOME=<span class=\"hljs-variable\">$ORACLE_BASE</span>/client\n<span class=\"hljs-built_in\">export</span> TNS_ADMIN=<span class=\"hljs-variable\">$ORACLE_HOME</span>/network\n<span class=\"hljs-built_in\">export</span> NLS_LANG=AMERICAN_AMERICA.AL32UTF8\n<span class=\"hljs-built_in\">export</span> NLS_DATE_FORMAT=<span class=\"hljs-string\">\"DD.MM.YYYY HH24:MI:SS\"</span>\n<span class=\"hljs-built_in\">export</span> PATH=<span class=\"hljs-variable\">$PATH</span>:<span class=\"hljs-variable\">$ORACLE_HOME</span>/bin\n<span class=\"hljs-built_in\">export</span> LD_LIBRARY_PATH=<span class=\"hljs-variable\">$ORACLE_HOME</span>/lib\n\nPATH=<span class=\"hljs-variable\">$PATH</span>:<span class=\"hljs-variable\">$HOME</span>/bin:<span class=\"hljs-variable\">$ORACLE_HOME</span>/bin\n<span class=\"hljs-built_in\">export</span> PATH\n</code></pre>\n"},{"html_url":"https://gist.github.com/0bfc9dd7bb9a8d7f1725","description":"cURL example","files":["https://gist.githubusercontent.com/umidjons/0bfc9dd7bb9a8d7f1725/raw/576f4132393c3ef6d250cdea1f6cc852fdcb12c9/curl-example.md"],"content":"cURL example\n===\n\n```bash\ncurl -v -G -k --user myuser:mypassword -H \"Cache-Control: no-cache\" -H \"Content-Type: application/json;charset=UTF-8\" \"https://100.150.52.178:2009/ws/myapi\" --data-urlencode 'params={\"action\":\"func1\",\"id\":\"200547089\"}' -w \"\\n\"\n```\n\n`-v` - verbose\n\n`-k` - do not verify SSL\n\n`--user login:password` - basic authorization info\n\n`--data-urlencode 'some data'` - URL encode given data\n\n`-G` - append URL encoded data to the URL\n\n`-w \"\\n\"` put new line after command output\n\n\nOutput:\n```\n* About to connect() to 100.150.52.178 port 2009 (#0)\n*   Trying 100.150.52.178... connected\n* Connected to 100.150.52.178 (100.150.52.178) port 2009 (#0)\n* Initializing NSS with certpath: sql:/etc/pki/nssdb\n* warning: ignoring value of ssl.verifyhost\n* skipping SSL peer certificate verification\n* SSL connection using TLS_DHE_RSA_WITH_AES_256_CBC_SHA\n* Server certificate:\n* \tsubject: CN=*.mysite.uz,OU=COMODO SSL Wildcard,OU=Domain Control Validated\n* \tstart date: Nov 28 00:00:00 2014 GMT\n* \texpire date: Nov 28 23:59:59 2018 GMT\n* \tcommon name: *.mysite.uz\n* \tissuer: CN=COMODO RSA Domain Validation Secure Server CA,O=COMODO CA Limited,L=Salford,ST=Greater Manchester,C=GB\n* Server auth using Basic with user 'myuser'\n> GET /ws/myapy?params=%7B%22action%22%3A%22func1%22%2C%22id%22%3A%22200547089%22%7D HTTP/1.1\n> Authorization: Basic emFscmV2c7RyOnoxMjUzciQ=\n> User-Agent: curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.16.2.3 Basic ECC zlib/1.2.3 libidn/1.18 libssh2/1.4.2\n> Host: 100.150.52.178:2009\n> Accept: */*\n> Cache-control: no-cache\n> Content-Type: application/json;charset=UTF-8\n> \n< HTTP/1.1 200 OK\n< Server: nginx/1.6.2\n< Date: Fri, 05 Jun 2015 11:21:13 GMT\n< Content-Type: application/json;charset=UTF-8\n< Content-Length: 176\n< Connection: keep-alive\n< Cache-Control: no-cache\n< \n* Connection #0 to host 100.150.52.178 left intact\n{\"err_code\":\"0\",\"err_text\":\"ok\",\"root\":[{\"region\":\"tashkent\",\"status\":\"active\",\"name\":\"Jhon Doe\"}]}\n* Closing connection #0\n\n```","html":"<h1 id=\"curl-example\">cURL example</h1>\n<pre><code class=\"lang-bash\">curl -v -G -k --<span class=\"hljs-keyword\">user</span> <span class=\"hljs-title\">myuser</span>:mypassword -H <span class=\"hljs-string\">\"Cache-Control: no-cache\"</span> -H <span class=\"hljs-string\">\"Content-Type: application/json;charset=UTF-8\"</span> <span class=\"hljs-string\">\"https://100.150.52.178:2009/ws/myapi\"</span> --data-urlencode '<span class=\"hljs-attr\">params=</span>{<span class=\"hljs-string\">\"action\"</span>:<span class=\"hljs-string\">\"func1\"</span>,<span class=\"hljs-string\">\"id\"</span>:<span class=\"hljs-string\">\"200547089\"</span>}' -w <span class=\"hljs-string\">\"\\n\"</span>\n</code></pre>\n<p><code>-v</code> - verbose</p>\n<p><code>-k</code> - do not verify SSL</p>\n<p><code>--user login:password</code> - basic authorization info</p>\n<p><code>--data-urlencode &#39;some data&#39;</code> - URL encode given data</p>\n<p><code>-G</code> - append URL encoded data to the URL</p>\n<p><code>-w &quot;\\n&quot;</code> put new line after command output</p>\n<p>Output:</p>\n<pre><code>* About to connect() to <span class=\"hljs-number\">100.150</span><span class=\"hljs-meta\">.52</span><span class=\"hljs-meta\">.178</span> port <span class=\"hljs-number\">2009</span> (#<span class=\"hljs-number\">0</span>)\n*   Trying <span class=\"hljs-number\">100.150</span><span class=\"hljs-meta\">.52</span><span class=\"hljs-meta\">.178</span>... connected\n* Connected to <span class=\"hljs-number\">100.150</span><span class=\"hljs-meta\">.52</span><span class=\"hljs-meta\">.178</span> (<span class=\"hljs-number\">100.150</span><span class=\"hljs-meta\">.52</span><span class=\"hljs-meta\">.178</span>) port <span class=\"hljs-number\">2009</span> (#<span class=\"hljs-number\">0</span>)\n* Initializing NSS with certpath: sql:/etc/pki/nssdb\n* warning: ignoring value of ssl.verifyhost\n* skipping SSL peer certificate verification\n* SSL connection using TLS_DHE_RSA_WITH_AES_256_CBC_SHA\n* Server certificate:\n*     subject: CN=*.mysite.uz,OU=COMODO SSL Wildcard,OU=Domain Control Validated\n*     start date: Nov <span class=\"hljs-number\">28</span> <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span> <span class=\"hljs-number\">2014</span> GMT\n*     expire date: Nov <span class=\"hljs-number\">28</span> <span class=\"hljs-number\">23</span>:<span class=\"hljs-number\">59</span>:<span class=\"hljs-number\">59</span> <span class=\"hljs-number\">2018</span> GMT\n*     <span class=\"hljs-meta\">common</span> name: *.mysite.uz\n*     issuer: CN=COMODO RSA Domain Validation Secure Server CA,O=COMODO CA Limited,L=Salford,<span class=\"hljs-built_in\">ST</span>=Greater Manchester,C=GB\n* Server auth using Basic with user <span class=\"hljs-string\">'myuser'</span>\n&gt; GET /ws/myapy?params=<span class=\"hljs-subst\">%7</span>B<span class=\"hljs-subst\">%22</span>action<span class=\"hljs-subst\">%22</span><span class=\"hljs-subst\">%3</span>A<span class=\"hljs-subst\">%22</span>func1<span class=\"hljs-subst\">%22</span><span class=\"hljs-subst\">%2</span>C<span class=\"hljs-subst\">%22</span>id<span class=\"hljs-subst\">%22</span><span class=\"hljs-subst\">%3</span>A<span class=\"hljs-subst\">%22200547089</span><span class=\"hljs-subst\">%22</span><span class=\"hljs-subst\">%7</span>D HTTP/<span class=\"hljs-number\">1.1</span>\n&gt; Authorization: Basic emFscmV2c7RyOnoxMjUzciQ=\n&gt; User-Agent: curl/<span class=\"hljs-number\">7.19</span><span class=\"hljs-meta\">.7</span> (x86_64-redhat-linux-gnu) libcurl/<span class=\"hljs-number\">7.19</span><span class=\"hljs-meta\">.7</span> NSS/<span class=\"hljs-number\">3.16</span><span class=\"hljs-meta\">.2</span><span class=\"hljs-meta\">.3</span> Basic ECC zlib/<span class=\"hljs-number\">1.2</span><span class=\"hljs-meta\">.3</span> libidn/<span class=\"hljs-number\">1.18</span> libssh2/<span class=\"hljs-number\">1.4</span><span class=\"hljs-meta\">.2</span>\n&gt; Host: <span class=\"hljs-number\">100.150</span><span class=\"hljs-meta\">.52</span><span class=\"hljs-meta\">.178</span>:<span class=\"hljs-number\">2009</span>\n&gt; Accept: */*\n&gt; Cache-control: no-cache\n&gt; Content-Type: application/json<span class=\"hljs-comment\">;charset=UTF-8</span>\n&gt; \n&lt; HTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">200</span> OK\n&lt; Server: nginx/<span class=\"hljs-number\">1.6</span><span class=\"hljs-meta\">.2</span>\n&lt; Date: Fri, <span class=\"hljs-number\">05</span> Jun <span class=\"hljs-number\">2015</span> <span class=\"hljs-number\">11</span>:<span class=\"hljs-number\">21</span>:<span class=\"hljs-number\">13</span> GMT\n&lt; Content-Type: application/json<span class=\"hljs-comment\">;charset=UTF-8</span>\n&lt; Content-Length: <span class=\"hljs-number\">176</span>\n&lt; Connection: keep-alive\n&lt; Cache-Control: no-cache\n&lt; \n* Connection #<span class=\"hljs-number\">0</span> to host <span class=\"hljs-number\">100.150</span><span class=\"hljs-meta\">.52</span><span class=\"hljs-meta\">.178</span> left intact\n{<span class=\"hljs-string\">\"err_code\"</span>:<span class=\"hljs-string\">\"0\"</span>,<span class=\"hljs-string\">\"err_text\"</span>:<span class=\"hljs-string\">\"ok\"</span>,<span class=\"hljs-string\">\"root\"</span>:[{<span class=\"hljs-string\">\"region\"</span>:<span class=\"hljs-string\">\"tashkent\"</span>,<span class=\"hljs-string\">\"status\"</span>:<span class=\"hljs-string\">\"active\"</span>,<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"Jhon Doe\"</span>}]}\n* Closing connection #<span class=\"hljs-number\">0</span>\n</code></pre>"},{"html_url":"https://gist.github.com/4c2092b520ca32b40202","description":"Catch fatal errors (Oracle/PLSQL errors) in Yii for specific controller","files":["https://gist.githubusercontent.com/umidjons/4c2092b520ca32b40202/raw/1d9a962bb3b79c2f8bbb3e944bc8b29da0310cea/catch-fatal-errors-in-yii.md"],"content":"Catch fatal errors (Oracle/PLSQL errors) in Yii for specific controller\n===\n\nIn this controller any fatal errors will be caught and checked for `PLS-NNNNNN`\nor `ORA-NNNNN`, if match found error text will be returned as JSON.\n\n```php\n<?php\nclass RecordController extends Controller\n{\n\tpublic function init()\n\t{\n\t\tparent::init();\n\t\tYii::app()->attachEventHandler('onError',[$this,'handleError']);\n\t}\n\n\tpublic function handleError(CEvent $event)\n\t{\n\t\tYii::log('IS AJAX: '.print_r(Yii::app()->request->isAjaxRequest,true));\n\t\tYii::log('EVENT: '.print_r($event,true));\n\n\t\t//--< handle OCI errors >--\n\t\tif($event instanceof CErrorEvent && Yii::app()->request->isAjaxRequest)\n\t\t{\n\t\t\t$res=preg_match('/(PLS-\\d+):\\s(.*)/',$event->message,$matches);\n\t\t\tif($res)\n\t\t\t\tF::resp(F::HTTP_ERROR,$matches[2]);\n\t\t\telse\n\t\t\t{\n\t\t\t\t$res=preg_match('/(ORA-\\d+):\\s(.*)/',$event->message,$matches);\n\t\t\t\tif($res)\n\t\t\t\t\tF::resp(F::HTTP_ERROR,$matches[2]);\n\t\t\t}\n\t\t\t$event->handled=!!$res;\n\t\t}\n\t\t//--< handle OCI errors />--\n\t}\n}\n```\n\n`F.class.php` implementation:\n\n```php\n<?php\nclass F\n{\n\tconst HTTP_SUCCESS=200;\n\tconst HTTP_WARNING=455;\n\tconst HTTP_ERROR=400;\n\n\tpublic static function response($response)\n\t{\n\t\techo CJSON::encode($response);\n\t}\n\n\tpublic static function resp($code=0,$message='',$content='')\n\t{\n\t\treturn F::response(['code'=>$code,'message'=>$message,'content'=>$content]);\n\t}\n}\n```","html":"<h1 id=\"catch-fatal-errors-oracle-plsql-errors-in-yii-for-specific-controller\">Catch fatal errors (Oracle/PLSQL errors) in Yii for specific controller</h1>\n<p>In this controller any fatal errors will be caught and checked for <code>PLS-NNNNNN</code>\nor <code>ORA-NNNNN</code>, if match found error text will be returned as JSON.</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">RecordController</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Controller</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">init</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">parent</span>::init();\n        Yii::app()-&gt;attachEventHandler(<span class=\"hljs-string\">'onError'</span>,[<span class=\"hljs-keyword\">$this</span>,<span class=\"hljs-string\">'handleError'</span>]);\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">handleError</span><span class=\"hljs-params\">(CEvent $event)</span>\n    </span>{\n        Yii::log(<span class=\"hljs-string\">'IS AJAX: '</span>.print_r(Yii::app()-&gt;request-&gt;isAjaxRequest,<span class=\"hljs-keyword\">true</span>));\n        Yii::log(<span class=\"hljs-string\">'EVENT: '</span>.print_r($event,<span class=\"hljs-keyword\">true</span>));\n\n        <span class=\"hljs-comment\">//--&lt; handle OCI errors &gt;--</span>\n        <span class=\"hljs-keyword\">if</span>($event <span class=\"hljs-keyword\">instanceof</span> CErrorEvent &amp;&amp; Yii::app()-&gt;request-&gt;isAjaxRequest)\n        {\n            $res=preg_match(<span class=\"hljs-string\">'/(PLS-\\d+):\\s(.*)/'</span>,$event-&gt;message,$matches);\n            <span class=\"hljs-keyword\">if</span>($res)\n                F::resp(F::HTTP_ERROR,$matches[<span class=\"hljs-number\">2</span>]);\n            <span class=\"hljs-keyword\">else</span>\n            {\n                $res=preg_match(<span class=\"hljs-string\">'/(ORA-\\d+):\\s(.*)/'</span>,$event-&gt;message,$matches);\n                <span class=\"hljs-keyword\">if</span>($res)\n                    F::resp(F::HTTP_ERROR,$matches[<span class=\"hljs-number\">2</span>]);\n            }\n            $event-&gt;handled=!!$res;\n        }\n        <span class=\"hljs-comment\">//--&lt; handle OCI errors /&gt;--</span>\n    }\n}</span>\n</code></pre>\n<p><code>F.class.php</code> implementation:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">F</span>\n</span>{\n    <span class=\"hljs-keyword\">const</span> HTTP_SUCCESS=<span class=\"hljs-number\">200</span>;\n    <span class=\"hljs-keyword\">const</span> HTTP_WARNING=<span class=\"hljs-number\">455</span>;\n    <span class=\"hljs-keyword\">const</span> HTTP_ERROR=<span class=\"hljs-number\">400</span>;\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">response</span><span class=\"hljs-params\">($response)</span>\n    </span>{\n        <span class=\"hljs-keyword\">echo</span> CJSON::encode($response);\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">resp</span><span class=\"hljs-params\">($code=<span class=\"hljs-number\">0</span>,$message=<span class=\"hljs-string\">''</span>,$content=<span class=\"hljs-string\">''</span>)</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> F::response([<span class=\"hljs-string\">'code'</span>=&gt;$code,<span class=\"hljs-string\">'message'</span>=&gt;$message,<span class=\"hljs-string\">'content'</span>=&gt;$content]);\n    }\n}</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/cd826d178e7ca4908cef","description":"Get image via AJAX then open it in new window/tab.","files":["https://gist.githubusercontent.com/umidjons/cd826d178e7ca4908cef/raw/c047d3493c8001289011b8ae3c9215981b9e8fc9/image-ajax.md"],"content":"Get image via AJAX then open it in new window/tab\n===\n\nCreate factory to get image via AJAX request:\n\n```javascript\n\tangular.module('App',['ngFileUpload'])\n\t\t.factory('Record',function($http){\n\t\t\treturn {\n\t\t\t\timgByHash:function(callback,hash){\n\t\t\t\t\t$http.post('/record/imgByHash',{h:hash},{responseType:'blob'}).success(callback);\n\t\t\t\t}\n\t\t\t};\n\t\t})\n\t\t.controller('MyCtrl',function($scope,Record){\n\n\t\t\tvar file_hash='2aba4fe54408c46377edb7b771b86aae';\n\n\t\t\tRecord.imgByHash(function(resp){\n\t\t\t\tconsole.log('Response:',resp);\n\t\t\t\t$scope.file==resp; // resp is Blob object with proper Mime-type and size\n\t\t\t},file_hash);\n\n\t\t\t// open image in new window/tab\n\t\t\t$scope.openImgTab=function(){\n\t\t\t\t// if $scope.file is stream, then convert it to Blob\n\t\t\t\tvar blob=new Blob([$scope.file],{type:'image/jpeg'});\n\t\t\t\twindow.open(window.URL.createObjectURL(blob),'_blank');\n\t\t\t\t\n\t\t\t\t// if $scope.file is already Blob, just open it in new window/tab\n\t\t\t\twindow.open(window.URL.createObjectURL($scope.file),'_blank');\n\t\t\t}\n\n\t\t});\n```\n\nOn server side get image content from Oracle database as follows:\n\n```php\n<?php\nclass RecordController extends Controller\n{\n\n\tpublic function actionImgByHash()\n\t{\n\t\t// attachment - show file save modal window\n\t\t// inline - render file on page\n\t\t$disposition=Yii::app()->request->getParam('d')?'attachment':'inline';\n\t\t$file_hash  =Yii::app()->request->getParam('h');\n\n\t\tif($file_hash)\n\t\t{\n\t\t\t// odb - custom Yii component to work with Oracle DB via OCI\n\t\t\t$row=Yii::app()->odb->select('select url,mime_type,file_content from object_upload_documents t where t.file_hash=:hash',[':hash'=>$file_hash],true);\n\n\t\t\t// if OCI-Lob resource, then load content:\n\t\t\tif(isset($row['URL'],$row['MIME_TYPE'],$row['FILE_CONTENT']) && get_class($row['FILE_CONTENT'])=='OCI-Lob')\n\t\t\t{\n\t\t\t  // $row['URL'] file name without path\n\t\t\t\t// set headers\n\t\t\t\theader('Content-Type: '.$row['MIME_TYPE']);\n\t\t\t\theader('Content-Disposition: '.$disposition.';filename=\"'.$row['URL'].'\"');\n\t\t\t\theader('Cache-Control: max-age=0');\n\n\t\t\t\t// send content as response\n\t\t\t\tprint $row['FILE_CONTENT']->load();\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\nWe can use `imgByHash` directly in HTML:\n\n```html\n<!-- click button to open the image on new tab -->\n<a href=\"/record/imgByHash?h={{file_hash}}\" title=\"Open image\" target=\"_blank\" class=\"btn btn-xs btn-default\">\n\t<i class=\"fa fa-fw fa-picture-o\"></i>\n</a>\n<!-- click button to open file save modal window for the image -->\n<a href=\"/record/imgByHash?h={{file_hash}}&d=1\" title=\"Download\" target=\"_blank\" class=\"btn btn-xs btn-default\">\n\t<i class=\"fa fa-fw fa-download\"></i>\n</a>\n```\n\nUse `$scope.file` blob/file object loaded via AJAX with `ngFileUpload` as thumbnail:\n\n```html\n<img ngf-src=\"file\" class=\"img-thumbnail\">\n```","html":"<h1 id=\"get-image-via-ajax-then-open-it-in-new-window-tab\">Get image via AJAX then open it in new window/tab</h1>\n<p>Create factory to get image via AJAX request:</p>\n<pre><code class=\"lang-javascript\">    angular.module(<span class=\"hljs-string\">'App'</span>,[<span class=\"hljs-string\">'ngFileUpload'</span>])\n        .factory(<span class=\"hljs-string\">'Record'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($http)</span></span>{\n            <span class=\"hljs-keyword\">return</span> {\n                imgByHash:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(callback,hash)</span></span>{\n                    $http.post(<span class=\"hljs-string\">'/record/imgByHash'</span>,{h:hash},{responseType:<span class=\"hljs-string\">'blob'</span>}).success(callback);\n                }\n            };\n        })\n        .controller(<span class=\"hljs-string\">'MyCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($scope,Record)</span></span>{\n\n            <span class=\"hljs-keyword\">var</span> file_hash=<span class=\"hljs-string\">'2aba4fe54408c46377edb7b771b86aae'</span>;\n\n            Record.imgByHash(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(resp)</span></span>{\n                console.log(<span class=\"hljs-string\">'Response:'</span>,resp);\n                $scope.file==resp; <span class=\"hljs-comment\">// resp is Blob object with proper Mime-type and size</span>\n            },file_hash);\n\n            <span class=\"hljs-comment\">// open image in new window/tab</span>\n            $scope.openImgTab=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n                <span class=\"hljs-comment\">// if $scope.file is stream, then convert it to Blob</span>\n                <span class=\"hljs-keyword\">var</span> blob=<span class=\"hljs-keyword\">new</span> Blob([$scope.file],{type:<span class=\"hljs-string\">'image/jpeg'</span>});\n                window.open(window.URL.createObjectURL(blob),<span class=\"hljs-string\">'_blank'</span>);\n\n                <span class=\"hljs-comment\">// if $scope.file is already Blob, just open it in new window/tab</span>\n                window.open(window.URL.createObjectURL($scope.file),<span class=\"hljs-string\">'_blank'</span>);\n            }\n\n        });\n</code></pre>\n<p>On server side get image content from Oracle database as follows:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">RecordController</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Controller</span>\n</span>{\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">actionImgByHash</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-comment\">// attachment - show file save modal window</span>\n        <span class=\"hljs-comment\">// inline - render file on page</span>\n        $disposition=Yii::app()-&gt;request-&gt;getParam(<span class=\"hljs-string\">'d'</span>)?<span class=\"hljs-string\">'attachment'</span>:<span class=\"hljs-string\">'inline'</span>;\n        $file_hash  =Yii::app()-&gt;request-&gt;getParam(<span class=\"hljs-string\">'h'</span>);\n\n        <span class=\"hljs-keyword\">if</span>($file_hash)\n        {\n            <span class=\"hljs-comment\">// odb - custom Yii component to work with Oracle DB via OCI</span>\n            $row=Yii::app()-&gt;odb-&gt;select(<span class=\"hljs-string\">'select url,mime_type,file_content from object_upload_documents t where t.file_hash=:hash'</span>,[<span class=\"hljs-string\">':hash'</span>=&gt;$file_hash],<span class=\"hljs-keyword\">true</span>);\n\n            <span class=\"hljs-comment\">// if OCI-Lob resource, then load content:</span>\n            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>($row[<span class=\"hljs-string\">'URL'</span>],$row[<span class=\"hljs-string\">'MIME_TYPE'</span>],$row[<span class=\"hljs-string\">'FILE_CONTENT'</span>]) &amp;&amp; get_class($row[<span class=\"hljs-string\">'FILE_CONTENT'</span>])==<span class=\"hljs-string\">'OCI-Lob'</span>)\n            {\n              <span class=\"hljs-comment\">// $row['URL'] file name without path</span>\n                <span class=\"hljs-comment\">// set headers</span>\n                header(<span class=\"hljs-string\">'Content-Type: '</span>.$row[<span class=\"hljs-string\">'MIME_TYPE'</span>]);\n                header(<span class=\"hljs-string\">'Content-Disposition: '</span>.$disposition.<span class=\"hljs-string\">';filename=\"'</span>.$row[<span class=\"hljs-string\">'URL'</span>].<span class=\"hljs-string\">'\"'</span>);\n                header(<span class=\"hljs-string\">'Cache-Control: max-age=0'</span>);\n\n                <span class=\"hljs-comment\">// send content as response</span>\n                <span class=\"hljs-keyword\">print</span> $row[<span class=\"hljs-string\">'FILE_CONTENT'</span>]-&gt;load();\n            }\n        }\n    }\n}</span>\n</code></pre>\n<p>We can use <code>imgByHash</code> directly in HTML:</p>\n<pre><code class=\"lang-html\"><span class=\"xml\"><span class=\"hljs-comment\">&lt;!-- click button to open the image on new tab --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"/record/imgByHash?h=</span></span></span><span class=\"hljs-template-variable\">{{file_hash}}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">\"</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"Open image\"</span> <span class=\"hljs-attr\">target</span>=<span class=\"hljs-string\">\"_blank\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"btn btn-xs btn-default\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"fa fa-fw fa-picture-o\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- click button to open file save modal window for the image --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"/record/imgByHash?h=</span></span></span><span class=\"hljs-template-variable\">{{file_hash}}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">&amp;d=1\"</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"Download\"</span> <span class=\"hljs-attr\">target</span>=<span class=\"hljs-string\">\"_blank\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"btn btn-xs btn-default\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"fa fa-fw fa-download\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span></span>\n</code></pre>\n<p>Use <code>$scope.file</code> blob/file object loaded via AJAX with <code>ngFileUpload</code> as thumbnail:</p>\n<pre><code class=\"lang-html\">&lt;img ngf-src=<span class=\"hljs-string\">\"file\"</span> <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"img-thumbnail\"</span>&gt;\n</code></pre>\n"},{"html_url":"https://gist.github.com/95409fdbc53db75bed1f","description":"Doridarmon API usage example","files":["https://gist.githubusercontent.com/umidjons/95409fdbc53db75bed1f/raw/3d777c3a743fc575b738141c637b2a74def19d46/doridarmon-curl-example.md"],"content":"Doridarmon API usage example\n===\n\n```html\n<?php\n\nclass DoriUz\n{\n\tconst BASE_URL='http://www.doridarmon.uz/api/';\n\n\tprotected $limit;\n\tprotected $page;\n\n\tfunction __construct($limit=20,$page=1)\n\t{\n\t\t$this->limit=$limit;\n\t\t$this->page =$page;\n\t}\n\n\tprotected function isJson($string)\n\t{\n\t\tjson_decode($string);\n\t\treturn (json_last_error()==JSON_ERROR_NONE);\n\t}\n\n\tpublic function search($name)\n\t{\n\t\t$result=[];\n\t\tif(isset($name))\n\t\t{\n\t\t\t$curl=curl_init();\n\t\t\t$url =self::BASE_URL.http_build_query([\n\t\t\t\t\t'R'     =>'search',\n\t\t\t\t\t'limit' =>$this->limit,\n\t\t\t\t\t'page'  =>$this->page,\n\t\t\t\t\t'search'=>$name,\n\t\t\t\t]);\n\n\t\t\tcurl_setopt_array($curl,[\n\t\t\t\tCURLOPT_URL           =>$url,\n\t\t\t\tCURLOPT_HTTPHEADER    =>['Content-Type: application/json; charset=utf-8'],\n\t\t\t\tCURLOPT_RETURNTRANSFER=>true,\n\t\t\t]);\n\t\t\t$result=curl_exec($curl);\n\n\t\t\tif(!$this->isJson($result))\n\t\t\t\treturn $result;\n\n\t\t\t$err=curl_error($curl);\n\t\t\tif($err)\n\t\t\t\treturn $err;\n\n\t\t\t$result=json_decode($result,true);\n\t\t}\n\t\treturn $result;\n\t}\n}\n\n$srv   =new DoriUz(10,1);\n$result=[];\nif(isset($_POST['name']))\n\t$result=$srv->search($_POST['name']);\n?>\n\n\t<form method=\"POST\">\n\t\t<label>Name</label>\n\t\t<input name=\"name\" class=\"form-control\" value=\"<?= $_POST['name']; ?>\">\n\t\t<button class=\"btn btn-primary\">Search</button>\n\t</form>\n\n<?php if(!empty($result)): ?>\n\n\t<?php if(isset($result['total'])): ?>\n\t\t<span>Found <?= $result['total']; ?> drug(s).</span>\n\t<?php endif; ?>\n\n\t<?php if(isset($result['data'])): ?>\n\t\t<table border=\"1\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Drug ID</th>\n\t\t\t\t\t<th>Drug Name</th>\n\t\t\t\t\t<th>Supplier</th>\n\t\t\t\t\t<th>Country</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<?php foreach($result['data'] as $rec): ?>\n\t\t\t\t\t<?php foreach($rec as $drug): ?>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td><?= $drug['d_id']; ?></td>\n\t\t\t\t\t\t\t<td><?= $drug['drugname']; ?></td>\n\t\t\t\t\t\t\t<td><?= $drug['supplier']; ?></td>\n\t\t\t\t\t\t\t<td><?= $drug['country']; ?></td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t<?php endforeach; ?>\n\t\t\t\t<?php endforeach; ?>\n\t\t\t</tbody>\n\t\t</table>\n\t<?php endif; ?>\n<?php endif; ?>\n```","html":"<h1 id=\"doridarmon-api-usage-example\">Doridarmon API usage example</h1>\n<pre><code class=\"lang-html\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DoriUz</span>\n</span>{\n    <span class=\"hljs-keyword\">const</span> BASE_URL=<span class=\"hljs-string\">'http://www.doridarmon.uz/api/'</span>;\n\n    <span class=\"hljs-keyword\">protected</span> $limit;\n    <span class=\"hljs-keyword\">protected</span> $page;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__construct</span><span class=\"hljs-params\">($limit=<span class=\"hljs-number\">20</span>,$page=<span class=\"hljs-number\">1</span>)</span>\n    </span>{\n        <span class=\"hljs-keyword\">$this</span>-&gt;limit=$limit;\n        <span class=\"hljs-keyword\">$this</span>-&gt;page =$page;\n    }\n\n    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">isJson</span><span class=\"hljs-params\">($string)</span>\n    </span>{\n        json_decode($string);\n        <span class=\"hljs-keyword\">return</span> (json_last_error()==JSON_ERROR_NONE);\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">search</span><span class=\"hljs-params\">($name)</span>\n    </span>{\n        $result=[];\n        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>($name))\n        {\n            $curl=curl_init();\n            $url =<span class=\"hljs-keyword\">self</span>::BASE_URL.http_build_query([\n                    <span class=\"hljs-string\">'R'</span>     =&gt;<span class=\"hljs-string\">'search'</span>,\n                    <span class=\"hljs-string\">'limit'</span> =&gt;<span class=\"hljs-keyword\">$this</span>-&gt;limit,\n                    <span class=\"hljs-string\">'page'</span>  =&gt;<span class=\"hljs-keyword\">$this</span>-&gt;page,\n                    <span class=\"hljs-string\">'search'</span>=&gt;$name,\n                ]);\n\n            curl_setopt_array($curl,[\n                CURLOPT_URL           =&gt;$url,\n                CURLOPT_HTTPHEADER    =&gt;[<span class=\"hljs-string\">'Content-Type: application/json; charset=utf-8'</span>],\n                CURLOPT_RETURNTRANSFER=&gt;<span class=\"hljs-keyword\">true</span>,\n            ]);\n            $result=curl_exec($curl);\n\n            <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">$this</span>-&gt;isJson($result))\n                <span class=\"hljs-keyword\">return</span> $result;\n\n            $err=curl_error($curl);\n            <span class=\"hljs-keyword\">if</span>($err)\n                <span class=\"hljs-keyword\">return</span> $err;\n\n            $result=json_decode($result,<span class=\"hljs-keyword\">true</span>);\n        }\n        <span class=\"hljs-keyword\">return</span> $result;\n    }\n}\n\n$srv   =<span class=\"hljs-keyword\">new</span> DoriUz(<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">1</span>);\n$result=[];\n<span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>($_POST[<span class=\"hljs-string\">'name'</span>]))\n    $result=$srv-&gt;search($_POST[<span class=\"hljs-string\">'name'</span>]);\n<span class=\"hljs-meta\">?&gt;</span></span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">method</span>=<span class=\"hljs-string\">\"POST\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"name\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-control\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"&lt;?= $_POST['name']; ?&gt;\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"btn btn-primary\"</span>&gt;</span>Search<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n\n<span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">empty</span>($result)): <span class=\"hljs-meta\">?&gt;</span></span>\n\n    <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>($result[<span class=\"hljs-string\">'total'</span>])): <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>Found <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $result[<span class=\"hljs-string\">'total'</span>]; <span class=\"hljs-meta\">?&gt;</span></span> drug(s).<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n    <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">endif</span>; <span class=\"hljs-meta\">?&gt;</span></span>\n\n    <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>($result[<span class=\"hljs-string\">'data'</span>])): <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">table</span> <span class=\"hljs-attr\">border</span>=<span class=\"hljs-string\">\"1\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">thead</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>Drug ID<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>Drug Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>Supplier<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>Country<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">thead</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tbody</span>&gt;</span>\n                <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">foreach</span>($result[<span class=\"hljs-string\">'data'</span>] <span class=\"hljs-keyword\">as</span> $rec): <span class=\"hljs-meta\">?&gt;</span></span>\n                    <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">foreach</span>($rec <span class=\"hljs-keyword\">as</span> $drug): <span class=\"hljs-meta\">?&gt;</span></span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span><span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $drug[<span class=\"hljs-string\">'d_id'</span>]; <span class=\"hljs-meta\">?&gt;</span></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span><span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $drug[<span class=\"hljs-string\">'drugname'</span>]; <span class=\"hljs-meta\">?&gt;</span></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span><span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $drug[<span class=\"hljs-string\">'supplier'</span>]; <span class=\"hljs-meta\">?&gt;</span></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span><span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $drug[<span class=\"hljs-string\">'country'</span>]; <span class=\"hljs-meta\">?&gt;</span></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n                    <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">endforeach</span>; <span class=\"hljs-meta\">?&gt;</span></span>\n                <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">endforeach</span>; <span class=\"hljs-meta\">?&gt;</span></span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tbody</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">table</span>&gt;</span>\n    <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">endif</span>; <span class=\"hljs-meta\">?&gt;</span></span>\n<span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">endif</span>; <span class=\"hljs-meta\">?&gt;</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/71519c93d363f635b016","description":"Access Form object from child scopes.","files":["https://gist.githubusercontent.com/umidjons/71519c93d363f635b016/raw/619d0b32d8beb7f57f180a723be814c529cc989a/access-form-from-child-scope.md"],"content":"Access Form object from child scopes\n===\n\nFirst solution: save parent scope in scope\n====\n\n```html\n<form name=\"form_rec\" ng-init=\"setFormScope(this)\" class=\"form-horizontal\" novalidate>\n\n\t<!-- can't access $scope.form_rec inside of parts -->\n\t<div ng-include=\"'/rec_general'\"></div>\n\t<div ng-include=\"'/rec_debtor'\"></div>\n\t<div ng-include=\"'/rec_creditor'\"></div>\n\t<div ng-include=\"'/rec_object'\"></div>\n\t<div ng-include=\"'/rec_desc'\"></div>\n\n\t<div class=\"form-group\">\n\t\t<div class=\"col-sm-offset-10 col-sm-2\">\n\t\t\t<button ng-click=\"save()\" ng-disabled=\"form_rec.$invalid\" class=\"btn btn-block btn-success\">Save</button>\n\t\t</div>\n\t</div>\n</form>\n\n<script>\n\tangular.module('App',[])\n\t\t.controller('MyCtrl',function($scope){\n\t\t\t// save form scope\n\t\t\t$scope.setFormScope=function(scope){\n\t\t\t\t$scope.formScope=scope;\n\t\t\t\tconsole.log('form=',$scope.formScope.form_rec);\n\t\t\t}\n\n\t\t\t$scope.save=function(){\n\t\t\t\tvar form=$scope.formScope.form_rec // access form object\n\t\t\t\t// some complex logic...\n\t\t\t}\n\n\t\t});\n</script>\n```\n\nSecond solution: pass form object as parameter in submit function\n====\n\n```html\n<form name=\"form_rec\" class=\"form-horizontal\" novalidate>\n\n\t<!-- can't access $scope.form_rec inside of parts -->\n\t<div ng-include=\"'/rec_general'\"></div>\n\t<div ng-include=\"'/rec_debtor'\"></div>\n\t<div ng-include=\"'/rec_creditor'\"></div>\n\t<div ng-include=\"'/rec_object'\"></div>\n\t<div ng-include=\"'/rec_desc'\"></div>\n\n\t<div class=\"form-group\">\n\t\t<div class=\"col-sm-offset-10 col-sm-2\">\n\t\t\t<button ng-click=\"save(form_rec)\" ng-disabled=\"form_rec.$invalid\" class=\"btn btn-block btn-success\">Save</button>\n\t\t</div>\n\t</div>\n</form>\n\n<script>\n\tangular.module('App',[])\n\t\t.controller('MyCtrl',function($scope){\n\t\t\t$scope.save=function(form){\n\t\t\t\t// access form object\n\t\t\t\tconsole.log('form=',form);\n\t\t\t\t// some complex logic...\n\t\t\t}\n\t\t});\n</script>\n```","html":"<h1 id=\"access-form-object-from-child-scopes\">Access Form object from child scopes</h1>\n<h1 id=\"first-solution-save-parent-scope-in-scope\">First solution: save parent scope in scope</h1>\n<pre><code class=\"lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"form_rec\"</span> <span class=\"hljs-attr\">ng-init</span>=<span class=\"hljs-string\">\"setFormScope(this)\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-horizontal\"</span> <span class=\"hljs-attr\">novalidate</span>&gt;</span>\n\n    <span class=\"hljs-comment\">&lt;!-- can't access $scope.form_rec inside of parts --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-include</span>=<span class=\"hljs-string\">\"'/rec_general'\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-include</span>=<span class=\"hljs-string\">\"'/rec_debtor'\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-include</span>=<span class=\"hljs-string\">\"'/rec_creditor'\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-include</span>=<span class=\"hljs-string\">\"'/rec_object'\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-include</span>=<span class=\"hljs-string\">\"'/rec_desc'\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-group\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-offset-10 col-sm-2\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">ng-click</span>=<span class=\"hljs-string\">\"save()\"</span> <span class=\"hljs-attr\">ng-disabled</span>=<span class=\"hljs-string\">\"form_rec.$invalid\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"btn btn-block btn-success\"</span>&gt;</span>Save<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    angular.module(<span class=\"hljs-string\">'App'</span>,[])\n        .controller(<span class=\"hljs-string\">'MyCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">$scope</span>)</span>{\n            <span class=\"hljs-comment\">// save form scope</span>\n            $scope.setFormScope=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">scope</span>)</span>{\n                $scope.formScope=scope;\n                <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'form='</span>,$scope.formScope.form_rec);\n            }\n\n            $scope.save=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n                <span class=\"hljs-keyword\">var</span> form=$scope.formScope.form_rec <span class=\"hljs-comment\">// access form object</span>\n                <span class=\"hljs-comment\">// some complex logic...</span>\n            }\n\n        });\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n<h1 id=\"second-solution-pass-form-object-as-parameter-in-submit-function\">Second solution: pass form object as parameter in submit function</h1>\n<pre><code class=\"lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"form_rec\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-horizontal\"</span> <span class=\"hljs-attr\">novalidate</span>&gt;</span>\n\n    <span class=\"hljs-comment\">&lt;!-- can't access $scope.form_rec inside of parts --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-include</span>=<span class=\"hljs-string\">\"'/rec_general'\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-include</span>=<span class=\"hljs-string\">\"'/rec_debtor'\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-include</span>=<span class=\"hljs-string\">\"'/rec_creditor'\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-include</span>=<span class=\"hljs-string\">\"'/rec_object'\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-include</span>=<span class=\"hljs-string\">\"'/rec_desc'\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-group\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-offset-10 col-sm-2\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">ng-click</span>=<span class=\"hljs-string\">\"save(form_rec)\"</span> <span class=\"hljs-attr\">ng-disabled</span>=<span class=\"hljs-string\">\"form_rec.$invalid\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"btn btn-block btn-success\"</span>&gt;</span>Save<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    angular.module(<span class=\"hljs-string\">'App'</span>,[])\n        .controller(<span class=\"hljs-string\">'MyCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">$scope</span>)</span>{\n            $scope.save=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">form</span>)</span>{\n                <span class=\"hljs-comment\">// access form object</span>\n                <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'form='</span>,form);\n                <span class=\"hljs-comment\">// some complex logic...</span>\n            }\n        });\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/a026105adddab0a114b8","description":"cURL example with proxy","files":["https://gist.githubusercontent.com/umidjons/a026105adddab0a114b8/raw/051a32f8533bc80380e1c3a39dda2f6a4fb7927b/curl-proxy.md"],"content":"cURL example with proxy\n===\n\n```php\n<?php\nfunction isJson($string)\n{\n\tjson_decode($string);\n\treturn (json_last_error()==JSON_ERROR_NONE);\n}\n\n$curl=curl_init();\ncurl_setopt_array($curl,[\n\tCURLOPT_URL           =>'http://www.doridarmon.uz/api/R=get_countries',\n\tCURLOPT_HTTPHEADER    =>['Content-Type: application/json; charset=utf-8'],\n\tCURLOPT_PROXY         =>'192.168.18.92:818',\n\tCURLOPT_RETURNTRANSFER=>true,\n]);\n$result=curl_exec($curl);\n\nif(!isJson($result))\n{\n\techo $result;\n\texit;\n}\n\n$err=curl_error($curl);\nif($err)\n{\n\techo $err;\n\texit;\n}\n\n$result=json_decode($result,true);\n?>\n<?php if(!empty($result)): ?>\n\t<table class=\"table table-bordered table-striped table-hover\">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>ID</th>\n\t\t\t\t<th>Name</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<?php foreach($result as $res): ?>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><?= $res['id']; ?></td>\n\t\t\t\t\t<td><?= $res['title']; ?></td>\n\t\t\t\t</tr>\n\t\t\t<?php endforeach; ?>\n\t\t</tbody>\n\t</table>\n<?php endif; ?>\n```","html":"<h1 id=\"curl-example-with-proxy\">cURL example with proxy</h1>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">isJson</span><span class=\"hljs-params\">($string)</span>\n</span>{\n    json_decode($string);\n    <span class=\"hljs-keyword\">return</span> (json_last_error()==JSON_ERROR_NONE);\n}\n\n$curl=curl_init();\ncurl_setopt_array($curl,[\n    CURLOPT_URL           =&gt;<span class=\"hljs-string\">'http://www.doridarmon.uz/api/R=get_countries'</span>,\n    CURLOPT_HTTPHEADER    =&gt;[<span class=\"hljs-string\">'Content-Type: application/json; charset=utf-8'</span>],\n    CURLOPT_PROXY         =&gt;<span class=\"hljs-string\">'192.168.18.92:818'</span>,\n    CURLOPT_RETURNTRANSFER=&gt;<span class=\"hljs-keyword\">true</span>,\n]);\n$result=curl_exec($curl);\n\n<span class=\"hljs-keyword\">if</span>(!isJson($result))\n{\n    <span class=\"hljs-keyword\">echo</span> $result;\n    <span class=\"hljs-keyword\">exit</span>;\n}\n\n$err=curl_error($curl);\n<span class=\"hljs-keyword\">if</span>($err)\n{\n    <span class=\"hljs-keyword\">echo</span> $err;\n    <span class=\"hljs-keyword\">exit</span>;\n}\n\n$result=json_decode($result,<span class=\"hljs-keyword\">true</span>);\n<span class=\"hljs-meta\">?&gt;</span></span>\n<span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">empty</span>($result)): <span class=\"hljs-meta\">?&gt;</span></span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">table</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"table table-bordered table-striped table-hover\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">thead</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>ID<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">thead</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tbody</span>&gt;</span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">foreach</span>($result <span class=\"hljs-keyword\">as</span> $res): <span class=\"hljs-meta\">?&gt;</span></span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span><span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $res[<span class=\"hljs-string\">'id'</span>]; <span class=\"hljs-meta\">?&gt;</span></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span><span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $res[<span class=\"hljs-string\">'title'</span>]; <span class=\"hljs-meta\">?&gt;</span></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">endforeach</span>; <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tbody</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">table</span>&gt;</span>\n<span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">endif</span>; <span class=\"hljs-meta\">?&gt;</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/42d378dc7d649c659a07","description":"Generate random hash string in PHP","files":["https://gist.githubusercontent.com/umidjons/42d378dc7d649c659a07/raw/24a57398245ba86a13f4635c68b587255d5fc69c/random-hash-string-php.md"],"content":"Generate random hash string in PHP\n===\n\n```php\n<?php\nfunction randHash($len=32)\n{\n\treturn substr(md5(openssl_random_pseudo_bytes(20)),-$len);\n}\n```\n\nExamples:\n```php\n<?php\necho randHash()  .'<br>'; // c700f7b818a7e9e41e7d04cdf5ec8245\necho randHash(20).'<br>'; // 9bfae7b4cd0f1a3fa571\necho randHash(50).'<br>'; // f359dd85479999ea7632210e8c07158a NOTE: max length = 32\n```","html":"<h1 id=\"generate-random-hash-string-in-php\">Generate random hash string in PHP</h1>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">randHash</span><span class=\"hljs-params\">($len=<span class=\"hljs-number\">32</span>)</span>\n</span>{\n    <span class=\"hljs-keyword\">return</span> substr(md5(openssl_random_pseudo_bytes(<span class=\"hljs-number\">20</span>)),-$len);\n}</span>\n</code></pre>\n<p>Examples:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">echo</span> randHash()  .<span class=\"hljs-string\">'&lt;br&gt;'</span>; <span class=\"hljs-comment\">// c700f7b818a7e9e41e7d04cdf5ec8245</span>\n<span class=\"hljs-keyword\">echo</span> randHash(<span class=\"hljs-number\">20</span>).<span class=\"hljs-string\">'&lt;br&gt;'</span>; <span class=\"hljs-comment\">// 9bfae7b4cd0f1a3fa571</span>\n<span class=\"hljs-keyword\">echo</span> randHash(<span class=\"hljs-number\">50</span>).<span class=\"hljs-string\">'&lt;br&gt;'</span>; <span class=\"hljs-comment\">// f359dd85479999ea7632210e8c07158a <span class=\"hljs-doctag\">NOTE:</span> max length = 32</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/c572446825b2d8300048","description":"Application component to work with Oracle DB via OCI","files":["https://gist.githubusercontent.com/umidjons/c572446825b2d8300048/raw/e1c2ef6f3b2ed15f1bb4b5dd8d067617388b41a5/yii-oci-component.md"],"content":"Application component to work with Oracle DB via OCI\n===\n\nComponent implementation\n=====\n\n```php\n<?php\n\nclass EOciConnection extends CApplicationComponent\n{\n\tpublic $connectionString;\n\tpublic $username;\n\tpublic $password;\n\tpublic $charset;\n\tpublic $conn;\n\tpublic $stid;\n\tpublic $persistent;\n\n\tpublic function init()\n\t{\n\t\tif(!$this->persistent)\n\t\t\t$this->conn=oci_connect($this->username,$this->password,$this->connectionString,$this->charset);\n\t\telse\n\t\t\t$this->conn=oci_pconnect($this->username,$this->password,$this->connectionString,$this->charset);\n\t\treturn $this;\n\t}\n\n\tpublic function close()\n\t{\n\t\tif(!is_null($this->stid)) oci_free_statement($this->stid);\n\t\tif($this->conn) oci_close($this->conn);\n\t}\n\n\t/**\n\t * @param string $sql         SQL statement. Maybe with placeholders, such as :par1, :par2.\n\t * @param array  $params      parameters, such as [':par1'=>val1,':par2'=>val2].\n\t * @param bool   $fetch_first false-fetch all rows, true-fetch only first row.\n\t * @return array fetched rows.\n\t */\n\tpublic function select($sql,$params=[],$fetch_first=false,$fetch_mode=OCI_ASSOC)\n\t{\n\t\t$rows      =[];\n\t\t$this->stid=oci_parse($this->conn,$sql);\n\t\tif(!empty($params))\n\t\t\tforeach($params as $param_name=>$param_value)\n\t\t\t\toci_bind_by_name($this->stid,$param_name,$params[$param_name]);\n\t\toci_execute($this->stid);\n\t\tif($fetch_first)\n\t\t\t$rows=oci_fetch_array($this->stid,$fetch_mode);\n\t\telse\n\t\t\toci_fetch_all($this->stid,$rows,0,-1,OCI_FETCHSTATEMENT_BY_ROW+$fetch_mode);\n\t\treturn $rows;\n\t}\n\n\t/**\n\t * @param string $sql    SQL statement to execute\n\t * @param array  $params key/value pairs for simple parameters or array of parameters in [param-value,param-type,param-length,is-out-param] format.\n\t * @return array|bool\n\t */\n\tpublic function exec($sql,$params=[])\n\t{\n\t\t$outs      =[];\n\t\t$lobs      =[];\n\t\t$this->stid=oci_parse($this->conn,$sql);\n\t\tif(!empty($params))\n\t\t\tforeach($params as $param_name=>$param_value)\n\t\t\t\tif(is_array($param_value))\n\t\t\t\t{\n\t\t\t\t\tlist($value,$param_type,$param_length,$is_out)=$param_value;\n\t\t\t\t\tif($param_type==OCI_B_CLOB && !$is_out)\n\t\t\t\t\t{\n\t\t\t\t\t\t$lobs[$param_name]=oci_new_descriptor($this->conn,OCI_DTYPE_LOB);\n\t\t\t\t\t\t$lobs[$param_name]->setBuffering(false);\n\t\t\t\t\t\toci_bind_by_name($this->stid,$param_name,$lobs[$param_name],-1,OCI_B_CLOB);\n\t\t\t\t\t\t$lobs[$param_name]->writetemporary($value);\n\t\t\t\t\t}\n\t\t\t\t\telseif($param_type==OCI_B_BLOB && !$is_out)\n\t\t\t\t\t{\n\t\t\t\t\t\t$lobs[$param_name]=oci_new_descriptor($this->conn,OCI_DTYPE_LOB);\n\t\t\t\t\t\t$lobs[$param_name]->setBuffering(false);\n\t\t\t\t\t\toci_bind_by_name($this->stid,$param_name,$lobs[$param_name],-1,OCI_B_BLOB);\n\t\t\t\t\t\t$lobs[$param_name]->writetemporary($value,OCI_TEMP_BLOB);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif($is_out)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$value_name=trim($param_name,':');\n\t\t\t\t\t\t\tif($param_type==OCI_B_CLOB || $param_type==OCI_B_BLOB)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$$value_name=oci_new_descriptor($this->conn,OCI_DTYPE_LOB);\n\t\t\t\t\t\t\t\toci_bind_by_name($this->stid,$param_name,$$value_name,-1,$param_type);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\toci_bind_by_name($this->stid,$param_name,$$value_name,$param_length>0?$param_length:-1,$param_type);\n\t\t\t\t\t\t\t$outs[$value_name]='';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\toci_bind_by_name($this->stid,$param_name,$value,$param_length>0?$param_length:-1,$param_type);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse oci_bind_by_name($this->stid,$param_name,$params[$param_name]);\n\t\t$res_875785785_fhfhj=oci_execute($this->stid,OCI_NO_AUTO_COMMIT);\n\t\tif(!empty($outs))\n\t\t{\n\t\t\tforeach($outs as $name=>$val)\n\t\t\t\tif(gettype($$name)==\"object\" && get_class($$name)=='OCI-Lob')\n\t\t\t\t\t$outs[$name]=$$name->load();\n\t\t\t\telse\n\t\t\t\t\t$outs[$name]=$$name;\n\t\t\treturn $outs;\n\t\t}\n\t\treturn $res_875785785_fhfhj;\n\t}\n\n\t/**\n\t * Executes SQL statements which return sys_refcursor object.\n\t * @param string $sql    SQL statement to execute\n\t * @param array  $params key/value pairs for simple parameters or array of parameters in [param-value,param-type,param-length,is-out-param] format.\n\t * @return array if there is OUT parameters, then returns ['rows'=>[...],'outs'=>[...]] array, otherwise returns cursor rows.\n\t */\n\tpublic function cursor($sql,$params=[])\n\t{\n\t\t$this->stid=oci_parse($this->conn,$sql);\n\t\tif(!empty($params))\n\t\t{\n\t\t\t$idx=0;\n\t\t\tforeach($params as $param_name=>$param_value)\n\t\t\t{\n\t\t\t\tif(!$idx)\n\t\t\t\t{\n\t\t\t\t\t$cur=oci_new_cursor($this->conn);\n\t\t\t\t\toci_bind_by_name($this->stid,$param_name,$cur,-1,OCI_B_CURSOR);\n\t\t\t\t}\n\t\t\t\telseif(is_array($param_value))\n\t\t\t\t{\n\t\t\t\t\tlist($value,$param_type,$param_length,$is_out)=$param_value;\n\t\t\t\t\tif($param_type==OCI_B_CLOB)\n\t\t\t\t\t{\n\t\t\t\t\t\t$clob=oci_new_descriptor($this->conn,OCI_DTYPE_LOB);\n\t\t\t\t\t\toci_bind_by_name($this->stid,$param_name,$clob,-1,OCI_B_CLOB);\n\t\t\t\t\t\t$clob->writetemporary($value);\n\t\t\t\t\t}\n\t\t\t\t\telseif($param_type==OCI_B_BLOB)\n\t\t\t\t\t{\n\t\t\t\t\t\t$blob=oci_new_descriptor($this->conn,OCI_DTYPE_LOB);\n\t\t\t\t\t\toci_bind_by_name($this->stid,$param_name,$blob,-1,OCI_B_BLOB);\n\t\t\t\t\t\t$blob->writetemporary($value,OCI_TEMP_BLOB);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif($is_out)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$value_name=trim($param_name,':');\n\t\t\t\t\t\t\toci_bind_by_name($this->stid,$param_name,$$value_name,$param_length>0?$param_length:-1,$param_type);\n\t\t\t\t\t\t\t$outs[$value_name]='';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse oci_bind_by_name($this->stid,$param_name,$value,$param_length>0?$param_length:-1,$param_type);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\toci_bind_by_name($this->stid,$param_name,$params[$param_name]);\n\t\t\t\t++$idx;\n\t\t\t}\n\t\t\toci_execute($this->stid,OCI_NO_AUTO_COMMIT);\n\t\t\tif(!empty($outs))\n\t\t\t{\n\t\t\t\tforeach($outs as $name=>$val)\n\t\t\t\t\tif(gettype($$name)==\"object\" && get_class($$name)=='OCI-Lob')\n\t\t\t\t\t\t$outs[$name]=$$name->load();\n\t\t\t\t\telse\n\t\t\t\t\t\t$outs[$name]=$$name;\n\t\t\t}\n\t\t\toci_execute($cur);\n\t\t\toci_fetch_all($cur,$rows,0,-1,OCI_FETCHSTATEMENT_BY_ROW+OCI_ASSOC);\n\t\t\tif(!empty($outs))\n\t\t\t\treturn ['rows'=>$rows,'outs'=>$outs];\n\t\t}\n\t\treturn $rows;\n\t}\n\n\tpublic function commit()\n\t{\n\t\toci_commit($this->conn);\n\t}\n\n\tpublic function rollback()\n\t{\n\t\toci_rollback($this->conn);\n\t}\n}\n```\n\nConfigure components\n=====\n\n```php\n<?php\nreturn [\n\t// ...\n\t// application components\n\t'components'=>[\n\t\t'db' =>[ // PDO for Oracle\n\t\t\t'class'                =>'CDbConnection',\n\t\t\t'connectionString'     =>'oci:dbname=mydb;charset=AL32UTF8',\n\t\t\t'username'             =>'myuser',\n\t\t\t'password'             =>'mypass',\n\t\t\t'schemaCachingDuration'=>600,\n\t\t\t'enableParamLogging'   =>true,\n\t\t\t'enableProfiling'      =>true, // enable profiling for DB\n\t\t\t'attributes'           =>[\n\t\t\t\tPDO::ATTR_CASE      =>PDO::CASE_NATURAL,\n\t\t\t\tPDO::ATTR_PERSISTENT=>true\n\t\t\t],\n\t\t\t'initSQLs'             =>[\n\t\t\t\t'ALTER SESSION SET NLS_DATE_FORMAT=\"DD.MM.YYYY HH24:MI:SS\"',\n\t\t\t],\n\t\t],\n\t\t'odb'=>[ // OCI for Oracle\n\t\t\t'class'           =>'EOciConnection',\n\t\t\t'connectionString'=>'mydb',\n\t\t\t'username'        =>'myuser',\n\t\t\t'password'        =>'mypass',\n\t\t\t'charset'         =>'AL32UTF8',\n\t\t\t'persistent'      =>true,\n\t\t],\n\t\t'sdb'=>[ // PDO for SQLite\n\t\t\t'class'           =>'CDbConnection',\n\t\t\t'connectionString'=>'sqlite:'.dirname(__FILE__).'/../data/mydb.db',\n\t\t],\n\t],\n\t// ...\n];\n```\n\nUsage examples\n=====\n\nSelect rows:\n```php\n<?php\n$rows=Yii::app()->odb->select(\"select msg from tbl_messages where id=:Id\",[':Id'=>$_POST['id']]);\necho $rows[2]['MSG']; // 3rd row MSG column\n```\n\nSelect first row only:\n```php\n<?php\n$row=Yii::app()->odb->select(\"select msg from tbl_messages where id=:Id\",[':Id'=>$_POST['id']],true);\necho $row['MSG']; // first row MSG column\n```\n\nSend BLOB/CLOB into DB:\n```php\n<?php\n$file_content=file_get_contents($_FILES['file']['tmp_name'][0]);\n$res         =Yii::app()->odb->exec('begin mypkg.uploadFile(:pObjectID,:pFileHash,:pContent); end;',[\n\t':pObjectID'=>$obj_id,\n\t':pFileHash'=>$file_hash,\n\t':pContent' =>[$file_content,OCI_B_BLOB,-1,false],\n]);\n```\n\nRead BLOB/CLOB from DB:\n```php\n$row=Yii::app()->odb->select('select mime_type,file_content from tbl_uploads where upl_id=:upl',[':upl'=>315119582699],true);\nif(isset($row['FILE_CONTENT']))\n{\n\t// set content type\n\theader('Content-Type:'.$row['MIME_TYPE']);\n\t// if Lob resource, then read it and print out\n\tif(get_class($row['FILE_CONTENT'])=='OCI-Lob')\n\t\techo $row['FILE_CONTENT']->load();\n}\n```\n\nGet OUT BLOB/CLOB from DB:\n```php\n<?php\n// encode model attributes as JSON\n$json=json_encode($model->attributes,JSON_UNESCAPED_SLASHES|JSON_UNESCAPED_UNICODE);\n$outs=Yii::app()->odb->exec('BEGIN :outRes := MYPKG.ADD(:pUser,:pData); END;',[\n\t':outRes'=>[null,SQLT_CLOB,-1,true], // OUT CLOB parameter\n\t':pUser' =>Yii::app()->user->id,\n\t':pData' =>[$json,OCI_B_CLOB,strlen($json),false], // IN CLOB parameter\n]);\n\n// get OUT parameter and decode JSON as associative array\nif(isset($outs['outRes']))\n{\n\t$result=json_decode($outs['outRes'],true);\n\techo '<pre>'.print_r($result,true).'</pre>';\n}\n```\nExecute function with return type `SYS_REFCURSOR`:\n```php\n<?php\nfunction cursorTest()\n{\n\t$res=Yii::app()->odb->cursor(\"begin :res:=mypkg.cursor_rows(:inParam1); end;\",[\n\t\t':res'     =>null,\n\t\t':inParam1'=>123,\n\t]);\n\treturn $res; // $res contains rows returned by function, no $res['outs'] and no $res['rows']\n}\n```\n\nExecute function with return type `SYS_REFCURSOR`, also `outTotalCount` is `OUT` parameter:\n```php\n<?php\nfunction cursorTest()\n{\n\t$totalCount=0;\n\t$res       =Yii::app()->odb->cursor(\"begin :res:=mypkg.cursor_rows(:inParam1,:outTotalCount); end;\",[\n\t\t':res'          =>null,\n\t\t':inParam1'     =>123,\n\t\t':outTotalCount'=>[$totalCount,SQLT_CHR,10,true],\n\t]);\n\t\n\t// $res['rows'] - contains rows returned by function\n\t// $res['outs'] - contains out parameters with values\n\t\n\techo 'Total Count:',$totalCount,\"\\n\"; // total count\n\tprint_r($res['rows']); // returned rows from function\n}\n```","html":"<h1 id=\"application-component-to-work-with-oracle-db-via-oci\">Application component to work with Oracle DB via OCI</h1>\n<h1 id=\"component-implementation\">Component implementation</h1>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">EOciConnection</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CApplicationComponent</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> $connectionString;\n    <span class=\"hljs-keyword\">public</span> $username;\n    <span class=\"hljs-keyword\">public</span> $password;\n    <span class=\"hljs-keyword\">public</span> $charset;\n    <span class=\"hljs-keyword\">public</span> $conn;\n    <span class=\"hljs-keyword\">public</span> $stid;\n    <span class=\"hljs-keyword\">public</span> $persistent;\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">init</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">$this</span>-&gt;persistent)\n            <span class=\"hljs-keyword\">$this</span>-&gt;conn=oci_connect(<span class=\"hljs-keyword\">$this</span>-&gt;username,<span class=\"hljs-keyword\">$this</span>-&gt;password,<span class=\"hljs-keyword\">$this</span>-&gt;connectionString,<span class=\"hljs-keyword\">$this</span>-&gt;charset);\n        <span class=\"hljs-keyword\">else</span>\n            <span class=\"hljs-keyword\">$this</span>-&gt;conn=oci_pconnect(<span class=\"hljs-keyword\">$this</span>-&gt;username,<span class=\"hljs-keyword\">$this</span>-&gt;password,<span class=\"hljs-keyword\">$this</span>-&gt;connectionString,<span class=\"hljs-keyword\">$this</span>-&gt;charset);\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">$this</span>;\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">close</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">if</span>(!is_null(<span class=\"hljs-keyword\">$this</span>-&gt;stid)) oci_free_statement(<span class=\"hljs-keyword\">$this</span>-&gt;stid);\n        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">$this</span>-&gt;conn) oci_close(<span class=\"hljs-keyword\">$this</span>-&gt;conn);\n    }\n\n    <span class=\"hljs-comment\">/**\n     * <span class=\"hljs-doctag\">@param</span> string $sql         SQL statement. Maybe with placeholders, such as :par1, :par2.\n     * <span class=\"hljs-doctag\">@param</span> array  $params      parameters, such as [':par1'=&gt;val1,':par2'=&gt;val2].\n     * <span class=\"hljs-doctag\">@param</span> bool   $fetch_first false-fetch all rows, true-fetch only first row.\n     * <span class=\"hljs-doctag\">@return</span> array fetched rows.\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">select</span><span class=\"hljs-params\">($sql,$params=[],$fetch_first=false,$fetch_mode=OCI_ASSOC)</span>\n    </span>{\n        $rows      =[];\n        <span class=\"hljs-keyword\">$this</span>-&gt;stid=oci_parse(<span class=\"hljs-keyword\">$this</span>-&gt;conn,$sql);\n        <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">empty</span>($params))\n            <span class=\"hljs-keyword\">foreach</span>($params <span class=\"hljs-keyword\">as</span> $param_name=&gt;$param_value)\n                oci_bind_by_name(<span class=\"hljs-keyword\">$this</span>-&gt;stid,$param_name,$params[$param_name]);\n        oci_execute(<span class=\"hljs-keyword\">$this</span>-&gt;stid);\n        <span class=\"hljs-keyword\">if</span>($fetch_first)\n            $rows=oci_fetch_array(<span class=\"hljs-keyword\">$this</span>-&gt;stid,$fetch_mode);\n        <span class=\"hljs-keyword\">else</span>\n            oci_fetch_all(<span class=\"hljs-keyword\">$this</span>-&gt;stid,$rows,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">-1</span>,OCI_FETCHSTATEMENT_BY_ROW+$fetch_mode);\n        <span class=\"hljs-keyword\">return</span> $rows;\n    }\n\n    <span class=\"hljs-comment\">/**\n     * <span class=\"hljs-doctag\">@param</span> string $sql    SQL statement to execute\n     * <span class=\"hljs-doctag\">@param</span> array  $params key/value pairs for simple parameters or array of parameters in [param-value,param-type,param-length,is-out-param] format.\n     * <span class=\"hljs-doctag\">@return</span> array|bool\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">exec</span><span class=\"hljs-params\">($sql,$params=[])</span>\n    </span>{\n        $outs      =[];\n        $lobs      =[];\n        <span class=\"hljs-keyword\">$this</span>-&gt;stid=oci_parse(<span class=\"hljs-keyword\">$this</span>-&gt;conn,$sql);\n        <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">empty</span>($params))\n            <span class=\"hljs-keyword\">foreach</span>($params <span class=\"hljs-keyword\">as</span> $param_name=&gt;$param_value)\n                <span class=\"hljs-keyword\">if</span>(is_array($param_value))\n                {\n                    <span class=\"hljs-keyword\">list</span>($value,$param_type,$param_length,$is_out)=$param_value;\n                    <span class=\"hljs-keyword\">if</span>($param_type==OCI_B_CLOB &amp;&amp; !$is_out)\n                    {\n                        $lobs[$param_name]=oci_new_descriptor(<span class=\"hljs-keyword\">$this</span>-&gt;conn,OCI_DTYPE_LOB);\n                        $lobs[$param_name]-&gt;setBuffering(<span class=\"hljs-keyword\">false</span>);\n                        oci_bind_by_name(<span class=\"hljs-keyword\">$this</span>-&gt;stid,$param_name,$lobs[$param_name],<span class=\"hljs-number\">-1</span>,OCI_B_CLOB);\n                        $lobs[$param_name]-&gt;writetemporary($value);\n                    }\n                    <span class=\"hljs-keyword\">elseif</span>($param_type==OCI_B_BLOB &amp;&amp; !$is_out)\n                    {\n                        $lobs[$param_name]=oci_new_descriptor(<span class=\"hljs-keyword\">$this</span>-&gt;conn,OCI_DTYPE_LOB);\n                        $lobs[$param_name]-&gt;setBuffering(<span class=\"hljs-keyword\">false</span>);\n                        oci_bind_by_name(<span class=\"hljs-keyword\">$this</span>-&gt;stid,$param_name,$lobs[$param_name],<span class=\"hljs-number\">-1</span>,OCI_B_BLOB);\n                        $lobs[$param_name]-&gt;writetemporary($value,OCI_TEMP_BLOB);\n                    }\n                    <span class=\"hljs-keyword\">else</span>\n                    {\n                        <span class=\"hljs-keyword\">if</span>($is_out)\n                        {\n                            $value_name=trim($param_name,<span class=\"hljs-string\">':'</span>);\n                            <span class=\"hljs-keyword\">if</span>($param_type==OCI_B_CLOB || $param_type==OCI_B_BLOB)\n                            {\n                                $$value_name=oci_new_descriptor(<span class=\"hljs-keyword\">$this</span>-&gt;conn,OCI_DTYPE_LOB);\n                                oci_bind_by_name(<span class=\"hljs-keyword\">$this</span>-&gt;stid,$param_name,$$value_name,<span class=\"hljs-number\">-1</span>,$param_type);\n                            }\n                            <span class=\"hljs-keyword\">else</span>\n                                oci_bind_by_name(<span class=\"hljs-keyword\">$this</span>-&gt;stid,$param_name,$$value_name,$param_length&gt;<span class=\"hljs-number\">0</span>?$param_length:<span class=\"hljs-number\">-1</span>,$param_type);\n                            $outs[$value_name]=<span class=\"hljs-string\">''</span>;\n                        }\n                        <span class=\"hljs-keyword\">else</span>\n                        {\n                            oci_bind_by_name(<span class=\"hljs-keyword\">$this</span>-&gt;stid,$param_name,$value,$param_length&gt;<span class=\"hljs-number\">0</span>?$param_length:<span class=\"hljs-number\">-1</span>,$param_type);\n                        }\n                    }\n                }\n                <span class=\"hljs-keyword\">else</span> oci_bind_by_name(<span class=\"hljs-keyword\">$this</span>-&gt;stid,$param_name,$params[$param_name]);\n        $res_875785785_fhfhj=oci_execute(<span class=\"hljs-keyword\">$this</span>-&gt;stid,OCI_NO_AUTO_COMMIT);\n        <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">empty</span>($outs))\n        {\n            <span class=\"hljs-keyword\">foreach</span>($outs <span class=\"hljs-keyword\">as</span> $name=&gt;$val)\n                <span class=\"hljs-keyword\">if</span>(gettype($$name)==<span class=\"hljs-string\">\"object\"</span> &amp;&amp; get_class($$name)==<span class=\"hljs-string\">'OCI-Lob'</span>)\n                    $outs[$name]=$$name-&gt;load();\n                <span class=\"hljs-keyword\">else</span>\n                    $outs[$name]=$$name;\n            <span class=\"hljs-keyword\">return</span> $outs;\n        }\n        <span class=\"hljs-keyword\">return</span> $res_875785785_fhfhj;\n    }\n\n    <span class=\"hljs-comment\">/**\n     * Executes SQL statements which return sys_refcursor object.\n     * <span class=\"hljs-doctag\">@param</span> string $sql    SQL statement to execute\n     * <span class=\"hljs-doctag\">@param</span> array  $params key/value pairs for simple parameters or array of parameters in [param-value,param-type,param-length,is-out-param] format.\n     * <span class=\"hljs-doctag\">@return</span> array if there is OUT parameters, then returns ['rows'=&gt;[...],'outs'=&gt;[...]] array, otherwise returns cursor rows.\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">cursor</span><span class=\"hljs-params\">($sql,$params=[])</span>\n    </span>{\n        <span class=\"hljs-keyword\">$this</span>-&gt;stid=oci_parse(<span class=\"hljs-keyword\">$this</span>-&gt;conn,$sql);\n        <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">empty</span>($params))\n        {\n            $idx=<span class=\"hljs-number\">0</span>;\n            <span class=\"hljs-keyword\">foreach</span>($params <span class=\"hljs-keyword\">as</span> $param_name=&gt;$param_value)\n            {\n                <span class=\"hljs-keyword\">if</span>(!$idx)\n                {\n                    $cur=oci_new_cursor(<span class=\"hljs-keyword\">$this</span>-&gt;conn);\n                    oci_bind_by_name(<span class=\"hljs-keyword\">$this</span>-&gt;stid,$param_name,$cur,<span class=\"hljs-number\">-1</span>,OCI_B_CURSOR);\n                }\n                <span class=\"hljs-keyword\">elseif</span>(is_array($param_value))\n                {\n                    <span class=\"hljs-keyword\">list</span>($value,$param_type,$param_length,$is_out)=$param_value;\n                    <span class=\"hljs-keyword\">if</span>($param_type==OCI_B_CLOB)\n                    {\n                        $clob=oci_new_descriptor(<span class=\"hljs-keyword\">$this</span>-&gt;conn,OCI_DTYPE_LOB);\n                        oci_bind_by_name(<span class=\"hljs-keyword\">$this</span>-&gt;stid,$param_name,$clob,<span class=\"hljs-number\">-1</span>,OCI_B_CLOB);\n                        $clob-&gt;writetemporary($value);\n                    }\n                    <span class=\"hljs-keyword\">elseif</span>($param_type==OCI_B_BLOB)\n                    {\n                        $blob=oci_new_descriptor(<span class=\"hljs-keyword\">$this</span>-&gt;conn,OCI_DTYPE_LOB);\n                        oci_bind_by_name(<span class=\"hljs-keyword\">$this</span>-&gt;stid,$param_name,$blob,<span class=\"hljs-number\">-1</span>,OCI_B_BLOB);\n                        $blob-&gt;writetemporary($value,OCI_TEMP_BLOB);\n                    }\n                    <span class=\"hljs-keyword\">else</span>\n                    {\n                        <span class=\"hljs-keyword\">if</span>($is_out)\n                        {\n                            $value_name=trim($param_name,<span class=\"hljs-string\">':'</span>);\n                            oci_bind_by_name(<span class=\"hljs-keyword\">$this</span>-&gt;stid,$param_name,$$value_name,$param_length&gt;<span class=\"hljs-number\">0</span>?$param_length:<span class=\"hljs-number\">-1</span>,$param_type);\n                            $outs[$value_name]=<span class=\"hljs-string\">''</span>;\n                        }\n                        <span class=\"hljs-keyword\">else</span> oci_bind_by_name(<span class=\"hljs-keyword\">$this</span>-&gt;stid,$param_name,$value,$param_length&gt;<span class=\"hljs-number\">0</span>?$param_length:<span class=\"hljs-number\">-1</span>,$param_type);\n                    }\n                }\n                <span class=\"hljs-keyword\">else</span>\n                    oci_bind_by_name(<span class=\"hljs-keyword\">$this</span>-&gt;stid,$param_name,$params[$param_name]);\n                ++$idx;\n            }\n            oci_execute(<span class=\"hljs-keyword\">$this</span>-&gt;stid,OCI_NO_AUTO_COMMIT);\n            <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">empty</span>($outs))\n            {\n                <span class=\"hljs-keyword\">foreach</span>($outs <span class=\"hljs-keyword\">as</span> $name=&gt;$val)\n                    <span class=\"hljs-keyword\">if</span>(gettype($$name)==<span class=\"hljs-string\">\"object\"</span> &amp;&amp; get_class($$name)==<span class=\"hljs-string\">'OCI-Lob'</span>)\n                        $outs[$name]=$$name-&gt;load();\n                    <span class=\"hljs-keyword\">else</span>\n                        $outs[$name]=$$name;\n            }\n            oci_execute($cur);\n            oci_fetch_all($cur,$rows,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">-1</span>,OCI_FETCHSTATEMENT_BY_ROW+OCI_ASSOC);\n            <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">empty</span>($outs))\n                <span class=\"hljs-keyword\">return</span> [<span class=\"hljs-string\">'rows'</span>=&gt;$rows,<span class=\"hljs-string\">'outs'</span>=&gt;$outs];\n        }\n        <span class=\"hljs-keyword\">return</span> $rows;\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">commit</span><span class=\"hljs-params\">()</span>\n    </span>{\n        oci_commit(<span class=\"hljs-keyword\">$this</span>-&gt;conn);\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">rollback</span><span class=\"hljs-params\">()</span>\n    </span>{\n        oci_rollback(<span class=\"hljs-keyword\">$this</span>-&gt;conn);\n    }\n}</span>\n</code></pre>\n<h1 id=\"configure-components\">Configure components</h1>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">return</span> [\n    <span class=\"hljs-comment\">// ...</span>\n    <span class=\"hljs-comment\">// application components</span>\n    <span class=\"hljs-string\">'components'</span>=&gt;[\n        <span class=\"hljs-string\">'db'</span> =&gt;[ <span class=\"hljs-comment\">// PDO for Oracle</span>\n            <span class=\"hljs-string\">'class'</span>                =&gt;<span class=\"hljs-string\">'CDbConnection'</span>,\n            <span class=\"hljs-string\">'connectionString'</span>     =&gt;<span class=\"hljs-string\">'oci:dbname=mydb;charset=AL32UTF8'</span>,\n            <span class=\"hljs-string\">'username'</span>             =&gt;<span class=\"hljs-string\">'myuser'</span>,\n            <span class=\"hljs-string\">'password'</span>             =&gt;<span class=\"hljs-string\">'mypass'</span>,\n            <span class=\"hljs-string\">'schemaCachingDuration'</span>=&gt;<span class=\"hljs-number\">600</span>,\n            <span class=\"hljs-string\">'enableParamLogging'</span>   =&gt;<span class=\"hljs-keyword\">true</span>,\n            <span class=\"hljs-string\">'enableProfiling'</span>      =&gt;<span class=\"hljs-keyword\">true</span>, <span class=\"hljs-comment\">// enable profiling for DB</span>\n            <span class=\"hljs-string\">'attributes'</span>           =&gt;[\n                PDO::ATTR_CASE      =&gt;PDO::CASE_NATURAL,\n                PDO::ATTR_PERSISTENT=&gt;<span class=\"hljs-keyword\">true</span>\n            ],\n            <span class=\"hljs-string\">'initSQLs'</span>             =&gt;[\n                <span class=\"hljs-string\">'ALTER SESSION SET NLS_DATE_FORMAT=\"DD.MM.YYYY HH24:MI:SS\"'</span>,\n            ],\n        ],\n        <span class=\"hljs-string\">'odb'</span>=&gt;[ <span class=\"hljs-comment\">// OCI for Oracle</span>\n            <span class=\"hljs-string\">'class'</span>           =&gt;<span class=\"hljs-string\">'EOciConnection'</span>,\n            <span class=\"hljs-string\">'connectionString'</span>=&gt;<span class=\"hljs-string\">'mydb'</span>,\n            <span class=\"hljs-string\">'username'</span>        =&gt;<span class=\"hljs-string\">'myuser'</span>,\n            <span class=\"hljs-string\">'password'</span>        =&gt;<span class=\"hljs-string\">'mypass'</span>,\n            <span class=\"hljs-string\">'charset'</span>         =&gt;<span class=\"hljs-string\">'AL32UTF8'</span>,\n            <span class=\"hljs-string\">'persistent'</span>      =&gt;<span class=\"hljs-keyword\">true</span>,\n        ],\n        <span class=\"hljs-string\">'sdb'</span>=&gt;[ <span class=\"hljs-comment\">// PDO for SQLite</span>\n            <span class=\"hljs-string\">'class'</span>           =&gt;<span class=\"hljs-string\">'CDbConnection'</span>,\n            <span class=\"hljs-string\">'connectionString'</span>=&gt;<span class=\"hljs-string\">'sqlite:'</span>.dirname(<span class=\"hljs-keyword\">__FILE__</span>).<span class=\"hljs-string\">'/../data/mydb.db'</span>,\n        ],\n    ],\n    <span class=\"hljs-comment\">// ...</span>\n];</span>\n</code></pre>\n<h1 id=\"usage-examples\">Usage examples</h1>\n<p>Select rows:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n$rows=Yii::app()-&gt;odb-&gt;select(<span class=\"hljs-string\">\"select msg from tbl_messages where id=:Id\"</span>,[<span class=\"hljs-string\">':Id'</span>=&gt;$_POST[<span class=\"hljs-string\">'id'</span>]]);\n<span class=\"hljs-keyword\">echo</span> $rows[<span class=\"hljs-number\">2</span>][<span class=\"hljs-string\">'MSG'</span>]; <span class=\"hljs-comment\">// 3rd row MSG column</span></span>\n</code></pre>\n<p>Select first row only:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n$row=Yii::app()-&gt;odb-&gt;select(<span class=\"hljs-string\">\"select msg from tbl_messages where id=:Id\"</span>,[<span class=\"hljs-string\">':Id'</span>=&gt;$_POST[<span class=\"hljs-string\">'id'</span>]],<span class=\"hljs-keyword\">true</span>);\n<span class=\"hljs-keyword\">echo</span> $row[<span class=\"hljs-string\">'MSG'</span>]; <span class=\"hljs-comment\">// first row MSG column</span></span>\n</code></pre>\n<p>Send BLOB/CLOB into DB:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n$file_content=file_get_contents($_FILES[<span class=\"hljs-string\">'file'</span>][<span class=\"hljs-string\">'tmp_name'</span>][<span class=\"hljs-number\">0</span>]);\n$res         =Yii::app()-&gt;odb-&gt;exec(<span class=\"hljs-string\">'begin mypkg.uploadFile(:pObjectID,:pFileHash,:pContent); end;'</span>,[\n    <span class=\"hljs-string\">':pObjectID'</span>=&gt;$obj_id,\n    <span class=\"hljs-string\">':pFileHash'</span>=&gt;$file_hash,\n    <span class=\"hljs-string\">':pContent'</span> =&gt;[$file_content,OCI_B_BLOB,<span class=\"hljs-number\">-1</span>,<span class=\"hljs-keyword\">false</span>],\n]);</span>\n</code></pre>\n<p>Read BLOB/CLOB from DB:</p>\n<pre><code class=\"lang-php\">$row=Yii::app()-&gt;odb-&gt;select(<span class=\"hljs-string\">'select mime_type,file_content from tbl_uploads where upl_id=:upl'</span>,[<span class=\"hljs-string\">':upl'</span>=&gt;<span class=\"hljs-number\">315119582699</span>],<span class=\"hljs-keyword\">true</span>);\n<span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>($row[<span class=\"hljs-string\">'FILE_CONTENT'</span>]))\n{\n    <span class=\"hljs-comment\">// set content type</span>\n    header(<span class=\"hljs-string\">'Content-Type:'</span>.$row[<span class=\"hljs-string\">'MIME_TYPE'</span>]);\n    <span class=\"hljs-comment\">// if Lob resource, then read it and print out</span>\n    <span class=\"hljs-keyword\">if</span>(get_class($row[<span class=\"hljs-string\">'FILE_CONTENT'</span>])==<span class=\"hljs-string\">'OCI-Lob'</span>)\n        <span class=\"hljs-keyword\">echo</span> $row[<span class=\"hljs-string\">'FILE_CONTENT'</span>]-&gt;load();\n}\n</code></pre>\n<p>Get OUT BLOB/CLOB from DB:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-comment\">// encode model attributes as JSON</span>\n$json=json_encode($model-&gt;attributes,JSON_UNESCAPED_SLASHES|JSON_UNESCAPED_UNICODE);\n$outs=Yii::app()-&gt;odb-&gt;exec(<span class=\"hljs-string\">'BEGIN :outRes := MYPKG.ADD(:pUser,:pData); END;'</span>,[\n    <span class=\"hljs-string\">':outRes'</span>=&gt;[<span class=\"hljs-keyword\">null</span>,SQLT_CLOB,<span class=\"hljs-number\">-1</span>,<span class=\"hljs-keyword\">true</span>], <span class=\"hljs-comment\">// OUT CLOB parameter</span>\n    <span class=\"hljs-string\">':pUser'</span> =&gt;Yii::app()-&gt;user-&gt;id,\n    <span class=\"hljs-string\">':pData'</span> =&gt;[$json,OCI_B_CLOB,strlen($json),<span class=\"hljs-keyword\">false</span>], <span class=\"hljs-comment\">// IN CLOB parameter</span>\n]);\n\n<span class=\"hljs-comment\">// get OUT parameter and decode JSON as associative array</span>\n<span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>($outs[<span class=\"hljs-string\">'outRes'</span>]))\n{\n    $result=json_decode($outs[<span class=\"hljs-string\">'outRes'</span>],<span class=\"hljs-keyword\">true</span>);\n    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">'&lt;pre&gt;'</span>.print_r($result,<span class=\"hljs-keyword\">true</span>).<span class=\"hljs-string\">'&lt;/pre&gt;'</span>;\n}</span>\n</code></pre>\n<p>Execute function with return type <code>SYS_REFCURSOR</code>:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">cursorTest</span><span class=\"hljs-params\">()</span>\n</span>{\n    $res=Yii::app()-&gt;odb-&gt;cursor(<span class=\"hljs-string\">\"begin :res:=mypkg.cursor_rows(:inParam1); end;\"</span>,[\n        <span class=\"hljs-string\">':res'</span>     =&gt;<span class=\"hljs-keyword\">null</span>,\n        <span class=\"hljs-string\">':inParam1'</span>=&gt;<span class=\"hljs-number\">123</span>,\n    ]);\n    <span class=\"hljs-keyword\">return</span> $res; <span class=\"hljs-comment\">// $res contains rows returned by function, no $res['outs'] and no $res['rows']</span>\n}</span>\n</code></pre>\n<p>Execute function with return type <code>SYS_REFCURSOR</code>, also <code>outTotalCount</code> is <code>OUT</code> parameter:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">cursorTest</span><span class=\"hljs-params\">()</span>\n</span>{\n    $totalCount=<span class=\"hljs-number\">0</span>;\n    $res       =Yii::app()-&gt;odb-&gt;cursor(<span class=\"hljs-string\">\"begin :res:=mypkg.cursor_rows(:inParam1,:outTotalCount); end;\"</span>,[\n        <span class=\"hljs-string\">':res'</span>          =&gt;<span class=\"hljs-keyword\">null</span>,\n        <span class=\"hljs-string\">':inParam1'</span>     =&gt;<span class=\"hljs-number\">123</span>,\n        <span class=\"hljs-string\">':outTotalCount'</span>=&gt;[$totalCount,SQLT_CHR,<span class=\"hljs-number\">10</span>,<span class=\"hljs-keyword\">true</span>],\n    ]);\n\n    <span class=\"hljs-comment\">// $res['rows'] - contains rows returned by function</span>\n    <span class=\"hljs-comment\">// $res['outs'] - contains out parameters with values</span>\n\n    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">'Total Count:'</span>,$totalCount,<span class=\"hljs-string\">\"\\n\"</span>; <span class=\"hljs-comment\">// total count</span>\n    print_r($res[<span class=\"hljs-string\">'rows'</span>]); <span class=\"hljs-comment\">// returned rows from function</span>\n}</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/30a13359d2086b63c633","description":"Determine language from URL and set language as prefix to the all requests in AngularJS","files":["https://gist.githubusercontent.com/umidjons/30a13359d2086b63c633/raw/bdd2233a8853c7e2df5e789801d2f95299bbbf85/request-language-angular.md"],"content":"Determine language from URL and set language as prefix to the all requests in AngularJS\n===\n\nThis implementation is not ideal, does not take into account for example when language specified as `http://mydomain.uz/ru` without `/` at the end.\n\n```javascript\n\tangular.module('MyApp',[])\n\t\t.config(function($httpProvider){\n\t\t\t$httpProvider.interceptors.unshift(function($q,Lang){\n\t\t\t\treturn {\n\t\t\t\t\trequest:function(config){\n\t\t\t\t\t\t// ignore list, that won't be overriden\n  \t\t\t\t\tvar exceptions=['datepicker/datepicker.tpl.html'];\n  \t\t\t\t\tif(exceptions.indexOf(config.url)=== -1)\n  \t\t\t\t\t\tconfig.url=Lang.setUrlLang(config.url); // if in the requests language not specified, set it \n\t\t\t\t\t\treturn config || $q.when(config);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t})\n\t\t.run(function($location,$rootScope){\n\t\t\t// when application loaded, determine language according to the URL\n\t\t\tvar path=$location.path(),\n\t\t\t\tre=/^\\/(en|ru|uz_latn|uz)\\//,\n\t\t\t\tres=re.exec(path),\n\t\t\t\tlang=angular.isDefined(res[1])?res[1]:'ru';\n\t\t\t$rootScope.app_lang=lang;\n\t\t})\n\t\t.factory('Lang',function($rootScope){\n\t\t\treturn {\n\t\t\t\tRU        :0,\n\t\t\t\tUZ        :1,\n\t\t\t\tUZ_LATN   :2,\n\t\t\t\tEN        :3,\n\t\t\t\tsetUrlLang:function(url){\n\t\t\t\t\t// set or override language in the given URL\n\t\t\t\t\tvar re=/^\\/(en|ru|uz|uz_latn)\\//,pfx='/'+$rootScope.app_lang;\n\t\t\t\t\tif(url.match(re)) url=url.replace(re,pfx+'/');\n\t\t\t\t\telse url=pfx+url;\n\t\t\t\t\treturn url;\n\t\t\t\t}\n\t\t\t};\n\t\t})\n\t\t.factory('MySrv',function($http){\n\t\t\treturn {\n\t\t\t\t// URL of the all services will be prefixed with the application language\n\t\t\t\tgroups    :function(callback){$http.post('/admin/ajax/provisionGroup').success(callback);},  // /ru/admin/ajax/provisionGroup \n\t\t\t\tprovisions:function(callback){$http.post('/admin/ajax/provisionList').success(callback);},   // /ru/admin/ajax/provisionList\n\t\t\t\toptions   :function(callback){$http.post('/admin/ajax/provisionOptions').success(callback);} // /ru/admin/ajax/provisionOptions\n\t\t\t};\n\t\t});\n```","html":"<h1 id=\"determine-language-from-url-and-set-language-as-prefix-to-the-all-requests-in-angularjs\">Determine language from URL and set language as prefix to the all requests in AngularJS</h1>\n<p>This implementation is not ideal, does not take into account for example when language specified as <code>http://mydomain.uz/ru</code> without <code>/</code> at the end.</p>\n<pre><code class=\"lang-javascript\">    angular.module(<span class=\"hljs-string\">'MyApp'</span>,[])\n        .config(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($httpProvider)</span></span>{\n            $httpProvider.interceptors.unshift(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($q,Lang)</span></span>{\n                <span class=\"hljs-keyword\">return</span> {\n                    request:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(config)</span></span>{\n                        <span class=\"hljs-comment\">// ignore list, that won't be overriden</span>\n                      <span class=\"hljs-keyword\">var</span> exceptions=[<span class=\"hljs-string\">'datepicker/datepicker.tpl.html'</span>];\n                      <span class=\"hljs-keyword\">if</span>(exceptions.indexOf(config.url)=== <span class=\"hljs-number\">-1</span>)\n                          config.url=Lang.setUrlLang(config.url); <span class=\"hljs-comment\">// if in the requests language not specified, set it </span>\n                        <span class=\"hljs-keyword\">return</span> config || $q.when(config);\n                    }\n                };\n            });\n        })\n        .run(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($location,$rootScope)</span></span>{\n            <span class=\"hljs-comment\">// when application loaded, determine language according to the URL</span>\n            <span class=\"hljs-keyword\">var</span> path=$location.path(),\n                re=/^\\/(en|ru|uz_latn|uz)\\<span class=\"hljs-comment\">//,</span>\n                res=re.exec(path),\n                lang=angular.isDefined(res[<span class=\"hljs-number\">1</span>])?res[<span class=\"hljs-number\">1</span>]:<span class=\"hljs-string\">'ru'</span>;\n            $rootScope.app_lang=lang;\n        })\n        .factory(<span class=\"hljs-string\">'Lang'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($rootScope)</span></span>{\n            <span class=\"hljs-keyword\">return</span> {\n                RU        :<span class=\"hljs-number\">0</span>,\n                UZ        :<span class=\"hljs-number\">1</span>,\n                UZ_LATN   :<span class=\"hljs-number\">2</span>,\n                EN        :<span class=\"hljs-number\">3</span>,\n                setUrlLang:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(url)</span></span>{\n                    <span class=\"hljs-comment\">// set or override language in the given URL</span>\n                    <span class=\"hljs-keyword\">var</span> re=/^\\/(en|ru|uz|uz_latn)\\<span class=\"hljs-comment\">//,pfx='/'+$rootScope.app_lang;</span>\n                    <span class=\"hljs-keyword\">if</span>(url.match(re)) url=url.replace(re,pfx+<span class=\"hljs-string\">'/'</span>);\n                    <span class=\"hljs-keyword\">else</span> url=pfx+url;\n                    <span class=\"hljs-keyword\">return</span> url;\n                }\n            };\n        })\n        .factory(<span class=\"hljs-string\">'MySrv'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($http)</span></span>{\n            <span class=\"hljs-keyword\">return</span> {\n                <span class=\"hljs-comment\">// URL of the all services will be prefixed with the application language</span>\n                groups    :<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(callback)</span></span>{$http.post(<span class=\"hljs-string\">'/admin/ajax/provisionGroup'</span>).success(callback);},  <span class=\"hljs-comment\">// /ru/admin/ajax/provisionGroup </span>\n                provisions:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(callback)</span></span>{$http.post(<span class=\"hljs-string\">'/admin/ajax/provisionList'</span>).success(callback);},   <span class=\"hljs-comment\">// /ru/admin/ajax/provisionList</span>\n                options   :<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(callback)</span></span>{$http.post(<span class=\"hljs-string\">'/admin/ajax/provisionOptions'</span>).success(callback);} <span class=\"hljs-comment\">// /ru/admin/ajax/provisionOptions</span>\n            };\n        });\n</code></pre>\n"},{"html_url":"https://gist.github.com/3c983008126a9ff26533","description":"EOL to <br> filter in AngularJS","files":["https://gist.githubusercontent.com/umidjons/3c983008126a9ff26533/raw/41a6b8878c95cfda73b7b6a17d80d32db9cd8643/eol-nl-endofline-to-br.md"],"content":"EOL to <br> filter in AngularJS\n===\n\nFilter implementation:\n\n```javascript\n\tangular.module('MyApp',[])\n\t\t.filter('nl2br',function(){\n\t\t\treturn function(input,replace){\n\t\t\t\treplace=angular.isDefined(replace) && angular.isString(replace)?replace:'<br>';\n\t\t\t\treturn angular.isDefined(input) && angular.isString(input)?input.replace(/(\\r\\n|\\n|\\r)/gm,replace):input;\n\t\t\t}\n\t\t})\n\t\t.controller('MyCtrl',function($scope){\n\t\t\t$scope.my_string='Hello\\r\\nWorld!\\r\\n\\r\\n';\n\t\t});\n```\n\nUsing:\n```html\n<span ng-bind-html=\"my_string | nl2br\"></span>\n```","html":"<h1 id=\"eol-to-br-filter-in-angularjs\">EOL to <br> filter in AngularJS</h1>\n<p>Filter implementation:</p>\n<pre><code class=\"lang-javascript\">    angular.module(<span class=\"hljs-string\">'MyApp'</span>,[])\n        .filter(<span class=\"hljs-string\">'nl2br'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(input,replace)</span></span>{\n                replace=angular.isDefined(replace) &amp;&amp; angular.isString(replace)?replace:<span class=\"hljs-string\">'&lt;br&gt;'</span>;\n                <span class=\"hljs-keyword\">return</span> angular.isDefined(input) &amp;&amp; angular.isString(input)?input.replace(/(\\r\\n|\\n|\\r)/gm,replace):input;\n            }\n        })\n        .controller(<span class=\"hljs-string\">'MyCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($scope)</span></span>{\n            $scope.my_string=<span class=\"hljs-string\">'Hello\\r\\nWorld!\\r\\n\\r\\n'</span>;\n        });\n</code></pre>\n<p>Using:</p>\n<pre><code class=\"lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">ng-bind-html</span>=<span class=\"hljs-string\">\"my_string | nl2br\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/f9c78648b215a01d4017","description":"Unquote string in JavaScript, filter for AngularJS.","files":["https://gist.githubusercontent.com/umidjons/f9c78648b215a01d4017/raw/4b23a842cb2e6fab25937f7de2422aac21000ac0/unquote-string.md"],"content":"Unquote string in JavaScript, filter for AngularJS.\n===\n\nUnquote filter in AngularJS:\n\n```javascript\nangular.module('app',[])\n.filter('unquote',function(){\n\t\treturn function(input){\n\t\t\treturn angular.isDefined(input) && angular.isString(input)?input.replace(new RegExp('\\\\\\\\\"','g'),'\"'):input;\n\t\t}\n\t})\n\t.controller('MyCtrl',function($scope){\n\t  $scope.my_string='\\\"Test string\\\" \\\"Проверка кириллицами\\\"';\n\t});\n```\n\nUsing in HTML\n```html\n<span>{{ my_string | unquote }}</span>\n```","html":"<h1 id=\"unquote-string-in-javascript-filter-for-angularjs-\">Unquote string in JavaScript, filter for AngularJS.</h1>\n<p>Unquote filter in AngularJS:</p>\n<pre><code class=\"lang-javascript\">angular.module(<span class=\"hljs-string\">'app'</span>,[])\n.filter(<span class=\"hljs-string\">'unquote'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(input)</span></span>{\n            <span class=\"hljs-keyword\">return</span> angular.isDefined(input) &amp;&amp; angular.isString(input)?input.replace(<span class=\"hljs-keyword\">new</span> RegExp(<span class=\"hljs-string\">'\\\\\\\\\"'</span>,<span class=\"hljs-string\">'g'</span>),<span class=\"hljs-string\">'\"'</span>):input;\n        }\n    })\n    .controller(<span class=\"hljs-string\">'MyCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($scope)</span></span>{\n      $scope.my_string=<span class=\"hljs-string\">'\\\"Test string\\\" \\\"Проверка кириллицами\\\"'</span>;\n    });\n</code></pre>\n<p>Using in HTML</p>\n<pre><code class=\"lang-html\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span></span><span class=\"hljs-template-variable\">{{ my_string | unquote }}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/793c503b11fcfac47233","description":"Angular UI-Select: Array of objects with single property binding","files":["https://gist.githubusercontent.com/umidjons/793c503b11fcfac47233/raw/dfd238f46c0f134e7bace18b3138dc554415a840/angular-ui-select-multiple.md"],"content":"Angular UI-Select: Array of objects with single property binding\n===\n\nArray of role objects:\n```js\n$scope.roles=[\n\t{\n\t\t\"name\"       :\"superAdministrator\",\n\t\t\"description\":\"All privileges available\"\n\t},\n\t{\n\t\t\"name\"       :\"siteModerator\",\n\t\t\"description\":\"Moderator of the site\"\n\t},\n\t{\n\t\t\"name\"       :\"registrar\",\n\t\t\"description\":\"Register applications\"\n\t}\n];\n```\n\nSet dependencies and default settings:\n```js\nangular.module('MyApp',['ngSanitize','ui.select'])\n\t.config(function(uiSelectConfig){\n\t\tuiSelectConfig.theme='bootstrap';\n\t\tuiSelectConfig.resetSearchInput=true;\n\t});\n```\n\nPut `ui-select` on the page:\n```html\n<div class=\"form-group\">\n\t<div class=\"col-sm-12\">\n\t\t<label class=\"req\">Roles</label>\n\t\t\n\t\t<ui-select ng-model=\"user.assigned_roles\" multiple>\n\t\t\t<ui-select-match placeholder=\"select\">{{$item.name}}</ui-select-match>\n\t\t\t<ui-select-choices repeat=\"role.name as role in roles | filter:{name:$select.search}\">\n\t\t\t\t<div ng-bind-html=\"role.name | highlight: $select.search\"></div>\n\t\t\t\t<small>{{role.description}}</small>\n\t\t\t</ui-select-choices>\n\t\t</ui-select>\n\t\t\n\t</div>\n</div>\n```\n\nSet default selected values:\n```js\nangular.module('MyApp')\n.controller('UserCtrl',function($scope){\n\t$scope.user={assigned_roles:['registrar']};\n});\n```\n\nIf you have issue with control height (selected items on the first line, search input on the second line),\nthen set this CSS fix:\n```css\n.ui-select-match{ position:absolute; }\n```","html":"<h1 id=\"angular-ui-select-array-of-objects-with-single-property-binding\">Angular UI-Select: Array of objects with single property binding</h1>\n<p>Array of role objects:</p>\n<pre><code class=\"lang-js\">$scope.roles=[\n    {\n        <span class=\"hljs-string\">\"name\"</span>       :<span class=\"hljs-string\">\"superAdministrator\"</span>,\n        <span class=\"hljs-string\">\"description\"</span>:<span class=\"hljs-string\">\"All privileges available\"</span>\n    },\n    {\n        <span class=\"hljs-string\">\"name\"</span>       :<span class=\"hljs-string\">\"siteModerator\"</span>,\n        <span class=\"hljs-string\">\"description\"</span>:<span class=\"hljs-string\">\"Moderator of the site\"</span>\n    },\n    {\n        <span class=\"hljs-string\">\"name\"</span>       :<span class=\"hljs-string\">\"registrar\"</span>,\n        <span class=\"hljs-string\">\"description\"</span>:<span class=\"hljs-string\">\"Register applications\"</span>\n    }\n];\n</code></pre>\n<p>Set dependencies and default settings:</p>\n<pre><code class=\"lang-js\">angular.<span class=\"hljs-built_in\">module</span>(<span class=\"hljs-string\">'MyApp'</span>,[<span class=\"hljs-string\">'ngSanitize'</span>,<span class=\"hljs-string\">'ui.select'</span>])\n    .config(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(uiSelectConfig)</span></span>{\n        uiSelectConfig.theme=<span class=\"hljs-string\">'bootstrap'</span>;\n        uiSelectConfig.resetSearchInput=<span class=\"hljs-keyword\">true</span>;\n    });\n</code></pre>\n<p>Put <code>ui-select</code> on the page:</p>\n<pre><code class=\"lang-html\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-group\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-12\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"req\"</span>&gt;</span>Roles<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ui-select</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"user.assigned_roles\"</span> <span class=\"hljs-attr\">multiple</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ui-select-match</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"select\"</span>&gt;</span></span><span class=\"hljs-template-variable\">{{$item.name}</span><span class=\"xml\">}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ui-select-match</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ui-select-choices</span> <span class=\"hljs-attr\">repeat</span>=<span class=\"hljs-string\">\"role.name as role in roles | filter:</span></span></span><span class=\"hljs-template-variable\">{name:$<span class=\"hljs-keyword\">select</span>.search}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">\"</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-bind-html</span>=<span class=\"hljs-string\">\"role.name | highlight: $select.search\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">small</span>&gt;</span></span><span class=\"hljs-template-variable\">{{role.description}</span><span class=\"xml\">}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">small</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ui-select-choices</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ui-select</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n</code></pre>\n<p>Set default selected values:</p>\n<pre><code class=\"lang-js\">angular.module(<span class=\"hljs-string\">'MyApp'</span>)\n.controller(<span class=\"hljs-string\">'UserCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($scope)</span></span>{\n    $scope.user={assigned_roles:[<span class=\"hljs-string\">'registrar'</span>]};\n});\n</code></pre>\n<p>If you have issue with control height (selected items on the first line, search input on the second line),\nthen set this CSS fix:</p>\n<pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.ui-select-match</span>{ <span class=\"hljs-attribute\">position</span>:absolute; }\n</code></pre>\n"},{"html_url":"https://gist.github.com/55833f44a9f77879b1a0","description":"Get query/search params in AngularJS","files":["https://gist.githubusercontent.com/umidjons/55833f44a9f77879b1a0/raw/ad6285905525ed103147b4289238e9d537ff127e/query-search-params.md"],"content":"Get query/search params in AngularJS\n===\n\nURL is this:\n```\nhttp://mysite.bla/index.php?param1=value1&param2=value2\n```\n\nHere is how to get value of the query parameters:\n\n```javascript\nangular.module('MyApp',[])\n\t.config(function($locationProvider){\n\t\t$locationProvider.html5Mode({\n\t\t\tenabled    :true,\n\t\t\trequireBase:false\n\t\t});\n\t})\n\t.controller('MyCtrl',function($scope,$location){\n\t  $scope.param1=$location.search().param1;\n\t  $scope.param2=$location.search()['param2'];\n\t});\n```","html":"<h1 id=\"get-query-search-params-in-angularjs\">Get query/search params in AngularJS</h1>\n<p>URL is this:</p>\n<pre><code><span class=\"hljs-symbol\">http:</span><span class=\"hljs-comment\">//mysite.bla/index.php?param1=value1&amp;param2=value2</span>\n</code></pre><p>Here is how to get value of the query parameters:</p>\n<pre><code class=\"lang-javascript\">angular.module(<span class=\"hljs-string\">'MyApp'</span>,[])\n    .config(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($locationProvider)</span></span>{\n        $locationProvider.html5Mode({\n            enabled    :<span class=\"hljs-keyword\">true</span>,\n            requireBase:<span class=\"hljs-keyword\">false</span>\n        });\n    })\n    .controller(<span class=\"hljs-string\">'MyCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($scope,$location)</span></span>{\n      $scope.param1=$location.search().param1;\n      $scope.param2=$location.search()[<span class=\"hljs-string\">'param2'</span>];\n    });\n</code></pre>\n"},{"html_url":"https://gist.github.com/d96b4bd85bea530948c2","description":"Duplicate character, that not followed other character","files":["https://gist.githubusercontent.com/umidjons/d96b4bd85bea530948c2/raw/4782673c725ee2af32628fc6215b7fd1230bd301/duplicate-character-backslash.md"],"content":"Duplicate character, that not followed other character\n===\n\nDuplicate all slashes that not followed by quote.\n\nExample:\n\n`\\` should become `\\\\`\n\n`\\\"` should not changed.\n\n```php\n<?php\n// \\ -> \\\\ (duplicated), but \\\" -> \\\" (not changed)\n$str='one\\two\\\"three\\\"four\\five';\necho $str.\"<br>\";\n$str=preg_replace(\"/\\\\\\\\([^\\\"])/m\",\"\\\\\\\\\\\\\\\\$1\",$str); // 'one\\two\\\"three\\\"four\\five' -> 'one\\\\two\\\"three\\\"four\\\\five'\necho $str;\n```","html":"<h1 id=\"duplicate-character-that-not-followed-other-character\">Duplicate character, that not followed other character</h1>\n<p>Duplicate all slashes that not followed by quote.</p>\n<p>Example:</p>\n<p><code>\\</code> should become <code>\\\\</code></p>\n<p><code>\\&quot;</code> should not changed.</p>\n<pre><code class=\"lang-php\">&lt;?php\n// <span class=\"hljs-tag\">\\<span class=\"hljs-name\"> </span></span>-&gt; <span class=\"hljs-tag\">\\<span class=\"hljs-name\">\\</span></span> (duplicated), but <span class=\"hljs-tag\">\\<span class=\"hljs-name\">\"</span></span> -&gt; <span class=\"hljs-tag\">\\<span class=\"hljs-name\">\"</span></span> (not changed)\n<span class=\"hljs-formula\">$str='one<span class=\"hljs-tag\">\\<span class=\"hljs-name\">two</span></span><span class=\"hljs-tag\">\\<span class=\"hljs-name\">\"</span></span>three<span class=\"hljs-tag\">\\<span class=\"hljs-name\">\"</span></span>four<span class=\"hljs-tag\">\\<span class=\"hljs-name\">five</span></span>';\necho $</span>str.\"&lt;br&gt;\";\n<span class=\"hljs-formula\">$str=preg_replace(\"/<span class=\"hljs-tag\">\\<span class=\"hljs-name\">\\</span></span><span class=\"hljs-tag\">\\<span class=\"hljs-name\">\\</span></span>([^<span class=\"hljs-tag\">\\<span class=\"hljs-name\">\"</span></span>])/m\",\"<span class=\"hljs-tag\">\\<span class=\"hljs-name\">\\</span></span><span class=\"hljs-tag\">\\<span class=\"hljs-name\">\\</span></span><span class=\"hljs-tag\">\\<span class=\"hljs-name\">\\</span></span><span class=\"hljs-tag\">\\<span class=\"hljs-name\">\\</span></span>$</span>1\",<span class=\"hljs-formula\">$str); // 'one<span class=\"hljs-tag\">\\<span class=\"hljs-name\">two</span></span><span class=\"hljs-tag\">\\<span class=\"hljs-name\">\"</span></span>three<span class=\"hljs-tag\">\\<span class=\"hljs-name\">\"</span></span>four<span class=\"hljs-tag\">\\<span class=\"hljs-name\">five</span></span>' -&gt; 'one<span class=\"hljs-tag\">\\<span class=\"hljs-name\">\\</span></span>two<span class=\"hljs-tag\">\\<span class=\"hljs-name\">\"</span></span>three<span class=\"hljs-tag\">\\<span class=\"hljs-name\">\"</span></span>four<span class=\"hljs-tag\">\\<span class=\"hljs-name\">\\</span></span>five'\necho $</span>str;\n</code></pre>\n"},{"html_url":"https://gist.github.com/b81e383582bf6ad09ec1","description":"Connect to Oracle DB in PHP script from crontab","files":["https://gist.githubusercontent.com/umidjons/b81e383582bf6ad09ec1/raw/d0930590dbad0dcbb35acd81bd99b8190cb9826f/php-from-cron-oracle.md"],"content":"Connect to Oracle DB in PHP script from crontab\n===\n\nConfigure environment variables\n```bash\n#!/bin/bash\n\n# User specific environment and startup programs\nexport ORACLE_BASE=/usr/lib/oracle/11.2\nexport ORACLE_HOME=$ORACLE_BASE/client\nexport TNS_ADMIN=$ORACLE_HOME/network\nexport NLS_LANG=AMERICAN_AMERICA.AL32UTF8\nexport NLS_DATE_FORMAT=\"DD.MM.YYYY HH24:MI:SS\"\nexport PATH=$PATH:$ORACLE_HOME/bin\nexport LD_LIBRARY_PATH=$ORACLE_HOME/lib\n\nPATH=$PATH:$HOME/bin:$ORACLE_HOME/bin\nexport PATH\n```\n\nUse script in other scripts\n```bash\n#!/bin/bash\n\nJOBS_PATH=/u01/project/local/jobs\n\n# initialize environment\nsource $JOBS_PATH/Config.sh\n\n# run task\n/usr/bin/php -f $JOBS_PATH/src/MailSender.php >> $JOBS_PATH/log/MailSender.log 2>&1\n```","html":"<h1 id=\"connect-to-oracle-db-in-php-script-from-crontab\">Connect to Oracle DB in PHP script from crontab</h1>\n<p>Configure environment variables</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-meta\">#!/bin/bash\n</span>\n<span class=\"hljs-comment\"># User specific environment and startup programs</span>\n<span class=\"hljs-built_in\">export</span> ORACLE_BASE=/usr/lib/oracle/11.2\n<span class=\"hljs-built_in\">export</span> ORACLE_HOME=<span class=\"hljs-variable\">$ORACLE_BASE</span>/client\n<span class=\"hljs-built_in\">export</span> TNS_ADMIN=<span class=\"hljs-variable\">$ORACLE_HOME</span>/network\n<span class=\"hljs-built_in\">export</span> NLS_LANG=AMERICAN_AMERICA.AL32UTF8\n<span class=\"hljs-built_in\">export</span> NLS_DATE_FORMAT=<span class=\"hljs-string\">\"DD.MM.YYYY HH24:MI:SS\"</span>\n<span class=\"hljs-built_in\">export</span> PATH=<span class=\"hljs-variable\">$PATH</span>:<span class=\"hljs-variable\">$ORACLE_HOME</span>/bin\n<span class=\"hljs-built_in\">export</span> LD_LIBRARY_PATH=<span class=\"hljs-variable\">$ORACLE_HOME</span>/lib\n\nPATH=<span class=\"hljs-variable\">$PATH</span>:<span class=\"hljs-variable\">$HOME</span>/bin:<span class=\"hljs-variable\">$ORACLE_HOME</span>/bin\n<span class=\"hljs-built_in\">export</span> PATH\n</code></pre>\n<p>Use script in other scripts</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-meta\">#!/bin/bash\n</span>\nJOBS_PATH=/u01/project/<span class=\"hljs-built_in\">local</span>/<span class=\"hljs-built_in\">jobs</span>\n\n<span class=\"hljs-comment\"># initialize environment</span>\n<span class=\"hljs-built_in\">source</span> <span class=\"hljs-variable\">$JOBS_PATH</span>/Config.sh\n\n<span class=\"hljs-comment\"># run task</span>\n/usr/bin/php <span class=\"hljs-_\">-f</span> <span class=\"hljs-variable\">$JOBS_PATH</span>/src/MailSender.php &gt;&gt; <span class=\"hljs-variable\">$JOBS_PATH</span>/<span class=\"hljs-built_in\">log</span>/MailSender.log 2&gt;&amp;1\n</code></pre>\n"},{"html_url":"https://gist.github.com/cfea8fdbd14673fd7d32","description":"Remove duplicated row leaving only unique one. Original blog is here http://viralpatel.net/blogs/deleting-duplicate-rows-in-oracle/","files":["https://gist.githubusercontent.com/umidjons/cfea8fdbd14673fd7d32/raw/c8ef1f7b9083a826c154964abf481e7d0d101f18/remove-duplicate-rows.md"],"content":"Remove duplicated row leaving only unique one\n===\n\nVersion #1.\n```sql\ndelete from MyTable a where rowid<(select max(rowid) from MyTable b where a.ID = b.ID)\n```\n\nVersion #2.\n```sql\n-- remove duplicate rows from table\n-- in the declaration_creditor table only one row should be exist by declaration_code\nDELETE FROM declaration_creditor\nWHERE ROWID IN (\n  SELECT rid FROM (\n    SELECT ROWID rid, ROW_NUMBER() OVER(PARTITION BY t.declaration_code ORDER BY ROWID) rn\n    FROM declaration_creditor t)\nWHERE rn <> 1);\n```","html":"<h1 id=\"remove-duplicated-row-leaving-only-unique-one\">Remove duplicated row leaving only unique one</h1>\n<p>Version #1.</p>\n<pre><code class=\"lang-sql\">delete from MyTable <span class=\"hljs-selector-tag\">a</span> where rowid&lt;(select max(rowid) from MyTable <span class=\"hljs-selector-tag\">b</span> where <span class=\"hljs-selector-tag\">a</span><span class=\"hljs-selector-class\">.ID</span> = <span class=\"hljs-selector-tag\">b</span>.ID)\n</code></pre>\n<p>Version #2.</p>\n<pre><code class=\"lang-sql\"><span class=\"hljs-comment\">-- remove duplicate rows from table</span>\n<span class=\"hljs-comment\">-- in the declaration_creditor table only one row should be exist by declaration_code</span>\n<span class=\"hljs-keyword\">DELETE</span> <span class=\"hljs-keyword\">FROM</span> declaration_creditor\n<span class=\"hljs-keyword\">WHERE</span> <span class=\"hljs-keyword\">ROWID</span> <span class=\"hljs-keyword\">IN</span> (\n  <span class=\"hljs-keyword\">SELECT</span> rid <span class=\"hljs-keyword\">FROM</span> (\n    <span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-keyword\">ROWID</span> rid, ROW_NUMBER() <span class=\"hljs-keyword\">OVER</span>(<span class=\"hljs-keyword\">PARTITION</span> <span class=\"hljs-keyword\">BY</span> t.declaration_code <span class=\"hljs-keyword\">ORDER</span> <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-keyword\">ROWID</span>) rn\n    <span class=\"hljs-keyword\">FROM</span> declaration_creditor t)\n<span class=\"hljs-keyword\">WHERE</span> rn &lt;&gt; <span class=\"hljs-number\">1</span>);\n</code></pre>\n"},{"html_url":"https://gist.github.com/9813d28a3a7537429d1b","description":"Guzzle example","files":["https://gist.githubusercontent.com/umidjons/9813d28a3a7537429d1b/raw/a827e017678c377ac05a05d158e43b1d86ee2511/guzzle-example.md"],"content":"Guzzle example\n===\n\n```php\n<?php\nrequire_once('guzzle/autoloader.php');\n\nuse GuzzleHttp\\Client;\n\n$client=new Client([\n\t'base_url'=>'https://11.16.53.79:4009/iservices/wsgnkapi',\n\t'defaults'=>[\n\t\t'auth'      =>['user1','mypass','basic'],\n\t\t'stream'    =>false,\n\t\t'verify'    =>false,\n\t\t'exceptions'=>false,\n\t]\n]);\n\n$res =$client->get('?PARAMS={\"action\":\"get_Recvisits\",\"tin\":\"1234567\"}');\n$body=$res->getBody();\necho $body->getContents();\n```\n\nResponse\n```json\n{\"err_code\":\"0\",\"err_text\":\"ok\",\"root\":[{\"region\":\"New York\",\"sost\":\"active\",\"district\":\"NY\",\"aname\":\"John Doe\"}]}\n```","html":"<h1 id=\"guzzle-example\">Guzzle example</h1>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">require_once</span>(<span class=\"hljs-string\">'guzzle/autoloader.php'</span>);\n\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">GuzzleHttp</span>\\<span class=\"hljs-title\">Client</span>;\n\n$client=<span class=\"hljs-keyword\">new</span> Client([\n    <span class=\"hljs-string\">'base_url'</span>=&gt;<span class=\"hljs-string\">'https://11.16.53.79:4009/iservices/wsgnkapi'</span>,\n    <span class=\"hljs-string\">'defaults'</span>=&gt;[\n        <span class=\"hljs-string\">'auth'</span>      =&gt;[<span class=\"hljs-string\">'user1'</span>,<span class=\"hljs-string\">'mypass'</span>,<span class=\"hljs-string\">'basic'</span>],\n        <span class=\"hljs-string\">'stream'</span>    =&gt;<span class=\"hljs-keyword\">false</span>,\n        <span class=\"hljs-string\">'verify'</span>    =&gt;<span class=\"hljs-keyword\">false</span>,\n        <span class=\"hljs-string\">'exceptions'</span>=&gt;<span class=\"hljs-keyword\">false</span>,\n    ]\n]);\n\n$res =$client-&gt;get(<span class=\"hljs-string\">'?PARAMS={\"action\":\"get_Recvisits\",\"tin\":\"1234567\"}'</span>);\n$body=$res-&gt;getBody();\n<span class=\"hljs-keyword\">echo</span> $body-&gt;getContents();</span>\n</code></pre>\n<p>Response</p>\n<pre><code class=\"lang-json\">{<span class=\"hljs-attr\">\"err_code\"</span>:<span class=\"hljs-string\">\"0\"</span>,<span class=\"hljs-attr\">\"err_text\"</span>:<span class=\"hljs-string\">\"ok\"</span>,<span class=\"hljs-attr\">\"root\"</span>:[{<span class=\"hljs-attr\">\"region\"</span>:<span class=\"hljs-string\">\"New York\"</span>,<span class=\"hljs-attr\">\"sost\"</span>:<span class=\"hljs-string\">\"active\"</span>,<span class=\"hljs-attr\">\"district\"</span>:<span class=\"hljs-string\">\"NY\"</span>,<span class=\"hljs-attr\">\"aname\"</span>:<span class=\"hljs-string\">\"John Doe\"</span>}]}\n</code></pre>\n"},{"html_url":"https://gist.github.com/2bdf56234fe110048c8a","description":"Count down custom directive","files":["https://gist.githubusercontent.com/umidjons/2bdf56234fe110048c8a/raw/971ee7a226a47b1f4b49202efe8fde224af62fe6/count-down-custom-directive.md"],"content":"Count down custom directive\n===\n\nImplementation:\n\n```javascript\nangular.module('MyApp',[])\n.directive('countdown',function($interval){\n\t\t/**\n\t\t * cdAttr      - variable name from scope, changed on every tick.\n\t\t * cdValue     - countdown value, e.g.: 10 - means 10 sec.\n\t\t * cdInterval  - value or variable from scope in milliseconds. (0-stop, interval>0 start).\n\t\t * cdInc       - decrease countdown value by this value (or variable from scope).\n\t\t * cdFinFn     - callback function name from scope that will be called on countdown finish.\n\t\t *\n\t\t * Example:\n\t\t * <countdown cd-attr=\"countdown_tick\" cd-value=\"60\" cd-interval=\"1000\" cd-inc=\"1\" cd-fin-fn=\"refreshGraph\">{{countdown_tick}}</countdown>\n\t\t */\n\t\tvar iv=null;\n\t\treturn {\n\t\t\trestrict:'EA',\n\t\t\tlink    :function(scope,elem,attrs){\n\t\t\t\tscope[attrs.cdAttr]=$.isNumeric(attrs.cdValue)?attrs.cdValue*1:scope.$eval(attrs.cdValue)*1;\n\t\t\t\tvar start=function(){\n\t\t\t\t\tscope[attrs.cdAttr]=(scope[attrs.cdAttr]*1)-(scope.$eval(attrs.cdInc)*1); // decrease counter value of the countdown\n\t\t\t\t\tif(scope[attrs.cdAttr]<=0){                                               // check, whether countdown has been finished\n\t\t\t\t\t\tif(angular.isFunction(scope[attrs.cdFinFn]))                            // if finish callback set, then call it\n\t\t\t\t\t\t\tscope[attrs.cdFinFn]();\n\t\t\t\t\t\tscope[attrs.cdAttr]=scope.$eval(attrs.cdValue)*1;                       // reset initial value of the counter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tscope.$watch(attrs.cdInterval,function(newIntervalVal){\n\t\t\t\t\tif(iv!==null) $interval.cancel(iv);                                       // anyway stop timer\n\t\t\t\t\tif((newIntervalVal*1)==0) iv=null;                                        // if interval is falsy, then pause it.\n\t\t\t\t\telse iv=$interval(start,angular.isDefined(scope.$eval(attrs.cdInterval))?scope.$eval(attrs.cdInterval)*1:def.interval);                 // if truth interval, then start a timer.}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t})\n\t.controller('MyCtrl',function($scope,Methods,$http){\n\t\t$scope.countdown=100;    // start value\n\t\t$scope.countdown_tick=0; // count down from 100 to 0\n\t\t$scope.interval=2000;    // every 2 seconds\n\t\t$scope.dec=2;\n\t\t$scope.fntest=function(){\n\t\t\tconsole.log('fn test called');\n\t\t}\n\t\t$scope.myFunc=function(){\n\t\t\tconsole.log('My function called');\n\t\t}\n\t});\n```\n\nUsing example:\n\n```html\n\t<countdown cd-attr=\"countdown_tick\" cd-value=\"countdown\" cd-interval=\"interval\" cd-inc=\"dec\" cd-fin-fn=\"fntest\">{{countdown_tick}}</countdown>\n\t<countdown cd-attr=\"tickRefresh\" cd-value=\"60\" cd-interval=\"1000\" cd-inc=\"1\" cd-fin-fn=\"myFunc\"></countdown>\n\t<span class=\"label label-success\">{{tickRefresh}}</span>\n```","html":"<h1 id=\"count-down-custom-directive\">Count down custom directive</h1>\n<p>Implementation:</p>\n<pre><code class=\"lang-javascript\">angular.module(<span class=\"hljs-string\">'MyApp'</span>,[])\n.directive(<span class=\"hljs-string\">'countdown'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($interval)</span></span>{\n        <span class=\"hljs-comment\">/**\n         * cdAttr      - variable name from scope, changed on every tick.\n         * cdValue     - countdown value, e.g.: 10 - means 10 sec.\n         * cdInterval  - value or variable from scope in milliseconds. (0-stop, interval&gt;0 start).\n         * cdInc       - decrease countdown value by this value (or variable from scope).\n         * cdFinFn     - callback function name from scope that will be called on countdown finish.\n         *\n         * Example:\n         * &lt;countdown cd-attr=\"countdown_tick\" cd-value=\"60\" cd-interval=\"1000\" cd-inc=\"1\" cd-fin-fn=\"refreshGraph\"&gt;{{countdown_tick}}&lt;/countdown&gt;\n         */</span>\n        <span class=\"hljs-keyword\">var</span> iv=<span class=\"hljs-keyword\">null</span>;\n        <span class=\"hljs-keyword\">return</span> {\n            restrict:<span class=\"hljs-string\">'EA'</span>,\n            link    :<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(scope,elem,attrs)</span></span>{\n                scope[attrs.cdAttr]=$.isNumeric(attrs.cdValue)?attrs.cdValue*<span class=\"hljs-number\">1</span>:scope.$eval(attrs.cdValue)*<span class=\"hljs-number\">1</span>;\n                <span class=\"hljs-keyword\">var</span> start=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n                    scope[attrs.cdAttr]=(scope[attrs.cdAttr]*<span class=\"hljs-number\">1</span>)-(scope.$eval(attrs.cdInc)*<span class=\"hljs-number\">1</span>); <span class=\"hljs-comment\">// decrease counter value of the countdown</span>\n                    <span class=\"hljs-keyword\">if</span>(scope[attrs.cdAttr]&lt;=<span class=\"hljs-number\">0</span>){                                               <span class=\"hljs-comment\">// check, whether countdown has been finished</span>\n                        <span class=\"hljs-keyword\">if</span>(angular.isFunction(scope[attrs.cdFinFn]))                            <span class=\"hljs-comment\">// if finish callback set, then call it</span>\n                            scope[attrs.cdFinFn]();\n                        scope[attrs.cdAttr]=scope.$eval(attrs.cdValue)*<span class=\"hljs-number\">1</span>;                       <span class=\"hljs-comment\">// reset initial value of the counter</span>\n                    }\n                }\n                scope.$watch(attrs.cdInterval,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(newIntervalVal)</span></span>{\n                    <span class=\"hljs-keyword\">if</span>(iv!==<span class=\"hljs-keyword\">null</span>) $interval.cancel(iv);                                       <span class=\"hljs-comment\">// anyway stop timer</span>\n                    <span class=\"hljs-keyword\">if</span>((newIntervalVal*<span class=\"hljs-number\">1</span>)==<span class=\"hljs-number\">0</span>) iv=<span class=\"hljs-keyword\">null</span>;                                        <span class=\"hljs-comment\">// if interval is falsy, then pause it.</span>\n                    <span class=\"hljs-keyword\">else</span> iv=$interval(start,angular.isDefined(scope.$eval(attrs.cdInterval))?scope.$eval(attrs.cdInterval)*<span class=\"hljs-number\">1</span>:def.interval);                 <span class=\"hljs-comment\">// if truth interval, then start a timer.}</span>\n                });\n            }\n        };\n    })\n    .controller(<span class=\"hljs-string\">'MyCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($scope,Methods,$http)</span></span>{\n        $scope.countdown=<span class=\"hljs-number\">100</span>;    <span class=\"hljs-comment\">// start value</span>\n        $scope.countdown_tick=<span class=\"hljs-number\">0</span>; <span class=\"hljs-comment\">// count down from 100 to 0</span>\n        $scope.interval=<span class=\"hljs-number\">2000</span>;    <span class=\"hljs-comment\">// every 2 seconds</span>\n        $scope.dec=<span class=\"hljs-number\">2</span>;\n        $scope.fntest=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n            console.log(<span class=\"hljs-string\">'fn test called'</span>);\n        }\n        $scope.myFunc=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n            console.log(<span class=\"hljs-string\">'My function called'</span>);\n        }\n    });\n</code></pre>\n<p>Using example:</p>\n<pre><code class=\"lang-html\">    &lt;countdown <span class=\"hljs-keyword\">cd</span>-attr=<span class=\"hljs-string\">\"countdown_tick\"</span> <span class=\"hljs-keyword\">cd</span>-value=<span class=\"hljs-string\">\"countdown\"</span> <span class=\"hljs-keyword\">cd</span>-interval=<span class=\"hljs-string\">\"interval\"</span> <span class=\"hljs-keyword\">cd</span>-inc=<span class=\"hljs-string\">\"dec\"</span> <span class=\"hljs-keyword\">cd</span>-<span class=\"hljs-keyword\">fin</span>-fn=<span class=\"hljs-string\">\"fntest\"</span>&gt;{{countdown_tick}}&lt;/countdown&gt;\n    &lt;countdown <span class=\"hljs-keyword\">cd</span>-attr=<span class=\"hljs-string\">\"tickRefresh\"</span> <span class=\"hljs-keyword\">cd</span>-value=<span class=\"hljs-string\">\"60\"</span> <span class=\"hljs-keyword\">cd</span>-interval=<span class=\"hljs-string\">\"1000\"</span> <span class=\"hljs-keyword\">cd</span>-inc=<span class=\"hljs-string\">\"1\"</span> <span class=\"hljs-keyword\">cd</span>-<span class=\"hljs-keyword\">fin</span>-fn=<span class=\"hljs-string\">\"myFunc\"</span>&gt;&lt;/countdown&gt;\n    &lt;span class=<span class=\"hljs-string\">\"label label-success\"</span>&gt;{{tickRefresh}}&lt;/span&gt;\n</code></pre>\n"},{"html_url":"https://gist.github.com/dbab0c4753571c805313","description":"Loading indicator directive. Directive styling, template examples.","files":["https://gist.githubusercontent.com/umidjons/dbab0c4753571c805313/raw/5746d0f0a8922c2f0c24a734b779ae39e2286708/loading-indicator.md"],"content":"Loading indicator directive\n===\n\n```javascript\nangular.module('MyApp',[])\n.directive('loading',function($http,$rootScope){\n\t\treturn {\n\t\t\trestrict:'E',\n\t\t\tlink    :function(scope,elem,attrs,ctrl){\n\t\t\t\t$rootScope.inProgress=true;\n\t\t\t\tangular.element(document).find('head').prepend('<style type=\"text/css\">.loading-indicator{z-index:9999;position:fixed;top:60px;right:20px;color:#7e8fe5;}</style>');\n\t\t\t\tscope.isLoading=function(){return $http.pendingRequests.length>0;};\n\t\t\t\tscope.$watch(scope.isLoading,function(loading){\n\t\t\t\t\t$rootScope.inProgress=loading;\n\t\t\t\t});\n\t\t\t},\n\t\t\ttemplate:'<i ng-show=\"inProgress\" class=\"loading-indicator fa fa-spinner fa-pulse fa-3x\"></i>'\n\t\t};\n\t})\n```\n\nLoading indicator directive (old version)\n===\n\nConfigure interceptors to broadcast events.\nIn directive listen these events & show/hide indicator.\n\n```javascript\nangular.module('MyApp',[])\n\t.config(function($httpProvider){\n\t\t$httpProvider.interceptors.unshift(function($q,$rootScope,toaster){\n\t\t\treturn {\n\t\t\t\trequest      :function(config){\n\t\t\t\t\t$rootScope.$broadcast('loadingStart');\n\t\t\t\t\treturn config || $q.when(config);\n\t\t\t\t},\n\t\t\t\tresponse     :function(response){\n\t\t\t\t\t$rootScope.$broadcast('loadingEnd');\n\t\t\t\t\treturn response || $q.when(response);\n\t\t\t\t},\n\t\t\t\tresponseError:function(response){\n\t\t\t\t\t$rootScope.$broadcast('loadingEnd');\n\t\t\t\t\treturn $q.reject(response);\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t})\n\t.directive('loading',function(){\n\t\treturn {\n\t\t\trestrict:'E',\n\t\t\tlink    :function(scope,elem,attrs,ctrl){\n\t\t\t\tscope.inProgress=false;\n\t\t\t\tangular.element(document).find('head').prepend('<style type=\"text/css\">.loading-indicator{z-index:9999;position:fixed;top:60px;right:20px;color:#7e8fe5;}</style>');\n\t\t\t\tscope.$on('loadingStart',function(){scope.inProgress=true;});\n\t\t\t\tscope.$on('loadingEnd',function(){scope.inProgress=false;});\n\t\t\t},\n\t\t\ttemplate:'<i ng-show=\"inProgress\" class=\"loading-indicator fa fa-spinner fa-pulse fa-3x\"></i>'\n\t\t};\n\t});\n```\n\nUsing directive:\n```html\n<loading></loading>\n```","html":"<h1 id=\"loading-indicator-directive\">Loading indicator directive</h1>\n<pre><code class=\"lang-javascript\">angular.module('MyApp',[])\n.directive('loading',function($http,$rootScope){\n        return {\n            restrict:'E',\n            link    :function(scope,elem,attrs,ctrl){\n                $rootScope.inProgress=true;\n                angular.element(document).find('head').prepend('<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text/css\"</span>&gt;</span><span class=\"css\"><span class=\"hljs-selector-class\">.loading-indicator</span>{<span class=\"hljs-attribute\">z-index</span>:<span class=\"hljs-number\">9999</span>;<span class=\"hljs-attribute\">position</span>:fixed;<span class=\"hljs-attribute\">top</span>:<span class=\"hljs-number\">60px</span>;<span class=\"hljs-attribute\">right</span>:<span class=\"hljs-number\">20px</span>;<span class=\"hljs-attribute\">color</span>:<span class=\"hljs-number\">#7e8fe5</span>;}</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>');\n                scope.isLoading=function(){return $http.pendingRequests.length&gt;0;};\n                scope.$watch(scope.isLoading,function(loading){\n                    $rootScope.inProgress=loading;\n                });\n            },\n            template:'<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">ng-show</span>=<span class=\"hljs-string\">\"inProgress\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"loading-indicator fa fa-spinner fa-pulse fa-3x\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>'\n        };\n    })\n</code></pre>\n<h1 id=\"loading-indicator-directive-old-version-\">Loading indicator directive (old version)</h1>\n<p>Configure interceptors to broadcast events.\nIn directive listen these events &amp; show/hide indicator.</p>\n<pre><code class=\"lang-javascript\">angular.module(<span class=\"hljs-string\">'MyApp'</span>,[])\n    .config(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($httpProvider)</span></span>{\n        $httpProvider.interceptors.unshift(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($q,$rootScope,toaster)</span></span>{\n            <span class=\"hljs-keyword\">return</span> {\n                request      :<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(config)</span></span>{\n                    $rootScope.$broadcast(<span class=\"hljs-string\">'loadingStart'</span>);\n                    <span class=\"hljs-keyword\">return</span> config || $q.when(config);\n                },\n                response     :<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(response)</span></span>{\n                    $rootScope.$broadcast(<span class=\"hljs-string\">'loadingEnd'</span>);\n                    <span class=\"hljs-keyword\">return</span> response || $q.when(response);\n                },\n                responseError:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(response)</span></span>{\n                    $rootScope.$broadcast(<span class=\"hljs-string\">'loadingEnd'</span>);\n                    <span class=\"hljs-keyword\">return</span> $q.reject(response);\n                }\n            };\n        });\n    })\n    .directive(<span class=\"hljs-string\">'loading'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n        <span class=\"hljs-keyword\">return</span> {\n            restrict:<span class=\"hljs-string\">'E'</span>,\n            link    :<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(scope,elem,attrs,ctrl)</span></span>{\n                scope.inProgress=<span class=\"hljs-keyword\">false</span>;\n                angular.element(document).find(<span class=\"hljs-string\">'head'</span>).prepend(<span class=\"hljs-string\">'&lt;style type=\"text/css\"&gt;.loading-indicator{z-index:9999;position:fixed;top:60px;right:20px;color:#7e8fe5;}&lt;/style&gt;'</span>);\n                scope.$on(<span class=\"hljs-string\">'loadingStart'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{scope.inProgress=<span class=\"hljs-keyword\">true</span>;});\n                scope.$on(<span class=\"hljs-string\">'loadingEnd'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{scope.inProgress=<span class=\"hljs-keyword\">false</span>;});\n            },\n            template:<span class=\"hljs-string\">'&lt;i ng-show=\"inProgress\" class=\"loading-indicator fa fa-spinner fa-pulse fa-3x\"&gt;&lt;/i&gt;'</span>\n        };\n    });\n</code></pre>\n<p>Using directive:</p>\n<pre><code class=\"lang-html\"><span class=\"hljs-section\">&lt;loading&gt;</span><span class=\"hljs-section\">&lt;/loading&gt;</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/352da2a4209691d425d4","description":"Export HTML table to Excel in AngularJS","files":["https://gist.githubusercontent.com/umidjons/352da2a4209691d425d4/raw/33b5874d0b9e0c7056183b1c5d4282ead6f81432/export-html-table-to-excel.md"],"content":"Export HTML table to Excel in AngularJS\n===\n\n```javascript\nmyApp.factory('Excel',function($window){\n\t\tvar uri='data:application/vnd.ms-excel;base64,',\n\t\t\ttemplate='<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-microsoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>',\n\t\t\tbase64=function(s){return $window.btoa(unescape(encodeURIComponent(s)));},\n\t\t\tformat=function(s,c){return s.replace(/{(\\w+)}/g,function(m,p){return c[p];})};\n\t\treturn {\n\t\t\ttableToExcel:function(tableId,worksheetName){\n\t\t\t\tvar table=$(tableId),\n\t\t\t\t\tctx={worksheet:worksheetName,table:table.html()},\n\t\t\t\t\thref=uri+base64(format(template,ctx));\n\t\t\t\treturn href;\n\t\t\t}\n\t\t};\n\t})\n\t.controller('MyCtrl',function(Excel,$timeout){\n\t  $scope.exportToExcel=function(tableId){ // ex: '#my-table'\n\t\t\t$scope.exportHref=Excel.tableToExcel(tableId,'sheet name');\n\t\t\t$timeout(function(){location.href=$scope.fileData.exportHref;},100); // trigger download\n\t\t}\n\t});\n```\n\nHow to use:\n```html\n\t<button class=\"btn btn-link\" ng-click=\"exportToExcel('#table1')\">\n\t\t<span class=\"glyphicon glyphicon-share\"></span> Export to Excel\n\t</button>\n```","html":"<h1 id=\"export-html-table-to-excel-in-angularjs\">Export HTML table to Excel in AngularJS</h1>\n<pre><code class=\"lang-javascript\">myApp.factory(<span class=\"hljs-string\">'Excel'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($window)</span></span>{\n        <span class=\"hljs-keyword\">var</span> uri=<span class=\"hljs-string\">'data:application/vnd.ms-excel;base64,'</span>,\n            template=<span class=\"hljs-string\">'&lt;html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-microsoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"&gt;&lt;head&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;&lt;x:ExcelWorkbook&gt;&lt;x:ExcelWorksheets&gt;&lt;x:ExcelWorksheet&gt;&lt;x:Name&gt;{worksheet}&lt;/x:Name&gt;&lt;x:WorksheetOptions&gt;&lt;x:DisplayGridlines/&gt;&lt;/x:WorksheetOptions&gt;&lt;/x:ExcelWorksheet&gt;&lt;/x:ExcelWorksheets&gt;&lt;/x:ExcelWorkbook&gt;&lt;/xml&gt;&lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;table&gt;{table}&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;'</span>,\n            base64=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(s)</span></span>{<span class=\"hljs-keyword\">return</span> $window.btoa(unescape(encodeURIComponent(s)));},\n            format=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(s,c)</span></span>{<span class=\"hljs-keyword\">return</span> s.replace(/{(\\w+)}/g,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(m,p)</span></span>{<span class=\"hljs-keyword\">return</span> c[p];})};\n        <span class=\"hljs-keyword\">return</span> {\n            tableToExcel:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(tableId,worksheetName)</span></span>{\n                <span class=\"hljs-keyword\">var</span> table=$(tableId),\n                    ctx={worksheet:worksheetName,table:table.html()},\n                    href=uri+base64(format(template,ctx));\n                <span class=\"hljs-keyword\">return</span> href;\n            }\n        };\n    })\n    .controller(<span class=\"hljs-string\">'MyCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(Excel,$timeout)</span></span>{\n      $scope.exportToExcel=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(tableId)</span></span>{ <span class=\"hljs-comment\">// ex: '#my-table'</span>\n            $scope.exportHref=Excel.tableToExcel(tableId,<span class=\"hljs-string\">'sheet name'</span>);\n            $timeout(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{location.href=$scope.fileData.exportHref;},<span class=\"hljs-number\">100</span>); <span class=\"hljs-comment\">// trigger download</span>\n        }\n    });\n</code></pre>\n<p>How to use:</p>\n<pre><code class=\"lang-html\">    &lt;button <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"btn btn-link\"</span> ng-click=<span class=\"hljs-string\">\"exportToExcel('#table1')\"</span>&gt;\n        <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"glyphicon glyphicon-share\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span></span> Export to Excel\n    &lt;<span class=\"hljs-regexp\">/button&gt;</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/35d2c1aa9504b9d41ff5","description":"Whitelist href='unsafe:data:*'","files":["https://gist.githubusercontent.com/umidjons/35d2c1aa9504b9d41ff5/raw/e7ddf8eb58a12bba0e115a2917d74872dcef769a/unsafe-whitelist.md"],"content":"Whitelist href='unsafe:data:*'\n===\n\n```js\nmyApp.config(function($compileProvider){\n\t\t$compileProvider.aHrefSanitizationWhitelist(/^\\s*(https?|ftp|mailto|file|data):/);\n\t})\n```","html":"<h1 id=\"whitelist-href-unsafe-data-\">Whitelist href=&#39;unsafe:data:*&#39;</h1>\n<pre><code class=\"lang-js\">myApp.config(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($compileProvider)</span></span>{\n        $compileProvider.aHrefSanitizationWhitelist(/^\\s*(https?|ftp|mailto|<span class=\"hljs-keyword\">file</span>|<span class=\"hljs-keyword\">data</span>):/);\n    })\n</code></pre>\n"},{"html_url":"https://gist.github.com/0beca6b92f4f437af169","description":"TimestampBehavior in Yii2","files":["https://gist.githubusercontent.com/umidjons/0beca6b92f4f437af169/raw/e91b41e60d8c438d7edfbb56e1a4debc8747adbe/timestamp-behavior-yii2.md"],"content":"TimestampBehavior in Yii2\n===\nAdd usage statement:\n```php\n<?php\nuse yii\\behaviors\\TimestampBehavior;\n```\n\nAdd this code into model:\n```php\n<?php\npublic function behaviors()\n\t{\n\t\treturn [\n\t\t\t'timestamp'=>[\n\t\t\t\t'class'     =>TimestampBehavior::className(),\n\t\t\t\t'attributes'=>[\n\t\t\t\t\tActiveRecord::EVENT_BEFORE_INSERT=>['conf_date','conf_date'],\n\t\t\t\t\tActiveRecord::EVENT_BEFORE_UPDATE=>'conf_date',\n\t\t\t\t],\n\t\t\t],\n\t\t];\n\t}\n```\n\nUse in controller like this:\n```php\n<?php\n$model=new SettingHistory();\n$model->conf_value=123;\n$model->touch('conf_date'); // init conf_date with timestamp value\n$model->save();\n```","html":"<h1 id=\"timestampbehavior-in-yii2\">TimestampBehavior in Yii2</h1>\n<p>Add usage statement:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">yii</span>\\<span class=\"hljs-title\">behaviors</span>\\<span class=\"hljs-title\">TimestampBehavior</span>;</span>\n</code></pre>\n<p>Add this code into model:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">behaviors</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> [\n            <span class=\"hljs-string\">'timestamp'</span>=&gt;[\n                <span class=\"hljs-string\">'class'</span>     =&gt;TimestampBehavior::className(),\n                <span class=\"hljs-string\">'attributes'</span>=&gt;[\n                    ActiveRecord::EVENT_BEFORE_INSERT=&gt;[<span class=\"hljs-string\">'conf_date'</span>,<span class=\"hljs-string\">'conf_date'</span>],\n                    ActiveRecord::EVENT_BEFORE_UPDATE=&gt;<span class=\"hljs-string\">'conf_date'</span>,\n                ],\n            ],\n        ];\n    }</span>\n</code></pre>\n<p>Use in controller like this:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n$model=<span class=\"hljs-keyword\">new</span> SettingHistory();\n$model-&gt;conf_value=<span class=\"hljs-number\">123</span>;\n$model-&gt;touch(<span class=\"hljs-string\">'conf_date'</span>); <span class=\"hljs-comment\">// init conf_date with timestamp value</span>\n$model-&gt;save();</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/c564891bdf8f8ae1366c","description":"Transaction example in Yii2","files":["https://gist.githubusercontent.com/umidjons/c564891bdf8f8ae1366c/raw/090561dd9d034fb387db09e53e8469464b0ab011/yii2-transaction.md"],"content":"Transaction example in Yii2\n===\n\n```php\n<?php\npublic function actionSave()\n{\n    $set=Yii::$app->request->post('Setting');\n    if(isset($set['id']))\n    {\n        Yii::$app->db->transaction(function (Connection $db) use ($set)\n        {\n            $model    =$this->findModel($set['id']);\n            $old_model=clone $model;\n            if(isset($set['conf_value'])) $model->conf_value=$set['conf_value'];\n            if(isset($set['status'])) $model->status=$set['status'];\n            if($old_model->conf_value!=$model->conf_value || $old_model->status!=$model->status)\n            {\n                $user_id=Yii::$app->user->isGuest?1:Yii::$app->user->id; // #todo: remove guest after RBAC implementation\n                $db->createCommand()->update(Setting::tableName(),['conf_value'=>$model->conf_value,'status'=>$model->status],['id'=>$model->id])->execute();\n                $db->createCommand()->insert(SettingHistory::tableName(),[\n                    'conf_id'    =>$old_model->id,\n                    'conf_value' =>$old_model->conf_value,\n                    'conf_status'=>$old_model->status,\n                    'conf_date'  =>new Expression('NOW()'),\n                    'user_id'    =>$user_id,\n                ])->execute();\n                F::resp(200,'Saved!');\n            }\n            else F::resp(200,'Nothing changed.');\n        });\n    }\n    else F::resp(404,'Setting not found.');\n}\n```","html":"<h1 id=\"transaction-example-in-yii2\">Transaction example in Yii2</h1>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">actionSave</span><span class=\"hljs-params\">()</span>\n</span>{\n    $set=Yii::$app-&gt;request-&gt;post(<span class=\"hljs-string\">'Setting'</span>);\n    <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>($set[<span class=\"hljs-string\">'id'</span>]))\n    {\n        Yii::$app-&gt;db-&gt;transaction(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(Connection $db)</span> <span class=\"hljs-title\">use</span> <span class=\"hljs-params\">($set)</span>\n        </span>{\n            $model    =<span class=\"hljs-keyword\">$this</span>-&gt;findModel($set[<span class=\"hljs-string\">'id'</span>]);\n            $old_model=<span class=\"hljs-keyword\">clone</span> $model;\n            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>($set[<span class=\"hljs-string\">'conf_value'</span>])) $model-&gt;conf_value=$set[<span class=\"hljs-string\">'conf_value'</span>];\n            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>($set[<span class=\"hljs-string\">'status'</span>])) $model-&gt;status=$set[<span class=\"hljs-string\">'status'</span>];\n            <span class=\"hljs-keyword\">if</span>($old_model-&gt;conf_value!=$model-&gt;conf_value || $old_model-&gt;status!=$model-&gt;status)\n            {\n                $user_id=Yii::$app-&gt;user-&gt;isGuest?<span class=\"hljs-number\">1</span>:Yii::$app-&gt;user-&gt;id; <span class=\"hljs-comment\">// #<span class=\"hljs-doctag\">todo:</span> remove guest after RBAC implementation</span>\n                $db-&gt;createCommand()-&gt;update(Setting::tableName(),[<span class=\"hljs-string\">'conf_value'</span>=&gt;$model-&gt;conf_value,<span class=\"hljs-string\">'status'</span>=&gt;$model-&gt;status],[<span class=\"hljs-string\">'id'</span>=&gt;$model-&gt;id])-&gt;execute();\n                $db-&gt;createCommand()-&gt;insert(SettingHistory::tableName(),[\n                    <span class=\"hljs-string\">'conf_id'</span>    =&gt;$old_model-&gt;id,\n                    <span class=\"hljs-string\">'conf_value'</span> =&gt;$old_model-&gt;conf_value,\n                    <span class=\"hljs-string\">'conf_status'</span>=&gt;$old_model-&gt;status,\n                    <span class=\"hljs-string\">'conf_date'</span>  =&gt;<span class=\"hljs-keyword\">new</span> Expression(<span class=\"hljs-string\">'NOW()'</span>),\n                    <span class=\"hljs-string\">'user_id'</span>    =&gt;$user_id,\n                ])-&gt;execute();\n                F::resp(<span class=\"hljs-number\">200</span>,<span class=\"hljs-string\">'Saved!'</span>);\n            }\n            <span class=\"hljs-keyword\">else</span> F::resp(<span class=\"hljs-number\">200</span>,<span class=\"hljs-string\">'Nothing changed.'</span>);\n        });\n    }\n    <span class=\"hljs-keyword\">else</span> F::resp(<span class=\"hljs-number\">404</span>,<span class=\"hljs-string\">'Setting not found.'</span>);\n}</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/9c7dea4132ee342b19a2","description":"MySQL stored function example, raise error on MySQL routine.","files":["https://gist.githubusercontent.com/umidjons/9c7dea4132ee342b19a2/raw/8b01779a0e83fc8071d763a7afaf3adb184eb4cf/mysql-function-raise-error.md"],"content":"MySQL stored function example, raise error on MySQL routine.\n===\n\n```mysql\nDROP FUNCTION IF EXISTS genPartnerCode;\nCREATE FUNCTION genPartnerCode()\n  RETURNS VARCHAR(10) DETERMINISTIC READS SQL DATA\n  BEGIN\n    DECLARE wCode VARCHAR(10) DEFAULT NULL;\n    DECLARE wLen INT DEFAULT NULL;\n\n    SELECT CAST(conf_value AS UNSIGNED)\n    INTO wLen\n    FROM r_settings\n    WHERE conf_alias = 'partner_code_len' AND status = 1;\n\n    IF wLen IS NULL\n    THEN\n      SIGNAL SQLSTATE '45000'\n      SET MESSAGE_TEXT ='Setting PARTNER_CODE_LEN not found or disabled!';\n    END IF;\n\n    SELECT LPAD(CAST(conf_value AS UNSIGNED), wLen, '0')\n    INTO wCode\n    FROM r_settings\n    WHERE conf_alias = 'partner_code' AND status = 1;\n\n    IF wCode IS NULL\n    THEN\n      SIGNAL SQLSTATE '45000'\n      SET MESSAGE_TEXT ='Setting PARTNER_CODE not found or disabled!';\n    END IF;\n\n    UPDATE r_settings\n    SET conf_value = CAST(wCode AS UNSIGNED) + 1\n    WHERE conf_alias = 'partner_code';\n\n    RETURN wCode;\n  END;\n```","html":"<h1 id=\"mysql-stored-function-example-raise-error-on-mysql-routine-\">MySQL stored function example, raise error on MySQL routine.</h1>\n<pre><code class=\"lang-mysql\"><span class=\"hljs-keyword\">DROP</span> <span class=\"hljs-keyword\">FUNCTION</span> <span class=\"hljs-keyword\">IF</span> <span class=\"hljs-keyword\">EXISTS</span> genPartnerCode;\n<span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">FUNCTION</span> genPartnerCode()\n  <span class=\"hljs-keyword\">RETURNS</span> <span class=\"hljs-built_in\">VARCHAR</span>(<span class=\"hljs-number\">10</span>) <span class=\"hljs-keyword\">DETERMINISTIC</span> <span class=\"hljs-keyword\">READS</span> <span class=\"hljs-keyword\">SQL</span> <span class=\"hljs-keyword\">DATA</span>\n  <span class=\"hljs-keyword\">BEGIN</span>\n    <span class=\"hljs-keyword\">DECLARE</span> wCode <span class=\"hljs-built_in\">VARCHAR</span>(<span class=\"hljs-number\">10</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-literal\">NULL</span>;\n    <span class=\"hljs-keyword\">DECLARE</span> wLen <span class=\"hljs-built_in\">INT</span> <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-literal\">NULL</span>;\n\n    <span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-keyword\">CAST</span>(conf_value <span class=\"hljs-keyword\">AS</span> <span class=\"hljs-keyword\">UNSIGNED</span>)\n    <span class=\"hljs-keyword\">INTO</span> wLen\n    <span class=\"hljs-keyword\">FROM</span> r_settings\n    <span class=\"hljs-keyword\">WHERE</span> conf_alias = <span class=\"hljs-string\">'partner_code_len'</span> <span class=\"hljs-keyword\">AND</span> <span class=\"hljs-keyword\">status</span> = <span class=\"hljs-number\">1</span>;\n\n    IF wLen IS NULL\n    THEN\n      SIGNAL SQLSTATE '45000'\n      <span class=\"hljs-keyword\">SET</span> MESSAGE_TEXT =<span class=\"hljs-string\">'Setting PARTNER_CODE_LEN not found or disabled!'</span>;\n    <span class=\"hljs-keyword\">END</span> <span class=\"hljs-keyword\">IF</span>;\n\n    <span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-keyword\">LPAD</span>(<span class=\"hljs-keyword\">CAST</span>(conf_value <span class=\"hljs-keyword\">AS</span> <span class=\"hljs-keyword\">UNSIGNED</span>), wLen, <span class=\"hljs-string\">'0'</span>)\n    <span class=\"hljs-keyword\">INTO</span> wCode\n    <span class=\"hljs-keyword\">FROM</span> r_settings\n    <span class=\"hljs-keyword\">WHERE</span> conf_alias = <span class=\"hljs-string\">'partner_code'</span> <span class=\"hljs-keyword\">AND</span> <span class=\"hljs-keyword\">status</span> = <span class=\"hljs-number\">1</span>;\n\n    IF wCode IS NULL\n    THEN\n      SIGNAL SQLSTATE '45000'\n      <span class=\"hljs-keyword\">SET</span> MESSAGE_TEXT =<span class=\"hljs-string\">'Setting PARTNER_CODE not found or disabled!'</span>;\n    <span class=\"hljs-keyword\">END</span> <span class=\"hljs-keyword\">IF</span>;\n\n    <span class=\"hljs-keyword\">UPDATE</span> r_settings\n    <span class=\"hljs-keyword\">SET</span> conf_value = <span class=\"hljs-keyword\">CAST</span>(wCode <span class=\"hljs-keyword\">AS</span> <span class=\"hljs-keyword\">UNSIGNED</span>) + <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">WHERE</span> conf_alias = <span class=\"hljs-string\">'partner_code'</span>;\n\n    RETURN wCode;\n  <span class=\"hljs-keyword\">END</span>;\n</code></pre>\n"},{"html_url":"https://gist.github.com/3738223062bd6a05597f","description":"Print only necessary element's content.","files":["https://gist.githubusercontent.com/umidjons/3738223062bd6a05597f/raw/2bd6435f81892e1466b22dc50b08d3e9b5253b0b/print-elements-content.md"],"content":"Print only necessary element's content.\n===\n\n```html\n<style type=\"text/css\">\n\t@media print{\n\t\tbody *{\n\t\t\tvisibility:hidden;\n\t\t}\n\t\t#printing-area, #printing-area *{\n\t\t\tvisibility:visible;\n\t\t}\n\t\t#printing-area{\n\t\t\tposition:absolute;\n\t\t\tleft:0;\n\t\t\ttop:0;\n\t\t}\n\t}\n</style>\n\n<p class=\"well\">This content won't be printed..</p>\n\n<div id=\"printing-area\">ONLY THIS CONTENT WILL BE PRINTED.</div>\n\n<p class=\"well\">This content won't be printed.</p>\n```","html":"<h1 id=\"print-only-necessary-element-s-content-\">Print only necessary element&#39;s content.</h1>\n<pre><code class=\"lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text/css\"</span>&gt;</span><span class=\"css\">\n    @<span class=\"hljs-keyword\">media</span> print{\n        <span class=\"hljs-selector-tag\">body</span> *{\n            <span class=\"hljs-attribute\">visibility</span>:hidden;\n        }\n        <span class=\"hljs-selector-id\">#printing-area</span>, <span class=\"hljs-selector-id\">#printing-area</span> *{\n            <span class=\"hljs-attribute\">visibility</span>:visible;\n        }\n        <span class=\"hljs-selector-id\">#printing-area</span>{\n            <span class=\"hljs-attribute\">position</span>:absolute;\n            <span class=\"hljs-attribute\">left</span>:<span class=\"hljs-number\">0</span>;\n            <span class=\"hljs-attribute\">top</span>:<span class=\"hljs-number\">0</span>;\n        }\n    }\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"well\"</span>&gt;</span>This content won't be printed..<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"printing-area\"</span>&gt;</span>ONLY THIS CONTENT WILL BE PRINTED.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"well\"</span>&gt;</span>This content won't be printed.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/62a60fe531ee6ae7dd14","description":"Сумма прописью AngularJS Filter","files":["https://gist.githubusercontent.com/umidjons/62a60fe531ee6ae7dd14/raw/40836c2667bf0506a6d8fc5647e2a30757a26cbf/number-to-word-filter.md"],"content":"Сумма прописью AngularJS Filter\n===\n\n```html\n<!DOCTYPE html>\n<html ng-app=\"MYAPP\">\n<head>\n\t<meta charset=\"utf-8\">\n\t<script src=\"/js/jquery.js\"></script>\n\t<script src=\"/js/angular.js\"></script>\n</head>\n<body ng-controller=\"MyCtrl\">\n\n<input ng-model=\"num_\">\n<p>Number: {{num_}}</p>\n<p>Words: {{num_ | num2word}}</p>\n\n<script>\n\tangular.module('MYAPP',[])\n\t\t\t.filter('num2word',function(){\n\t\t\t\tString.prototype.trimRight=function(){\n\t\t\t\t\t// убирает все пробелы в конце строки\n\t\t\t\t\tvar r=/\\s+$/g;\n\t\t\t\t\treturn this.replace(r,'');\n\t\t\t\t}\n\t\t\t\tString.prototype.trimLeft=function(){\n\t\t\t\t\t// убирает все пробелы в начале строки\n\t\t\t\t\tvar r=/^\\s+/g;\n\t\t\t\t\treturn this.replace(r,'');\n\t\t\t\t}\n\t\t\t\tString.prototype.trim=function(){\n\t\t\t\t\t// убирает все пробелы в начале и в конце строки\n\t\t\t\t\treturn this.trimRight().trimLeft();\n\t\t\t\t}\n\t\t\t\tString.prototype.trimMiddle=function(){\n\t\t\t\t\t// убирает все пробелы в начале и в конце строки\n\t\t\t\t\t// помимо этого заменяет несколько подряд\n\t\t\t\t\t// идущих пробелов внутри строки на один пробел\n\t\t\t\t\tvar r=/\\s\\s+/g;\n\t\t\t\t\treturn this.trim().replace(r,' ');\n\t\t\t\t}\n\t\t\t\tString.prototype.trimAll=function(){\n\t\t\t\t\t// убирает все пробелы в строке s\n\t\t\t\t\tvar r=/\\s+/g;\n\t\t\t\t\treturn this.replace(r,'');\n\t\t\t\t}\n\t\t\t\tString.prototype.repeat=function(n){\n\t\t\t\t\t// повторяет строку n раз\n\t\t\t\t\tvar r='';\n\t\t\t\t\tif(typeof(n)=='number')\n\t\t\t\t\t\tfor(var i=1; i<=n; i++) r+=this;\n\t\t\t\t\treturn r;\n\t\t\t\t}\n\t\t\t\tNumber.prototype.isInt=function(){\n\t\t\t\t\t// возвращает True, если число является целым\n\t\t\t\t\treturn (Math.round(this)==this);\n\t\t\t\t}\n\t\t\t\tNumber.prototype.roundTo=function(n){\n\t\t\t\t\t// округляет число до заданного количества n\n\t\t\t\t\t// знаков после (или перед) запятой\n\t\t\t\t\tvar x=0;\n\t\t\t\t\tif(typeof(n)=='number')\n\t\t\t\t\t\tif(n.isInt())\n\t\t\t\t\t\t\tif(n>= -6 && n<=6) x=n;\n\t\t\t\t\tx=Math.pow(10,x);\n\t\t\t\t\treturn Math.round(this*x)/x;\n\t\t\t\t}\n\n\t\t\t\tString.prototype.trimAll=function(){\n\t\t\t\t\t// убирает все пробелы в строке s\n\t\t\t\t\tvar r=/\\s+/g;\n\t\t\t\t\treturn this.replace(r,'');\n\t\t\t\t}\n\n\t\t\t\tNumber.prototype.toPhrase=function(c){\n\t\t\t\t\t// сумма прописью для чисел от 0 до 999 триллионов\n\t\t\t\t\t// можно передать параметр \"валюта\": RUB,USD,EUR (по умолчанию RUB)\n\t\t\t\t\tvar x=this.roundTo(2);\n\t\t\t\t\tif(x<0 || x>999999999999999.99) return false;\n\t\t\t\t\tvar currency='RUB';\n\t\t\t\t\tif(typeof(c)=='string') currency=c.trimAll().toUpperCase();\n\t\t\t\t\tif(currency=='RUR') currency='RUB';\n\t\t\t\t\tif(currency!='RUB' && currency!='USD' && currency!='EUR') return false;\n\t\t\t\t\tvar groups=new Array();\n\t\t\t\t\tgroups[0]=new Array();\n\t\t\t\t\tgroups[1]=new Array();\n\t\t\t\t\tgroups[2]=new Array();\n\t\t\t\t\tgroups[3]=new Array();\n\t\t\t\t\tgroups[4]=new Array();\n\t\t\t\t\tgroups[9]=new Array();\n\t\t\t\t\t// рубли\n\t\t\t\t\t// по умолчанию\n\t\t\t\t\tgroups[0][-1]={'RUB':'рублей','USD':'долларов США','EUR':'евро'};\n\t\t\t\t\t//исключения\n\t\t\t\t\tgroups[0][1]={'RUB':'рубль','USD':'доллар США','EUR':'евро'};\n\t\t\t\t\tgroups[0][2]={'RUB':'рубля','USD':'доллара США','EUR':'евро'};\n\t\t\t\t\tgroups[0][3]={'RUB':'рубля','USD':'доллара США','EUR':'евро'};\n\t\t\t\t\tgroups[0][4]={'RUB':'рубля','USD':'доллара США','EUR':'евро'};\n\t\t\t\t\t// тысячи\n\t\t\t\t\t// по умолчанию\n\t\t\t\t\tgroups[1][-1]='тысяч';\n\t\t\t\t\t//исключения\n\t\t\t\t\tgroups[1][1]='тысяча';\n\t\t\t\t\tgroups[1][2]='тысячи';\n\t\t\t\t\tgroups[1][3]='тысячи';\n\t\t\t\t\tgroups[1][4]='тысячи';\n\t\t\t\t\t// миллионы\n\t\t\t\t\t// по умолчанию\n\t\t\t\t\tgroups[2][-1]='миллионов';\n\t\t\t\t\t//исключения\n\t\t\t\t\tgroups[2][1]='миллион';\n\t\t\t\t\tgroups[2][2]='миллиона';\n\t\t\t\t\tgroups[2][3]='миллиона';\n\t\t\t\t\tgroups[2][4]='миллиона';\n\t\t\t\t\t// миллиарды\n\t\t\t\t\t// по умолчанию\n\t\t\t\t\tgroups[3][-1]='миллиардов';\n\t\t\t\t\t//исключения\n\t\t\t\t\tgroups[3][1]='миллиард';\n\t\t\t\t\tgroups[3][2]='миллиарда';\n\t\t\t\t\tgroups[3][3]='миллиарда';\n\t\t\t\t\tgroups[3][4]='миллиарда';\n\t\t\t\t\t// триллионы\n\t\t\t\t\t// по умолчанию\n\t\t\t\t\tgroups[4][-1]='триллионов';\n\t\t\t\t\t//исключения\n\t\t\t\t\tgroups[4][1]='триллион';\n\t\t\t\t\tgroups[4][2]='триллиона';\n\t\t\t\t\tgroups[4][3]='триллиона';\n\t\t\t\t\tgroups[4][4]='триллиона';\n\t\t\t\t\t// копейки\n\t\t\t\t\t// по умолчанию\n\t\t\t\t\tgroups[9][-1]={'RUB':'копеек','USD':'центов','EUR':'центов'};\n\t\t\t\t\t//исключения\n\t\t\t\t\tgroups[9][1]={'RUB':'копейка','USD':'цент','EUR':'цент'};\n\t\t\t\t\tgroups[9][2]={'RUB':'копейки','USD':'цента','EUR':'цента'};\n\t\t\t\t\tgroups[9][3]={'RUB':'копейки','USD':'цента','EUR':'цента'};\n\t\t\t\t\tgroups[9][4]={'RUB':'копейки','USD':'цента','EUR':'цента'};\n\t\t\t\t\t// цифры и числа\n\t\t\t\t\t// либо просто строка, либо 4 строки в хэше\n\t\t\t\t\tvar names=new Array();\n\t\t\t\t\tnames[1]={0:'один',1:'одна',2:'один',3:'один',4:'один'};\n\t\t\t\t\tnames[2]={0:'два',1:'две',2:'два',3:'два',4:'два'};\n\t\t\t\t\tnames[3]='три';\n\t\t\t\t\tnames[4]='четыре';\n\t\t\t\t\tnames[5]='пять';\n\t\t\t\t\tnames[6]='шесть';\n\t\t\t\t\tnames[7]='семь';\n\t\t\t\t\tnames[8]='восемь';\n\t\t\t\t\tnames[9]='девять';\n\t\t\t\t\tnames[10]='десять';\n\t\t\t\t\tnames[11]='одиннадцать';\n\t\t\t\t\tnames[12]='двенадцать';\n\t\t\t\t\tnames[13]='тринадцать';\n\t\t\t\t\tnames[14]='четырнадцать';\n\t\t\t\t\tnames[15]='пятнадцать';\n\t\t\t\t\tnames[16]='шестнадцать';\n\t\t\t\t\tnames[17]='семнадцать';\n\t\t\t\t\tnames[18]='восемнадцать';\n\t\t\t\t\tnames[19]='девятнадцать';\n\t\t\t\t\tnames[20]='двадцать';\n\t\t\t\t\tnames[30]='тридцать';\n\t\t\t\t\tnames[40]='сорок';\n\t\t\t\t\tnames[50]='пятьдесят';\n\t\t\t\t\tnames[60]='шестьдесят';\n\t\t\t\t\tnames[70]='семьдесят';\n\t\t\t\t\tnames[80]='восемьдесят';\n\t\t\t\t\tnames[90]='девяносто';\n\t\t\t\t\tnames[100]='сто';\n\t\t\t\t\tnames[200]='двести';\n\t\t\t\t\tnames[300]='триста';\n\t\t\t\t\tnames[400]='четыреста';\n\t\t\t\t\tnames[500]='пятьсот';\n\t\t\t\t\tnames[600]='шестьсот';\n\t\t\t\t\tnames[700]='семьсот';\n\t\t\t\t\tnames[800]='восемьсот';\n\t\t\t\t\tnames[900]='девятьсот';\n\t\t\t\t\tvar r='',i,j,y=Math.floor(x);\n\t\t\t\t\t// если НЕ ноль рублей\n\t\t\t\t\tif(y>0){\n\t\t\t\t\t\t// выделим тройки с руб., тыс., миллионами, миллиардами и триллионами\n\t\t\t\t\t\tvar t=new Array();\n\t\t\t\t\t\tfor(i=0; i<=4; i++){\n\t\t\t\t\t\t\tt[i]=y%1000;\n\t\t\t\t\t\t\ty=Math.floor(y/1000);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar d=new Array();\n\t\t\t\t\t\t// выделим в каждой тройке сотни, десятки и единицы\n\t\t\t\t\t\tfor(i=0; i<=4; i++){\n\t\t\t\t\t\t\td[i]=new Array();\n\t\t\t\t\t\t\td[i][0]=t[i]%10; // единицы\n\t\t\t\t\t\t\td[i][10]=t[i]%100-d[i][0]; // десятки\n\t\t\t\t\t\t\td[i][100]=t[i]-d[i][10]-d[i][0]; // сотни\n\t\t\t\t\t\t\td[i][11]=t[i]%100; // две правых цифры в виде числа\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(i=4; i>=0; i--)\n\t\t\t\t\t\t\tif(t[i]>0){\n\t\t\t\t\t\t\t\tif(names[d[i][100]]) r+=' '+((typeof(names[d[i][100]])=='object')?(names[d[i][100]][i]):(names[d[i][100]]));\n\t\t\t\t\t\t\t\tif(names[d[i][11]]) r+=' '+((typeof(names[d[i][11]])=='object')?(names[d[i][11]][i]):(names[d[i][11]]));\n\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\tif(names[d[i][10]]) r+=' '+((typeof(names[d[i][10]])=='object')?(names[d[i][10]][i]):(names[d[i][10]]));\n\t\t\t\t\t\t\t\t\tif(names[d[i][0]]) r+=' '+((typeof(names[d[i][0]])=='object')?(names[d[i][0]][i]):(names[d[i][0]]));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// если существует числительное\n\t\t\t\t\t\t\t\tif(names[d[i][11]]) j=d[i][11];\n\t\t\t\t\t\t\t\telse j=d[i][0];\n\t\t\t\t\t\t\t\tif(groups[i][j])\n\t\t\t\t\t\t\t\t\tif(i==0) r+=' '+groups[i][j][currency];\n\t\t\t\t\t\t\t\t\telse r+=' '+groups[i][j];\n\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\tif(i==0) r+=' '+groups[i][-1][currency];\n\t\t\t\t\t\t\t\t\telse r+=' '+groups[i][-1];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tif(t[0]==0) r+=' '+groups[0][-1][currency];\n\t\t\t\t\t}else r='Ноль '+groups[0][-1][currency];\n\t\t\t\t\ty=((x-Math.floor(x))*100).roundTo();\n\t\t\t\t\tif(y<10) y='0'+y;\n\t\t\t\t\tr=r.trimMiddle();\n\t\t\t\t\tr=r.substr(0,1).toUpperCase()+r.substr(1);\n\t\t\t\t\tr+=' '+y;\n\t\t\t\t\ty=y*1;\n\t\t\t\t\t// если существует числительное\n\t\t\t\t\tif(names[y]) j=y;else j=y%10;\n\t\t\t\t\tif(groups[9][j]) r+=' '+groups[9][j][currency];\n\t\t\t\t\telse r+=' '+groups[9][-1][currency];\n\t\t\t\t\treturn r;\n\t\t\t\t}\n\t\t\t\treturn function(input){ return (new Number(input)).toPhrase('RUB'); }\n\t\t\t})\n\t\t\t.controller('MyCtrl',function($scope){\n\t\t\t\t$scope.num_=123;\n\t\t\t});\n</script>\n</body>\n</html>\n```","html":"<h1 id=\"-angularjs-filter\">Сумма прописью AngularJS Filter</h1>\n<pre><code class=\"lang-html\"><span class=\"xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">ng-app</span>=<span class=\"hljs-string\">\"MYAPP\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"utf-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"/js/jquery.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"/js/angular.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span> <span class=\"hljs-attr\">ng-controller</span>=<span class=\"hljs-string\">\"MyCtrl\"</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"num_\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Number: </span><span class=\"hljs-template-variable\">{{num_}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Words: </span><span class=\"hljs-template-variable\">{{num_ | num2word}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    angular.module(<span class=\"hljs-string\">'MYAPP'</span>,[])\n            .filter(<span class=\"hljs-string\">'num2word'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n                <span class=\"hljs-built_in\">String</span>.prototype.trimRight=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n                    <span class=\"hljs-comment\">// убирает все пробелы в конце строки</span>\n                    <span class=\"hljs-keyword\">var</span> r=<span class=\"hljs-regexp\">/\\s+$/g</span>;\n                    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.replace(r,<span class=\"hljs-string\">''</span>);\n                }\n                <span class=\"hljs-built_in\">String</span>.prototype.trimLeft=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n                    <span class=\"hljs-comment\">// убирает все пробелы в начале строки</span>\n                    <span class=\"hljs-keyword\">var</span> r=<span class=\"hljs-regexp\">/^\\s+/g</span>;\n                    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.replace(r,<span class=\"hljs-string\">''</span>);\n                }\n                <span class=\"hljs-built_in\">String</span>.prototype.trim=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n                    <span class=\"hljs-comment\">// убирает все пробелы в начале и в конце строки</span>\n                    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.trimRight().trimLeft();\n                }\n                <span class=\"hljs-built_in\">String</span>.prototype.trimMiddle=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n                    <span class=\"hljs-comment\">// убирает все пробелы в начале и в конце строки</span>\n                    <span class=\"hljs-comment\">// помимо этого заменяет несколько подряд</span>\n                    <span class=\"hljs-comment\">// идущих пробелов внутри строки на один пробел</span>\n                    <span class=\"hljs-keyword\">var</span> r=<span class=\"hljs-regexp\">/\\s\\s+/g</span>;\n                    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.trim().replace(r,<span class=\"hljs-string\">' '</span>);\n                }\n                <span class=\"hljs-built_in\">String</span>.prototype.trimAll=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n                    <span class=\"hljs-comment\">// убирает все пробелы в строке s</span>\n                    <span class=\"hljs-keyword\">var</span> r=<span class=\"hljs-regexp\">/\\s+/g</span>;\n                    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.replace(r,<span class=\"hljs-string\">''</span>);\n                }\n                <span class=\"hljs-built_in\">String</span>.prototype.repeat=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n</span>)</span>{\n                    <span class=\"hljs-comment\">// повторяет строку n раз</span>\n                    <span class=\"hljs-keyword\">var</span> r=<span class=\"hljs-string\">''</span>;\n                    <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">typeof</span>(n)==<span class=\"hljs-string\">'number'</span>)\n                        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">var</span> i=<span class=\"hljs-number\">1</span>; i&lt;=n; i++) r+=<span class=\"hljs-keyword\">this</span>;\n                    <span class=\"hljs-keyword\">return</span> r;\n                }\n                <span class=\"hljs-built_in\">Number</span>.prototype.isInt=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n                    <span class=\"hljs-comment\">// возвращает True, если число является целым</span>\n                    <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-built_in\">Math</span>.round(<span class=\"hljs-keyword\">this</span>)==<span class=\"hljs-keyword\">this</span>);\n                }\n                <span class=\"hljs-built_in\">Number</span>.prototype.roundTo=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n</span>)</span>{\n                    <span class=\"hljs-comment\">// округляет число до заданного количества n</span>\n                    <span class=\"hljs-comment\">// знаков после (или перед) запятой</span>\n                    <span class=\"hljs-keyword\">var</span> x=<span class=\"hljs-number\">0</span>;\n                    <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">typeof</span>(n)==<span class=\"hljs-string\">'number'</span>)\n                        <span class=\"hljs-keyword\">if</span>(n.isInt())\n                            <span class=\"hljs-keyword\">if</span>(n&gt;= <span class=\"hljs-number\">-6</span> &amp;&amp; n&lt;=<span class=\"hljs-number\">6</span>) x=n;\n                    x=<span class=\"hljs-built_in\">Math</span>.pow(<span class=\"hljs-number\">10</span>,x);\n                    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Math</span>.round(<span class=\"hljs-keyword\">this</span>*x)/x;\n                }\n\n                <span class=\"hljs-built_in\">String</span>.prototype.trimAll=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n                    <span class=\"hljs-comment\">// убирает все пробелы в строке s</span>\n                    <span class=\"hljs-keyword\">var</span> r=<span class=\"hljs-regexp\">/\\s+/g</span>;\n                    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.replace(r,<span class=\"hljs-string\">''</span>);\n                }\n\n                <span class=\"hljs-built_in\">Number</span>.prototype.toPhrase=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>)</span>{\n                    <span class=\"hljs-comment\">// сумма прописью для чисел от 0 до 999 триллионов</span>\n                    <span class=\"hljs-comment\">// можно передать параметр \"валюта\": RUB,USD,EUR (по умолчанию RUB)</span>\n                    <span class=\"hljs-keyword\">var</span> x=<span class=\"hljs-keyword\">this</span>.roundTo(<span class=\"hljs-number\">2</span>);\n                    <span class=\"hljs-keyword\">if</span>(x&lt;<span class=\"hljs-number\">0</span> || x&gt;<span class=\"hljs-number\">999999999999999.99</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n                    <span class=\"hljs-keyword\">var</span> currency=<span class=\"hljs-string\">'RUB'</span>;\n                    <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">typeof</span>(c)==<span class=\"hljs-string\">'string'</span>) currency=c.trimAll().toUpperCase();\n                    <span class=\"hljs-keyword\">if</span>(currency==<span class=\"hljs-string\">'RUR'</span>) currency=<span class=\"hljs-string\">'RUB'</span>;\n                    <span class=\"hljs-keyword\">if</span>(currency!=<span class=\"hljs-string\">'RUB'</span> &amp;&amp; currency!=<span class=\"hljs-string\">'USD'</span> &amp;&amp; currency!=<span class=\"hljs-string\">'EUR'</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n                    <span class=\"hljs-keyword\">var</span> groups=<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Array</span>();\n                    groups[<span class=\"hljs-number\">0</span>]=<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Array</span>();\n                    groups[<span class=\"hljs-number\">1</span>]=<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Array</span>();\n                    groups[<span class=\"hljs-number\">2</span>]=<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Array</span>();\n                    groups[<span class=\"hljs-number\">3</span>]=<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Array</span>();\n                    groups[<span class=\"hljs-number\">4</span>]=<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Array</span>();\n                    groups[<span class=\"hljs-number\">9</span>]=<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Array</span>();\n                    <span class=\"hljs-comment\">// рубли</span>\n                    <span class=\"hljs-comment\">// по умолчанию</span>\n                    groups[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">-1</span>]={<span class=\"hljs-string\">'RUB'</span>:<span class=\"hljs-string\">'рублей'</span>,<span class=\"hljs-string\">'USD'</span>:<span class=\"hljs-string\">'долларов США'</span>,<span class=\"hljs-string\">'EUR'</span>:<span class=\"hljs-string\">'евро'</span>};\n                    <span class=\"hljs-comment\">//исключения</span>\n                    groups[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>]={<span class=\"hljs-string\">'RUB'</span>:<span class=\"hljs-string\">'рубль'</span>,<span class=\"hljs-string\">'USD'</span>:<span class=\"hljs-string\">'доллар США'</span>,<span class=\"hljs-string\">'EUR'</span>:<span class=\"hljs-string\">'евро'</span>};\n                    groups[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">2</span>]={<span class=\"hljs-string\">'RUB'</span>:<span class=\"hljs-string\">'рубля'</span>,<span class=\"hljs-string\">'USD'</span>:<span class=\"hljs-string\">'доллара США'</span>,<span class=\"hljs-string\">'EUR'</span>:<span class=\"hljs-string\">'евро'</span>};\n                    groups[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">3</span>]={<span class=\"hljs-string\">'RUB'</span>:<span class=\"hljs-string\">'рубля'</span>,<span class=\"hljs-string\">'USD'</span>:<span class=\"hljs-string\">'доллара США'</span>,<span class=\"hljs-string\">'EUR'</span>:<span class=\"hljs-string\">'евро'</span>};\n                    groups[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">4</span>]={<span class=\"hljs-string\">'RUB'</span>:<span class=\"hljs-string\">'рубля'</span>,<span class=\"hljs-string\">'USD'</span>:<span class=\"hljs-string\">'доллара США'</span>,<span class=\"hljs-string\">'EUR'</span>:<span class=\"hljs-string\">'евро'</span>};\n                    <span class=\"hljs-comment\">// тысячи</span>\n                    <span class=\"hljs-comment\">// по умолчанию</span>\n                    groups[<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">-1</span>]=<span class=\"hljs-string\">'тысяч'</span>;\n                    <span class=\"hljs-comment\">//исключения</span>\n                    groups[<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">1</span>]=<span class=\"hljs-string\">'тысяча'</span>;\n                    groups[<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">2</span>]=<span class=\"hljs-string\">'тысячи'</span>;\n                    groups[<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">3</span>]=<span class=\"hljs-string\">'тысячи'</span>;\n                    groups[<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">4</span>]=<span class=\"hljs-string\">'тысячи'</span>;\n                    <span class=\"hljs-comment\">// миллионы</span>\n                    <span class=\"hljs-comment\">// по умолчанию</span>\n                    groups[<span class=\"hljs-number\">2</span>][<span class=\"hljs-number\">-1</span>]=<span class=\"hljs-string\">'миллионов'</span>;\n                    <span class=\"hljs-comment\">//исключения</span>\n                    groups[<span class=\"hljs-number\">2</span>][<span class=\"hljs-number\">1</span>]=<span class=\"hljs-string\">'миллион'</span>;\n                    groups[<span class=\"hljs-number\">2</span>][<span class=\"hljs-number\">2</span>]=<span class=\"hljs-string\">'миллиона'</span>;\n                    groups[<span class=\"hljs-number\">2</span>][<span class=\"hljs-number\">3</span>]=<span class=\"hljs-string\">'миллиона'</span>;\n                    groups[<span class=\"hljs-number\">2</span>][<span class=\"hljs-number\">4</span>]=<span class=\"hljs-string\">'миллиона'</span>;\n                    <span class=\"hljs-comment\">// миллиарды</span>\n                    <span class=\"hljs-comment\">// по умолчанию</span>\n                    groups[<span class=\"hljs-number\">3</span>][<span class=\"hljs-number\">-1</span>]=<span class=\"hljs-string\">'миллиардов'</span>;\n                    <span class=\"hljs-comment\">//исключения</span>\n                    groups[<span class=\"hljs-number\">3</span>][<span class=\"hljs-number\">1</span>]=<span class=\"hljs-string\">'миллиард'</span>;\n                    groups[<span class=\"hljs-number\">3</span>][<span class=\"hljs-number\">2</span>]=<span class=\"hljs-string\">'миллиарда'</span>;\n                    groups[<span class=\"hljs-number\">3</span>][<span class=\"hljs-number\">3</span>]=<span class=\"hljs-string\">'миллиарда'</span>;\n                    groups[<span class=\"hljs-number\">3</span>][<span class=\"hljs-number\">4</span>]=<span class=\"hljs-string\">'миллиарда'</span>;\n                    <span class=\"hljs-comment\">// триллионы</span>\n                    <span class=\"hljs-comment\">// по умолчанию</span>\n                    groups[<span class=\"hljs-number\">4</span>][<span class=\"hljs-number\">-1</span>]=<span class=\"hljs-string\">'триллионов'</span>;\n                    <span class=\"hljs-comment\">//исключения</span>\n                    groups[<span class=\"hljs-number\">4</span>][<span class=\"hljs-number\">1</span>]=<span class=\"hljs-string\">'триллион'</span>;\n                    groups[<span class=\"hljs-number\">4</span>][<span class=\"hljs-number\">2</span>]=<span class=\"hljs-string\">'триллиона'</span>;\n                    groups[<span class=\"hljs-number\">4</span>][<span class=\"hljs-number\">3</span>]=<span class=\"hljs-string\">'триллиона'</span>;\n                    groups[<span class=\"hljs-number\">4</span>][<span class=\"hljs-number\">4</span>]=<span class=\"hljs-string\">'триллиона'</span>;\n                    <span class=\"hljs-comment\">// копейки</span>\n                    <span class=\"hljs-comment\">// по умолчанию</span>\n                    groups[<span class=\"hljs-number\">9</span>][<span class=\"hljs-number\">-1</span>]={<span class=\"hljs-string\">'RUB'</span>:<span class=\"hljs-string\">'копеек'</span>,<span class=\"hljs-string\">'USD'</span>:<span class=\"hljs-string\">'центов'</span>,<span class=\"hljs-string\">'EUR'</span>:<span class=\"hljs-string\">'центов'</span>};\n                    <span class=\"hljs-comment\">//исключения</span>\n                    groups[<span class=\"hljs-number\">9</span>][<span class=\"hljs-number\">1</span>]={<span class=\"hljs-string\">'RUB'</span>:<span class=\"hljs-string\">'копейка'</span>,<span class=\"hljs-string\">'USD'</span>:<span class=\"hljs-string\">'цент'</span>,<span class=\"hljs-string\">'EUR'</span>:<span class=\"hljs-string\">'цент'</span>};\n                    groups[<span class=\"hljs-number\">9</span>][<span class=\"hljs-number\">2</span>]={<span class=\"hljs-string\">'RUB'</span>:<span class=\"hljs-string\">'копейки'</span>,<span class=\"hljs-string\">'USD'</span>:<span class=\"hljs-string\">'цента'</span>,<span class=\"hljs-string\">'EUR'</span>:<span class=\"hljs-string\">'цента'</span>};\n                    groups[<span class=\"hljs-number\">9</span>][<span class=\"hljs-number\">3</span>]={<span class=\"hljs-string\">'RUB'</span>:<span class=\"hljs-string\">'копейки'</span>,<span class=\"hljs-string\">'USD'</span>:<span class=\"hljs-string\">'цента'</span>,<span class=\"hljs-string\">'EUR'</span>:<span class=\"hljs-string\">'цента'</span>};\n                    groups[<span class=\"hljs-number\">9</span>][<span class=\"hljs-number\">4</span>]={<span class=\"hljs-string\">'RUB'</span>:<span class=\"hljs-string\">'копейки'</span>,<span class=\"hljs-string\">'USD'</span>:<span class=\"hljs-string\">'цента'</span>,<span class=\"hljs-string\">'EUR'</span>:<span class=\"hljs-string\">'цента'</span>};\n                    <span class=\"hljs-comment\">// цифры и числа</span>\n                    <span class=\"hljs-comment\">// либо просто строка, либо 4 строки в хэше</span>\n                    <span class=\"hljs-keyword\">var</span> names=<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Array</span>();\n                    names[<span class=\"hljs-number\">1</span>]={<span class=\"hljs-number\">0</span>:<span class=\"hljs-string\">'один'</span>,<span class=\"hljs-number\">1</span>:<span class=\"hljs-string\">'одна'</span>,<span class=\"hljs-number\">2</span>:<span class=\"hljs-string\">'один'</span>,<span class=\"hljs-number\">3</span>:<span class=\"hljs-string\">'один'</span>,<span class=\"hljs-number\">4</span>:<span class=\"hljs-string\">'один'</span>};\n                    names[<span class=\"hljs-number\">2</span>]={<span class=\"hljs-number\">0</span>:<span class=\"hljs-string\">'два'</span>,<span class=\"hljs-number\">1</span>:<span class=\"hljs-string\">'две'</span>,<span class=\"hljs-number\">2</span>:<span class=\"hljs-string\">'два'</span>,<span class=\"hljs-number\">3</span>:<span class=\"hljs-string\">'два'</span>,<span class=\"hljs-number\">4</span>:<span class=\"hljs-string\">'два'</span>};\n                    names[<span class=\"hljs-number\">3</span>]=<span class=\"hljs-string\">'три'</span>;\n                    names[<span class=\"hljs-number\">4</span>]=<span class=\"hljs-string\">'четыре'</span>;\n                    names[<span class=\"hljs-number\">5</span>]=<span class=\"hljs-string\">'пять'</span>;\n                    names[<span class=\"hljs-number\">6</span>]=<span class=\"hljs-string\">'шесть'</span>;\n                    names[<span class=\"hljs-number\">7</span>]=<span class=\"hljs-string\">'семь'</span>;\n                    names[<span class=\"hljs-number\">8</span>]=<span class=\"hljs-string\">'восемь'</span>;\n                    names[<span class=\"hljs-number\">9</span>]=<span class=\"hljs-string\">'девять'</span>;\n                    names[<span class=\"hljs-number\">10</span>]=<span class=\"hljs-string\">'десять'</span>;\n                    names[<span class=\"hljs-number\">11</span>]=<span class=\"hljs-string\">'одиннадцать'</span>;\n                    names[<span class=\"hljs-number\">12</span>]=<span class=\"hljs-string\">'двенадцать'</span>;\n                    names[<span class=\"hljs-number\">13</span>]=<span class=\"hljs-string\">'тринадцать'</span>;\n                    names[<span class=\"hljs-number\">14</span>]=<span class=\"hljs-string\">'четырнадцать'</span>;\n                    names[<span class=\"hljs-number\">15</span>]=<span class=\"hljs-string\">'пятнадцать'</span>;\n                    names[<span class=\"hljs-number\">16</span>]=<span class=\"hljs-string\">'шестнадцать'</span>;\n                    names[<span class=\"hljs-number\">17</span>]=<span class=\"hljs-string\">'семнадцать'</span>;\n                    names[<span class=\"hljs-number\">18</span>]=<span class=\"hljs-string\">'восемнадцать'</span>;\n                    names[<span class=\"hljs-number\">19</span>]=<span class=\"hljs-string\">'девятнадцать'</span>;\n                    names[<span class=\"hljs-number\">20</span>]=<span class=\"hljs-string\">'двадцать'</span>;\n                    names[<span class=\"hljs-number\">30</span>]=<span class=\"hljs-string\">'тридцать'</span>;\n                    names[<span class=\"hljs-number\">40</span>]=<span class=\"hljs-string\">'сорок'</span>;\n                    names[<span class=\"hljs-number\">50</span>]=<span class=\"hljs-string\">'пятьдесят'</span>;\n                    names[<span class=\"hljs-number\">60</span>]=<span class=\"hljs-string\">'шестьдесят'</span>;\n                    names[<span class=\"hljs-number\">70</span>]=<span class=\"hljs-string\">'семьдесят'</span>;\n                    names[<span class=\"hljs-number\">80</span>]=<span class=\"hljs-string\">'восемьдесят'</span>;\n                    names[<span class=\"hljs-number\">90</span>]=<span class=\"hljs-string\">'девяносто'</span>;\n                    names[<span class=\"hljs-number\">100</span>]=<span class=\"hljs-string\">'сто'</span>;\n                    names[<span class=\"hljs-number\">200</span>]=<span class=\"hljs-string\">'двести'</span>;\n                    names[<span class=\"hljs-number\">300</span>]=<span class=\"hljs-string\">'триста'</span>;\n                    names[<span class=\"hljs-number\">400</span>]=<span class=\"hljs-string\">'четыреста'</span>;\n                    names[<span class=\"hljs-number\">500</span>]=<span class=\"hljs-string\">'пятьсот'</span>;\n                    names[<span class=\"hljs-number\">600</span>]=<span class=\"hljs-string\">'шестьсот'</span>;\n                    names[<span class=\"hljs-number\">700</span>]=<span class=\"hljs-string\">'семьсот'</span>;\n                    names[<span class=\"hljs-number\">800</span>]=<span class=\"hljs-string\">'восемьсот'</span>;\n                    names[<span class=\"hljs-number\">900</span>]=<span class=\"hljs-string\">'девятьсот'</span>;\n                    <span class=\"hljs-keyword\">var</span> r=<span class=\"hljs-string\">''</span>,i,j,y=<span class=\"hljs-built_in\">Math</span>.floor(x);\n                    <span class=\"hljs-comment\">// если НЕ ноль рублей</span>\n                    <span class=\"hljs-keyword\">if</span>(y&gt;<span class=\"hljs-number\">0</span>){\n                        <span class=\"hljs-comment\">// выделим тройки с руб., тыс., миллионами, миллиардами и триллионами</span>\n                        <span class=\"hljs-keyword\">var</span> t=<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Array</span>();\n                        <span class=\"hljs-keyword\">for</span>(i=<span class=\"hljs-number\">0</span>; i&lt;=<span class=\"hljs-number\">4</span>; i++){\n                            t[i]=y%<span class=\"hljs-number\">1000</span>;\n                            y=<span class=\"hljs-built_in\">Math</span>.floor(y/<span class=\"hljs-number\">1000</span>);\n                        }\n                        <span class=\"hljs-keyword\">var</span> d=<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Array</span>();\n                        <span class=\"hljs-comment\">// выделим в каждой тройке сотни, десятки и единицы</span>\n                        <span class=\"hljs-keyword\">for</span>(i=<span class=\"hljs-number\">0</span>; i&lt;=<span class=\"hljs-number\">4</span>; i++){\n                            d[i]=<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Array</span>();\n                            d[i][<span class=\"hljs-number\">0</span>]=t[i]%<span class=\"hljs-number\">10</span>; <span class=\"hljs-comment\">// единицы</span>\n                            d[i][<span class=\"hljs-number\">10</span>]=t[i]%<span class=\"hljs-number\">100</span>-d[i][<span class=\"hljs-number\">0</span>]; <span class=\"hljs-comment\">// десятки</span>\n                            d[i][<span class=\"hljs-number\">100</span>]=t[i]-d[i][<span class=\"hljs-number\">10</span>]-d[i][<span class=\"hljs-number\">0</span>]; <span class=\"hljs-comment\">// сотни</span>\n                            d[i][<span class=\"hljs-number\">11</span>]=t[i]%<span class=\"hljs-number\">100</span>; <span class=\"hljs-comment\">// две правых цифры в виде числа</span>\n                        }\n                        <span class=\"hljs-keyword\">for</span>(i=<span class=\"hljs-number\">4</span>; i&gt;=<span class=\"hljs-number\">0</span>; i--)\n                            <span class=\"hljs-keyword\">if</span>(t[i]&gt;<span class=\"hljs-number\">0</span>){\n                                <span class=\"hljs-keyword\">if</span>(names[d[i][<span class=\"hljs-number\">100</span>]]) r+=<span class=\"hljs-string\">' '</span>+((<span class=\"hljs-keyword\">typeof</span>(names[d[i][<span class=\"hljs-number\">100</span>]])==<span class=\"hljs-string\">'object'</span>)?(names[d[i][<span class=\"hljs-number\">100</span>]][i]):(names[d[i][<span class=\"hljs-number\">100</span>]]));\n                                <span class=\"hljs-keyword\">if</span>(names[d[i][<span class=\"hljs-number\">11</span>]]) r+=<span class=\"hljs-string\">' '</span>+((<span class=\"hljs-keyword\">typeof</span>(names[d[i][<span class=\"hljs-number\">11</span>]])==<span class=\"hljs-string\">'object'</span>)?(names[d[i][<span class=\"hljs-number\">11</span>]][i]):(names[d[i][<span class=\"hljs-number\">11</span>]]));\n                                <span class=\"hljs-keyword\">else</span>{\n                                    <span class=\"hljs-keyword\">if</span>(names[d[i][<span class=\"hljs-number\">10</span>]]) r+=<span class=\"hljs-string\">' '</span>+((<span class=\"hljs-keyword\">typeof</span>(names[d[i][<span class=\"hljs-number\">10</span>]])==<span class=\"hljs-string\">'object'</span>)?(names[d[i][<span class=\"hljs-number\">10</span>]][i]):(names[d[i][<span class=\"hljs-number\">10</span>]]));\n                                    <span class=\"hljs-keyword\">if</span>(names[d[i][<span class=\"hljs-number\">0</span>]]) r+=<span class=\"hljs-string\">' '</span>+((<span class=\"hljs-keyword\">typeof</span>(names[d[i][<span class=\"hljs-number\">0</span>]])==<span class=\"hljs-string\">'object'</span>)?(names[d[i][<span class=\"hljs-number\">0</span>]][i]):(names[d[i][<span class=\"hljs-number\">0</span>]]));\n                                }\n                                <span class=\"hljs-comment\">// если существует числительное</span>\n                                <span class=\"hljs-keyword\">if</span>(names[d[i][<span class=\"hljs-number\">11</span>]]) j=d[i][<span class=\"hljs-number\">11</span>];\n                                <span class=\"hljs-keyword\">else</span> j=d[i][<span class=\"hljs-number\">0</span>];\n                                <span class=\"hljs-keyword\">if</span>(groups[i][j])\n                                    <span class=\"hljs-keyword\">if</span>(i==<span class=\"hljs-number\">0</span>) r+=<span class=\"hljs-string\">' '</span>+groups[i][j][currency];\n                                    <span class=\"hljs-keyword\">else</span> r+=<span class=\"hljs-string\">' '</span>+groups[i][j];\n                                <span class=\"hljs-keyword\">else</span>{\n                                    <span class=\"hljs-keyword\">if</span>(i==<span class=\"hljs-number\">0</span>) r+=<span class=\"hljs-string\">' '</span>+groups[i][<span class=\"hljs-number\">-1</span>][currency];\n                                    <span class=\"hljs-keyword\">else</span> r+=<span class=\"hljs-string\">' '</span>+groups[i][<span class=\"hljs-number\">-1</span>];\n                                }\n                            }\n                        <span class=\"hljs-keyword\">if</span>(t[<span class=\"hljs-number\">0</span>]==<span class=\"hljs-number\">0</span>) r+=<span class=\"hljs-string\">' '</span>+groups[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">-1</span>][currency];\n                    }<span class=\"hljs-keyword\">else</span> r=<span class=\"hljs-string\">'Ноль '</span>+groups[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">-1</span>][currency];\n                    y=((x-<span class=\"hljs-built_in\">Math</span>.floor(x))*<span class=\"hljs-number\">100</span>).roundTo();\n                    <span class=\"hljs-keyword\">if</span>(y&lt;<span class=\"hljs-number\">10</span>) y=<span class=\"hljs-string\">'0'</span>+y;\n                    r=r.trimMiddle();\n                    r=r.substr(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span>).toUpperCase()+r.substr(<span class=\"hljs-number\">1</span>);\n                    r+=<span class=\"hljs-string\">' '</span>+y;\n                    y=y*<span class=\"hljs-number\">1</span>;\n                    <span class=\"hljs-comment\">// если существует числительное</span>\n                    <span class=\"hljs-keyword\">if</span>(names[y]) j=y;<span class=\"hljs-keyword\">else</span> j=y%<span class=\"hljs-number\">10</span>;\n                    <span class=\"hljs-keyword\">if</span>(groups[<span class=\"hljs-number\">9</span>][j]) r+=<span class=\"hljs-string\">' '</span>+groups[<span class=\"hljs-number\">9</span>][j][currency];\n                    <span class=\"hljs-keyword\">else</span> r+=<span class=\"hljs-string\">' '</span>+groups[<span class=\"hljs-number\">9</span>][<span class=\"hljs-number\">-1</span>][currency];\n                    <span class=\"hljs-keyword\">return</span> r;\n                }\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">input</span>)</span>{ <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Number</span>(input)).toPhrase(<span class=\"hljs-string\">'RUB'</span>); }\n            })\n            .controller(<span class=\"hljs-string\">'MyCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">$scope</span>)</span>{\n                $scope.num_=<span class=\"hljs-number\">123</span>;\n            });\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/532758d27805bffd6686","description":"Backup and Restore MySql database","files":["https://gist.githubusercontent.com/umidjons/532758d27805bffd6686/raw/58071f221920140ff5c1693b640c061856144daf/backup-restore-mysql-database.md"],"content":"Backup and restore MYSQL database\n===\n\nBackup and compress database\n```bash\nmysqldump -uroot -ppassword mydb | gzip -9 > /var/backups/mydb.sql.gz\n```\n\nExtract backup:\n```bash\ngunzip mydb.sql.gz\n```\n\nImport backup into database\n```bash\nmysql -hlocalhost -uroot -ppassword mydb < mydb.sql\n```\n\nExtract and Import backup into database\n```bash\ngunzip < mydb.sql.gz | mysql -uroot -ppassword mydb\n```","html":"<h1 id=\"backup-and-restore-mysql-database\">Backup and restore MYSQL database</h1>\n<p>Backup and compress database</p>\n<pre><code class=\"lang-bash\">mysqldump -uroot -ppassword mydb <span class=\"hljs-string\">| gzip -9 &gt; /var/backups/mydb.sql.gz</span>\n</code></pre>\n<p>Extract backup:</p>\n<pre><code class=\"lang-bash\">gunzip mydb<span class=\"hljs-selector-class\">.sql</span><span class=\"hljs-selector-class\">.gz</span>\n</code></pre>\n<p>Import backup into database</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-selector-tag\">mysql</span> <span class=\"hljs-selector-tag\">-hlocalhost</span> <span class=\"hljs-selector-tag\">-uroot</span> <span class=\"hljs-selector-tag\">-ppassword</span> <span class=\"hljs-selector-tag\">mydb</span> &lt; <span class=\"hljs-selector-tag\">mydb</span><span class=\"hljs-selector-class\">.sql</span>\n</code></pre>\n<p>Extract and Import backup into database</p>\n<pre><code class=\"lang-bash\">gunzip &lt; mydb.sql.gz <span class=\"hljs-string\">| mysql -uroot -ppassword mydb</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/59c88bbf53699d84e125","description":"Create database in MySql from command line","files":["https://gist.githubusercontent.com/umidjons/59c88bbf53699d84e125/raw/524000b32f0292f6d66b95af3cbdc1bda01a2848/mysql-database-create.md"],"content":"Create database in MySql from command line\n===\n\nOpen mysql console:\n```\nmysql -h localhost -u root -p mypass\n```\n\nType following command:\n```sql\nmysql>create database mydb character set utf8 collate utf8_unicode_ci;\n```","html":"<h1 id=\"create-database-in-mysql-from-command-line\">Create database in MySql from command line</h1>\n<p>Open mysql console:</p>\n<pre><code>mysql -h localhost -u root -<span class=\"hljs-selector-tag\">p</span> mypass\n</code></pre><p>Type following command:</p>\n<pre><code class=\"lang-sql\">mysql&gt;create database mydb character <span class=\"hljs-keyword\">set</span> utf8 <span class=\"hljs-comment\">collate utf8_unicode_ci</span>;\n</code></pre>\n"},{"html_url":"https://gist.github.com/7e8d4c54a4c06321596f","description":"Show asterisk for required fields","files":["https://gist.githubusercontent.com/umidjons/7e8d4c54a4c06321596f/raw/99149f8fb8be1fcb7b0bf81fa9175d7e79e54abb/asterisk-for-required.md"],"content":"Show asterisk for required fields\n===\n\n```css\n.req:after{\n\tcolor:#e32;\n\tcontent:' *';\n\tdisplay:inline;\n}\n```\n\n```html\n<div class=\"form-group\">\n\t<div class=\"col-sm-4\">\n\t\t<label class=\"req\">Name</label>\n\t\t<input class=\"form-control\" required>\n\t</div>\n</div>\n```","html":"<h1 id=\"show-asterisk-for-required-fields\">Show asterisk for required fields</h1>\n<pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.req</span><span class=\"hljs-selector-pseudo\">:after</span>{\n    <span class=\"hljs-attribute\">color</span>:<span class=\"hljs-number\">#e32</span>;\n    <span class=\"hljs-attribute\">content</span>:<span class=\"hljs-string\">' *'</span>;\n    <span class=\"hljs-attribute\">display</span>:inline;\n}\n</code></pre>\n<pre><code class=\"lang-html\">&lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"form-group\"</span>&gt;\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-4\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"req\"</span>&gt;</span>Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-control\"</span> <span class=\"hljs-attr\">required</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/abaac05b2ad21624aa7f","description":"Yii2 - Getting bad request (#400) on ajax calls","files":["https://gist.githubusercontent.com/umidjons/abaac05b2ad21624aa7f/raw/c599967143fc3f3a19ac2b557072ecc2008ffa15/yii2-ajax.md"],"content":"Yii2 - Getting bad request (#400) on ajax calls\n===\n\nInclude `_csrf` parameter with correct value in Ajax/Post calls.\n\n```javascript\nangular.module('MyModule',[])\n.factory('Subcategory',function($http){\n\t\treturn {\n\t\t\tquery:function(callback,cat_id){\n\t\t\t\t$http.post('/service-subcategory/query',{\n    \t\t\t\tcat_id:cat_id,\n    \t\t\t\t_csrf: yii.getCsrfToken() # CSRF token included\n  \t\t\t\t})\n\t\t\t\t.success(callback);\n\t\t\t}\n\t\t};\n\t})\n```","html":"<h1 id=\"yii2-getting-bad-request-400-on-ajax-calls\">Yii2 - Getting bad request (#400) on ajax calls</h1>\n<p>Include <code>_csrf</code> parameter with correct value in Ajax/Post calls.</p>\n<pre><code class=\"lang-javascript\">angular.module(<span class=\"hljs-string\">'MyModule'</span>,[])\n.factory(<span class=\"hljs-string\">'Subcategory'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($http)</span></span>{\n        <span class=\"hljs-keyword\">return</span> {\n            query:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(callback,cat_id)</span></span>{\n                $http.post(<span class=\"hljs-string\">'/service-subcategory/query'</span>,{\n                    cat_id:cat_id,\n                    _csrf: yii.getCsrfToken() <span class=\"hljs-comment\"># CSRF token included</span>\n                  })\n                .success(callback);\n            }\n        };\n    })\n</code></pre>\n"},{"html_url":"https://gist.github.com/b86f503ee108c6ad6f1a","description":"Trigger example in MySQL","files":["https://gist.githubusercontent.com/umidjons/b86f503ee108c6ad6f1a/raw/c5fa1db24d2594c0af73973cbf2fcded685900f3/trigger-mysql.md"],"content":"Trigger example in MySQL\n===\n\n```sql\nCREATE TRIGGER trigger_test AFTER INSERT ON tbl_test FOR EACH ROW\nBEGIN\n\n-- declare variable vHost_\nDECLARE vHost_ VARCHAR (100);\n-- get host name/IP of the client\nSELECT HOST INTO vHost_ FROM information_schema.PROCESSLIST WHERE ID = connection_id();\n\nINSERT INTO tbl_log (user_,ip_,date_,title_,val_)\nVALUES (USER(),vHost_,now(),NEW.title,NEW.val);\n\nEND\n```","html":"<h1 id=\"trigger-example-in-mysql\">Trigger example in MySQL</h1>\n<pre><code class=\"lang-sql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TRIGGER</span> trigger_test <span class=\"hljs-keyword\">AFTER</span> <span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">ON</span> tbl_test <span class=\"hljs-keyword\">FOR</span> <span class=\"hljs-keyword\">EACH</span> <span class=\"hljs-keyword\">ROW</span>\n<span class=\"hljs-keyword\">BEGIN</span>\n\n<span class=\"hljs-comment\">-- declare variable vHost_</span>\n<span class=\"hljs-keyword\">DECLARE</span> vHost_ <span class=\"hljs-built_in\">VARCHAR</span> (<span class=\"hljs-number\">100</span>);\n<span class=\"hljs-comment\">-- get host name/IP of the client</span>\n<span class=\"hljs-keyword\">SELECT</span> HOST <span class=\"hljs-keyword\">INTO</span> vHost_ <span class=\"hljs-keyword\">FROM</span> information_schema.PROCESSLIST <span class=\"hljs-keyword\">WHERE</span> <span class=\"hljs-keyword\">ID</span> = connection_id();\n\n<span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> tbl_log (user_,ip_,date_,title_,val_)\n<span class=\"hljs-keyword\">VALUES</span> (<span class=\"hljs-keyword\">USER</span>(),vHost_,<span class=\"hljs-keyword\">now</span>(),NEW.title,NEW.val);\n\n<span class=\"hljs-keyword\">END</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/c2bd9a9ce0306888d458","description":"Set the application root path via .htaccess","files":["https://gist.githubusercontent.com/umidjons/c2bd9a9ce0306888d458/raw/3696f5572140c89087fc1a6a5aeee718e67ae967/yii2-app-root-path.md"],"content":"Set the application root path via .htaccess\n===\n\nCreate `.htaccess` file in the application root folder.\n```conf\nRewriteEngine On\nRewriteCond %{REQUEST_URI} !^web\nRewriteRule ^(.*)$ web/$1 [L]\n```\n\nAlso create `.htaccess` file in the `/web/` folder:\n```conf\nRewriteEngine on\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule . index.php\n```","html":"<h1 id=\"set-the-application-root-path-via-htaccess\">Set the application root path via .htaccess</h1>\n<p>Create <code>.htaccess</code> file in the application root folder.</p>\n<pre><code class=\"lang-conf\"><span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteEngine</span></span> <span class=\"hljs-literal\">On</span>\n<span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteCond</span></span> <span class=\"hljs-variable\">%{REQUEST_URI}</span> !^web\n<span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteRule</span></span> ^(.*)$ web/<span class=\"hljs-number\">$1</span><span class=\"hljs-meta\"> [L]</span>\n</code></pre>\n<p>Also create <code>.htaccess</code> file in the <code>/web/</code> folder:</p>\n<pre><code class=\"lang-conf\"><span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteEngine</span></span> <span class=\"hljs-literal\">on</span>\n<span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteCond</span></span> <span class=\"hljs-variable\">%{REQUEST_FILENAME}</span> !-f\n<span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteCond</span></span> <span class=\"hljs-variable\">%{REQUEST_FILENAME}</span> !-d\n<span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteRule</span></span> . index.php\n</code></pre>\n"},{"html_url":"https://gist.github.com/0aed779706077e305796","description":"Column totals in CGridView","files":["https://gist.githubusercontent.com/umidjons/0aed779706077e305796/raw/7c4655f870343579b04f0f3d3839616058629896/column-totals-in-cgridview.md"],"content":"Column totals in CGridView\n===\n\nCreate model's method which calculates totals:\n```php\n<?php\nclass MyModel\n{\n\tpublic function getTotal($records,$colName)\n\t{\n\t\t$total=0;\n\t\tforeach($records as $rec)\n\t\t\t$total+=$rec->{$colName};\n\t\treturn Yii::app()->numberFormatter->formatDecimal($total);\n\t}\n}\n```\n\nUse `getTotal()` in grid view.\n\n```php\n<?php $this->widget('zii.widgets.grid.CGridView',[\n\t'id'           =>'my-grid',\n\t'dataProvider' =>$model->search(),\n\t'itemsCssClass'=>'table table-striped table-hover table-bordered',\n\t'template'     =>'{items}{pager}',\n\t'columns'      =>[\n\t\t'CLIENT_ID',\n\t\t'CLIENT_NAME',\n\t\t[\n\t\t\t'name'             =>'COUNT_ENTERED',\n\t\t\t'htmlOptions'      =>['class'=>'text-right'],\n\t\t\t'footerHtmlOptions'=>['class'=>'text-right'],\n\t\t\t'footer'           =>$model->getTotal($model->search()->getData(),'COUNT_ENTERED'),\n\t\t],\n\t\t[\n\t\t\t'name'             =>'COUNT_PRINTED',\n\t\t\t'htmlOptions'      =>['class'=>'text-right'],\n\t\t\t'footerHtmlOptions'=>['class'=>'text-right'],\n\t\t\t'footer'           =>$model->getTotal($model->search()->getData(),'COUNT_PRINTED'),\n\t\t],\n\t],\n]); ?>\n```\n\nTo get the same filtered & sorted data available for grid view we use `$model->search()->getData()`.","html":"<h1 id=\"column-totals-in-cgridview\">Column totals in CGridView</h1>\n<p>Create model&#39;s method which calculates totals:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyModel</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getTotal</span><span class=\"hljs-params\">($records,$colName)</span>\n    </span>{\n        $total=<span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">foreach</span>($records <span class=\"hljs-keyword\">as</span> $rec)\n            $total+=$rec-&gt;{$colName};\n        <span class=\"hljs-keyword\">return</span> Yii::app()-&gt;numberFormatter-&gt;formatDecimal($total);\n    }\n}</span>\n</code></pre>\n<p>Use <code>getTotal()</code> in grid view.</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">$this</span>-&gt;widget(<span class=\"hljs-string\">'zii.widgets.grid.CGridView'</span>,[\n    <span class=\"hljs-string\">'id'</span>           =&gt;<span class=\"hljs-string\">'my-grid'</span>,\n    <span class=\"hljs-string\">'dataProvider'</span> =&gt;$model-&gt;search(),\n    <span class=\"hljs-string\">'itemsCssClass'</span>=&gt;<span class=\"hljs-string\">'table table-striped table-hover table-bordered'</span>,\n    <span class=\"hljs-string\">'template'</span>     =&gt;<span class=\"hljs-string\">'{items}{pager}'</span>,\n    <span class=\"hljs-string\">'columns'</span>      =&gt;[\n        <span class=\"hljs-string\">'CLIENT_ID'</span>,\n        <span class=\"hljs-string\">'CLIENT_NAME'</span>,\n        [\n            <span class=\"hljs-string\">'name'</span>             =&gt;<span class=\"hljs-string\">'COUNT_ENTERED'</span>,\n            <span class=\"hljs-string\">'htmlOptions'</span>      =&gt;[<span class=\"hljs-string\">'class'</span>=&gt;<span class=\"hljs-string\">'text-right'</span>],\n            <span class=\"hljs-string\">'footerHtmlOptions'</span>=&gt;[<span class=\"hljs-string\">'class'</span>=&gt;<span class=\"hljs-string\">'text-right'</span>],\n            <span class=\"hljs-string\">'footer'</span>           =&gt;$model-&gt;getTotal($model-&gt;search()-&gt;getData(),<span class=\"hljs-string\">'COUNT_ENTERED'</span>),\n        ],\n        [\n            <span class=\"hljs-string\">'name'</span>             =&gt;<span class=\"hljs-string\">'COUNT_PRINTED'</span>,\n            <span class=\"hljs-string\">'htmlOptions'</span>      =&gt;[<span class=\"hljs-string\">'class'</span>=&gt;<span class=\"hljs-string\">'text-right'</span>],\n            <span class=\"hljs-string\">'footerHtmlOptions'</span>=&gt;[<span class=\"hljs-string\">'class'</span>=&gt;<span class=\"hljs-string\">'text-right'</span>],\n            <span class=\"hljs-string\">'footer'</span>           =&gt;$model-&gt;getTotal($model-&gt;search()-&gt;getData(),<span class=\"hljs-string\">'COUNT_PRINTED'</span>),\n        ],\n    ],\n]); <span class=\"hljs-meta\">?&gt;</span></span>\n</code></pre>\n<p>To get the same filtered &amp; sorted data available for grid view we use <code>$model-&gt;search()-&gt;getData()</code>.</p>\n"},{"html_url":"https://gist.github.com/09a617bace044ff8a705","description":"Setting correct mime type OR resolving `Resource interpreted as...` warning.","files":["https://gist.githubusercontent.com/umidjons/09a617bace044ff8a705/raw/9b232cb82b85b8b59948e93d17c5e0bc148223ab/correct-mime-type.md"],"content":"Setting the correct mime type in Apache\n===\nIf you got such warning in the browser's console, then you should set\ncorrect mime type for resource:\n`Resource interpreted as Font but transferred with MIME type application/x-font-otf: \"http://mydomain.com/assets/fonts/MikodacsPCS-fMac.otf\".`.\n\nCorrect mime type for `otf` is `font/otf`, so I can add it to my `.htaccess` file or `httpd.conf` file:\n```\n# correct mime type for .otf\nAddType font/otf .otf\n```","html":"<h1 id=\"setting-the-correct-mime-type-in-apache\">Setting the correct mime type in Apache</h1>\n<p>If you got such warning in the browser&#39;s console, then you should set\ncorrect mime type for resource:\n<code>Resource interpreted as Font but transferred with MIME type application/x-font-otf: &quot;http://mydomain.com/assets/fonts/MikodacsPCS-fMac.otf&quot;.</code>.</p>\n<p>Correct mime type for <code>otf</code> is <code>font/otf</code>, so I can add it to my <code>.htaccess</code> file or <code>httpd.conf</code> file:</p>\n<pre><code># correct mime <span class=\"hljs-keyword\">type</span> <span class=\"hljs-type\">for </span>.otf\nAddType font/otf .otf\n</code></pre>"},{"html_url":"https://gist.github.com/d4ebe30e1bc76dbbcc94","description":"Caching example in checking user privilege.","files":["https://gist.githubusercontent.com/umidjons/d4ebe30e1bc76dbbcc94/raw/d77b14b9b6924d048e3abd8a8f69d535b7127e10/caching-check-user-privilege.md"],"content":"Caching example in checking user privilege.\n===\n\n```php\n<?php\nclass F\n{\n\t/**\n\t * Check is user have access to specified operation(s).\n\t * @param string|array $operation    operation name or list of operations to check against to the current user\n\t * @param bool         $allowToAdmin true - always allow access for superAdmin, false - check exact permission.\n\t * @return int 1, if user has access for specified operation, or one of the specified operations from the operations list\n\t */\n\tpublic static function access($operation,$allowToAdmin=true)\n\t{\n\t\t$id_ =Yii::app()->user->id.$operation; // ex: 234create\n\t\t$exp_=Yii::app()->params['cacheExpire']; // ex: 18000 seconds.\n\t\t$res_=Yii::app()->cache[$id_]; // read from the cache\n\t\tif(false===$res_) // value does not exist in the cache\n\t\t{\n\t\t\tif($operation=='*') $res_=1;\n\t\t\telseif($operation=='?' && Yii::app()->user->isGuest) $res_=1;\n\t\t\telseif($operation=='@' && !Yii::app()->user->isGuest) $res_=1;\n\t\t\telseif($allowToAdmin && Yii::app()->user->checkAccess('admin')) $res_=1;\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(is_string($operation))\n\t\t\t\t\t$operation=array_map('trim',explode(',',$operation));\n\t\t\t\t$is_active=User::isActive(Yii::app()->user->id);\n\t\t\t\tif(is_array($operation))\n\t\t\t\t{\n\t\t\t\t\t$res_=0;\n\t\t\t\t\tforeach($operation as $oper)\n\t\t\t\t\t\tif(Yii::app()->user->checkAccess($oper) && $is_active)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$res_=1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tYii::app()->cache->set($id_,$res_,$exp_); // save a result into the cache\n\t\t}\n\t\treturn $res_;\n\t}\n}\n```\n\nExpire time from the application configuration:\n```php\nreturn [\n  // ... other entries\n\t'params'    =>[\n\t\t'adminEmail' =>'webmaster@example.com',\n\t\t'cacheExpire'=>1800, // seconds\n\t],\n];\n```","html":"<h1 id=\"caching-example-in-checking-user-privilege-\">Caching example in checking user privilege.</h1>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">F</span>\n</span>{\n    <span class=\"hljs-comment\">/**\n     * Check is user have access to specified operation(s).\n     * <span class=\"hljs-doctag\">@param</span> string|array $operation    operation name or list of operations to check against to the current user\n     * <span class=\"hljs-doctag\">@param</span> bool         $allowToAdmin true - always allow access for superAdmin, false - check exact permission.\n     * <span class=\"hljs-doctag\">@return</span> int 1, if user has access for specified operation, or one of the specified operations from the operations list\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">access</span><span class=\"hljs-params\">($operation,$allowToAdmin=true)</span>\n    </span>{\n        $id_ =Yii::app()-&gt;user-&gt;id.$operation; <span class=\"hljs-comment\">// ex: 234create</span>\n        $exp_=Yii::app()-&gt;params[<span class=\"hljs-string\">'cacheExpire'</span>]; <span class=\"hljs-comment\">// ex: 18000 seconds.</span>\n        $res_=Yii::app()-&gt;cache[$id_]; <span class=\"hljs-comment\">// read from the cache</span>\n        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">false</span>===$res_) <span class=\"hljs-comment\">// value does not exist in the cache</span>\n        {\n            <span class=\"hljs-keyword\">if</span>($operation==<span class=\"hljs-string\">'*'</span>) $res_=<span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">elseif</span>($operation==<span class=\"hljs-string\">'?'</span> &amp;&amp; Yii::app()-&gt;user-&gt;isGuest) $res_=<span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">elseif</span>($operation==<span class=\"hljs-string\">'@'</span> &amp;&amp; !Yii::app()-&gt;user-&gt;isGuest) $res_=<span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">elseif</span>($allowToAdmin &amp;&amp; Yii::app()-&gt;user-&gt;checkAccess(<span class=\"hljs-string\">'admin'</span>)) $res_=<span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">else</span>\n            {\n                <span class=\"hljs-keyword\">if</span>(is_string($operation))\n                    $operation=array_map(<span class=\"hljs-string\">'trim'</span>,explode(<span class=\"hljs-string\">','</span>,$operation));\n                $is_active=User::isActive(Yii::app()-&gt;user-&gt;id);\n                <span class=\"hljs-keyword\">if</span>(is_array($operation))\n                {\n                    $res_=<span class=\"hljs-number\">0</span>;\n                    <span class=\"hljs-keyword\">foreach</span>($operation <span class=\"hljs-keyword\">as</span> $oper)\n                        <span class=\"hljs-keyword\">if</span>(Yii::app()-&gt;user-&gt;checkAccess($oper) &amp;&amp; $is_active)\n                        {\n                            $res_=<span class=\"hljs-number\">1</span>;\n                            <span class=\"hljs-keyword\">break</span>;\n                        }\n                }\n            }\n            Yii::app()-&gt;cache-&gt;set($id_,$res_,$exp_); <span class=\"hljs-comment\">// save a result into the cache</span>\n        }\n        <span class=\"hljs-keyword\">return</span> $res_;\n    }\n}</span>\n</code></pre>\n<p>Expire time from the application configuration:</p>\n<pre><code class=\"lang-php\"><span class=\"hljs-keyword\">return</span> [\n  <span class=\"hljs-comment\">// ... other entries</span>\n    <span class=\"hljs-string\">'params'</span>    =&gt;[\n        <span class=\"hljs-string\">'adminEmail'</span> =&gt;<span class=\"hljs-string\">'webmaster@example.com'</span>,\n        <span class=\"hljs-string\">'cacheExpire'</span>=&gt;<span class=\"hljs-number\">1800</span>, <span class=\"hljs-comment\">// seconds</span>\n    ],\n];\n</code></pre>\n"},{"html_url":"https://gist.github.com/c7193bb48adb61cd20e8","description":"Publish assets in Yii","files":["https://gist.githubusercontent.com/umidjons/c7193bb48adb61cd20e8/raw/2b2520738249cabe328768f3cceba115c0b6d0c8/publish-assets-in-yii.md"],"content":"Publish assets in Yii\n===\n\nPut assets in `protected/assets/` folder.\n\nHelper component to publish assets:\n```php\n<?php\nclass F\n{\n\tpublic static function publishAssets()\n\t{\n\t\t$path=Yii::getPathOfAlias('application.assets');\n\t\t$url =Yii::app()->assetManager->publish($path,false,-1,YII_DEBUG);\n\t\t$cs  =Yii::app()->clientScript;\n\t\t$cs->registerCssFile($url.'/vendor/bootstrap/css/bootstrap.css')\n\t\t\t->registerCssFile($url.'/vendor/bootstrap/css/bootstrap-theme.css')\n\t\t\t->registerScriptFile($url.'/vendor/jquery/jquery-2.1.1.js')\n\t\t\t->registerScriptFile($url.'/vendor/bootstrap/js/bootstrap.js')\n\t\t\t->registerScriptFile($url.'/vendor/angular/angular.js')\n\t\t\t->registerScriptFile($url.'/vendor/angular-ui/angular-ui-router.js')\n\t\t\t->registerScriptFile($url.'/js/app.js');\n\t}\n}\n```\n\nIn layout put this line:\n```html\n<?php F::publishAssets(); ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n...\n```\n","html":"<h1 id=\"publish-assets-in-yii\">Publish assets in Yii</h1>\n<p>Put assets in <code>protected/assets/</code> folder.</p>\n<p>Helper component to publish assets:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">F</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">publishAssets</span><span class=\"hljs-params\">()</span>\n    </span>{\n        $path=Yii::getPathOfAlias(<span class=\"hljs-string\">'application.assets'</span>);\n        $url =Yii::app()-&gt;assetManager-&gt;publish($path,<span class=\"hljs-keyword\">false</span>,<span class=\"hljs-number\">-1</span>,YII_DEBUG);\n        $cs  =Yii::app()-&gt;clientScript;\n        $cs-&gt;registerCssFile($url.<span class=\"hljs-string\">'/vendor/bootstrap/css/bootstrap.css'</span>)\n            -&gt;registerCssFile($url.<span class=\"hljs-string\">'/vendor/bootstrap/css/bootstrap-theme.css'</span>)\n            -&gt;registerScriptFile($url.<span class=\"hljs-string\">'/vendor/jquery/jquery-2.1.1.js'</span>)\n            -&gt;registerScriptFile($url.<span class=\"hljs-string\">'/vendor/bootstrap/js/bootstrap.js'</span>)\n            -&gt;registerScriptFile($url.<span class=\"hljs-string\">'/vendor/angular/angular.js'</span>)\n            -&gt;registerScriptFile($url.<span class=\"hljs-string\">'/vendor/angular-ui/angular-ui-router.js'</span>)\n            -&gt;registerScriptFile($url.<span class=\"hljs-string\">'/js/app.js'</span>);\n    }\n}</span>\n</code></pre>\n<p>In layout put this line:</p>\n<pre><code class=\"lang-html\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> F::publishAssets(); <span class=\"hljs-meta\">?&gt;</span></span>\n<span class=\"hljs-meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">\"http://www.w3.org/1999/xhtml\"</span> <span class=\"hljs-attr\">xml:lang</span>=<span class=\"hljs-string\">\"en\"</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n...\n</code></pre>\n"},{"html_url":"https://gist.github.com/404c22c1ab7730493b7c","description":"Remove all dots except one in JavaScript with RegEx","files":["https://gist.githubusercontent.com/umidjons/404c22c1ab7730493b7c/raw/521b812da173d201826b416982ad24510ba697c0/remove-all-dots-except-last.md"],"content":"Remove all dots except one in JavaScript with RegEx\n\n```javascript\n'123.345..456456.00'.replace(/,/g,'.').replace(/[.](?!\\d*$)/g,''); // 123345456456.00\n```","html":"<p>Remove all dots except one in JavaScript with RegEx</p>\n<pre><code class=\"lang-javascript\">'123.345..456456.00'.replace(/,/g,'.').replace(/[<span class=\"hljs-string\">.</span>](<span class=\"hljs-link\">?!\\d*$</span>)/g,''); // 123345456456.00\n</code></pre>\n"},{"html_url":"https://gist.github.com/f477b63712bd6867ae2a","description":"AngularJS directive: Enter as Tab","files":["https://gist.githubusercontent.com/umidjons/f477b63712bd6867ae2a/raw/353b2f063e0db9d1faca12a110ead20178a1c43e/enter-as-tab-directive.md"],"content":"AngularJS directive: Enter as Tab\n===\n\n```javascript\nangular.module('App',[])\n\t.directive('enter',function(){\n\t\treturn function(scope,element,attrs){\n\t\t\telement.bind(\"keydown keypress\",function(event){\n\t\t\t\tif(event.which===13){\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar fields=$(this).parents('form:eq(0),body').find('input, textarea, select');\n\t\t\t\t\tvar index=fields.index(this);\n\t\t\t\t\tif(index> -1&&(index+1)<fields.length)\n\t\t\t\t\t\tfields.eq(index+1).focus();\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t});\n```\n\nHow to apply:\n\n```html\n<form class=\"form-horizontal\" novalidate>\n\t<div class=\"form-group\">\n\t\t<div class=\"col-sm-4\">\n\t\t\t<label>Input 1</label>\n\t\t\t<input class=\"form-control\" ng-model=\"word.data1\" enter>\n\t\t</div>\n\t\t<div class=\"col-sm-4\">\n\t\t\t<label>Input 2</label>\n\t\t\t<input class=\"form-control\" ng-model=\"word.data2\" enter>\n\t\t</div>\n\t\t<div class=\"col-sm-4\">\n\t\t\t<label>Input 3</label>\n\t\t\t<input class=\"form-control\" ng-model=\"word.data3\" enter>\n\t\t</div>\n\t</div>\n</form>\n```","html":"<h1 id=\"angularjs-directive-enter-as-tab\">AngularJS directive: Enter as Tab</h1>\n<pre><code class=\"lang-javascript\">angular.module(<span class=\"hljs-string\">'App'</span>,[])\n    .directive(<span class=\"hljs-string\">'enter'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">scope,element,attrs</span>)</span>{\n            element.bind(<span class=\"hljs-string\">\"keydown keypress\"</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">event</span>)</span>{\n                <span class=\"hljs-keyword\">if</span>(event.which===<span class=\"hljs-number\">13</span>){\n                    event.preventDefault();\n                    <span class=\"hljs-keyword\">var</span> fields=$(<span class=\"hljs-keyword\">this</span>).parents(<span class=\"hljs-string\">'form:eq(0),body'</span>).find(<span class=\"hljs-string\">'input, textarea, select'</span>);\n                    <span class=\"hljs-keyword\">var</span> index=fields.index(<span class=\"hljs-keyword\">this</span>);\n                    <span class=\"hljs-keyword\">if</span>(index&gt; <span class=\"hljs-number\">-1</span>&amp;&amp;(index+<span class=\"hljs-number\">1</span>)&lt;fields.length)\n                        fields.eq(index+<span class=\"hljs-number\">1</span>).focus();\n                }\n            });\n        };\n    });\n</code></pre>\n<p>How to apply:</p>\n<pre><code class=\"lang-html\">&lt;<span class=\"hljs-keyword\">form</span> <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"form-horizontal\"</span> novalidate&gt;\n    &lt;div <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"form-group\"</span>&gt;\n        &lt;div <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"col-sm-4\"</span>&gt;\n            &lt;<span class=\"hljs-keyword\">label</span>&gt;<span class=\"hljs-keyword\">Input</span> 1&lt;/<span class=\"hljs-keyword\">label</span>&gt;\n            &lt;<span class=\"hljs-keyword\">input</span> <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"form-control\"</span> ng-model=<span class=\"hljs-string\">\"word.data1\"</span> enter&gt;\n        &lt;/div&gt;\n        &lt;div <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"col-sm-4\"</span>&gt;\n            &lt;<span class=\"hljs-keyword\">label</span>&gt;<span class=\"hljs-keyword\">Input</span> 2&lt;/<span class=\"hljs-keyword\">label</span>&gt;\n            &lt;<span class=\"hljs-keyword\">input</span> <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"form-control\"</span> ng-model=<span class=\"hljs-string\">\"word.data2\"</span> enter&gt;\n        &lt;/div&gt;\n        &lt;div <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"col-sm-4\"</span>&gt;\n            &lt;<span class=\"hljs-keyword\">label</span>&gt;<span class=\"hljs-keyword\">Input</span> 3&lt;/<span class=\"hljs-keyword\">label</span>&gt;\n            &lt;<span class=\"hljs-keyword\">input</span> <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"form-control\"</span> ng-model=<span class=\"hljs-string\">\"word.data3\"</span> enter&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/<span class=\"hljs-keyword\">form</span>&gt;\n</code></pre>\n"},{"html_url":"https://gist.github.com/ac4f81fdf76963e1e63d","description":"Sugar.js as AngularJS filter","files":["https://gist.githubusercontent.com/umidjons/ac4f81fdf76963e1e63d/raw/26d83e91b202ec5e39b5849dcc0a59730aeacbe9/sugarjs-as-angularjs-filter.md"],"content":"Sugar.js as AngularJS filter\n===\n\nDownload and include `sugar.js` from http://sugarjs.com/.\n\n```javascript\nangular.module('MyModule',[])\n\t.filter('sugar',function($filter){\n\t\treturn function(input,format){\n\t\t\tformat=format || 'dd.MM.yyyy';\n\t\t\treturn $filter('date')(Date.create(input),format);\n\t\t}\n\t});\n```\n\nThen we can use `sugar` filter in our views like this:\n\n```html\n{{'19-DEC-2014'|sugar:'dd.MM.yyyy'}} <br>\n{{'tomorrow'|sugar:'dd MMMM yyyy'}}\n```\n\nOutput:\n```\n19.12.2014\n20 December 2014\n```\n\nI add new parameter, which specify whether create default date or just return empty string:\n```javascript\nangular.module('MyModule',[])\n\t.filter('sugar',function($filter){\n\t\treturn function(input,format,empty){\n\t\t\tif(!input && empty)return '';\n\t\t\tformat=format || 'dd.MM.yyyy';\n\t\t\treturn $filter('date')(Date.create(input),format);\n\t\t}\n\t})\n```\n\nHere is usage example, which outputs empty string, if `EXPIRED_DATE` value is falsy:\n```html\n{{EXPIRED_DATE|sugar:null:true}}\n```","html":"<h1 id=\"sugar-js-as-angularjs-filter\">Sugar.js as AngularJS filter</h1>\n<p>Download and include <code>sugar.js</code> from <a href=\"http://sugarjs.com/\">http://sugarjs.com/</a>.</p>\n<pre><code class=\"lang-javascript\">angular.module(<span class=\"hljs-string\">'MyModule'</span>,[])\n    .filter(<span class=\"hljs-string\">'sugar'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($filter)</span></span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(input,format)</span></span>{\n            format=format || <span class=\"hljs-string\">'dd.MM.yyyy'</span>;\n            <span class=\"hljs-keyword\">return</span> $filter(<span class=\"hljs-string\">'date'</span>)(Date.create(input),format);\n        }\n    });\n</code></pre>\n<p>Then we can use <code>sugar</code> filter in our views like this:</p>\n<pre><code class=\"lang-html\">{{<span class=\"hljs-string\">'19-DEC-2014'</span>|sugar:<span class=\"hljs-string\">'dd.MM.yyyy'</span>}} &lt;br&gt;\n{{<span class=\"hljs-string\">'tomorrow'</span>|sugar:<span class=\"hljs-string\">'dd MMMM yyyy'</span>}}\n</code></pre>\n<p>Output:</p>\n<pre><code><span class=\"hljs-number\">19.12.2014</span>\n<span class=\"hljs-symbol\">20 </span>December <span class=\"hljs-number\">2014</span>\n</code></pre><p>I add new parameter, which specify whether create default date or just return empty string:</p>\n<pre><code class=\"lang-javascript\">angular.module(<span class=\"hljs-string\">'MyModule'</span>,[])\n    .filter(<span class=\"hljs-string\">'sugar'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($filter)</span></span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(input,format,empty)</span></span>{\n            <span class=\"hljs-keyword\">if</span>(!input &amp;&amp; <span class=\"hljs-keyword\">empty</span>)<span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">''</span>;\n            format=format || <span class=\"hljs-string\">'dd.MM.yyyy'</span>;\n            <span class=\"hljs-keyword\">return</span> $filter(<span class=\"hljs-string\">'date'</span>)(Date.create(input),format);\n        }\n    })\n</code></pre>\n<p>Here is usage example, which outputs empty string, if <code>EXPIRED_DATE</code> value is falsy:</p>\n<pre><code class=\"lang-html\">{{EXPIRED_DATE|<span class=\"hljs-string\">sugar:</span><span class=\"hljs-string\">null:</span><span class=\"hljs-literal\">true</span>}}\n</code></pre>\n"},{"html_url":"https://gist.github.com/cf5a4ade96b76bc395c4","description":"AngularJS 'interval' directive","files":["https://gist.githubusercontent.com/umidjons/cf5a4ade96b76bc395c4/raw/33cdde86ef63ad6a6e22805b8e983c7833b5ad34/custom-interval-directive.md"],"content":"AngularJS `interval` directive\n===\n\n```javascript\nangular.module('App',[])\n\t.directive('interval',function($interval,$log){\n\t\tvar intervalTime_=15000;\n\t\tvar intervalFn_=null;\n\t\tvar iv_=null;\n\t\treturn {\n\t\t\trestrict:'A',\n\t\t\tlink    :function(scope,elem,attrs){\n\t\t\t\tif(angular.isDefined(attrs.intervalTime) && $.isNumeric(attrs.intervalTime))\n\t\t\t\t\tintervalTime_=attrs.intervalTime;\n\t\t\t\tif(angular.isDefined(attrs.intervalFn) && angular.isFunction(scope[attrs.intervalFn])){\n\t\t\t\t\tintervalFn_=scope[attrs.intervalFn];\n\t\t\t\t\tiv_=$interval(intervalFn_,intervalTime_);\n\t\t\t\t\tattrs.$observe('intervalTime',function(new_iv){\n\t\t\t\t\t\tif(!angular.equals(new_iv,intervalTime_)){\n\t\t\t\t\t\t\tif(iv_!=null) $interval.cancel(iv_);\n\t\t\t\t\t\t\tintervalTime_=new_iv;\n\t\t\t\t\t\t\tif(intervalTime_>0)\n\t\t\t\t\t\t\t\tiv_=$interval(intervalFn_,intervalTime_);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\t$log.error('Attribute `intervalFn` is not set or is not a function!');\n\t\t\t}\n\t\t};\n\t});\n```\n\nUsage example:\n```html\n<div ng-controller=\"TestCtrl\">\n\t<span class=\"label label-info\" interval interval-fn=\"testFn\" interval-time=\"{{intTime}}\">{{testVal}}</span>\n\t<button class=\"btn btn-danger\" ng-click=\"stop()\">Stop</button>\n\t<button class=\"btn btn-success\" ng-click=\"start()\">Start</button>\n</div>\n```\n\nImplementation of a controller:\n```javascript\nangular.module('App')\n.controller('TestCtrl',function($scope){\n\t$scope.intTime=3000; // initial interval\n\t$scope.testVal=1;\n\t\n\t$scope.testFn=function(){\n\t\t$scope.testVal++;\n\t}\n\t\n\t$scope.stop=function(){\n\t\t$scope.intTime=0; // intervalTime=0 means stop\n\t}\n\t\n\t$scope.start=function(){\n\t\t$scope.intTime=1000; // change intervalTime value\n\t}\n);\n```","html":"<h1 id=\"angularjs-interval-directive\">AngularJS <code>interval</code> directive</h1>\n<pre><code class=\"lang-javascript\">angular.module(<span class=\"hljs-string\">'App'</span>,[])\n    .directive(<span class=\"hljs-string\">'interval'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($interval,$log)</span></span>{\n        <span class=\"hljs-keyword\">var</span> intervalTime_=<span class=\"hljs-number\">15000</span>;\n        <span class=\"hljs-keyword\">var</span> intervalFn_=<span class=\"hljs-keyword\">null</span>;\n        <span class=\"hljs-keyword\">var</span> iv_=<span class=\"hljs-keyword\">null</span>;\n        <span class=\"hljs-keyword\">return</span> {\n            restrict:<span class=\"hljs-string\">'A'</span>,\n            link    :<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(scope,elem,attrs)</span></span>{\n                <span class=\"hljs-keyword\">if</span>(angular.isDefined(attrs.intervalTime) &amp;&amp; $.isNumeric(attrs.intervalTime))\n                    intervalTime_=attrs.intervalTime;\n                <span class=\"hljs-keyword\">if</span>(angular.isDefined(attrs.intervalFn) &amp;&amp; angular.isFunction(scope[attrs.intervalFn])){\n                    intervalFn_=scope[attrs.intervalFn];\n                    iv_=$interval(intervalFn_,intervalTime_);\n                    attrs.$observe(<span class=\"hljs-string\">'intervalTime'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(new_iv)</span></span>{\n                        <span class=\"hljs-keyword\">if</span>(!angular.equals(new_iv,intervalTime_)){\n                            <span class=\"hljs-keyword\">if</span>(iv_!=<span class=\"hljs-keyword\">null</span>) $interval.cancel(iv_);\n                            intervalTime_=new_iv;\n                            <span class=\"hljs-keyword\">if</span>(intervalTime_&gt;<span class=\"hljs-number\">0</span>)\n                                iv_=$interval(intervalFn_,intervalTime_);\n                        }\n                    });\n                }\n                <span class=\"hljs-keyword\">else</span>\n                    $log.error(<span class=\"hljs-string\">'Attribute `intervalFn` is not set or is not a function!'</span>);\n            }\n        };\n    });\n</code></pre>\n<p>Usage example:</p>\n<pre><code class=\"lang-html\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-controller</span>=<span class=\"hljs-string\">\"TestCtrl\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"label label-info\"</span> <span class=\"hljs-attr\">interval</span> <span class=\"hljs-attr\">interval-fn</span>=<span class=\"hljs-string\">\"testFn\"</span> <span class=\"hljs-attr\">interval-time</span>=<span class=\"hljs-string\">\"</span></span></span><span class=\"hljs-template-variable\">{{intTime}}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">\"</span>&gt;</span></span><span class=\"hljs-template-variable\">{{testVal}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"btn btn-danger\"</span> <span class=\"hljs-attr\">ng-click</span>=<span class=\"hljs-string\">\"stop()\"</span>&gt;</span>Stop<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"btn btn-success\"</span> <span class=\"hljs-attr\">ng-click</span>=<span class=\"hljs-string\">\"start()\"</span>&gt;</span>Start<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n</code></pre>\n<p>Implementation of a controller:</p>\n<pre><code class=\"lang-javascript\">angular.module(<span class=\"hljs-string\">'App'</span>)\n.controller(<span class=\"hljs-string\">'TestCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($scope)</span></span>{\n    $scope.intTime=<span class=\"hljs-number\">3000</span>; <span class=\"hljs-comment\">// initial interval</span>\n    $scope.testVal=<span class=\"hljs-number\">1</span>;\n\n    $scope.testFn=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n        $scope.testVal++;\n    }\n\n    $scope.stop=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n        $scope.intTime=<span class=\"hljs-number\">0</span>; <span class=\"hljs-comment\">// intervalTime=0 means stop</span>\n    }\n\n    $scope.start=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n        $scope.intTime=<span class=\"hljs-number\">1000</span>; <span class=\"hljs-comment\">// change intervalTime value</span>\n    }\n);\n</code></pre>\n"},{"html_url":"https://gist.github.com/bad2b5bd0d415f665253","description":"Simplify complex queries with 'WITH' statement","files":["https://gist.githubusercontent.com/umidjons/bad2b5bd0d415f665253/raw/044717ad3f76791dc97bd20d5ad4709f6d6d8e5c/with-statement.md"],"content":"Simplify complex queries with 'WITH' statement\n===\n\n```sql\nwith\n  cal         as (select * from v_client_calendar),\n  rec_reg_hlp as (select client_code,extract(Year from registered) Year,extract(Month from registered) Month from declarations),\n  rec_reg     as (select client_code,Year,Month,count(*) count_ from rec_reg_hlp group by client_code,Year,Month),\n  rec_prt_hlp as (select client_code,extract(Year from created) Year,extract(Month from created) Month from user_reports where state=1),\n  rec_prt     as (select client_code,Year,Month,count(*) count_ from rec_prt_hlp group by client_code,Year,Month)\nselect a.client_code,a.year,a.month,nvl(b.count_,0) count_entered,nvl(c.count_,0) count_printed\n  from cal a, rec_reg b, rec_prt c\n where a.client_code=b.client_code(+) and a.Year = b.Year(+) and a.Month=b.Month(+) and\n       a.client_code=c.client_code(+) and a.Year = c.Year(+) and a.Month=c.Month(+);\n```\n\nHere is another example\n====\nThis query is less verbose, but calculations are complex to understand\n```sql\nselect a.\"CLIENT_CODE\",a.\"YEAR\",a.\"MONTH\",a.\"COUNT_ENTERED\",a.\"COUNT_PRINTED\",\n       p1.EnterPrice,\n       p2.PrintPrice,\n       p3.TAC TAX,\n       ROUND(a.count_entered*p1.EnterPrice,2) EnterCost,\n       ROUND(a.count_printed*p2.PrintPrice,2) PrintCost,\n       ROUND(a.count_entered*p1.EnterPrice,2)+ROUND(a.count_printed*p2.PrintPrice,2) TotalCost,\n       ROUND((a.count_entered*p1.EnterPrice*p3.TAC)/100,2) EnterTax,\n       ROUND((a.count_printed*p2.PrintPrice*p3.TAC)/100,2) PrintTax,\n       ROUND((a.count_entered*p1.EnterPrice*p3.TAC)/100,2)+ROUND((a.count_printed*p2.PrintPrice*p3.TAC)/100,2) TotalTax,\n       (ROUND(a.count_entered*p1.EnterPrice,2)+ROUND((a.count_entered*p1.EnterPrice*p3.TAC)/100,2))EnterCostTax,\n       (ROUND(a.count_printed*p2.PrintPrice,2)+ROUND((a.count_printed*p2.PrintPrice*p3.TAC)/100,2))PrintCostTax,\n       ((ROUND(a.count_entered*p1.EnterPrice,2)+ROUND((a.count_entered*p1.EnterPrice*p3.TAC)/100,2))+(ROUND(a.count_printed*p2.PrintPrice,2)+ROUND((a.count_printed*p2.PrintPrice*p3.TAC)/100,2))) Total\nfrom v_client_bill a,\n(select to_number(value_string) EnterPrice from r_system_settings where id=42) p1,\n(select to_number(value_string) PrintPrice from r_system_settings where id=43) p2,\n(select to_number(value_string) TAC from r_system_settings where id=44) p3;\n```\n\nHere I refactor SQL using `with` clause. This SQL is more verbose, but calculations are easy to understand:\n```sql\nwith\nEnterPrice as (select to_number(value_string) val from r_system_settings where id=42),\nPrintPrice as (select to_number(value_string) val from r_system_settings where id=43),\nTax        as (select to_number(value_string) val from r_system_settings where id=44),\nData_01    as (\n  select client_code,year,month,count_entered,count_printed,Tax.val tax,\n         round(count_entered*EnterPrice.val,2)EnterCost,\n         round(count_printed*PrintPrice.val,2)PrintCost\n  from v_client_bill,EnterPrice,PrintPrice,Tax\n),\nData_02    as (\n  select t.*,\n    t.EnterCost+t.PrintCost TotalCost,\n    round(EnterCost*Tax/100,2) EnterTax,\n    round(PrintCost*Tax/100,2) PrintTax\n  from Data_01 t\n),\nData_03    as (\n  select t.*,\n    t.EnterTax  + t.PrintTax TotalTax,\n    t.EnterCost + t.EnterTax EnterCostTax,\n    t.PrintCost + t.PrintTax PrintCostTax\n  from Data_02 t\n),\nData_04    as (select t.*, t.EnterCostTax + t.PrintCostTax Total from Data_03 t)\nselect * from Data_04\n```","html":"<h1 id=\"simplify-complex-queries-with-with-statement\">Simplify complex queries with &#39;WITH&#39; statement</h1>\n<pre><code class=\"lang-sql\">with\n  cal         as (<span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> v_client_calendar),\n  rec_reg_hlp <span class=\"hljs-keyword\">as</span> (<span class=\"hljs-keyword\">select</span> client_code,<span class=\"hljs-keyword\">extract</span>(<span class=\"hljs-keyword\">Year</span> <span class=\"hljs-keyword\">from</span> registered) <span class=\"hljs-keyword\">Year</span>,<span class=\"hljs-keyword\">extract</span>(<span class=\"hljs-keyword\">Month</span> <span class=\"hljs-keyword\">from</span> registered) <span class=\"hljs-keyword\">Month</span> <span class=\"hljs-keyword\">from</span> declarations),\n  rec_reg     <span class=\"hljs-keyword\">as</span> (<span class=\"hljs-keyword\">select</span> client_code,<span class=\"hljs-keyword\">Year</span>,<span class=\"hljs-keyword\">Month</span>,<span class=\"hljs-keyword\">count</span>(*) count_ <span class=\"hljs-keyword\">from</span> rec_reg_hlp <span class=\"hljs-keyword\">group</span> <span class=\"hljs-keyword\">by</span> client_code,<span class=\"hljs-keyword\">Year</span>,<span class=\"hljs-keyword\">Month</span>),\n  rec_prt_hlp <span class=\"hljs-keyword\">as</span> (<span class=\"hljs-keyword\">select</span> client_code,<span class=\"hljs-keyword\">extract</span>(<span class=\"hljs-keyword\">Year</span> <span class=\"hljs-keyword\">from</span> created) <span class=\"hljs-keyword\">Year</span>,<span class=\"hljs-keyword\">extract</span>(<span class=\"hljs-keyword\">Month</span> <span class=\"hljs-keyword\">from</span> created) <span class=\"hljs-keyword\">Month</span> <span class=\"hljs-keyword\">from</span> user_reports <span class=\"hljs-keyword\">where</span> state=<span class=\"hljs-number\">1</span>),\n  rec_prt     <span class=\"hljs-keyword\">as</span> (<span class=\"hljs-keyword\">select</span> client_code,<span class=\"hljs-keyword\">Year</span>,<span class=\"hljs-keyword\">Month</span>,<span class=\"hljs-keyword\">count</span>(*) count_ <span class=\"hljs-keyword\">from</span> rec_prt_hlp <span class=\"hljs-keyword\">group</span> <span class=\"hljs-keyword\">by</span> client_code,<span class=\"hljs-keyword\">Year</span>,<span class=\"hljs-keyword\">Month</span>)\n<span class=\"hljs-keyword\">select</span> a.client_code,a.year,a.month,nvl(b.count_,<span class=\"hljs-number\">0</span>) count_entered,nvl(c.count_,<span class=\"hljs-number\">0</span>) count_printed\n  <span class=\"hljs-keyword\">from</span> cal a, rec_reg b, rec_prt c\n <span class=\"hljs-keyword\">where</span> a.client_code=b.client_code(+) <span class=\"hljs-keyword\">and</span> a.Year = b.Year(+) <span class=\"hljs-keyword\">and</span> a.Month=b.Month(+) <span class=\"hljs-keyword\">and</span>\n       a.client_code=c.client_code(+) <span class=\"hljs-keyword\">and</span> a.Year = c.Year(+) <span class=\"hljs-keyword\">and</span> a.Month=c.Month(+);\n</code></pre>\n<h1 id=\"here-is-another-example\">Here is another example</h1>\n<p>This query is less verbose, but calculations are complex to understand</p>\n<pre><code class=\"lang-sql\"><span class=\"hljs-keyword\">select </span>a.<span class=\"hljs-string\">\"CLIENT_CODE\"</span>,a.<span class=\"hljs-string\">\"YEAR\"</span>,a.<span class=\"hljs-string\">\"MONTH\"</span>,a.<span class=\"hljs-string\">\"COUNT_ENTERED\"</span>,a.<span class=\"hljs-string\">\"COUNT_PRINTED\"</span>,\n       <span class=\"hljs-built_in\">p1</span>.EnterPrice,\n       <span class=\"hljs-built_in\">p2</span>.PrintPrice,\n       <span class=\"hljs-built_in\">p3</span>.TAC TAX,\n       ROUND(a.count_entered*<span class=\"hljs-built_in\">p1</span>.EnterPrice,<span class=\"hljs-number\">2</span>) EnterCost,\n       ROUND(a.count_printed*<span class=\"hljs-built_in\">p2</span>.PrintPrice,<span class=\"hljs-number\">2</span>) PrintCost,\n       ROUND(a.count_entered*<span class=\"hljs-built_in\">p1</span>.EnterPrice,<span class=\"hljs-number\">2</span>)+ROUND(a.count_printed*<span class=\"hljs-built_in\">p2</span>.PrintPrice,<span class=\"hljs-number\">2</span>) TotalCost,\n       ROUND((a.count_entered*<span class=\"hljs-built_in\">p1</span>.EnterPrice*<span class=\"hljs-built_in\">p3</span>.TAC)/<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">2</span>) EnterTax,\n       ROUND((a.count_printed*<span class=\"hljs-built_in\">p2</span>.PrintPrice*<span class=\"hljs-built_in\">p3</span>.TAC)/<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">2</span>) PrintTax,\n       ROUND((a.count_entered*<span class=\"hljs-built_in\">p1</span>.EnterPrice*<span class=\"hljs-built_in\">p3</span>.TAC)/<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">2</span>)+ROUND((a.count_printed*<span class=\"hljs-built_in\">p2</span>.PrintPrice*<span class=\"hljs-built_in\">p3</span>.TAC)/<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">2</span>) TotalTax,\n       (ROUND(a.count_entered*<span class=\"hljs-built_in\">p1</span>.EnterPrice,<span class=\"hljs-number\">2</span>)+ROUND((a.count_entered*<span class=\"hljs-built_in\">p1</span>.EnterPrice*<span class=\"hljs-built_in\">p3</span>.TAC)/<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">2</span>))EnterCostTax,\n       (ROUND(a.count_printed*<span class=\"hljs-built_in\">p2</span>.PrintPrice,<span class=\"hljs-number\">2</span>)+ROUND((a.count_printed*<span class=\"hljs-built_in\">p2</span>.PrintPrice*<span class=\"hljs-built_in\">p3</span>.TAC)/<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">2</span>))PrintCostTax,\n       ((ROUND(a.count_entered*<span class=\"hljs-built_in\">p1</span>.EnterPrice,<span class=\"hljs-number\">2</span>)+ROUND((a.count_entered*<span class=\"hljs-built_in\">p1</span>.EnterPrice*<span class=\"hljs-built_in\">p3</span>.TAC)/<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">2</span>))+(ROUND(a.count_printed*<span class=\"hljs-built_in\">p2</span>.PrintPrice,<span class=\"hljs-number\">2</span>)+ROUND((a.count_printed*<span class=\"hljs-built_in\">p2</span>.PrintPrice*<span class=\"hljs-built_in\">p3</span>.TAC)/<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">2</span>))) Total\n<span class=\"hljs-symbol\">from</span> v_client_bill a,\n(<span class=\"hljs-keyword\">select </span>to_number(value_string) EnterPrice from r_system_settings where id<span class=\"hljs-number\">=42</span>) <span class=\"hljs-built_in\">p1</span>,\n(<span class=\"hljs-keyword\">select </span>to_number(value_string) PrintPrice from r_system_settings where id<span class=\"hljs-number\">=43</span>) <span class=\"hljs-built_in\">p2</span>,\n(<span class=\"hljs-keyword\">select </span>to_number(value_string) TAC from r_system_settings where id<span class=\"hljs-number\">=44</span>) <span class=\"hljs-built_in\">p3</span><span class=\"hljs-comment\">;</span>\n</code></pre>\n<p>Here I refactor SQL using <code>with</code> clause. This SQL is more verbose, but calculations are easy to understand:</p>\n<pre><code class=\"lang-sql\">with\nEnterPrice as (<span class=\"hljs-keyword\">select</span> to_number(value_string) val <span class=\"hljs-keyword\">from</span> r_system_settings <span class=\"hljs-keyword\">where</span> <span class=\"hljs-keyword\">id</span>=<span class=\"hljs-number\">42</span>),\nPrintPrice <span class=\"hljs-keyword\">as</span> (<span class=\"hljs-keyword\">select</span> to_number(value_string) val <span class=\"hljs-keyword\">from</span> r_system_settings <span class=\"hljs-keyword\">where</span> <span class=\"hljs-keyword\">id</span>=<span class=\"hljs-number\">43</span>),\nTax        <span class=\"hljs-keyword\">as</span> (<span class=\"hljs-keyword\">select</span> to_number(value_string) val <span class=\"hljs-keyword\">from</span> r_system_settings <span class=\"hljs-keyword\">where</span> <span class=\"hljs-keyword\">id</span>=<span class=\"hljs-number\">44</span>),\nData_01    <span class=\"hljs-keyword\">as</span> (\n  <span class=\"hljs-keyword\">select</span> client_code,<span class=\"hljs-keyword\">year</span>,<span class=\"hljs-keyword\">month</span>,count_entered,count_printed,Tax.val tax,\n         <span class=\"hljs-keyword\">round</span>(count_entered*EnterPrice.val,<span class=\"hljs-number\">2</span>)EnterCost,\n         <span class=\"hljs-keyword\">round</span>(count_printed*PrintPrice.val,<span class=\"hljs-number\">2</span>)PrintCost\n  <span class=\"hljs-keyword\">from</span> v_client_bill,EnterPrice,PrintPrice,Tax\n),\nData_02    <span class=\"hljs-keyword\">as</span> (\n  <span class=\"hljs-keyword\">select</span> t.*,\n    t.EnterCost+t.PrintCost TotalCost,\n    <span class=\"hljs-keyword\">round</span>(EnterCost*Tax/<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">2</span>) EnterTax,\n    <span class=\"hljs-keyword\">round</span>(PrintCost*Tax/<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">2</span>) PrintTax\n  <span class=\"hljs-keyword\">from</span> Data_01 t\n),\nData_03    <span class=\"hljs-keyword\">as</span> (\n  <span class=\"hljs-keyword\">select</span> t.*,\n    t.EnterTax  + t.PrintTax TotalTax,\n    t.EnterCost + t.EnterTax EnterCostTax,\n    t.PrintCost + t.PrintTax PrintCostTax\n  <span class=\"hljs-keyword\">from</span> Data_02 t\n),\nData_04    <span class=\"hljs-keyword\">as</span> (<span class=\"hljs-keyword\">select</span> t.*, t.EnterCostTax + t.PrintCostTax Total <span class=\"hljs-keyword\">from</span> Data_03 t)\n<span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> Data_04\n</code></pre>\n"},{"html_url":"https://gist.github.com/e322006733b44574b43b","description":"Work with named range in PHPExcel","files":["https://gist.githubusercontent.com/umidjons/e322006733b44574b43b/raw/90338615124176b0283b8b28d9f3875bb4737d6d/named-range.md"],"content":"Work with named range\n===\n\nExtract `PHPExcel/Classes` into `protected/extensions/phpoffice/`.\nThen in the controller's action use PHPExcel classes.\n\n```php\n<?php\npublic function actionTest()\n{\n  // register PHPExcel autoloader\n\tspl_autoload_unregister(['YiiBase','autoload']);\n\tYii::import('ext.phpoffice.PHPExcel',true);\n\tspl_autoload_register(['YiiBase','autoload']);\n\t\n\t// load excel template\n\t$wbook=PHPExcel_IOFactory::load('files/reports/tpl/report_1.xlsx');\n\t$sheet=$wbook->setActiveSheetIndex(); // get sheet\n\t\n\t// get named range 'range1' and set its value\n\t$sheet->getCell('range1')->setValue(7777);\n\t\n\t// or set value with type specified\n\t$sheet->getCell('range1')->setValueExplicit(7777,PHPExcel_Cell_DataType::TYPE_NUMERIC);\n\t\n\t// create writer and save to file\n\t$writer=PHPExcel_IOFactory::createWriter($wbook,'Excel2007');\n\t$writer->save('files/reports/report_1_data.xlsx');\n}\n\n```","html":"<h1 id=\"work-with-named-range\">Work with named range</h1>\n<p>Extract <code>PHPExcel/Classes</code> into <code>protected/extensions/phpoffice/</code>.\nThen in the controller&#39;s action use PHPExcel classes.</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">actionTest</span><span class=\"hljs-params\">()</span>\n</span>{\n  <span class=\"hljs-comment\">// register PHPExcel autoloader</span>\n    spl_autoload_unregister([<span class=\"hljs-string\">'YiiBase'</span>,<span class=\"hljs-string\">'autoload'</span>]);\n    Yii::import(<span class=\"hljs-string\">'ext.phpoffice.PHPExcel'</span>,<span class=\"hljs-keyword\">true</span>);\n    spl_autoload_register([<span class=\"hljs-string\">'YiiBase'</span>,<span class=\"hljs-string\">'autoload'</span>]);\n\n    <span class=\"hljs-comment\">// load excel template</span>\n    $wbook=PHPExcel_IOFactory::load(<span class=\"hljs-string\">'files/reports/tpl/report_1.xlsx'</span>);\n    $sheet=$wbook-&gt;setActiveSheetIndex(); <span class=\"hljs-comment\">// get sheet</span>\n\n    <span class=\"hljs-comment\">// get named range 'range1' and set its value</span>\n    $sheet-&gt;getCell(<span class=\"hljs-string\">'range1'</span>)-&gt;setValue(<span class=\"hljs-number\">7777</span>);\n\n    <span class=\"hljs-comment\">// or set value with type specified</span>\n    $sheet-&gt;getCell(<span class=\"hljs-string\">'range1'</span>)-&gt;setValueExplicit(<span class=\"hljs-number\">7777</span>,PHPExcel_Cell_DataType::TYPE_NUMERIC);\n\n    <span class=\"hljs-comment\">// create writer and save to file</span>\n    $writer=PHPExcel_IOFactory::createWriter($wbook,<span class=\"hljs-string\">'Excel2007'</span>);\n    $writer-&gt;save(<span class=\"hljs-string\">'files/reports/report_1_data.xlsx'</span>);\n}</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/53c35bf193858fc048ec","description":"Determine variable is instance of OCI-Lob && load content","files":["https://gist.githubusercontent.com/umidjons/53c35bf193858fc048ec/raw/dffea61b89ee59a47df3b77b869456595a77310a/oci-lob-instance.md"],"content":"Determine variable is instance of OCI-Lob\n===\n\n```php\n<?php\n// $row associative array and represent table row\nif(isset($row['COL_4']) && get_class($row['COL_4']))\n  $row['COL_4']=$row['COL_4']->load(); // load blob/clob content\n```","html":"<h1 id=\"determine-variable-is-instance-of-oci-lob\">Determine variable is instance of OCI-Lob</h1>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-comment\">// $row associative array and represent table row</span>\n<span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>($row[<span class=\"hljs-string\">'COL_4'</span>]) &amp;&amp; get_class($row[<span class=\"hljs-string\">'COL_4'</span>]))\n  $row[<span class=\"hljs-string\">'COL_4'</span>]=$row[<span class=\"hljs-string\">'COL_4'</span>]-&gt;load(); <span class=\"hljs-comment\">// load blob/clob content</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/f3de2533c51495a9c557","description":"Simple Web service - SOAP Server/Client in PHP","files":["https://gist.githubusercontent.com/umidjons/f3de2533c51495a9c557/raw/30208e4aa51ed158bce793a8cfa87195b7046ed1/web-service-soap-client-server-php.md"],"content":"Simple Web service - SOAP Server/Client in PHP\n===\n\nImplementation of the SOAP server - `server.php`:\n```php\n<?php\n// turn off WSDL caching\nini_set(\"soap.wsdl_cache_enabled\",\"0\");\n\n// model, which uses in web service functions as parameter\nclass Book\n{\n\tpublic $name;\n\tpublic $year;\n}\n\n/**\n * Determines published year of the book by name.\n * @param Book $book book instance with name set.\n * @return int published year of the book or 0 if not found.\n */\nfunction bookYear($book)\n{\n\t// list of the books\n\t$_books=[\n\t\t['name'=>'test 1','year'=>2011],\n\t\t['name'=>'test 2','year'=>2012],\n\t\t['name'=>'test 3','year'=>2013],\n\t];\n\t// search book by name\n\tforeach($_books as $bk)\n\t\tif($bk['name']==$book->name)\n\t\t\treturn $bk['year']; // book found\n\n\treturn 0; // book not found\n}\n\n// initialize SOAP Server\n$server=new SoapServer(\"test.wsdl\",[\n\t'classmap'=>[\n\t\t'book'=>'Book', // 'book' complex type in WSDL file mapped to the Book PHP class\n\t]\n]);\n\n// register available functions\n$server->addFunction('bookYear');\n\n// start handling requests\n$server->handle();\n```\n\nImplementation of the SOAP client - `client.php`:\n```php\n<?php\n// model\nclass Book\n{\n\tpublic $name;\n\tpublic $year;\n}\n\n// create instance and set a book name\n$book      =new Book();\n$book->name='test 2';\n\n// initialize SOAP client and call web service function\n$client=new SoapClient('http://a.uz/soap/server.php?wsdl',['trace'=>1,'cache_wsdl'=>WSDL_CACHE_NONE]);\n$resp  =$client->bookYear($book);\n\n// dump response\nvar_dump($resp);\n```\n\nDump of the response:\n```\nstring '2012' (length=4)\n```\n\nWSDL file `test.wsdl`:\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<wsdl:definitions name=\"Library\"\n                  xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n                  targetNamespace=\"Library\"\n                  xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\"\n                  xmlns:tns=\"Library\"\n                  xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\">\n\n    <xsd:documentation></xsd:documentation>\n\n    <wsdl:types>\n        <xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" targetNamespace=\"Library\">\n            <xsd:complexType name=\"book\">\n                <xsd:sequence>\n                    <xsd:element name=\"name\" type=\"xsd:string\"></xsd:element>\n                    <xsd:element name=\"year\" type=\"tns:integer\"></xsd:element>\n                </xsd:sequence>\n            </xsd:complexType>\n        </xsd:schema>\n    </wsdl:types>\n\n    <wsdl:message name=\"bookYearRequest\">\n        <wsdl:part name=\"book\" type=\"xsd:book\"></wsdl:part>\n    </wsdl:message>\n    <wsdl:message name=\"bookYearResponse\">\n        <wsdl:part name=\"year\" type=\"tns:integer\"></wsdl:part>\n    </wsdl:message>\n\n    <wsdl:portType name=\"Library\">\n        <wsdl:operation name=\"bookYear\">\n            <wsdl:input message=\"tns:bookYearRequest\"/>\n            <wsdl:output message=\"tns:bookYearResponse\"/>\n        </wsdl:operation>\n    </wsdl:portType>\n\n    <wsdl:binding name=\"Library\" type=\"tns:Library\">\n        <soap:binding style=\"rpc\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n        <wsdl:operation name=\"bookYear\">\n            <soap:operation soapAction=\"http://a.uz/soap/server.php\"/>\n            <wsdl:input>\n                <soap:body use=\"literal\" namespace=\"Library\"/>\n            </wsdl:input>\n            <wsdl:output>\n                <soap:body use=\"literal\" namespace=\"Library\"/>\n            </wsdl:output>\n        </wsdl:operation>\n    </wsdl:binding>\n\n    <wsdl:service name=\"Library\">\n        <wsdl:port binding=\"tns:Library\" name=\"BookLibrary\">\n            <soap:address location=\"http://a.uz/soap/server.php\"/>\n        </wsdl:port>\n    </wsdl:service>\n\n</wsdl:definitions>\n```","html":"<h1 id=\"simple-web-service-soap-server-client-in-php\">Simple Web service - SOAP Server/Client in PHP</h1>\n<p>Implementation of the SOAP server - <code>server.php</code>:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-comment\">// turn off WSDL caching</span>\nini_set(<span class=\"hljs-string\">\"soap.wsdl_cache_enabled\"</span>,<span class=\"hljs-string\">\"0\"</span>);\n\n<span class=\"hljs-comment\">// model, which uses in web service functions as parameter</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Book</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> $name;\n    <span class=\"hljs-keyword\">public</span> $year;\n}\n\n<span class=\"hljs-comment\">/**\n * Determines published year of the book by name.\n * <span class=\"hljs-doctag\">@param</span> Book $book book instance with name set.\n * <span class=\"hljs-doctag\">@return</span> int published year of the book or 0 if not found.\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">bookYear</span><span class=\"hljs-params\">($book)</span>\n</span>{\n    <span class=\"hljs-comment\">// list of the books</span>\n    $_books=[\n        [<span class=\"hljs-string\">'name'</span>=&gt;<span class=\"hljs-string\">'test 1'</span>,<span class=\"hljs-string\">'year'</span>=&gt;<span class=\"hljs-number\">2011</span>],\n        [<span class=\"hljs-string\">'name'</span>=&gt;<span class=\"hljs-string\">'test 2'</span>,<span class=\"hljs-string\">'year'</span>=&gt;<span class=\"hljs-number\">2012</span>],\n        [<span class=\"hljs-string\">'name'</span>=&gt;<span class=\"hljs-string\">'test 3'</span>,<span class=\"hljs-string\">'year'</span>=&gt;<span class=\"hljs-number\">2013</span>],\n    ];\n    <span class=\"hljs-comment\">// search book by name</span>\n    <span class=\"hljs-keyword\">foreach</span>($_books <span class=\"hljs-keyword\">as</span> $bk)\n        <span class=\"hljs-keyword\">if</span>($bk[<span class=\"hljs-string\">'name'</span>]==$book-&gt;name)\n            <span class=\"hljs-keyword\">return</span> $bk[<span class=\"hljs-string\">'year'</span>]; <span class=\"hljs-comment\">// book found</span>\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>; <span class=\"hljs-comment\">// book not found</span>\n}\n\n<span class=\"hljs-comment\">// initialize SOAP Server</span>\n$server=<span class=\"hljs-keyword\">new</span> SoapServer(<span class=\"hljs-string\">\"test.wsdl\"</span>,[\n    <span class=\"hljs-string\">'classmap'</span>=&gt;[\n        <span class=\"hljs-string\">'book'</span>=&gt;<span class=\"hljs-string\">'Book'</span>, <span class=\"hljs-comment\">// 'book' complex type in WSDL file mapped to the Book PHP class</span>\n    ]\n]);\n\n<span class=\"hljs-comment\">// register available functions</span>\n$server-&gt;addFunction(<span class=\"hljs-string\">'bookYear'</span>);\n\n<span class=\"hljs-comment\">// start handling requests</span>\n$server-&gt;handle();</span>\n</code></pre>\n<p>Implementation of the SOAP client - <code>client.php</code>:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-comment\">// model</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Book</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> $name;\n    <span class=\"hljs-keyword\">public</span> $year;\n}\n\n<span class=\"hljs-comment\">// create instance and set a book name</span>\n$book      =<span class=\"hljs-keyword\">new</span> Book();\n$book-&gt;name=<span class=\"hljs-string\">'test 2'</span>;\n\n<span class=\"hljs-comment\">// initialize SOAP client and call web service function</span>\n$client=<span class=\"hljs-keyword\">new</span> SoapClient(<span class=\"hljs-string\">'http://a.uz/soap/server.php?wsdl'</span>,[<span class=\"hljs-string\">'trace'</span>=&gt;<span class=\"hljs-number\">1</span>,<span class=\"hljs-string\">'cache_wsdl'</span>=&gt;WSDL_CACHE_NONE]);\n$resp  =$client-&gt;bookYear($book);\n\n<span class=\"hljs-comment\">// dump response</span>\nvar_dump($resp);</span>\n</code></pre>\n<p>Dump of the response:</p>\n<pre><code><span class=\"hljs-keyword\">string</span> <span class=\"hljs-string\">'2012'</span> (<span class=\"hljs-built_in\">length</span>=<span class=\"hljs-number\">4</span>)\n</code></pre><p>WSDL file <code>test.wsdl</code>:</p>\n<pre><code class=\"lang-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>xml version=<span class=\"hljs-string\">\"1.0\"</span> encoding=<span class=\"hljs-string\">\"UTF-8\"</span><span class=\"hljs-meta\">?&gt;</span></span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">wsdl:definitions</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"Library\"</span>\n                  <span class=\"hljs-attr\">xmlns:xsd</span>=<span class=\"hljs-string\">\"http://www.w3.org/2001/XMLSchema\"</span>\n                  <span class=\"hljs-attr\">targetNamespace</span>=<span class=\"hljs-string\">\"Library\"</span>\n                  <span class=\"hljs-attr\">xmlns:soap</span>=<span class=\"hljs-string\">\"http://schemas.xmlsoap.org/wsdl/soap/\"</span>\n                  <span class=\"hljs-attr\">xmlns:tns</span>=<span class=\"hljs-string\">\"Library\"</span>\n                  <span class=\"hljs-attr\">xmlns:wsdl</span>=<span class=\"hljs-string\">\"http://schemas.xmlsoap.org/wsdl/\"</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">xsd:documentation</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">xsd:documentation</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">wsdl:types</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">xsd:schema</span> <span class=\"hljs-attr\">xmlns:xsd</span>=<span class=\"hljs-string\">\"http://www.w3.org/2001/XMLSchema\"</span> <span class=\"hljs-attr\">targetNamespace</span>=<span class=\"hljs-string\">\"Library\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">xsd:complexType</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"book\"</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">xsd:sequence</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">xsd:element</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"name\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"xsd:string\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">xsd:element</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">xsd:element</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"year\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"tns:integer\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">xsd:element</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">xsd:sequence</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">xsd:complexType</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">xsd:schema</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">wsdl:types</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">wsdl:message</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"bookYearRequest\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">wsdl:part</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"book\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"xsd:book\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">wsdl:part</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">wsdl:message</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">wsdl:message</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"bookYearResponse\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">wsdl:part</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"year\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"tns:integer\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">wsdl:part</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">wsdl:message</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">wsdl:portType</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"Library\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">wsdl:operation</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"bookYear\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">wsdl:input</span> <span class=\"hljs-attr\">message</span>=<span class=\"hljs-string\">\"tns:bookYearRequest\"</span>/&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">wsdl:output</span> <span class=\"hljs-attr\">message</span>=<span class=\"hljs-string\">\"tns:bookYearResponse\"</span>/&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">wsdl:operation</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">wsdl:portType</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">wsdl:binding</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"Library\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"tns:Library\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">soap:binding</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"rpc\"</span> <span class=\"hljs-attr\">transport</span>=<span class=\"hljs-string\">\"http://schemas.xmlsoap.org/soap/http\"</span>/&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">wsdl:operation</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"bookYear\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">soap:operation</span> <span class=\"hljs-attr\">soapAction</span>=<span class=\"hljs-string\">\"http://a.uz/soap/server.php\"</span>/&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">wsdl:input</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">soap:body</span> <span class=\"hljs-attr\">use</span>=<span class=\"hljs-string\">\"literal\"</span> <span class=\"hljs-attr\">namespace</span>=<span class=\"hljs-string\">\"Library\"</span>/&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">wsdl:input</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">wsdl:output</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">soap:body</span> <span class=\"hljs-attr\">use</span>=<span class=\"hljs-string\">\"literal\"</span> <span class=\"hljs-attr\">namespace</span>=<span class=\"hljs-string\">\"Library\"</span>/&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">wsdl:output</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">wsdl:operation</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">wsdl:binding</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">wsdl:service</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"Library\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">wsdl:port</span> <span class=\"hljs-attr\">binding</span>=<span class=\"hljs-string\">\"tns:Library\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"BookLibrary\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">soap:address</span> <span class=\"hljs-attr\">location</span>=<span class=\"hljs-string\">\"http://a.uz/soap/server.php\"</span>/&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">wsdl:port</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">wsdl:service</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">wsdl:definitions</span>&gt;</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/84bad37fe9ce124c1693","description":"Simple custom accordion plugin with jQuery","files":["https://gist.githubusercontent.com/umidjons/84bad37fe9ce124c1693/raw/3e69bcf1a37f6cd7a89c7e2d00b5383ba8a4e3a8/accordion-jquery.md"],"content":"Simple custom accordion plugin with jQuery\n===\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n\t<meta charset=\"utf-8\">\n\t<script src=\"js/jquery-1.10.2.js\"></script>\n</head>\n<body>\n\n<div class=\"pss\">\n\t<div class=\"accordItem\">\n\t\t<div class=\"accordHeader\">Item 1</div>\n\t\t<div class=\"accordBody\">Content 1</div>\n\t</div>\n\t<div class=\"accordItem\">\n\t\t<div class=\"accordHeader\">Item 2</div>\n\t\t<div class=\"accordBody\">Content 2</div>\n\t</div>\n\t<div class=\"accordItem\">\n\t\t<div class=\"accordHeader\">Item 3</div>\n\t\t<div class=\"accordBody\">Content 3</div>\n\t</div>\n</div>\n\n<div class=\"pss\">\n\t<div class=\"accordItem\">\n\t\t<div class=\"accordHeader\">Item 1</div>\n\t\t<div class=\"accordBody\">Content 1</div>\n\t</div>\n\t<div class=\"accordItem\">\n\t\t<div class=\"accordHeader\">Item 2</div>\n\t\t<div class=\"accordBody\">Content 2</div>\n\t</div>\n\t<div class=\"accordItem\">\n\t\t<div class=\"accordHeader\">Item 3</div>\n\t\t<div class=\"accordBody\">Content 3</div>\n\t</div>\n</div>\n\n<script>\n\t(function($){\n\t\t$.fn.acc=function(){\n\t\t\treturn this.each(function(){\n\t\t\t\t$(this).find('.accordItem')\n\t\t\t\t\t.children('.accordBody').hide().end()\n\t\t\t\t\t.children('.accordHeader').click(function(e){\n\t\t\t\t\t\t$(this).parent('.accordItem').siblings('.accordItem').children('.accordBody').slideUp()\n\t\t\t\t\t\t\t.end().end().end()\n\t\t\t\t\t\t\t.siblings('.accordBody').slideToggle();\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}(jQuery));\n\n\tjQuery(document).ready(function($){\n\t\t$('.pss').acc();\n\t});\n\n</script>\n</body>\n</html>\n```","html":"<h1 id=\"simple-custom-accordion-plugin-with-jquery\">Simple custom accordion plugin with jQuery</h1>\n<pre><code class=\"lang-html\"><span class=\"hljs-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"utf-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"js/jquery-1.10.2.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"pss\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"accordItem\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"accordHeader\"</span>&gt;</span>Item 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"accordBody\"</span>&gt;</span>Content 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"accordItem\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"accordHeader\"</span>&gt;</span>Item 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"accordBody\"</span>&gt;</span>Content 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"accordItem\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"accordHeader\"</span>&gt;</span>Item 3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"accordBody\"</span>&gt;</span>Content 3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"pss\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"accordItem\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"accordHeader\"</span>&gt;</span>Item 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"accordBody\"</span>&gt;</span>Content 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"accordItem\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"accordHeader\"</span>&gt;</span>Item 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"accordBody\"</span>&gt;</span>Content 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"accordItem\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"accordHeader\"</span>&gt;</span>Item 3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"accordBody\"</span>&gt;</span>Content 3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    (<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">$</span>)</span>{\n        $.fn.acc=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.each(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n                $(<span class=\"hljs-keyword\">this</span>).find(<span class=\"hljs-string\">'.accordItem'</span>)\n                    .children(<span class=\"hljs-string\">'.accordBody'</span>).hide().end()\n                    .children(<span class=\"hljs-string\">'.accordHeader'</span>).click(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">e</span>)</span>{\n                        $(<span class=\"hljs-keyword\">this</span>).parent(<span class=\"hljs-string\">'.accordItem'</span>).siblings(<span class=\"hljs-string\">'.accordItem'</span>).children(<span class=\"hljs-string\">'.accordBody'</span>).slideUp()\n                            .end().end().end()\n                            .siblings(<span class=\"hljs-string\">'.accordBody'</span>).slideToggle();\n                    });\n            });\n        }\n    }(jQuery));\n\n    jQuery(<span class=\"hljs-built_in\">document</span>).ready(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">$</span>)</span>{\n        $(<span class=\"hljs-string\">'.pss'</span>).acc();\n    });\n\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/3c3a0f343c9f54152241","description":"Multiple connection in ActiveRecord","files":["https://gist.githubusercontent.com/umidjons/3c3a0f343c9f54152241/raw/15a2d0ba88b67ec4bb04f11bc4ab50d87a2d3eaf/multiple-connection-activerecord.md"],"content":"Multiple connection in ActiveRecord\n===\n\nCreate other connection in config:\n```php\n<?php\n\t// application components\n\t'components'    =>[\n\t\t'db'          =>[\n\t\t\t'class'           =>'CDbConnection',\n\t\t\t'connectionString'=>'sqlite:'.dirname(__FILE__).'/../data/issuetrack.db',\n\t\t],\n\t\t'db2'         =>[\n\t\t\t'class'           =>'CDbConnection',\n\t\t\t'connectionString'=>'sqlite:'.dirname(__FILE__).'/../data/issuetrack.db',\n\t\t],\n  ]\n```\n\nExtend `CActiveRecord` class to get connection:\n```php\n<?php\n<?php\n\nclass CActiveRecordTask extends CActiveRecord\n{\n\tprivate static $dbtask=null;\n\n\tprotected static function getTaskDbConnection()\n\t{\n\t\tif(self::$dbtask!==null)\n\t\t\treturn self::$dbtask;\n\t\telse\n\t\t{\n\t\t\tself::$dbtask=Yii::app()->db2;\n\t\t\tif(self::$dbtask instanceof CDbConnection)\n\t\t\t{\n\t\t\t\tself::$dbtask->setActive(true);\n\t\t\t\treturn self::$dbtask;\n\t\t\t}\n\t\t\telse\n\t\t\t\tthrow new CDbException(Yii::t('yii','Active Record requires a \"db\" CDbConnection application component.'));\n\t\t}\n\t}\n}\n```\n\nCreate models from extended class and override `getDbConnection()` method:\n```php\n<?php\nclass Task extends CActiveRecordTask\n{\n\tpublic function getDbConnection()\n\t{\n\t\treturn self::getTaskDbConnection();\n\t}\n\n  // ...\n}\n```\n\nTest:\n```php\n<?php\n$tasks = Task::model()->findAll();\n```","html":"<h1 id=\"multiple-connection-in-activerecord\">Multiple connection in ActiveRecord</h1>\n<p>Create other connection in config:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n    <span class=\"hljs-comment\">// application components</span>\n    <span class=\"hljs-string\">'components'</span>    =&gt;[\n        <span class=\"hljs-string\">'db'</span>          =&gt;[\n            <span class=\"hljs-string\">'class'</span>           =&gt;<span class=\"hljs-string\">'CDbConnection'</span>,\n            <span class=\"hljs-string\">'connectionString'</span>=&gt;<span class=\"hljs-string\">'sqlite:'</span>.dirname(<span class=\"hljs-keyword\">__FILE__</span>).<span class=\"hljs-string\">'/../data/issuetrack.db'</span>,\n        ],\n        <span class=\"hljs-string\">'db2'</span>         =&gt;[\n            <span class=\"hljs-string\">'class'</span>           =&gt;<span class=\"hljs-string\">'CDbConnection'</span>,\n            <span class=\"hljs-string\">'connectionString'</span>=&gt;<span class=\"hljs-string\">'sqlite:'</span>.dirname(<span class=\"hljs-keyword\">__FILE__</span>).<span class=\"hljs-string\">'/../data/issuetrack.db'</span>,\n        ],\n  ]</span>\n</code></pre>\n<p>Extend <code>CActiveRecord</code> class to get connection:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-meta\">&lt;?php</span>\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CActiveRecordTask</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CActiveRecord</span>\n</span>{\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> $dbtask=<span class=\"hljs-keyword\">null</span>;\n\n    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getTaskDbConnection</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">self</span>::$dbtask!==<span class=\"hljs-keyword\">null</span>)\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">self</span>::$dbtask;\n        <span class=\"hljs-keyword\">else</span>\n        {\n            <span class=\"hljs-keyword\">self</span>::$dbtask=Yii::app()-&gt;db2;\n            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">self</span>::$dbtask <span class=\"hljs-keyword\">instanceof</span> CDbConnection)\n            {\n                <span class=\"hljs-keyword\">self</span>::$dbtask-&gt;setActive(<span class=\"hljs-keyword\">true</span>);\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">self</span>::$dbtask;\n            }\n            <span class=\"hljs-keyword\">else</span>\n                <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> CDbException(Yii::t(<span class=\"hljs-string\">'yii'</span>,<span class=\"hljs-string\">'Active Record requires a \"db\" CDbConnection application component.'</span>));\n        }\n    }\n}</span>\n</code></pre>\n<p>Create models from extended class and override <code>getDbConnection()</code> method:</p>\n<pre><code class=\"lang-php\">&lt;?php\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Task</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CActiveRecordTask</span></span>\n{\n    public function getDbConnection()\n    {\n        <span class=\"hljs-keyword\">return</span> self::getTaskDbConnection();\n    }\n\n  <span class=\"hljs-comment\">// ...</span>\n}\n</code></pre>\n<p>Test:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n$tasks = Task::model()-&gt;findAll();</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/631cd179694b1f6e20f0","description":"Default value if not set","files":["https://gist.githubusercontent.com/umidjons/631cd179694b1f6e20f0/raw/e33c2bc992ade52514f323445bcab97ec6f00bcb/default-value-if-not-set.md"],"content":"Default value if not set\n===\n\n```php\n<?php\n// if $obj->prop1->prop2 is set, then return it, otherwise return $def\n// @ - disable notices, if $obj or $prop1 doesn't exist\n$val=@$obj->prop1->prop2?:$def;\n```\n\n\n```php\n<?php\nerror_reporting(E_ALL);\nini_set('display_errors',1);\nfunction nvl(&$var,$def)\n{\n\treturn isset($var)?$var:$def;\n}\n\n$arr          =['test'=>123,];\n$arr2['test'] =nvl($arr['test'],999);\n$arr2['test2']=nvl($arr['test2'],999);\necho '<pre>'.print_r($arr2,true).'</pre>';\n```","html":"<h1 id=\"default-value-if-not-set\">Default value if not set</h1>\n<pre><code class=\"lang-php\">&lt;?php\n// <span class=\"hljs-keyword\">if</span> <span class=\"hljs-variable\">$obj</span>-&gt;prop1-&gt;prop2 is <span class=\"hljs-built_in\">set</span>, <span class=\"hljs-keyword\">then</span> <span class=\"hljs-built_in\">return</span> it, otherwise <span class=\"hljs-built_in\">return</span> <span class=\"hljs-variable\">$def</span>\n// @ - <span class=\"hljs-built_in\">disable</span> notices, <span class=\"hljs-keyword\">if</span> <span class=\"hljs-variable\">$obj</span> or <span class=\"hljs-variable\">$prop1</span> doesn<span class=\"hljs-string\">'t exist\n$val=@$obj-&gt;prop1-&gt;prop2?:$def;</span>\n</code></pre>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\nerror_reporting(E_ALL);\nini_set(<span class=\"hljs-string\">'display_errors'</span>,<span class=\"hljs-number\">1</span>);\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">nvl</span><span class=\"hljs-params\">(&amp;$var,$def)</span>\n</span>{\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">isset</span>($var)?$var:$def;\n}\n\n$arr          =[<span class=\"hljs-string\">'test'</span>=&gt;<span class=\"hljs-number\">123</span>,];\n$arr2[<span class=\"hljs-string\">'test'</span>] =nvl($arr[<span class=\"hljs-string\">'test'</span>],<span class=\"hljs-number\">999</span>);\n$arr2[<span class=\"hljs-string\">'test2'</span>]=nvl($arr[<span class=\"hljs-string\">'test2'</span>],<span class=\"hljs-number\">999</span>);\n<span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">'&lt;pre&gt;'</span>.print_r($arr2,<span class=\"hljs-keyword\">true</span>).<span class=\"hljs-string\">'&lt;/pre&gt;'</span>;</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/e031fd0dc0e41ee3cd8f","description":"PHPExcel wrapper example","files":["https://gist.githubusercontent.com/umidjons/e031fd0dc0e41ee3cd8f/raw/d30dda3e9d4bdfd9f7bdb5351f6a7170a300bf37/phpexcel-wrapper-example.md"],"content":"PHPExcel wrapper example\n===\n\nWrapper class\n\n```php\n<?php\n/**\n * @property PHPExcel           $excel\n * @property PHPExcel_Worksheet $sheet\n */\nclass Exporter extends CComponent\n{\n\tpublic $data;\n\tpublic $firstRowHeader;\n\tpublic $options=[];\n\n\tprivate $excel;\n\tprivate $sheet;\n\tprivate $activeSheetIdx;\n\tprivate $idxRow;\n\tprivate $idxCol;\n\tprivate $fileName;\n\tprivate $url;\n\tprivate $download;\n\tprivate $header;\n\n\tfunction __construct(array $options)\n\t{\n\t\t$this->options       =$options;\n\t\t$this->download      =isset($options['save']['download'])?$options['save']['download']:false;\n\t\t$this->data          =isset($options['data'])?$options['data']:[];\n\t\t$this->firstRowHeader=isset($options['firstRowHeader'])?$options['firstRowHeader']:false;\n\t\t$this->header        =isset($options['header'])?$options['header']:false;\n\t\tspl_autoload_unregister(['YiiBase','autoload']);\n\t\tYii::import('ext.phpoffice.PHPExcel',true);\n\t\tspl_autoload_register(['YiiBase','autoload']);\n\t\t$this->excel=new PHPExcel();\n\t}\n\n\tprivate function endsWith($haystack,$needle)\n\t{\n\t\treturn $needle==='' || substr_compare($haystack,$needle,-strlen($needle),100,true)===0;\n\t}\n\n\tprivate function startsWith($haystack,$needle)\n\t{\n\t\treturn strncmp($haystack,$needle,strlen($needle))===0;\n\t}\n\n\tprivate function setProperties()\n\t{\n\t\tif(!empty($this->options['properties']) && is_array($this->options['properties']))\n\t\t{\n\t\t\t$prop_mngr=$this->excel->getProperties();\n\t\t\tforeach($this->options['properties'] as $prop=>$val)\n\t\t\t{\n\t\t\t\t$method='set'.ucfirst($prop);\n\t\t\t\tif(method_exists($prop_mngr,$method))\n\t\t\t\t\t$prop_mngr->{$method}($val);\n\t\t\t}\n\t\t}\n\t\treturn $this;\n\t}\n\n\tprivate function setHeaders()\n\t{\n\t\tif(is_array($this->header) && !empty($this->header))\n\t\t{\n\t\t\t$this->idxCol=0;\n\t\t\tforeach($this->header as $colName)\n\t\t\t\t$this->sheet->setCellValueExplicitByColumnAndRow($this->idxCol++,$this->idxRow,$colName);\n\t\t\t$this->idxRow++;\n\t\t}\n\t\tif($this->firstRowHeader)\n\t\t{\n\t\t\t$this->idxCol=0;\n\t\t\tforeach($this->data[0] as $colName=>$colValue)\n\t\t\t\t$this->sheet->setCellValueExplicitByColumnAndRow($this->idxCol++,$this->idxRow,$colName);\n\t\t\t$this->idxRow++;\n\t\t}\n\t\treturn $this;\n\t}\n\n\tprivate function setRows()\n\t{\n\t\tforeach($this->data as $row)\n\t\t{\n\t\t\t$this->idxCol=0;\n\t\t\tforeach($row as $col=>$val)\n\t\t\t\t$this->sheet->setCellValueExplicitByColumnAndRow($this->idxCol++,$this->idxRow,$val);\n\t\t\t$this->idxRow++;\n\t\t}\n\t\treturn $this;\n\t}\n\n\tprivate function genFileName()\n\t{\n\t\t$dir_def       ='files';\n\t\t$dir_          =isset($this->options['save']['dir'])?trim($this->options['save']['dir']):\"$dir_def\";\n\t\t$dir_          =$this->endsWith($dir_,'/')?$dir_:$dir_.'/';\n\t\t$pfx_          =isset($this->options['save']['prefix'])?$this->options['save']['prefix']:'export';\n\t\t$ext_          =isset($this->options['save']['ext'])?$this->options['save']['ext']:'xlsx';\n\t\t$url_          =isset($this->options['save']['url'])?$this->options['save']['url']:$dir_;\n\t\t$url_          =$this->endsWith($url_,'/')?$url_:$url_.'/';\n\t\t$tmpFilename   =@tempnam($dir_,$pfx_);\n\t\t$this->fileName=$tmpFilename.\".$ext_\";\n\t\trename($tmpFilename,$this->fileName);\n\t\t$this->url=$url_.basename($this->fileName);\n\t\treturn $this;\n\t}\n\n\tprivate function save()\n\t{\n\t\t$this->genFileName();\n\t\t$writer=PHPExcel_IOFactory::createWriter($this->excel,'Excel2007');\n\t\tif($this->download)\n\t\t{\n\t\t\t$fileName=basename($this->fileName);\n\t\t\t// Redirect output to a client’s web browser (Excel2007)\n\t\t\theader('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\n\t\t\theader('Content-Disposition: attachment;filename=\"'.$fileName.'\"');\n\t\t\theader('Cache-Control: max-age=0');\n\t\t\t// If you're serving to IE 9, then the following may be needed\n\t\t\t//header('Cache-Control: max-age=1');\n\t\t\t// If you're serving to IE over SSL, then the following may be needed\n\t\t\t//header('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past\n\t\t\t//header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT'); // always modified\n\t\t\t//header('Cache-Control: cache, must-revalidate'); // HTTP/1.1\n\t\t\t//header('Pragma: public'); // HTTP/1.0\n\t\t\t$writer->save('php://output');\n\t\t\texit;\n\t\t}\n\t\telse\n\t\t\t$writer->save($this->fileName);\n\t\treturn $this;\n\t}\n\n\tpublic function setActiveSheetIdx($idx=0)\n\t{\n\t\t$this->sheet =$this->excel->setActiveSheetIndex($idx);\n\t\t$this->idxRow=1;\n\t\t$this->idxCol=0;\n\t\treturn $this;\n\t}\n\n\tpublic function export()\n\t{\n\t\tif(is_array($this->data) && !empty($this->data))\n\t\t{\n\t\t\t$this->setProperties()\n\t\t\t\t->setActiveSheetIdx()\n\t\t\t\t->setHeaders()\n\t\t\t\t->setRows()\n\t\t\t\t->save();\n\t\t\treturn [\n\t\t\t\t'file'=>$this->fileName,\n\t\t\t\t'url' =>$this->url,\n\t\t\t];\n\t\t}\n\t\telse\n\t\t\tYii::log('Data is not array or is empty. data:'.print_r($this->data,true));\n\t\treturn false;\n\t}\n}\n```\n\nUsing the wrapper class\n\n```php\n\tpublic function actionExport()\n\t{\n\t\t$exporter=new Exporter([\n\t\t\t'properties'=>[\n\t\t\t\t'creator'       =>'Me',\n\t\t\t\t'lastModifiedBy'=>'Neo',\n\t\t\t\t'title'         =>'Workplaces',\n\t\t\t\t'subject'       =>'List of workplaces',\n\t\t\t\t'description'   =>'Very long description.',\n\t\t\t\t'keywords'      =>'workplace,reference',\n\t\t\t\t'category'      =>'Reference',\n\t\t\t],\n\t\t\t'data'      =>Branch::model()->workplaces(),\n\t\t\t'header'    =>['Code','Branch'],\n\t\t\t//'save'      =>[\n\t\t\t//  'download'=>true,\n\t\t\t//],\n\t\t]);\n\t\t$info    =$exporter->export();\n\t\tif(isset($info['url']))\n\t\t\techo json_encode($info);\n  }\n```","html":"<h1 id=\"phpexcel-wrapper-example\">PHPExcel wrapper example</h1>\n<p>Wrapper class</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-comment\">/**\n * <span class=\"hljs-doctag\">@property</span> PHPExcel           $excel\n * <span class=\"hljs-doctag\">@property</span> PHPExcel_Worksheet $sheet\n */</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Exporter</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CComponent</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> $data;\n    <span class=\"hljs-keyword\">public</span> $firstRowHeader;\n    <span class=\"hljs-keyword\">public</span> $options=[];\n\n    <span class=\"hljs-keyword\">private</span> $excel;\n    <span class=\"hljs-keyword\">private</span> $sheet;\n    <span class=\"hljs-keyword\">private</span> $activeSheetIdx;\n    <span class=\"hljs-keyword\">private</span> $idxRow;\n    <span class=\"hljs-keyword\">private</span> $idxCol;\n    <span class=\"hljs-keyword\">private</span> $fileName;\n    <span class=\"hljs-keyword\">private</span> $url;\n    <span class=\"hljs-keyword\">private</span> $download;\n    <span class=\"hljs-keyword\">private</span> $header;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__construct</span><span class=\"hljs-params\">(array $options)</span>\n    </span>{\n        <span class=\"hljs-keyword\">$this</span>-&gt;options       =$options;\n        <span class=\"hljs-keyword\">$this</span>-&gt;download      =<span class=\"hljs-keyword\">isset</span>($options[<span class=\"hljs-string\">'save'</span>][<span class=\"hljs-string\">'download'</span>])?$options[<span class=\"hljs-string\">'save'</span>][<span class=\"hljs-string\">'download'</span>]:<span class=\"hljs-keyword\">false</span>;\n        <span class=\"hljs-keyword\">$this</span>-&gt;data          =<span class=\"hljs-keyword\">isset</span>($options[<span class=\"hljs-string\">'data'</span>])?$options[<span class=\"hljs-string\">'data'</span>]:[];\n        <span class=\"hljs-keyword\">$this</span>-&gt;firstRowHeader=<span class=\"hljs-keyword\">isset</span>($options[<span class=\"hljs-string\">'firstRowHeader'</span>])?$options[<span class=\"hljs-string\">'firstRowHeader'</span>]:<span class=\"hljs-keyword\">false</span>;\n        <span class=\"hljs-keyword\">$this</span>-&gt;header        =<span class=\"hljs-keyword\">isset</span>($options[<span class=\"hljs-string\">'header'</span>])?$options[<span class=\"hljs-string\">'header'</span>]:<span class=\"hljs-keyword\">false</span>;\n        spl_autoload_unregister([<span class=\"hljs-string\">'YiiBase'</span>,<span class=\"hljs-string\">'autoload'</span>]);\n        Yii::import(<span class=\"hljs-string\">'ext.phpoffice.PHPExcel'</span>,<span class=\"hljs-keyword\">true</span>);\n        spl_autoload_register([<span class=\"hljs-string\">'YiiBase'</span>,<span class=\"hljs-string\">'autoload'</span>]);\n        <span class=\"hljs-keyword\">$this</span>-&gt;excel=<span class=\"hljs-keyword\">new</span> PHPExcel();\n    }\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">endsWith</span><span class=\"hljs-params\">($haystack,$needle)</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> $needle===<span class=\"hljs-string\">''</span> || substr_compare($haystack,$needle,-strlen($needle),<span class=\"hljs-number\">100</span>,<span class=\"hljs-keyword\">true</span>)===<span class=\"hljs-number\">0</span>;\n    }\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">startsWith</span><span class=\"hljs-params\">($haystack,$needle)</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> strncmp($haystack,$needle,strlen($needle))===<span class=\"hljs-number\">0</span>;\n    }\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">setProperties</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">empty</span>(<span class=\"hljs-keyword\">$this</span>-&gt;options[<span class=\"hljs-string\">'properties'</span>]) &amp;&amp; is_array(<span class=\"hljs-keyword\">$this</span>-&gt;options[<span class=\"hljs-string\">'properties'</span>]))\n        {\n            $prop_mngr=<span class=\"hljs-keyword\">$this</span>-&gt;excel-&gt;getProperties();\n            <span class=\"hljs-keyword\">foreach</span>(<span class=\"hljs-keyword\">$this</span>-&gt;options[<span class=\"hljs-string\">'properties'</span>] <span class=\"hljs-keyword\">as</span> $prop=&gt;$val)\n            {\n                $method=<span class=\"hljs-string\">'set'</span>.ucfirst($prop);\n                <span class=\"hljs-keyword\">if</span>(method_exists($prop_mngr,$method))\n                    $prop_mngr-&gt;{$method}($val);\n            }\n        }\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">$this</span>;\n    }\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">setHeaders</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">if</span>(is_array(<span class=\"hljs-keyword\">$this</span>-&gt;header) &amp;&amp; !<span class=\"hljs-keyword\">empty</span>(<span class=\"hljs-keyword\">$this</span>-&gt;header))\n        {\n            <span class=\"hljs-keyword\">$this</span>-&gt;idxCol=<span class=\"hljs-number\">0</span>;\n            <span class=\"hljs-keyword\">foreach</span>(<span class=\"hljs-keyword\">$this</span>-&gt;header <span class=\"hljs-keyword\">as</span> $colName)\n                <span class=\"hljs-keyword\">$this</span>-&gt;sheet-&gt;setCellValueExplicitByColumnAndRow(<span class=\"hljs-keyword\">$this</span>-&gt;idxCol++,<span class=\"hljs-keyword\">$this</span>-&gt;idxRow,$colName);\n            <span class=\"hljs-keyword\">$this</span>-&gt;idxRow++;\n        }\n        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">$this</span>-&gt;firstRowHeader)\n        {\n            <span class=\"hljs-keyword\">$this</span>-&gt;idxCol=<span class=\"hljs-number\">0</span>;\n            <span class=\"hljs-keyword\">foreach</span>(<span class=\"hljs-keyword\">$this</span>-&gt;data[<span class=\"hljs-number\">0</span>] <span class=\"hljs-keyword\">as</span> $colName=&gt;$colValue)\n                <span class=\"hljs-keyword\">$this</span>-&gt;sheet-&gt;setCellValueExplicitByColumnAndRow(<span class=\"hljs-keyword\">$this</span>-&gt;idxCol++,<span class=\"hljs-keyword\">$this</span>-&gt;idxRow,$colName);\n            <span class=\"hljs-keyword\">$this</span>-&gt;idxRow++;\n        }\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">$this</span>;\n    }\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">setRows</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">foreach</span>(<span class=\"hljs-keyword\">$this</span>-&gt;data <span class=\"hljs-keyword\">as</span> $row)\n        {\n            <span class=\"hljs-keyword\">$this</span>-&gt;idxCol=<span class=\"hljs-number\">0</span>;\n            <span class=\"hljs-keyword\">foreach</span>($row <span class=\"hljs-keyword\">as</span> $col=&gt;$val)\n                <span class=\"hljs-keyword\">$this</span>-&gt;sheet-&gt;setCellValueExplicitByColumnAndRow(<span class=\"hljs-keyword\">$this</span>-&gt;idxCol++,<span class=\"hljs-keyword\">$this</span>-&gt;idxRow,$val);\n            <span class=\"hljs-keyword\">$this</span>-&gt;idxRow++;\n        }\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">$this</span>;\n    }\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">genFileName</span><span class=\"hljs-params\">()</span>\n    </span>{\n        $dir_def       =<span class=\"hljs-string\">'files'</span>;\n        $dir_          =<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-keyword\">$this</span>-&gt;options[<span class=\"hljs-string\">'save'</span>][<span class=\"hljs-string\">'dir'</span>])?trim(<span class=\"hljs-keyword\">$this</span>-&gt;options[<span class=\"hljs-string\">'save'</span>][<span class=\"hljs-string\">'dir'</span>]):<span class=\"hljs-string\">\"$dir_def\"</span>;\n        $dir_          =<span class=\"hljs-keyword\">$this</span>-&gt;endsWith($dir_,<span class=\"hljs-string\">'/'</span>)?$dir_:$dir_.<span class=\"hljs-string\">'/'</span>;\n        $pfx_          =<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-keyword\">$this</span>-&gt;options[<span class=\"hljs-string\">'save'</span>][<span class=\"hljs-string\">'prefix'</span>])?<span class=\"hljs-keyword\">$this</span>-&gt;options[<span class=\"hljs-string\">'save'</span>][<span class=\"hljs-string\">'prefix'</span>]:<span class=\"hljs-string\">'export'</span>;\n        $ext_          =<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-keyword\">$this</span>-&gt;options[<span class=\"hljs-string\">'save'</span>][<span class=\"hljs-string\">'ext'</span>])?<span class=\"hljs-keyword\">$this</span>-&gt;options[<span class=\"hljs-string\">'save'</span>][<span class=\"hljs-string\">'ext'</span>]:<span class=\"hljs-string\">'xlsx'</span>;\n        $url_          =<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-keyword\">$this</span>-&gt;options[<span class=\"hljs-string\">'save'</span>][<span class=\"hljs-string\">'url'</span>])?<span class=\"hljs-keyword\">$this</span>-&gt;options[<span class=\"hljs-string\">'save'</span>][<span class=\"hljs-string\">'url'</span>]:$dir_;\n        $url_          =<span class=\"hljs-keyword\">$this</span>-&gt;endsWith($url_,<span class=\"hljs-string\">'/'</span>)?$url_:$url_.<span class=\"hljs-string\">'/'</span>;\n        $tmpFilename   =@tempnam($dir_,$pfx_);\n        <span class=\"hljs-keyword\">$this</span>-&gt;fileName=$tmpFilename.<span class=\"hljs-string\">\".$ext_\"</span>;\n        rename($tmpFilename,<span class=\"hljs-keyword\">$this</span>-&gt;fileName);\n        <span class=\"hljs-keyword\">$this</span>-&gt;url=$url_.basename(<span class=\"hljs-keyword\">$this</span>-&gt;fileName);\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">$this</span>;\n    }\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">save</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">$this</span>-&gt;genFileName();\n        $writer=PHPExcel_IOFactory::createWriter(<span class=\"hljs-keyword\">$this</span>-&gt;excel,<span class=\"hljs-string\">'Excel2007'</span>);\n        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">$this</span>-&gt;download)\n        {\n            $fileName=basename(<span class=\"hljs-keyword\">$this</span>-&gt;fileName);\n            <span class=\"hljs-comment\">// Redirect output to a client’s web browser (Excel2007)</span>\n            header(<span class=\"hljs-string\">'Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'</span>);\n            header(<span class=\"hljs-string\">'Content-Disposition: attachment;filename=\"'</span>.$fileName.<span class=\"hljs-string\">'\"'</span>);\n            header(<span class=\"hljs-string\">'Cache-Control: max-age=0'</span>);\n            <span class=\"hljs-comment\">// If you're serving to IE 9, then the following may be needed</span>\n            <span class=\"hljs-comment\">//header('Cache-Control: max-age=1');</span>\n            <span class=\"hljs-comment\">// If you're serving to IE over SSL, then the following may be needed</span>\n            <span class=\"hljs-comment\">//header('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past</span>\n            <span class=\"hljs-comment\">//header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT'); // always modified</span>\n            <span class=\"hljs-comment\">//header('Cache-Control: cache, must-revalidate'); // HTTP/1.1</span>\n            <span class=\"hljs-comment\">//header('Pragma: public'); // HTTP/1.0</span>\n            $writer-&gt;save(<span class=\"hljs-string\">'php://output'</span>);\n            <span class=\"hljs-keyword\">exit</span>;\n        }\n        <span class=\"hljs-keyword\">else</span>\n            $writer-&gt;save(<span class=\"hljs-keyword\">$this</span>-&gt;fileName);\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">$this</span>;\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">setActiveSheetIdx</span><span class=\"hljs-params\">($idx=<span class=\"hljs-number\">0</span>)</span>\n    </span>{\n        <span class=\"hljs-keyword\">$this</span>-&gt;sheet =<span class=\"hljs-keyword\">$this</span>-&gt;excel-&gt;setActiveSheetIndex($idx);\n        <span class=\"hljs-keyword\">$this</span>-&gt;idxRow=<span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-keyword\">$this</span>-&gt;idxCol=<span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">$this</span>;\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">export</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">if</span>(is_array(<span class=\"hljs-keyword\">$this</span>-&gt;data) &amp;&amp; !<span class=\"hljs-keyword\">empty</span>(<span class=\"hljs-keyword\">$this</span>-&gt;data))\n        {\n            <span class=\"hljs-keyword\">$this</span>-&gt;setProperties()\n                -&gt;setActiveSheetIdx()\n                -&gt;setHeaders()\n                -&gt;setRows()\n                -&gt;save();\n            <span class=\"hljs-keyword\">return</span> [\n                <span class=\"hljs-string\">'file'</span>=&gt;<span class=\"hljs-keyword\">$this</span>-&gt;fileName,\n                <span class=\"hljs-string\">'url'</span> =&gt;<span class=\"hljs-keyword\">$this</span>-&gt;url,\n            ];\n        }\n        <span class=\"hljs-keyword\">else</span>\n            Yii::log(<span class=\"hljs-string\">'Data is not array or is empty. data:'</span>.print_r(<span class=\"hljs-keyword\">$this</span>-&gt;data,<span class=\"hljs-keyword\">true</span>));\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n    }\n}</span>\n</code></pre>\n<p>Using the wrapper class</p>\n<pre><code class=\"lang-php\">    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">actionExport</span><span class=\"hljs-params\">()</span>\n    </span>{\n        $exporter=<span class=\"hljs-keyword\">new</span> Exporter([\n            <span class=\"hljs-string\">'properties'</span>=&gt;[\n                <span class=\"hljs-string\">'creator'</span>       =&gt;<span class=\"hljs-string\">'Me'</span>,\n                <span class=\"hljs-string\">'lastModifiedBy'</span>=&gt;<span class=\"hljs-string\">'Neo'</span>,\n                <span class=\"hljs-string\">'title'</span>         =&gt;<span class=\"hljs-string\">'Workplaces'</span>,\n                <span class=\"hljs-string\">'subject'</span>       =&gt;<span class=\"hljs-string\">'List of workplaces'</span>,\n                <span class=\"hljs-string\">'description'</span>   =&gt;<span class=\"hljs-string\">'Very long description.'</span>,\n                <span class=\"hljs-string\">'keywords'</span>      =&gt;<span class=\"hljs-string\">'workplace,reference'</span>,\n                <span class=\"hljs-string\">'category'</span>      =&gt;<span class=\"hljs-string\">'Reference'</span>,\n            ],\n            <span class=\"hljs-string\">'data'</span>      =&gt;Branch::model()-&gt;workplaces(),\n            <span class=\"hljs-string\">'header'</span>    =&gt;[<span class=\"hljs-string\">'Code'</span>,<span class=\"hljs-string\">'Branch'</span>],\n            <span class=\"hljs-comment\">//'save'      =&gt;[</span>\n            <span class=\"hljs-comment\">//  'download'=&gt;true,</span>\n            <span class=\"hljs-comment\">//],</span>\n        ]);\n        $info    =$exporter-&gt;export();\n        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>($info[<span class=\"hljs-string\">'url'</span>]))\n            <span class=\"hljs-keyword\">echo</span> json_encode($info);\n  }\n</code></pre>\n"},{"html_url":"https://gist.github.com/4225b3edaa4e60ceb1fe","description":"Using PHPExcel in Yii - download generated file in a browser","files":["https://gist.githubusercontent.com/umidjons/4225b3edaa4e60ceb1fe/raw/dbfe12cb87fcc02b80aed3181d4f39128e8af0cb/phpexcel-yii-download.md"],"content":"Using PHPExcel in Yii - download generated file in a browser\n===\n\n```php\n<?php\n// replace auto loader and import PHPExcel\nspl_autoload_unregister(['YiiBase','autoload']);\nYii::import('ext.phpoffice.PHPExcel',true);\nspl_autoload_register(['YiiBase','autoload']);\n\n// prepare data\n$rows=Branch::model()->workplaces();\n\n// create excel object & set its properties\n$ex=new PHPExcel();\n$ex->getProperties()\n\t->setCreator('Me')\n\t->setLastModifiedBy('Neo')\n\t->setTitle('Workplaces')\n\t->setSubject('Workplaces in Tashkent')\n\t->setDescription('Long description')\n\t->setKeywords('workplace,tashkent')\n\t->setCategory('References');\n\n// choose sheet\n$sheet=$ex->setActiveSheetIndex(0);\n\n// initialize column & row indexes\n$idxRow=1;\n$idxCol=0;\n\n// write data into sheet\nforeach($rows as $row)\n{\n\t$idxCol=0;\n\tforeach($row as $col=>$val)\n\t\t$sheet->setCellValueExplicitByColumnAndRow($idxCol++,$idxRow,$val);\n\t$idxRow++;\n}\n\n// download as file\n// Redirect output to a client’s web browser (Excel2007)\nheader('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\nheader('Content-Disposition: attachment;filename=\"workplaces.xlsx\"');\nheader('Cache-Control: max-age=0');\n// If you're serving to IE 9, then the following may be needed\nheader('Cache-Control: max-age=1');\n// If you're serving to IE over SSL, then the following may be needed\nheader('Expires: Mon, 04 Dec 2014 05:00:00 GMT'); // Date in the past\nheader('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT'); // always modified\nheader('Cache-Control: cache, must-revalidate'); // HTTP/1.1\nheader('Pragma: public'); // HTTP/1.0\nPHPExcel_IOFactory::createWriter($ex,'Excel2007')->save('php://output');\nexit;\n```","html":"<h1 id=\"using-phpexcel-in-yii-download-generated-file-in-a-browser\">Using PHPExcel in Yii - download generated file in a browser</h1>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-comment\">// replace auto loader and import PHPExcel</span>\nspl_autoload_unregister([<span class=\"hljs-string\">'YiiBase'</span>,<span class=\"hljs-string\">'autoload'</span>]);\nYii::import(<span class=\"hljs-string\">'ext.phpoffice.PHPExcel'</span>,<span class=\"hljs-keyword\">true</span>);\nspl_autoload_register([<span class=\"hljs-string\">'YiiBase'</span>,<span class=\"hljs-string\">'autoload'</span>]);\n\n<span class=\"hljs-comment\">// prepare data</span>\n$rows=Branch::model()-&gt;workplaces();\n\n<span class=\"hljs-comment\">// create excel object &amp; set its properties</span>\n$ex=<span class=\"hljs-keyword\">new</span> PHPExcel();\n$ex-&gt;getProperties()\n    -&gt;setCreator(<span class=\"hljs-string\">'Me'</span>)\n    -&gt;setLastModifiedBy(<span class=\"hljs-string\">'Neo'</span>)\n    -&gt;setTitle(<span class=\"hljs-string\">'Workplaces'</span>)\n    -&gt;setSubject(<span class=\"hljs-string\">'Workplaces in Tashkent'</span>)\n    -&gt;setDescription(<span class=\"hljs-string\">'Long description'</span>)\n    -&gt;setKeywords(<span class=\"hljs-string\">'workplace,tashkent'</span>)\n    -&gt;setCategory(<span class=\"hljs-string\">'References'</span>);\n\n<span class=\"hljs-comment\">// choose sheet</span>\n$sheet=$ex-&gt;setActiveSheetIndex(<span class=\"hljs-number\">0</span>);\n\n<span class=\"hljs-comment\">// initialize column &amp; row indexes</span>\n$idxRow=<span class=\"hljs-number\">1</span>;\n$idxCol=<span class=\"hljs-number\">0</span>;\n\n<span class=\"hljs-comment\">// write data into sheet</span>\n<span class=\"hljs-keyword\">foreach</span>($rows <span class=\"hljs-keyword\">as</span> $row)\n{\n    $idxCol=<span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">foreach</span>($row <span class=\"hljs-keyword\">as</span> $col=&gt;$val)\n        $sheet-&gt;setCellValueExplicitByColumnAndRow($idxCol++,$idxRow,$val);\n    $idxRow++;\n}\n\n<span class=\"hljs-comment\">// download as file</span>\n<span class=\"hljs-comment\">// Redirect output to a client’s web browser (Excel2007)</span>\nheader(<span class=\"hljs-string\">'Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'</span>);\nheader(<span class=\"hljs-string\">'Content-Disposition: attachment;filename=\"workplaces.xlsx\"'</span>);\nheader(<span class=\"hljs-string\">'Cache-Control: max-age=0'</span>);\n<span class=\"hljs-comment\">// If you're serving to IE 9, then the following may be needed</span>\nheader(<span class=\"hljs-string\">'Cache-Control: max-age=1'</span>);\n<span class=\"hljs-comment\">// If you're serving to IE over SSL, then the following may be needed</span>\nheader(<span class=\"hljs-string\">'Expires: Mon, 04 Dec 2014 05:00:00 GMT'</span>); <span class=\"hljs-comment\">// Date in the past</span>\nheader(<span class=\"hljs-string\">'Last-Modified: '</span>.gmdate(<span class=\"hljs-string\">'D, d M Y H:i:s'</span>).<span class=\"hljs-string\">' GMT'</span>); <span class=\"hljs-comment\">// always modified</span>\nheader(<span class=\"hljs-string\">'Cache-Control: cache, must-revalidate'</span>); <span class=\"hljs-comment\">// HTTP/1.1</span>\nheader(<span class=\"hljs-string\">'Pragma: public'</span>); <span class=\"hljs-comment\">// HTTP/1.0</span>\nPHPExcel_IOFactory::createWriter($ex,<span class=\"hljs-string\">'Excel2007'</span>)-&gt;save(<span class=\"hljs-string\">'php://output'</span>);\n<span class=\"hljs-keyword\">exit</span>;</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/e108459cce61641b601d","description":"First/last day of the current month","files":["https://gist.githubusercontent.com/umidjons/e108459cce61641b601d/raw/260ada3a8912b61fa0fbc87d2dae7990197dde16/first-last-day-month.md"],"content":"First/last day of the current month\n===\n\n```php\n<?php\necho date('01.m.Y'); // 01.11.2014\necho date('t.m.Y');  // 30.11.2014\n```","html":"<h1 id=\"first-last-day-of-the-current-month\">First/last day of the current month</h1>\n<pre><code class=\"lang-php\">&lt;?php\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-built_in\">date</span>(<span class=\"hljs-string\">'01.m.Y'</span>); <span class=\"hljs-comment\">// 01.11.2014</span>\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-built_in\">date</span>(<span class=\"hljs-string\">'t.m.Y'</span>);  <span class=\"hljs-comment\">// 30.11.2014</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/86e43ed9294c65670f1c","description":"AutoToast directive to intercept http responses and show toasts accordingly.","files":["https://gist.githubusercontent.com/umidjons/86e43ed9294c65670f1c/raw/dd60928a527298226e6b8964b32f73108c9182da/auto-toast.md"],"content":"AutoToast directive to intercept http responses and show toasts accordingly.\n===\n\n`index.html`\n\n```html\n<!DOCTYPE html>\n<html ng-app=\"MyApp\">\n<head>\n\t<title></title>\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"toaster.css\">\n\t<script type=\"text/javascript\" src=\"angular.js\"></script>\n\t<script type=\"text/javascript\" src=\"toaster.js\"></script>\n</head>\n<body ng-controller=\"MyCtrl\">\n\n<div auto-toast toaster-container toaster-options=\"{'time-out':0,'position-class':'toast-top-full-width','close-button':true}\"></div>\n\n<h2>Countries:</h2>\n<pre>{{countries | json}}</pre>\n\n<h2>Cities:</h2>\n<pre>{{cities | json}}</pre>\n\n<script type=\"text/javascript\">\n\tangular.module('MyApp',['toaster'])\n\t.config(function($httpProvider){\n\t\t$httpProvider.interceptors.push(function($q,$rootScope){\n\t\t\treturn {\n\t\t\t\t'response':function(response){\n\t\t\t\t\t// intercept response event & broadcast loading-complete event with response as parameter\n\t\t\t\t\t$rootScope.$broadcast('loading-complete',response);\n\t\t\t\t\treturn response || $q.when(response);\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t})\n\t.directive('autoToast',function(toaster){\n\t\treturn {\n\t\t\trestrict:'EA',\n\t\t\tlink    :function(scope,element,attrs){\n\t\t\t\t// catch loading-complete event with response parameter\n\t\t\t\tscope.$on('loading-complete',function(event,response){\n\t\t\t\t\tif(angular.isDefined(response.data.code) && angular.isDefined(response.data.message) && response.data.message){\n\t\t\t\t\t\ttoaster.pop(response.data.code==200?'success':'error',null,response.data.message);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t})\n\t.controller('MyCtrl',function($scope,$http){\n\t\t$http\n\t\t\t.post('data.php?act=countries')\n\t\t\t.success(function(resp){\n\t\t\t\t$scope.countries=resp.content;\n\t\t\t});\n\t\t$http\n\t\t\t.post('data.php?act=cities')\n\t\t\t.success(function(resp){\n\t\t\t\t$scope.cities=resp.content;\n\t\t\t});\n\t});\n</script>\n</body>\n</html>\n```\n\n`data.php` script to retrieve data from DB:\n\n```php\n<?php\nclass Data{\n\tpublic function actionCities(){\n\t\t$rows=[];\n\t\t// todo: get rows from db into associative array\n\t\techo $this->resp(200,'Cities retrieved!',$rows);\n\t}\n\tpublic function actionCountries(){\n\t\t$rows=[];\n\t\t// todo: get rows from db into associative array\n\t\techo $this->resp(200,'Countries retrieved!',$rows);\n\t}\n\tpublic function resp($code=200,$message='',$content='',$http_code=200){\n\t\thttp_response_code($http_code);\n\t\treturn json_encode(['code'=>$code,'message'=>$message,'content'=>$content]);\n\t}\n}\n\nif(isset($_GET['act']))\n{\n\t$data=new Data();\n\t$data->{'action'.ucfirst($_GET['act'])}();\n}\n```","html":"<h1 id=\"autotoast-directive-to-intercept-http-responses-and-show-toasts-accordingly-\">AutoToast directive to intercept http responses and show toasts accordingly.</h1>\n<p><code>index.html</code></p>\n<pre><code class=\"lang-html\"><span class=\"xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">ng-app</span>=<span class=\"hljs-string\">\"MyApp\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text/css\"</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"toaster.css\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text/javascript\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"angular.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text/javascript\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"toaster.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span> <span class=\"hljs-attr\">ng-controller</span>=<span class=\"hljs-string\">\"MyCtrl\"</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">auto-toast</span> <span class=\"hljs-attr\">toaster-container</span> <span class=\"hljs-attr\">toaster-options</span>=<span class=\"hljs-string\">\"{'time-out':0,'position-class':'toast-top-full-width','close-button':true}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>Countries:<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pre</span>&gt;</span></span><span class=\"hljs-template-variable\">{{countries | json}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">pre</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>Cities:<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pre</span>&gt;</span></span><span class=\"hljs-template-variable\">{{cities | json}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">pre</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text/javascript\"</span>&gt;</span><span class=\"actionscript\">\n    angular.module(<span class=\"hljs-string\">'MyApp'</span>,[<span class=\"hljs-string\">'toaster'</span>])\n    .config(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($httpProvider)</span></span>{\n        $httpProvider.interceptors.push(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($q,$rootScope)</span></span>{\n            <span class=\"hljs-keyword\">return</span> {\n                <span class=\"hljs-string\">'response'</span>:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(response)</span></span>{\n                    <span class=\"hljs-comment\">// intercept response event &amp; broadcast loading-complete event with response as parameter</span>\n                    $rootScope.$broadcast(<span class=\"hljs-string\">'loading-complete'</span>,response);\n                    <span class=\"hljs-keyword\">return</span> response || $q.when(response);\n                }\n            };\n        });\n    })\n    .directive(<span class=\"hljs-string\">'autoToast'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(toaster)</span></span>{\n        <span class=\"hljs-keyword\">return</span> {\n            restrict:<span class=\"hljs-string\">'EA'</span>,\n            link    :<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(scope,element,attrs)</span></span>{\n                <span class=\"hljs-comment\">// catch loading-complete event with response parameter</span>\n                scope.$on(<span class=\"hljs-string\">'loading-complete'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(event,response)</span></span>{\n                    <span class=\"hljs-keyword\">if</span>(angular.isDefined(response.data.code) &amp;&amp; angular.isDefined(response.data.message) &amp;&amp; response.data.message){\n                        toaster.pop(response.data.code==<span class=\"hljs-number\">200</span>?<span class=\"hljs-string\">'success'</span>:<span class=\"hljs-string\">'error'</span>,<span class=\"hljs-literal\">null</span>,response.data.message);\n                    }\n                });\n            }\n        };\n    })\n    .controller(<span class=\"hljs-string\">'MyCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($scope,$http)</span></span>{\n        $http\n            .post(<span class=\"hljs-string\">'data.php?act=countries'</span>)\n            .success(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(resp)</span></span>{\n                $scope.countries=resp.content;\n            });\n        $http\n            .post(<span class=\"hljs-string\">'data.php?act=cities'</span>)\n            .success(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(resp)</span></span>{\n                $scope.cities=resp.content;\n            });\n    });\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></span>\n</code></pre>\n<p><code>data.php</code> script to retrieve data from DB:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Data</span></span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">actionCities</span><span class=\"hljs-params\">()</span></span>{\n        $rows=[];\n        <span class=\"hljs-comment\">// <span class=\"hljs-doctag\">todo:</span> get rows from db into associative array</span>\n        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-keyword\">$this</span>-&gt;resp(<span class=\"hljs-number\">200</span>,<span class=\"hljs-string\">'Cities retrieved!'</span>,$rows);\n    }\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">actionCountries</span><span class=\"hljs-params\">()</span></span>{\n        $rows=[];\n        <span class=\"hljs-comment\">// <span class=\"hljs-doctag\">todo:</span> get rows from db into associative array</span>\n        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-keyword\">$this</span>-&gt;resp(<span class=\"hljs-number\">200</span>,<span class=\"hljs-string\">'Countries retrieved!'</span>,$rows);\n    }\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">resp</span><span class=\"hljs-params\">($code=<span class=\"hljs-number\">200</span>,$message=<span class=\"hljs-string\">''</span>,$content=<span class=\"hljs-string\">''</span>,$http_code=<span class=\"hljs-number\">200</span>)</span></span>{\n        http_response_code($http_code);\n        <span class=\"hljs-keyword\">return</span> json_encode([<span class=\"hljs-string\">'code'</span>=&gt;$code,<span class=\"hljs-string\">'message'</span>=&gt;$message,<span class=\"hljs-string\">'content'</span>=&gt;$content]);\n    }\n}\n\n<span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>($_GET[<span class=\"hljs-string\">'act'</span>]))\n{\n    $data=<span class=\"hljs-keyword\">new</span> Data();\n    $data-&gt;{<span class=\"hljs-string\">'action'</span>.ucfirst($_GET[<span class=\"hljs-string\">'act'</span>])}();\n}</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/44a3a6ae950676f6a22b","description":"Format number as int or float according to precision in PLSQL","files":["https://gist.githubusercontent.com/umidjons/44a3a6ae950676f6a22b/raw/2bbd57d51a483c23c152451a25c518e5ac44050d/format-number-as-int-float.md"],"content":"Format number as int or float according to precision in PLSQL\n===\n\n```sql\nselect trim('.' from to_char(1.00,'fm9999999.99')) from dual\n-- OUTPUT:\n1\n\nselect trim('.' from to_char(1.9,'fm9999999.99')) from dual\n-- OUTPUT:\n1.9\n\nselect trim('.' from to_char(1.955,'fm9999999.99')) from dual\n-- OUTPUT:\n1.96\n```","html":"<h1 id=\"format-number-as-int-or-float-according-to-precision-in-plsql\">Format number as int or float according to precision in PLSQL</h1>\n<pre><code class=\"lang-sql\"><span class=\"hljs-keyword\">select</span> <span class=\"hljs-keyword\">trim</span>(<span class=\"hljs-string\">'.'</span> <span class=\"hljs-keyword\">from</span> to_char(<span class=\"hljs-number\">1.00</span>,<span class=\"hljs-string\">'fm9999999.99'</span>)) <span class=\"hljs-keyword\">from</span> dual\n<span class=\"hljs-comment\">-- OUTPUT:</span>\n<span class=\"hljs-number\">1</span>\n\n<span class=\"hljs-keyword\">select</span> <span class=\"hljs-keyword\">trim</span>(<span class=\"hljs-string\">'.'</span> <span class=\"hljs-keyword\">from</span> to_char(<span class=\"hljs-number\">1.9</span>,<span class=\"hljs-string\">'fm9999999.99'</span>)) <span class=\"hljs-keyword\">from</span> dual\n<span class=\"hljs-comment\">-- OUTPUT:</span>\n<span class=\"hljs-number\">1.9</span>\n\n<span class=\"hljs-keyword\">select</span> <span class=\"hljs-keyword\">trim</span>(<span class=\"hljs-string\">'.'</span> <span class=\"hljs-keyword\">from</span> to_char(<span class=\"hljs-number\">1.955</span>,<span class=\"hljs-string\">'fm9999999.99'</span>)) <span class=\"hljs-keyword\">from</span> dual\n<span class=\"hljs-comment\">-- OUTPUT:</span>\n<span class=\"hljs-number\">1.96</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/413ea63ba55b8496f283","description":"Get list of sorted file names from given directory","files":["https://gist.githubusercontent.com/umidjons/413ea63ba55b8496f283/raw/0338df3020df3fc715dd92f5d0c70e6c0b2805b4/dir-sorted-files.md"],"content":"Get list of sorted file names from given directory\n===\n\n```bat\ndir myfolder /Oen /B\n```\n\nList files from `myfolder` folder, sort them by extension `/Oe`, \nthen sort by name `/On`, print only file names `/B`.","html":"<h1 id=\"get-list-of-sorted-file-names-from-given-directory\">Get list of sorted file names from given directory</h1>\n<pre><code class=\"lang-bat\">dir myfolder <span class=\"hljs-regexp\">/Oen /</span>B\n</code></pre>\n<p>List files from <code>myfolder</code> folder, sort them by extension <code>/Oe</code>, \nthen sort by name <code>/On</code>, print only file names <code>/B</code>.</p>\n"},{"html_url":"https://gist.github.com/bb8330e5e1a0023fa0ad","description":"Resolving multiple promises before state change","files":["https://gist.githubusercontent.com/umidjons/bb8330e5e1a0023fa0ad/raw/0cd9587ce970d8964e51813c0ab4a1cb4fe39986/resolving-multiple-promises-before-state-change.md"],"content":"Resolving multiple promises before state change\n===\n\n`app.js`\n```js\nangular.module('App',['ui.router'])\n\t.factory('MyFactory',function($http){\n\t\treturn {\n\t\t\tcommon:{\n\t\t\t\tcountries:function(){\n\t\t\t\t\treturn $http.post('/scripts/countries.php');\n\t\t\t\t},\n\t\t\t\tcities   :function(){\n\t\t\t\t\treturn $http.post('/scripts/cities.php');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t})\n\t.config(function($stateProvider,$urlRouterProvider){\n\t\t$urlRouterProvider.otherwise('/');\n\t\t$stateProvider\n\t\t\t.state('parent',{ // abstract parent state for all states\n\t\t\t\turl       :'/parent',\n\t\t\t\tabstract  :true,\n\t\t\t\ttemplate  :'<ui-view>', // important!\n\t\t\t\tresolve   :{\n\t\t\t\t\tdata:function($q,Data){\n\t\t\t\t\t\tvar def=$q.defer();\n\t\t\t\t\t\t// both are promises\n\t\t\t\t\t\tvar c1=Data.common.countries();\n\t\t\t\t\t\tvar c2=Data.common.cities();\n\t\t\t\t\t\t// just to see when data loaded:\n\t\t\t\t\t\tc1.then(function(resp){console.log('Countries loaded:',resp);});\n\t\t\t\t\t\tc2.then(function(resp){console.log('Cities loaded:',resp);});\n\t\t\t\t\t\t// resolve when all data loaded\n\t\t\t\t\t\t$q.all([c1,c2]).then(function(resp){\n\t\t\t\t\t\t\tconsole.log('All data loaded:',resp);\n\t\t\t\t\t\t\tdef.resolve(resp);\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn def.promise;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcontroller:function($scope,data){\n\t\t\t\t\tconsole.log('Parent controller:',data);\n\t\t\t\t\t// available in all scopes\n\t\t\t\t\t$scope.common.countries=data[0].data;\n\t\t\t\t\t$scope.common.cities=data[1].data;\n\t\t\t\t}\n\t\t\t})\n\t\t\t.state('parent.child',{\n\t\t\t\turl        :'/child',\n\t\t\t\tresolve    :{data:function(data){ return data; }},\n\t\t\t\ttemplateUrl:'partials/child.html',\n\t\t\t\tcontroller :'MyCtrl'\n\t\t\t});\n\t})\n\t.controller('MyCtrl',function($scope){\n\t\tconsole.log('Child controller');\n\t\tconsole.log('Countries:',$scope.common.countries);\n\t\tconsole.log('Cities:',$scope.common.cities);\n\t});\n```\n\n`partials/child.html`\n```html\n<h3>Countries</h3>\n<table class=\"table table-striped\">\n\t<tr ng-repeat=\"c in common.countries\">\n\t\t<td>{{c.code}}</td>\n\t\t<td>{{c.name}}</td>\n\t</tr>\n</table>\n```","html":"<h1 id=\"resolving-multiple-promises-before-state-change\">Resolving multiple promises before state change</h1>\n<p><code>app.js</code></p>\n<pre><code class=\"lang-js\">angular.module(<span class=\"hljs-string\">'App'</span>,[<span class=\"hljs-string\">'ui.router'</span>])\n    .factory(<span class=\"hljs-string\">'MyFactory'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($http)</span></span>{\n        <span class=\"hljs-keyword\">return</span> {\n            common:{\n                countries:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n                    <span class=\"hljs-keyword\">return</span> $http.post(<span class=\"hljs-string\">'/scripts/countries.php'</span>);\n                },\n                cities   :<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n                    <span class=\"hljs-keyword\">return</span> $http.post(<span class=\"hljs-string\">'/scripts/cities.php'</span>);\n                }\n            }\n        }\n    })\n    .config(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($stateProvider,$urlRouterProvider)</span></span>{\n        $urlRouterProvider.otherwise(<span class=\"hljs-string\">'/'</span>);\n        $stateProvider\n            .state(<span class=\"hljs-string\">'parent'</span>,{ <span class=\"hljs-comment\">// abstract parent state for all states</span>\n                url       :<span class=\"hljs-string\">'/parent'</span>,\n                <span class=\"hljs-keyword\">abstract</span>  :<span class=\"hljs-keyword\">true</span>,\n                template  :<span class=\"hljs-string\">'&lt;ui-view&gt;'</span>, <span class=\"hljs-comment\">// important!</span>\n                resolve   :{\n                    data:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($q,Data)</span></span>{\n                        <span class=\"hljs-keyword\">var</span> def=$q.defer();\n                        <span class=\"hljs-comment\">// both are promises</span>\n                        <span class=\"hljs-keyword\">var</span> c1=Data.common.countries();\n                        <span class=\"hljs-keyword\">var</span> c2=Data.common.cities();\n                        <span class=\"hljs-comment\">// just to see when data loaded:</span>\n                        c1.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(resp)</span></span>{console.log(<span class=\"hljs-string\">'Countries loaded:'</span>,resp);});\n                        c2.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(resp)</span></span>{console.log(<span class=\"hljs-string\">'Cities loaded:'</span>,resp);});\n                        <span class=\"hljs-comment\">// resolve when all data loaded</span>\n                        $q.all([c1,c2]).then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(resp)</span></span>{\n                            console.log(<span class=\"hljs-string\">'All data loaded:'</span>,resp);\n                            def.resolve(resp);\n                        });\n                        <span class=\"hljs-keyword\">return</span> def.promise;\n                    }\n                },\n                controller:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($scope,data)</span></span>{\n                    console.log(<span class=\"hljs-string\">'Parent controller:'</span>,data);\n                    <span class=\"hljs-comment\">// available in all scopes</span>\n                    $scope.common.countries=data[<span class=\"hljs-number\">0</span>].data;\n                    $scope.common.cities=data[<span class=\"hljs-number\">1</span>].data;\n                }\n            })\n            .state(<span class=\"hljs-string\">'parent.child'</span>,{\n                url        :<span class=\"hljs-string\">'/child'</span>,\n                resolve    :{data:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(data)</span></span>{ <span class=\"hljs-keyword\">return</span> data; }},\n                templateUrl:<span class=\"hljs-string\">'partials/child.html'</span>,\n                controller :<span class=\"hljs-string\">'MyCtrl'</span>\n            });\n    })\n    .controller(<span class=\"hljs-string\">'MyCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($scope)</span></span>{\n        console.log(<span class=\"hljs-string\">'Child controller'</span>);\n        console.log(<span class=\"hljs-string\">'Countries:'</span>,$scope.common.countries);\n        console.log(<span class=\"hljs-string\">'Cities:'</span>,$scope.common.cities);\n    });\n</code></pre>\n<p><code>partials/child.html</code></p>\n<pre><code class=\"lang-html\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>Countries<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">table</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"table table-striped\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span> <span class=\"hljs-attr\">ng-repeat</span>=<span class=\"hljs-string\">\"c in common.countries\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{c.code}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{c.name}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">table</span>&gt;</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/52fe03bbb3140c2cbc35","description":"HTML <select multiple> without CTRL key.","files":["https://gist.githubusercontent.com/umidjons/52fe03bbb3140c2cbc35/raw/6be75aaf0c3e0fb4f67e35f06199ebaf12fec3be/select-multiple-without-ctrl.md"],"content":"HTML `select multiple` without `CTRL` key.\n===\n\nOur `HTML` content:\n```html\n<select multiple style=\"width:200px;\">                \n    <option value=\"1\">1</option>\n    <option value=\"2\">2</option>\n    <option value=\"3\">3</option>\n    <option value=\"4\">4</option>\n    <option value=\"5\">5</option>\n    <option value=\"6\">6</option>\n    <option value=\"7\">7</option>\n    <option value=\"8\">8</option>\n</select>\n```\n\n`jQuery` code to toggle selection on `mousedown` event (only for Chrome):\n```js\n$(\"select[multiple] option\").mousedown(function(){\n  $(this).attr('selected',function(idx,attr){return attr=='selected'?null:'selected'});\n  return false;\n});\n```\n\nThis works on Chrome, Firefox, but blinks on selection:\n```js\n(function(){\n\tvar selected={};\n\t$('select').click(function(e){\n\t\tvar $this=$(this),options=this.options,option,value,n;\n\t\tvalue=$this.val();\n\t\tfor(n=0; n<options.length; ++n){\n\t\t\toption=options[n];\n\t\t\tif(option.value==value) selected[value]= !selected[value];\n\t\t\toption.selected= !!selected[option.value];\n\t\t}\n\t\treturn false;\n\t});\n})();\n```","html":"<h1 id=\"html-select-multiple-without-ctrl-key-\">HTML <code>select multiple</code> without <code>CTRL</code> key.</h1>\n<p>Our <code>HTML</code> content:</p>\n<pre><code class=\"lang-html\">&lt;select multiple style=<span class=\"hljs-string\">\"width:200px;\"</span>&gt;                \n    &lt;<span class=\"hljs-keyword\">option</span> <span class=\"hljs-keyword\">value</span>=<span class=\"hljs-string\">\"1\"</span>&gt;<span class=\"hljs-number\">1</span>&lt;/<span class=\"hljs-keyword\">option</span>&gt;\n    &lt;<span class=\"hljs-keyword\">option</span> <span class=\"hljs-keyword\">value</span>=<span class=\"hljs-string\">\"2\"</span>&gt;<span class=\"hljs-number\">2</span>&lt;/<span class=\"hljs-keyword\">option</span>&gt;\n    &lt;<span class=\"hljs-keyword\">option</span> <span class=\"hljs-keyword\">value</span>=<span class=\"hljs-string\">\"3\"</span>&gt;<span class=\"hljs-number\">3</span>&lt;/<span class=\"hljs-keyword\">option</span>&gt;\n    &lt;<span class=\"hljs-keyword\">option</span> <span class=\"hljs-keyword\">value</span>=<span class=\"hljs-string\">\"4\"</span>&gt;<span class=\"hljs-number\">4</span>&lt;/<span class=\"hljs-keyword\">option</span>&gt;\n    &lt;<span class=\"hljs-keyword\">option</span> <span class=\"hljs-keyword\">value</span>=<span class=\"hljs-string\">\"5\"</span>&gt;<span class=\"hljs-number\">5</span>&lt;/<span class=\"hljs-keyword\">option</span>&gt;\n    &lt;<span class=\"hljs-keyword\">option</span> <span class=\"hljs-keyword\">value</span>=<span class=\"hljs-string\">\"6\"</span>&gt;<span class=\"hljs-number\">6</span>&lt;/<span class=\"hljs-keyword\">option</span>&gt;\n    &lt;<span class=\"hljs-keyword\">option</span> <span class=\"hljs-keyword\">value</span>=<span class=\"hljs-string\">\"7\"</span>&gt;<span class=\"hljs-number\">7</span>&lt;/<span class=\"hljs-keyword\">option</span>&gt;\n    &lt;<span class=\"hljs-keyword\">option</span> <span class=\"hljs-keyword\">value</span>=<span class=\"hljs-string\">\"8\"</span>&gt;<span class=\"hljs-number\">8</span>&lt;/<span class=\"hljs-keyword\">option</span>&gt;\n&lt;/select&gt;\n</code></pre>\n<p><code>jQuery</code> code to toggle selection on <code>mousedown</code> event (only for Chrome):</p>\n<pre><code class=\"lang-js\">$(<span class=\"hljs-string\">\"select[multiple] option\"</span>).mousedown(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n  $(<span class=\"hljs-keyword\">this</span>).attr(<span class=\"hljs-string\">'selected'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">idx,attr</span>)</span>{<span class=\"hljs-keyword\">return</span> attr==<span class=\"hljs-string\">'selected'</span>?<span class=\"hljs-literal\">null</span>:<span class=\"hljs-string\">'selected'</span>});\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n});\n</code></pre>\n<p>This works on Chrome, Firefox, but blinks on selection:</p>\n<pre><code class=\"lang-js\">(<span class=\"hljs-name\">function</span>(){\n    var selected={}<span class=\"hljs-comment\">;</span>\n    $(<span class=\"hljs-name\">'select'</span>).click(<span class=\"hljs-name\">function</span>(<span class=\"hljs-name\">e</span>){\n        var $this=$(<span class=\"hljs-name\">this</span>),options=this.options,option,value,n;\n        value=$this.val()<span class=\"hljs-comment\">;</span>\n        for(<span class=\"hljs-name\">n=0;</span> n&lt;options.length; ++n){\n            option=options[n]<span class=\"hljs-comment\">;</span>\n            if(<span class=\"hljs-name\">option.value==value</span>) selected[value]= !selected[value]<span class=\"hljs-comment\">;</span>\n            option.selected= !!selected[option.value]<span class=\"hljs-comment\">;</span>\n        }\n        return <span class=\"hljs-literal\">false</span><span class=\"hljs-comment\">;</span>\n    })<span class=\"hljs-comment\">;</span>\n})()<span class=\"hljs-comment\">;</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/ee9b536397ae092b8a8d","description":"Truncate text with CSS","files":["https://gist.githubusercontent.com/umidjons/ee9b536397ae092b8a8d/raw/2632409022c946c359365b9b88b76ff97290540f/truncate-text-css.md"],"content":"Truncate text with CSS\n===\n\nTruncates text and put `...` at the end.\n\n```css\n.alert{\n  width:300px; /* or max-width */\n  display: block; /* or inline-block */\n  text-overflow: ellipsis;\n  overflow:hidden;\n  white-space:nowrap;\n}\n```","html":"<h1 id=\"truncate-text-with-css\">Truncate text with CSS</h1>\n<p>Truncates text and put <code>...</code> at the end.</p>\n<pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.alert</span>{\n  <span class=\"hljs-attribute\">width</span>:<span class=\"hljs-number\">300px</span>; <span class=\"hljs-comment\">/* or max-width */</span>\n  <span class=\"hljs-attribute\">display</span>: block; <span class=\"hljs-comment\">/* or inline-block */</span>\n  <span class=\"hljs-attribute\">text-overflow</span>: ellipsis;\n  <span class=\"hljs-attribute\">overflow</span>:hidden;\n  <span class=\"hljs-attribute\">white-space</span>:nowrap;\n}\n</code></pre>\n"},{"html_url":"https://gist.github.com/fa568bdf82be67bc500e","description":"Parse $_POST data when enctype=multipart/form-data","files":["https://gist.githubusercontent.com/umidjons/fa568bdf82be67bc500e/raw/347c01a00b2830682df8e728c51c3dd29f808442/parse-query-string.md"],"content":"Parse $_POST data when enctype=multipart/form-data\n===\n\n```php\n<?php\nparse_str('NAME=Mike&AGE=23&AVATAR%5BwebkitRelativePath%5D=&AVATAR%5BlastModified%5D=1312288833000&&AVATAR%5Bname%5D=Chrysanthemum.jpg&AVATAR%5Btype%5D=image%2Fjpeg&AVATAR%5Bsize%5D=879394&',$res);\necho '<pre>'.print_r($res,true).'</pre>';\n```\nOutput\n```\nArray\n(\n    [NAME] => Mike\n    [AGE] => 23\n    [AVATAR] => Array\n        (\n            [webkitRelativePath] => \n            [lastModified] => 1312288833000\n            [name] => Chrysanthemum.jpg\n            [type] => image/jpeg\n            [size] => 879394\n        )\n\n)\n```\n\nI used `parse_str` function, when I want to upload file and also send additional \npost data (from `AngularJS`) to the server (in `Yii framework`).\n\n```php\n<?php\n\tpublic function actionUserAdd()\n\t{\n\t\tif(isset($_POST['user']))\n\t\t{\n\t\t\tparse_str($_POST['user'],$_POST['user']);\n\t\t\t$user            =new User();\n\t\t\t$user->attributes=$_POST['user'];\n\t\t\tif($user->validate())\n\t\t\t{\n\t\t\t\t$user_id=$user->add();\n\t\t\t\tif($user_id)\n\t\t\t\t{\n\t\t\t\t\t// set roles and privileges\n\t\t\t\t\t$auth_items=array_merge([],F::valArr($_POST['user']['ROLES']),F::valArr($_POST['user']['PRIVILEGES']));\n\t\t\t\t\t$user->assign($user_id,$auth_items);\n\t\t\t\t\t// upload/set avatar\n\t\t\t\t\t$user->setAvatar($user_id,$_FILES['file']);\n\t\t\t\t\tYii::app()->odb->commit();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tF::resp(400,'Adding new user failed.');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tF::resp(400,'Invalid user data.');\n\t}\n```","html":"<h1 id=\"parse-_post-data-when-enctype-multipart-form-data\">Parse $_POST data when enctype=multipart/form-data</h1>\n<pre><code class=\"lang-php\">&lt;?php\nparse_str('NAME=Mike&amp;AGE=<span class=\"hljs-number\">23</span>&amp;AVATAR%<span class=\"hljs-number\">5</span>BwebkitRelativePath%<span class=\"hljs-number\">5</span>D=&amp;AVATAR%<span class=\"hljs-number\">5</span>BlastModified%<span class=\"hljs-number\">5</span>D=<span class=\"hljs-number\">1312288833000</span>&amp;&amp;AVATAR%<span class=\"hljs-number\">5</span>Bname%<span class=\"hljs-number\">5</span>D=Chrysanthemum.jpg&amp;AVATAR%<span class=\"hljs-number\">5</span>Btype%<span class=\"hljs-number\">5</span>D=image%<span class=\"hljs-number\">2</span>Fjpeg&amp;AVATAR%<span class=\"hljs-number\">5</span>Bsize%<span class=\"hljs-number\">5</span>D=<span class=\"hljs-number\">879394</span>&amp;',$res);\necho '&lt;pre&gt;'.print_r($res,true).'&lt;/pre&gt;';\n</code></pre>\n<p>Output</p>\n<pre><code><span class=\"hljs-keyword\">Array</span>\n(\n    [NAME] =&gt; Mike\n    [AGE] =&gt; <span class=\"hljs-number\">23</span>\n    [AVATAR] =&gt; <span class=\"hljs-keyword\">Array</span>\n        (\n            [webkitRelativePath] =&gt; \n            [lastModified] =&gt; <span class=\"hljs-number\">1312288833000</span>\n            [name] =&gt; Chrysanthemum.jpg\n            [type] =&gt; image/jpeg\n            [size] =&gt; <span class=\"hljs-number\">879394</span>\n        )\n\n)\n</code></pre><p>I used <code>parse_str</code> function, when I want to upload file and also send additional \npost data (from <code>AngularJS</code>) to the server (in <code>Yii framework</code>).</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">actionUserAdd</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>($_POST[<span class=\"hljs-string\">'user'</span>]))\n        {\n            parse_str($_POST[<span class=\"hljs-string\">'user'</span>],$_POST[<span class=\"hljs-string\">'user'</span>]);\n            $user            =<span class=\"hljs-keyword\">new</span> User();\n            $user-&gt;attributes=$_POST[<span class=\"hljs-string\">'user'</span>];\n            <span class=\"hljs-keyword\">if</span>($user-&gt;validate())\n            {\n                $user_id=$user-&gt;add();\n                <span class=\"hljs-keyword\">if</span>($user_id)\n                {\n                    <span class=\"hljs-comment\">// set roles and privileges</span>\n                    $auth_items=array_merge([],F::valArr($_POST[<span class=\"hljs-string\">'user'</span>][<span class=\"hljs-string\">'ROLES'</span>]),F::valArr($_POST[<span class=\"hljs-string\">'user'</span>][<span class=\"hljs-string\">'PRIVILEGES'</span>]));\n                    $user-&gt;assign($user_id,$auth_items);\n                    <span class=\"hljs-comment\">// upload/set avatar</span>\n                    $user-&gt;setAvatar($user_id,$_FILES[<span class=\"hljs-string\">'file'</span>]);\n                    Yii::app()-&gt;odb-&gt;commit();\n                }\n                <span class=\"hljs-keyword\">else</span>\n                    F::resp(<span class=\"hljs-number\">400</span>,<span class=\"hljs-string\">'Adding new user failed.'</span>);\n            }\n        }\n        <span class=\"hljs-keyword\">else</span>\n            F::resp(<span class=\"hljs-number\">400</span>,<span class=\"hljs-string\">'Invalid user data.'</span>);\n    }</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/677202fd06b3e67ea55a","description":"Match directive","files":["https://gist.githubusercontent.com/umidjons/677202fd06b3e67ea55a/raw/b70b796094781de943483f5c0a05d317c391f45a/match-directive.md"],"content":"Match directive\n===\n\n```javascript\nangular.module('app',[])\n  .directive('match',function(){\n\t\treturn {\n\t\t\trequire :'ngModel',\n\t\t\trestrict:'A',\n\t\t\tscope   :{\n\t\t\t\tmatch:'='\n\t\t\t},\n\t\t\tlink    :function(scope,elem,attrs,ctrl){\n\t\t\t\tscope.$watch(function(){\n\t\t\t\t\tvar modelValue=ctrl.$modelValue || ctrl.$$invalidModelValue;\n\t\t\t\t\treturn (ctrl.$pristine && angular.isUndefined(modelValue)) || scope.match===modelValue;\n\t\t\t\t},function(currentValue){\n\t\t\t\t\tctrl.$setValidity('match',currentValue);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t});\n```\n\nExample\n```html\n<div class=\"col-sm-2\">\n\t<label>Пароль</label>\n\t<input class=\"form-control\" type=\"password\" ng-model=\"user.password\">\n</div>\n<div class=\"col-sm-2\">\n\t<label>Пароль (повторно)</label>\n\t<input class=\"form-control\" type=\"password\" ng-model=\"user.password2\" match=\"user.password\">\n</div>\n```","html":"<h1 id=\"match-directive\">Match directive</h1>\n<pre><code class=\"lang-javascript\">angular.module(<span class=\"hljs-string\">'app'</span>,[])\n  .directive(<span class=\"hljs-string\">'match'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-keyword\">require</span> :<span class=\"hljs-string\">'ngModel'</span>,\n            restrict:<span class=\"hljs-string\">'A'</span>,\n            scope   :{\n                match:<span class=\"hljs-string\">'='</span>\n            },\n            link    :<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(scope,elem,attrs,ctrl)</span></span>{\n                scope.$watch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n                    <span class=\"hljs-keyword\">var</span> modelValue=ctrl.$modelValue || ctrl.$$invalidModelValue;\n                    <span class=\"hljs-keyword\">return</span> (ctrl.$pristine &amp;&amp; angular.isUndefined(modelValue)) || scope.match===modelValue;\n                },<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(currentValue)</span></span>{\n                    ctrl.$setValidity(<span class=\"hljs-string\">'match'</span>,currentValue);\n                });\n            }\n        };\n    });\n</code></pre>\n<p>Example</p>\n<pre><code class=\"lang-html\">&lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"col-sm-2\"</span>&gt;\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Пароль<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span></span>\n    &lt;input <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"form-control\"</span> type=<span class=\"hljs-string\">\"password\"</span> ng-model=<span class=\"hljs-string\">\"user.password\"</span>&gt;\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n&lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"col-sm-2\"</span>&gt;\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Пароль (повторно)<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span></span>\n    &lt;input <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"form-control\"</span> type=<span class=\"hljs-string\">\"password\"</span> ng-model=<span class=\"hljs-string\">\"user.password2\"</span> match=<span class=\"hljs-string\">\"user.password\"</span>&gt;\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/1e6aefd6a17bf71aa9d0","description":"Git on Windows: Creating a network shared central repository.","files":["https://gist.githubusercontent.com/umidjons/1e6aefd6a17bf71aa9d0/raw/0f6d6f3ce900030ffeaad5fd25e03e1d011a44d6/git-network-shared-central-repo.md"],"content":"Git on Windows: Creating a network shared central repository.\n===\n\nOriginal post http://elegantcode.com/2011/06/18/git-on-windows-creating-a-network-shared-central-repository/\n\n```bat\ncd d:\\projects\\repo\\\nmkdir proj1\n```\nShare `proj1` folder and create `bare git repository` in it.\n```bat\ncd proj1\npushd \\\\mypc\\proj1\ngit init --bare\npopd\n```\nAdd remote origin in client.\n```bat\ngit remote add origin //mypc/proj1\ngit push origin master\n```\nFrom here we can use `fetch/pull/push` commands.","html":"<h1 id=\"git-on-windows-creating-a-network-shared-central-repository-\">Git on Windows: Creating a network shared central repository.</h1>\n<p>Original post <a href=\"http://elegantcode.com/2011/06/18/git-on-windows-creating-a-network-shared-central-repository/\">http://elegantcode.com/2011/06/18/git-on-windows-creating-a-network-shared-central-repository/</a></p>\n<pre><code class=\"lang-bat\">cd d:<span class=\"hljs-tag\">\\<span class=\"hljs-name\">projects</span></span><span class=\"hljs-tag\">\\<span class=\"hljs-name\">repo</span></span><span class=\"hljs-tag\">\\<span class=\"hljs-name\">\n</span></span>mkdir proj1\n</code></pre>\n<p>Share <code>proj1</code> folder and create <code>bare git repository</code> in it.</p>\n<pre><code class=\"lang-bat\"><span class=\"hljs-built_in\">cd</span> proj1\n<span class=\"hljs-built_in\">pushd</span> \\\\mypc\\proj1\ngit init --bare\n<span class=\"hljs-built_in\">popd</span>\n</code></pre>\n<p>Add remote origin in client.</p>\n<pre><code class=\"lang-bat\">git remote <span class=\"hljs-keyword\">add</span><span class=\"bash\"> origin //mypc/proj1\n</span>git push origin master\n</code></pre>\n<p>From here we can use <code>fetch/pull/push</code> commands.</p>\n"},{"html_url":"https://gist.github.com/b88a0c0eadb6597a3c1c","description":"Date/Timestamp to Epoche","files":["https://gist.githubusercontent.com/umidjons/b88a0c0eadb6597a3c1c/raw/df9f33811f646695b8b98021016a4cdd05d4f853/date-timestamp-to-epoche.md"],"content":"Date/Timestamp to Epoche\n===\n\n```sql\nCREATE OR REPLACE FUNCTION GetEpoche(theTimestamp IN TIMESTAMP, timezone IN VARCHAR2 DEFAULT SESSIONTIMEZONE) RETURN NUMBER DETERMINISTIC IS\n\n    timestampUTC TIMESTAMP;\n    theInterval INTERVAL DAY(9) TO SECOND;\n    epoche NUMBER;\nBEGIN\n\n    timestampUTC := FROM_TZ(theTimestamp, timezone) AT TIME ZONE 'UTC';    \n    theInterval := TO_DSINTERVAL(timestampUTC - TO_TIMESTAMP('1970-01-01', 'YYYY-MM-DD') );\n    epoche := EXTRACT(DAY FROM theInterval)*24*60*60 \n        + EXTRACT(HOUR FROM theInterval)*60*60 \n        + EXTRACT(MINUTE FROM theInterval)*60 \n        + EXTRACT(SECOND FROM theInterval);\n    RETURN ROUND(1000*epoche);\nEND GetEpoche;\n```\n\nExample:\n```sql\nselect GetEpoche(sysdate),sysdate from dual;\n-----------------------------------------\n| 1413874146000\t| 21-Oct-14 11:49:06 AM |\n-----------------------------------------\n```","html":"<h1 id=\"date-timestamp-to-epoche\">Date/Timestamp to Epoche</h1>\n<pre><code class=\"lang-sql\">CREATE <span class=\"hljs-keyword\">OR</span> REPLACE FUNCTION GetEpoche(theTimestamp <span class=\"hljs-keyword\">IN</span> TIMESTAMP, timezone <span class=\"hljs-keyword\">IN</span> VARCHAR2 DEFAULT SESSIONTIMEZONE) RETURN <span class=\"hljs-keyword\">NUMBER</span> DETERMINISTIC IS\n\n    timestampUTC TIMESTAMP;\n    theInterval INTERVAL <span class=\"hljs-keyword\">DAY</span>(<span class=\"hljs-number\">9</span>) <span class=\"hljs-keyword\">TO</span> <span class=\"hljs-keyword\">SECOND</span>;\n    epoche <span class=\"hljs-keyword\">NUMBER</span>;\nBEGIN\n\n    timestampUTC := FROM_TZ(theTimestamp, timezone) AT TIME ZONE <span class=\"hljs-string\">'UTC'</span>;    \n    theInterval := TO_DSINTERVAL(timestampUTC - TO_TIMESTAMP(<span class=\"hljs-string\">'1970-01-01'</span>, <span class=\"hljs-string\">'YYYY-MM-DD'</span>) );\n    epoche := EXTRACT(<span class=\"hljs-keyword\">DAY</span> <span class=\"hljs-keyword\">FROM</span> theInterval)*<span class=\"hljs-number\">24</span>*<span class=\"hljs-number\">60</span>*<span class=\"hljs-number\">60</span> \n        + EXTRACT(<span class=\"hljs-keyword\">HOUR</span> <span class=\"hljs-keyword\">FROM</span> theInterval)*<span class=\"hljs-number\">60</span>*<span class=\"hljs-number\">60</span> \n        + EXTRACT(<span class=\"hljs-keyword\">MINUTE</span> <span class=\"hljs-keyword\">FROM</span> theInterval)*<span class=\"hljs-number\">60</span> \n        + EXTRACT(<span class=\"hljs-keyword\">SECOND</span> <span class=\"hljs-keyword\">FROM</span> theInterval);\n    RETURN <span class=\"hljs-keyword\">ROUND</span>(<span class=\"hljs-number\">1000</span>*epoche);\n<span class=\"hljs-keyword\">END</span> GetEpoche;\n</code></pre>\n<p>Example:</p>\n<pre><code class=\"lang-sql\"><span class=\"hljs-section\">select GetEpoche(sysdate),sysdate from dual;\n-----------------------------------------</span>\n<span class=\"hljs-section\">| 1413874146000    | 21-Oct-14 11:49:06 AM |\n-----------------------------------------</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/2d48937e82521bd789c4","description":"ngPattern examples","files":["https://gist.githubusercontent.com/umidjons/2d48937e82521bd789c4/raw/02f8970def5cfd30ad012d71ceddd6007aba1e8a/ngpattern-examples.md"],"content":"ngPattern examples\n===\n\nUsername:\n```html\n<input type=\"text\" ng-model=\"user.username\" class=\"form-control\" ng-pattern=\"/^[a-zA-Z][.0-9a-zA-Z_-]{1,20}$/\">\n```\n\nPassword:\n```html\n<input class=\"form-control\" type=\"password\" ng-model=\"user.password\" ng-pattern=\"/^[a-zA-Z0-9_-~!@#$%^&*\\+=\\(\\)\\[\\].,|<>?\\/]{3,20}$/\">\n```\n\nLastname, firstname, patronymic (maybe in Russian and Uzbek):\n```html\n<input class=\"form-control\" type=\"text\" ng-model=\"user.last_name\" ng-pattern=\"/^[a-zA-Zа-яА-ЯўқғҳЎҚҒҲ-]{1,50}$/\">\n```","html":"<h1 id=\"ngpattern-examples\">ngPattern examples</h1>\n<p>Username:</p>\n<pre><code class=\"lang-html\">&lt;input <span class=\"hljs-class\"><span class=\"hljs-keyword\">type</span></span>=<span class=\"hljs-string\">\"text\"</span> ng-model=<span class=\"hljs-string\">\"user.username\"</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"form-control\"</span> ng-pattern=<span class=\"hljs-string\">\"/^[a-zA-Z][.0-9a-zA-Z_-]{1,20}$/\"</span>&gt;\n</code></pre>\n<p>Password:</p>\n<pre><code class=\"lang-html\">&lt;input <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"form-control\"</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">type</span></span>=<span class=\"hljs-string\">\"password\"</span> ng-model=<span class=\"hljs-string\">\"user.password\"</span> ng-pattern=<span class=\"hljs-string\">\"/^[a-zA-Z0-9_-~!@#$%^&amp;*\\+=\\(\\)\\[\\].,|&lt;&gt;?\\/]{3,20}$/\"</span>&gt;\n</code></pre>\n<p>Lastname, firstname, patronymic (maybe in Russian and Uzbek):</p>\n<pre><code class=\"lang-html\">&lt;input <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"form-control\"</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">type</span></span>=<span class=\"hljs-string\">\"text\"</span> ng-model=<span class=\"hljs-string\">\"user.last_name\"</span> ng-pattern=<span class=\"hljs-string\">\"/^[a-zA-Zа-яА-ЯўқғҳЎҚҒҲ-]{1,50}$/\"</span>&gt;\n</code></pre>\n"},{"html_url":"https://gist.github.com/df3acf00493325cda145","description":"Set content type for all POST request","files":["https://gist.githubusercontent.com/umidjons/df3acf00493325cda145/raw/9d1666bd734f200cab959b2e0a693a5d3bd7ce32/set-content-type-for-all-post-requests.md"],"content":"Set content type for all POST requests\n===\n\n```js\nangular.module('MyApp',[])\n\t.config(function($httpProvider){\n\t\t// set default content type for POST requests\n\t\t$httpProvider.defaults.headers.post['Content-Type']='application/x-www-form-urlencoded;charset=utf-8';\n\t\t/**\n\t\t * The workhorse; converts an object to x-www-form-urlencoded serialization.\n\t\t * @param {Object} obj\n\t\t * @return {String}\n\t\t */\n\t\tvar param=function(obj){\n\t\t\tvar query='',name,value,fullSubName,subName,subValue,innerObj,i;\n\t\t\tfor(name in obj){\n\t\t\t\tvalue=obj[name];\n\t\t\t\tif(value instanceof Array){\n\t\t\t\t\tfor(i=0; i<value.length; ++i){\n\t\t\t\t\t\tsubValue=value[i];\n\t\t\t\t\t\tfullSubName=name+'['+i+']';\n\t\t\t\t\t\tinnerObj={};\n\t\t\t\t\t\tinnerObj[fullSubName]=subValue;\n\t\t\t\t\t\tquery+=param(innerObj)+'&';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(value instanceof Object){\n\t\t\t\t\tfor(subName in value){\n\t\t\t\t\t\tsubValue=value[subName];\n\t\t\t\t\t\tfullSubName=name+'['+subName+']';\n\t\t\t\t\t\tinnerObj={};\n\t\t\t\t\t\tinnerObj[fullSubName]=subValue;\n\t\t\t\t\t\tquery+=param(innerObj)+'&';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(value!==undefined && value!==null)\n\t\t\t\t\tquery+=encodeURIComponent(name)+'='+encodeURIComponent(value)+'&';\n\t\t\t}\n\t\t\treturn query.length?query.substr(0,query.length-1):query;\n\t\t};\n\n\t\t// Override $http service's default transformRequest\n\t\t$httpProvider.defaults.transformRequest=[function(data){\n\t\t\treturn angular.isObject(data) && String(data)!=='[object File]'?param(data):data;\n\t\t}];\n\t})\n\t.controller('MyCtrl',function($scope,$http){\n\t\t$scope.myRequest=function(){\n\t\t\t// now on PHP var1 and var2 available as $_POST['var1'] and $_POST['var2']\n\t\t\t$http({method:'POST',url:'/some/url',data:{var1:123,var2:'test'}}).success(function(response){\n\t\t\t\tconsole.log('response=',response);\n\t\t\t});\n\t\t}\n\t});\n```","html":"<h1 id=\"set-content-type-for-all-post-requests\">Set content type for all POST requests</h1>\n<pre><code class=\"lang-js\">angular.module(<span class=\"hljs-string\">'MyApp'</span>,[])\n    .config(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($httpProvider)</span></span>{\n        <span class=\"hljs-comment\">// set default content type for POST requests</span>\n        $httpProvider.defaults.headers.post[<span class=\"hljs-string\">'Content-Type'</span>]=<span class=\"hljs-string\">'application/x-www-form-urlencoded;charset=utf-8'</span>;\n        <span class=\"hljs-comment\">/**\n         * The workhorse; converts an object to x-www-form-urlencoded serialization.\n         * <span class=\"hljs-doctag\">@param</span> {Object} obj\n         * <span class=\"hljs-doctag\">@return</span> {String}\n         */</span>\n        <span class=\"hljs-keyword\">var</span> param=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(obj)</span></span>{\n            <span class=\"hljs-keyword\">var</span> query=<span class=\"hljs-string\">''</span>,name,value,fullSubName,subName,subValue,innerObj,i;\n            <span class=\"hljs-keyword\">for</span>(name in obj){\n                value=obj[name];\n                <span class=\"hljs-keyword\">if</span>(value <span class=\"hljs-keyword\">instanceof</span> <span class=\"hljs-keyword\">Array</span>){\n                    <span class=\"hljs-keyword\">for</span>(i=<span class=\"hljs-number\">0</span>; i&lt;value.length; ++i){\n                        subValue=value[i];\n                        fullSubName=name+<span class=\"hljs-string\">'['</span>+i+<span class=\"hljs-string\">']'</span>;\n                        innerObj={};\n                        innerObj[fullSubName]=subValue;\n                        query+=param(innerObj)+<span class=\"hljs-string\">'&amp;'</span>;\n                    }\n                }\n                <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(value <span class=\"hljs-keyword\">instanceof</span> Object){\n                    <span class=\"hljs-keyword\">for</span>(subName in value){\n                        subValue=value[subName];\n                        fullSubName=name+<span class=\"hljs-string\">'['</span>+subName+<span class=\"hljs-string\">']'</span>;\n                        innerObj={};\n                        innerObj[fullSubName]=subValue;\n                        query+=param(innerObj)+<span class=\"hljs-string\">'&amp;'</span>;\n                    }\n                }\n                <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(value!==undefined &amp;&amp; value!==<span class=\"hljs-keyword\">null</span>)\n                    query+=encodeURIComponent(name)+<span class=\"hljs-string\">'='</span>+encodeURIComponent(value)+<span class=\"hljs-string\">'&amp;'</span>;\n            }\n            <span class=\"hljs-keyword\">return</span> query.length?query.substr(<span class=\"hljs-number\">0</span>,query.length<span class=\"hljs-number\">-1</span>):query;\n        };\n\n        <span class=\"hljs-comment\">// Override $http service's default transformRequest</span>\n        $httpProvider.defaults.transformRequest=[<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(data)</span></span>{\n            <span class=\"hljs-keyword\">return</span> angular.isObject(data) &amp;&amp; String(data)!==<span class=\"hljs-string\">'[object File]'</span>?param(data):data;\n        }];\n    })\n    .controller(<span class=\"hljs-string\">'MyCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($scope,$http)</span></span>{\n        $scope.myRequest=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n            <span class=\"hljs-comment\">// now on PHP var1 and var2 available as $_POST['var1'] and $_POST['var2']</span>\n            $http({method:<span class=\"hljs-string\">'POST'</span>,url:<span class=\"hljs-string\">'/some/url'</span>,data:{var1:<span class=\"hljs-number\">123</span>,var2:<span class=\"hljs-string\">'test'</span>}}).success(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(response)</span></span>{\n                console.log(<span class=\"hljs-string\">'response='</span>,response);\n            });\n        }\n    });\n</code></pre>\n"},{"html_url":"https://gist.github.com/2eb2ba3ccd31b90f15d5","description":"Allow null values on filter","files":["https://gist.githubusercontent.com/umidjons/2eb2ba3ccd31b90f15d5/raw/b7f1df2cb2ea573c431d3022c120bccbba43621f/allow-null-values-on-filter.md"],"content":"Allow null values on filter\n===\n\n```js\nangular.module('MyApp',[])\n\t.controller('MyCtrl',function($scope){\n\t\t// this filter allows null values to be filtered,\n\t\t// for example, show active users or all users (all users means no filter by user)\n\t\t$scope.allowNull=function(input,actual){\n\t\t\tif(actual===null) return true;\n\t\t\telse return (''+input).toLowerCase().indexOf((''+actual).toLowerCase())> -1;\n\t\t}\n\t});\n```\n\n```html\n<div ng-app=\"MyApp\" ng-controller=\"MyCtrl\">\n\t<select ng-model=\"userfilter.state\" ng-options=\"stat.id as stat.title for stat in statuses\">\n\t\t<option value=\"\">All</option>\n\t</select>\n\t<div class=\"user-details\" ng-repeat=\"user in users|filter:userfilter:allowNull\">\n\t\t<h3>{{user.name}}</h3>\n\t\t<p>{{user.about}}</p>\n\t</div>\n</div>\n```","html":"<h1 id=\"allow-null-values-on-filter\">Allow null values on filter</h1>\n<pre><code class=\"lang-js\">angular.module(<span class=\"hljs-string\">'MyApp'</span>,[])\n    .controller(<span class=\"hljs-string\">'MyCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($scope)</span></span>{\n        <span class=\"hljs-comment\">// this filter allows null values to be filtered,</span>\n        <span class=\"hljs-comment\">// for example, show active users or all users (all users means no filter by user)</span>\n        $scope.allowNull=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(input,actual)</span></span>{\n            <span class=\"hljs-keyword\">if</span>(actual===<span class=\"hljs-keyword\">null</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">true</span>;\n            <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-string\">''</span>+input).toLowerCase().indexOf((<span class=\"hljs-string\">''</span>+actual).toLowerCase())&gt; <span class=\"hljs-number\">-1</span>;\n        }\n    });\n</code></pre>\n<pre><code class=\"lang-html\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-app</span>=<span class=\"hljs-string\">\"MyApp\"</span> <span class=\"hljs-attr\">ng-controller</span>=<span class=\"hljs-string\">\"MyCtrl\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"userfilter.state\"</span> <span class=\"hljs-attr\">ng-options</span>=<span class=\"hljs-string\">\"stat.id as stat.title for stat in statuses\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"\"</span>&gt;</span>All<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"user-details\"</span> <span class=\"hljs-attr\">ng-repeat</span>=<span class=\"hljs-string\">\"user in users|filter:userfilter:allowNull\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span></span><span class=\"hljs-template-variable\">{{user.name}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span></span><span class=\"hljs-template-variable\">{{user.about}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/f224f7c41a7a73fb681e","description":"Using TCPDF","files":["https://gist.githubusercontent.com/umidjons/f224f7c41a7a73fb681e/raw/af7630feb9276266183be6a7cbbd3a88900db791/using-tcpdf.md"],"content":"Using TCPDF example\n===\n\n```php\n<?php\n\n/**\n * Возвращает сумму прописью\n * @author runcore\n * @uses   morph(...)\n */\nfunction num2str($num)\n{\n\t$nul    ='ноль';\n\t$ten    =[\n\t\t['','один','два','три','четыре','пять','шесть','семь','восемь','девять'],\n\t\t['','одна','две','три','четыре','пять','шесть','семь','восемь','девять'],\n\t];\n\t$a20    =['десять','одиннадцать','двенадцать','тринадцать','четырнадцать','пятнадцать','шестнадцать','семнадцать','восемнадцать','девятнадцать'];\n\t$tens   =[2=>'двадцать','тридцать','сорок','пятьдесят','шестьдесят','семьдесят','восемьдесят','девяносто'];\n\t$hundred=['','сто','двести','триста','четыреста','пятьсот','шестьсот','семьсот','восемьсот','девятьсот'];\n\t$unit   =[ // Units\n\t\t['тийин','тийин','тийин',1],\n\t\t//['копейка','копейки','копеек',1],\n\t\t//['рубль','рубля','рублей',0],\n\t\t['сум','сум','сумов',0],\n\t\t['тысяча','тысячи','тысяч',1],\n\t\t['миллион','миллиона','миллионов',0],\n\t\t['миллиард','милиарда','миллиардов',0],\n\t];\n\t//\n\tlist($rub,$kop)=explode('.',sprintf(\"%015.2f\",floatval($num)));\n\t$out=array();\n\tif(intval($rub)>0)\n\t{\n\t\tforeach(str_split($rub,3) as $uk=>$v)\n\t\t{ // by 3 symbols\n\t\t\tif(!intval($v)) continue;\n\t\t\t$uk    =sizeof($unit)-$uk-1; // unit key\n\t\t\t$gender=$unit[$uk][3];\n\t\t\tlist($i1,$i2,$i3)=array_map('intval',str_split($v,1));\n\t\t\t// mega-logic\n\t\t\t$out[]=$hundred[$i1]; # 1xx-9xx\n\t\t\tif($i2>1) $out[]=$tens[$i2].' '.$ten[$gender][$i3]; # 20-99\n\t\t\telse $out[]=$i2>0?$a20[$i3]:$ten[$gender][$i3]; # 10-19 | 1-9\n\t\t\t// units without rub & kop\n\t\t\tif($uk>1) $out[]=morph($v,$unit[$uk][0],$unit[$uk][1],$unit[$uk][2]);\n\t\t}\n\t}\n\telse $out[]=$nul;\n\t$out[]=morph(intval($rub),$unit[1][0],$unit[1][1],$unit[1][2]); // rub\n\t$out[]=$kop.' '.morph($kop,$unit[0][0],$unit[0][1],$unit[0][2]); // kop\n\treturn trim(preg_replace('/ {2,}/',' ',join(' ',$out)));\n}\n\n/**\n * Склоняем словоформу\n * @ author runcore\n */\nfunction morph($n,$f1,$f2,$f5)\n{\n\t$n=abs(intval($n))%100;\n\tif($n>10 && $n<20) return $f5;\n\t$n=$n%10;\n\tif($n>1 && $n<5) return $f2;\n\tif($n==1) return $f1;\n\treturn $f5;\n}\n\n// Include the main TCPDF library (search for installation path).\nrequire_once('tcpdf_include.php');\n\n$font='freeserif';\n\n// create new PDF document\n$pdf=new TCPDF('P','pt','A4',true,'UTF-8',false);\n\n// set document information\n$pdf->SetCreator(PDF_CREATOR);\n$pdf->SetAuthor('garov.uz');\n$pdf->SetTitle('Накладная счет фактура');\n$pdf->SetSubject('TCPDF Tutorial');\n$pdf->SetKeywords('залоговый реестр, накладная счет фактура');\n\n$pdf->setHeaderFont([$font,'',8]);\n$pdf->SetHeaderData('',0,'Источник: garov.uz');\n$pdf->setFooterFont(Array(PDF_FONT_NAME_DATA,'',PDF_FONT_SIZE_DATA));\n\n// set default monospaced font\n$pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);\n\n// set margins\n$pdf->SetMargins(10,27,10);\n$pdf->SetHeaderMargin(PDF_MARGIN_HEADER);\n$pdf->SetFooterMargin(PDF_MARGIN_FOOTER);\n\n$pdf->SetAutoPageBreak(true,PDF_MARGIN_BOTTOM);\n$pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);\n\n$pdf->SetFont($font,'',10);\n$pdf->AddPage();\n$pdf->setCellPaddings(2,1,2,1);\n$pdf->setCellMargins(1,1,1,1);\n$pdf->SetFillColor(255,255,255);\n\n$pdf->MultiCell(0,5,\"НАКЛАДНАЯ СЧЕТ ФАКТУРА №22\\nот 30.09.2014\\nпо договору публичная оферта №114225000108 от 01.07.2014\",0,'C');\n$pdf->Ln(1);\n\n$left_block=[\n\t['Поставщик','\"GAROV REESTRI\" DUK','Получатель','АКИБ \"Ипотекабанк\"'],\n\t['Адрес','г.Ташкент проспект Узбекистанский дом 6','Адрес','г.Ташкент, ул.Мустакиллик 17'],\n\t['Телефон','2126003','Телефон','1508941'],\n\t['Р/С','21596000100372274001','Р/С','19907000700000937121'],\n\t['в','Ташкентский гор. РКЦ ЦБ','в','ИПОТЕКА-БАНК АКИБ ОПЕРУ'],\n\t['город','г.Ташкент','город','г.Ташкент'],\n\t['МФО','00014','МФО','00937'],\n\t['ИНН','302985767','ИНН','202858483'],\n\t['ОКОНХ','82100','ОКОНХ','96120'],\n];\n\n$label_w =70;\n$text_w  =210;\n$h       =12;\n$fs      =9;\n$border  =0;\n$border_t='B';\nforeach($left_block as $row)\n{\n\tlist($label1,$text1,$label2,$text2)=$row;\n\t$pdf->setCellMargins(1,1,1,1);\n\t$pdf->SetFont($font,'B',$fs);\n\t$pdf->MultiCell($label_w,$h,$label1,$border,'R',1,0,'','',true,0,false,true,0,'T',true);\n\t$pdf->SetFont($font,'',$fs);\n\t$pdf->MultiCell($text_w,$h,$text1,$border_t,'L',1,0,'','',true,0,false,true,0,'T',true);\n\n\t$pdf->setCellMargins(10,1,1,1);\n\t$pdf->SetFont($font,'B',$fs);\n\t$pdf->MultiCell($label_w,$h,$label2,$border,'R',1,0,'','',true,0,false,true,0,'T',true);\n\t$pdf->setCellMargins(1,1,1,1);\n\t$pdf->SetFont($font,'',$fs);\n\t$pdf->MultiCell($text_w,$h,$text2,$border_t,'L',1,1,'','',true,0,false,true,0,'T',true);\n}\n\n$pdf->Ln(4);\n\n$total_text=num2str(64581.00);\n\n$table=<<<TABLE\n<style type=\"text/css\">\n.tg  {\n\tborder-collapse:collapse;\n\tborder-spacing:0;\n}\n.tg td{\n\tfont-size:10px;\n\tpadding:1px;\n\tborder:1px solid #000;\n\toverflow:hidden;\n\tword-break:normal;\n}\n.tg th{\n\tfont-size:10px;\n\tfont-weight:bolder;\n\tpadding:1px;\n\tborder:1px solid #000;\n\toverflow:hidden;\n\tword-break:normal;\n\ttext-align:center;\n}\n.tg .c1{width:25px;}\n.tg .c2{width:170px;}\n.tg .c3{width:30px;}\n.tg .c4{width:50px;}\n.tg .c5{width:60px;}\n.tg .c6{width:100px;}\n.tg .c7{width:60px;}\n.tg .c71{width:29px;}\n.tg .c72{width:29px;}\n.tg .c8{width:100px;}\n.tg .c81{width:28px;}\n.tg .c82{width:69px;}\n.tg .c9{width:100px;}\n.tg .num{text-align:right;}\n</style>\n<table class=\"tg\">\n  <tr>\n    <th class=\"tg-031e c1\" rowspan=\"2\">№ п.п.</th>\n    <th class=\"tg-031e c2\" rowspan=\"2\">Наименование товаров (работ,услуг)</th>\n    <th class=\"tg-031e c3\" rowspan=\"2\">Ед.изм</th>\n    <th class=\"tg-031e c4\" rowspan=\"2\">Кол-во</th>\n    <th class=\"tg-031e c5\" rowspan=\"2\">Цена</th>\n    <th class=\"tg-031e c6\" rowspan=\"2\">Стоимость поставки</th>\n    <th class=\"tg-031e c7\" colspan=\"2\">Акциз</th>\n    <th class=\"tg-031e c8\" colspan=\"2\">НДС</th>\n    <th class=\"tg-031e c9\" rowspan=\"2\">Стоимость поставки с учетом НДС</th>\n  </tr>\n  <tr>\n    <th class=\"tg-031e c71\">Ставка</th>\n    <th class=\"tg-031e c72\">Сумма</th>\n    <th class=\"tg-031e c81\">Ставка</th>\n    <th class=\"tg-031e c82\">Сумма</th>\n  </tr>\n  <tr>\n    <td class=\"tg-031e c1 num\">1</td>\n    <td class=\"tg-031e c2\">внесение записи в залоговый реестр</td>\n    <td class=\"tg-031e c3\">шт.</td>\n    <td class=\"tg-031e c4 num\">2</td>\n    <td class=\"tg-031e c5 num\">21527.00</td>\n    <td class=\"tg-031e c6 num\">43054.00</td>\n    <td class=\"tg-031e c7\" colspan=\"2\">Без акциза</td>\n    <td class=\"tg-031e c81 num\">20</td>\n    <td class=\"tg-031e c82 num\">8610.80</td>\n    <td class=\"tg-031e c9 num\">51664.80</td>\n  </tr>\n  <tr>\n    <td class=\"tg-031e c1 num\">2</td>\n    <td class=\"tg-031e c2\">получение выписок</td>\n    <td class=\"tg-031e c3\">шт.</td>\n    <td class=\"tg-031e c4 num\">1</td>\n    <td class=\"tg-031e c5 num\">10763.50</td>\n    <td class=\"tg-031e c6 num\">10763.50</td>\n    <td class=\"tg-031e c7\" colspan=\"2\">Без акциза</td>\n    <td class=\"tg-031e c81 num\">20</td>\n    <td class=\"tg-031e c82 num\">2152.70</td>\n    <td class=\"tg-031e c9 num\">12916.20</td>\n  </tr>\n  <tr>\n    <td class=\"tg-031e c1 num\"></td>\n    <td class=\"tg-031e c2\">Всего к оплате</td>\n    <td class=\"tg-031e c3\"></td>\n    <td class=\"tg-031e c4 num\"></td>\n    <td class=\"tg-031e c5 num\"></td>\n    <td class=\"tg-031e c6 num\">53817.50</td>\n    <td class=\"tg-031e c7\" colspan=\"2\">Без акциза</td>\n    <td class=\"tg-031e c81 num\"></td>\n    <td class=\"tg-031e c82 num\">10763.50</td>\n    <td class=\"tg-031e c9 num\">64581.00</td>\n  </tr>\n</table>\n<p>Всего на сумму <em><u>$total_text</u></em></p>\nTABLE;\n\n$pdf->writeHTML($table);\n\n// move pointer to last page\n$pdf->lastPage();\n\n// ---------------------------------------------------------\n\n//Close and output PDF document\n$pdf->Output('example_005.pdf','I');\n\n//============================================================+\n// END OF FILE\n//============================================================+\n```","html":"<h1 id=\"using-tcpdf-example\">Using TCPDF example</h1>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n\n<span class=\"hljs-comment\">/**\n * Возвращает сумму прописью\n * <span class=\"hljs-doctag\">@author</span> runcore\n * <span class=\"hljs-doctag\">@uses</span>   morph(...)\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">num2str</span><span class=\"hljs-params\">($num)</span>\n</span>{\n    $nul    =<span class=\"hljs-string\">'ноль'</span>;\n    $ten    =[\n        [<span class=\"hljs-string\">''</span>,<span class=\"hljs-string\">'один'</span>,<span class=\"hljs-string\">'два'</span>,<span class=\"hljs-string\">'три'</span>,<span class=\"hljs-string\">'четыре'</span>,<span class=\"hljs-string\">'пять'</span>,<span class=\"hljs-string\">'шесть'</span>,<span class=\"hljs-string\">'семь'</span>,<span class=\"hljs-string\">'восемь'</span>,<span class=\"hljs-string\">'девять'</span>],\n        [<span class=\"hljs-string\">''</span>,<span class=\"hljs-string\">'одна'</span>,<span class=\"hljs-string\">'две'</span>,<span class=\"hljs-string\">'три'</span>,<span class=\"hljs-string\">'четыре'</span>,<span class=\"hljs-string\">'пять'</span>,<span class=\"hljs-string\">'шесть'</span>,<span class=\"hljs-string\">'семь'</span>,<span class=\"hljs-string\">'восемь'</span>,<span class=\"hljs-string\">'девять'</span>],\n    ];\n    $a20    =[<span class=\"hljs-string\">'десять'</span>,<span class=\"hljs-string\">'одиннадцать'</span>,<span class=\"hljs-string\">'двенадцать'</span>,<span class=\"hljs-string\">'тринадцать'</span>,<span class=\"hljs-string\">'четырнадцать'</span>,<span class=\"hljs-string\">'пятнадцать'</span>,<span class=\"hljs-string\">'шестнадцать'</span>,<span class=\"hljs-string\">'семнадцать'</span>,<span class=\"hljs-string\">'восемнадцать'</span>,<span class=\"hljs-string\">'девятнадцать'</span>];\n    $tens   =[<span class=\"hljs-number\">2</span>=&gt;<span class=\"hljs-string\">'двадцать'</span>,<span class=\"hljs-string\">'тридцать'</span>,<span class=\"hljs-string\">'сорок'</span>,<span class=\"hljs-string\">'пятьдесят'</span>,<span class=\"hljs-string\">'шестьдесят'</span>,<span class=\"hljs-string\">'семьдесят'</span>,<span class=\"hljs-string\">'восемьдесят'</span>,<span class=\"hljs-string\">'девяносто'</span>];\n    $hundred=[<span class=\"hljs-string\">''</span>,<span class=\"hljs-string\">'сто'</span>,<span class=\"hljs-string\">'двести'</span>,<span class=\"hljs-string\">'триста'</span>,<span class=\"hljs-string\">'четыреста'</span>,<span class=\"hljs-string\">'пятьсот'</span>,<span class=\"hljs-string\">'шестьсот'</span>,<span class=\"hljs-string\">'семьсот'</span>,<span class=\"hljs-string\">'восемьсот'</span>,<span class=\"hljs-string\">'девятьсот'</span>];\n    $unit   =[ <span class=\"hljs-comment\">// Units</span>\n        [<span class=\"hljs-string\">'тийин'</span>,<span class=\"hljs-string\">'тийин'</span>,<span class=\"hljs-string\">'тийин'</span>,<span class=\"hljs-number\">1</span>],\n        <span class=\"hljs-comment\">//['копейка','копейки','копеек',1],</span>\n        <span class=\"hljs-comment\">//['рубль','рубля','рублей',0],</span>\n        [<span class=\"hljs-string\">'сум'</span>,<span class=\"hljs-string\">'сум'</span>,<span class=\"hljs-string\">'сумов'</span>,<span class=\"hljs-number\">0</span>],\n        [<span class=\"hljs-string\">'тысяча'</span>,<span class=\"hljs-string\">'тысячи'</span>,<span class=\"hljs-string\">'тысяч'</span>,<span class=\"hljs-number\">1</span>],\n        [<span class=\"hljs-string\">'миллион'</span>,<span class=\"hljs-string\">'миллиона'</span>,<span class=\"hljs-string\">'миллионов'</span>,<span class=\"hljs-number\">0</span>],\n        [<span class=\"hljs-string\">'миллиард'</span>,<span class=\"hljs-string\">'милиарда'</span>,<span class=\"hljs-string\">'миллиардов'</span>,<span class=\"hljs-number\">0</span>],\n    ];\n    <span class=\"hljs-comment\">//</span>\n    <span class=\"hljs-keyword\">list</span>($rub,$kop)=explode(<span class=\"hljs-string\">'.'</span>,sprintf(<span class=\"hljs-string\">\"%015.2f\"</span>,floatval($num)));\n    $out=<span class=\"hljs-keyword\">array</span>();\n    <span class=\"hljs-keyword\">if</span>(intval($rub)&gt;<span class=\"hljs-number\">0</span>)\n    {\n        <span class=\"hljs-keyword\">foreach</span>(str_split($rub,<span class=\"hljs-number\">3</span>) <span class=\"hljs-keyword\">as</span> $uk=&gt;$v)\n        { <span class=\"hljs-comment\">// by 3 symbols</span>\n            <span class=\"hljs-keyword\">if</span>(!intval($v)) <span class=\"hljs-keyword\">continue</span>;\n            $uk    =sizeof($unit)-$uk<span class=\"hljs-number\">-1</span>; <span class=\"hljs-comment\">// unit key</span>\n            $gender=$unit[$uk][<span class=\"hljs-number\">3</span>];\n            <span class=\"hljs-keyword\">list</span>($i1,$i2,$i3)=array_map(<span class=\"hljs-string\">'intval'</span>,str_split($v,<span class=\"hljs-number\">1</span>));\n            <span class=\"hljs-comment\">// mega-logic</span>\n            $out[]=$hundred[$i1]; <span class=\"hljs-comment\"># 1xx-9xx</span>\n            <span class=\"hljs-keyword\">if</span>($i2&gt;<span class=\"hljs-number\">1</span>) $out[]=$tens[$i2].<span class=\"hljs-string\">' '</span>.$ten[$gender][$i3]; <span class=\"hljs-comment\"># 20-99</span>\n            <span class=\"hljs-keyword\">else</span> $out[]=$i2&gt;<span class=\"hljs-number\">0</span>?$a20[$i3]:$ten[$gender][$i3]; <span class=\"hljs-comment\"># 10-19 | 1-9</span>\n            <span class=\"hljs-comment\">// units without rub &amp; kop</span>\n            <span class=\"hljs-keyword\">if</span>($uk&gt;<span class=\"hljs-number\">1</span>) $out[]=morph($v,$unit[$uk][<span class=\"hljs-number\">0</span>],$unit[$uk][<span class=\"hljs-number\">1</span>],$unit[$uk][<span class=\"hljs-number\">2</span>]);\n        }\n    }\n    <span class=\"hljs-keyword\">else</span> $out[]=$nul;\n    $out[]=morph(intval($rub),$unit[<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">0</span>],$unit[<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">1</span>],$unit[<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">2</span>]); <span class=\"hljs-comment\">// rub</span>\n    $out[]=$kop.<span class=\"hljs-string\">' '</span>.morph($kop,$unit[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">0</span>],$unit[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>],$unit[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">2</span>]); <span class=\"hljs-comment\">// kop</span>\n    <span class=\"hljs-keyword\">return</span> trim(preg_replace(<span class=\"hljs-string\">'/ {2,}/'</span>,<span class=\"hljs-string\">' '</span>,join(<span class=\"hljs-string\">' '</span>,$out)));\n}\n\n<span class=\"hljs-comment\">/**\n * Склоняем словоформу\n * @ author runcore\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">morph</span><span class=\"hljs-params\">($n,$f1,$f2,$f5)</span>\n</span>{\n    $n=abs(intval($n))%<span class=\"hljs-number\">100</span>;\n    <span class=\"hljs-keyword\">if</span>($n&gt;<span class=\"hljs-number\">10</span> &amp;&amp; $n&lt;<span class=\"hljs-number\">20</span>) <span class=\"hljs-keyword\">return</span> $f5;\n    $n=$n%<span class=\"hljs-number\">10</span>;\n    <span class=\"hljs-keyword\">if</span>($n&gt;<span class=\"hljs-number\">1</span> &amp;&amp; $n&lt;<span class=\"hljs-number\">5</span>) <span class=\"hljs-keyword\">return</span> $f2;\n    <span class=\"hljs-keyword\">if</span>($n==<span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">return</span> $f1;\n    <span class=\"hljs-keyword\">return</span> $f5;\n}\n\n<span class=\"hljs-comment\">// Include the main TCPDF library (search for installation path).</span>\n<span class=\"hljs-keyword\">require_once</span>(<span class=\"hljs-string\">'tcpdf_include.php'</span>);\n\n$font=<span class=\"hljs-string\">'freeserif'</span>;\n\n<span class=\"hljs-comment\">// create new PDF document</span>\n$pdf=<span class=\"hljs-keyword\">new</span> TCPDF(<span class=\"hljs-string\">'P'</span>,<span class=\"hljs-string\">'pt'</span>,<span class=\"hljs-string\">'A4'</span>,<span class=\"hljs-keyword\">true</span>,<span class=\"hljs-string\">'UTF-8'</span>,<span class=\"hljs-keyword\">false</span>);\n\n<span class=\"hljs-comment\">// set document information</span>\n$pdf-&gt;SetCreator(PDF_CREATOR);\n$pdf-&gt;SetAuthor(<span class=\"hljs-string\">'garov.uz'</span>);\n$pdf-&gt;SetTitle(<span class=\"hljs-string\">'Накладная счет фактура'</span>);\n$pdf-&gt;SetSubject(<span class=\"hljs-string\">'TCPDF Tutorial'</span>);\n$pdf-&gt;SetKeywords(<span class=\"hljs-string\">'залоговый реестр, накладная счет фактура'</span>);\n\n$pdf-&gt;setHeaderFont([$font,<span class=\"hljs-string\">''</span>,<span class=\"hljs-number\">8</span>]);\n$pdf-&gt;SetHeaderData(<span class=\"hljs-string\">''</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">'Источник: garov.uz'</span>);\n$pdf-&gt;setFooterFont(<span class=\"hljs-keyword\">Array</span>(PDF_FONT_NAME_DATA,<span class=\"hljs-string\">''</span>,PDF_FONT_SIZE_DATA));\n\n<span class=\"hljs-comment\">// set default monospaced font</span>\n$pdf-&gt;SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);\n\n<span class=\"hljs-comment\">// set margins</span>\n$pdf-&gt;SetMargins(<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">27</span>,<span class=\"hljs-number\">10</span>);\n$pdf-&gt;SetHeaderMargin(PDF_MARGIN_HEADER);\n$pdf-&gt;SetFooterMargin(PDF_MARGIN_FOOTER);\n\n$pdf-&gt;SetAutoPageBreak(<span class=\"hljs-keyword\">true</span>,PDF_MARGIN_BOTTOM);\n$pdf-&gt;setImageScale(PDF_IMAGE_SCALE_RATIO);\n\n$pdf-&gt;SetFont($font,<span class=\"hljs-string\">''</span>,<span class=\"hljs-number\">10</span>);\n$pdf-&gt;AddPage();\n$pdf-&gt;setCellPaddings(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>);\n$pdf-&gt;setCellMargins(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>);\n$pdf-&gt;SetFillColor(<span class=\"hljs-number\">255</span>,<span class=\"hljs-number\">255</span>,<span class=\"hljs-number\">255</span>);\n\n$pdf-&gt;MultiCell(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-string\">\"НАКЛАДНАЯ СЧЕТ ФАКТУРА №22\\nот 30.09.2014\\nпо договору публичная оферта №114225000108 от 01.07.2014\"</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">'C'</span>);\n$pdf-&gt;Ln(<span class=\"hljs-number\">1</span>);\n\n$left_block=[\n    [<span class=\"hljs-string\">'Поставщик'</span>,<span class=\"hljs-string\">'\"GAROV REESTRI\" DUK'</span>,<span class=\"hljs-string\">'Получатель'</span>,<span class=\"hljs-string\">'АКИБ \"Ипотекабанк\"'</span>],\n    [<span class=\"hljs-string\">'Адрес'</span>,<span class=\"hljs-string\">'г.Ташкент проспект Узбекистанский дом 6'</span>,<span class=\"hljs-string\">'Адрес'</span>,<span class=\"hljs-string\">'г.Ташкент, ул.Мустакиллик 17'</span>],\n    [<span class=\"hljs-string\">'Телефон'</span>,<span class=\"hljs-string\">'2126003'</span>,<span class=\"hljs-string\">'Телефон'</span>,<span class=\"hljs-string\">'1508941'</span>],\n    [<span class=\"hljs-string\">'Р/С'</span>,<span class=\"hljs-string\">'21596000100372274001'</span>,<span class=\"hljs-string\">'Р/С'</span>,<span class=\"hljs-string\">'19907000700000937121'</span>],\n    [<span class=\"hljs-string\">'в'</span>,<span class=\"hljs-string\">'Ташкентский гор. РКЦ ЦБ'</span>,<span class=\"hljs-string\">'в'</span>,<span class=\"hljs-string\">'ИПОТЕКА-БАНК АКИБ ОПЕРУ'</span>],\n    [<span class=\"hljs-string\">'город'</span>,<span class=\"hljs-string\">'г.Ташкент'</span>,<span class=\"hljs-string\">'город'</span>,<span class=\"hljs-string\">'г.Ташкент'</span>],\n    [<span class=\"hljs-string\">'МФО'</span>,<span class=\"hljs-string\">'00014'</span>,<span class=\"hljs-string\">'МФО'</span>,<span class=\"hljs-string\">'00937'</span>],\n    [<span class=\"hljs-string\">'ИНН'</span>,<span class=\"hljs-string\">'302985767'</span>,<span class=\"hljs-string\">'ИНН'</span>,<span class=\"hljs-string\">'202858483'</span>],\n    [<span class=\"hljs-string\">'ОКОНХ'</span>,<span class=\"hljs-string\">'82100'</span>,<span class=\"hljs-string\">'ОКОНХ'</span>,<span class=\"hljs-string\">'96120'</span>],\n];\n\n$label_w =<span class=\"hljs-number\">70</span>;\n$text_w  =<span class=\"hljs-number\">210</span>;\n$h       =<span class=\"hljs-number\">12</span>;\n$fs      =<span class=\"hljs-number\">9</span>;\n$border  =<span class=\"hljs-number\">0</span>;\n$border_t=<span class=\"hljs-string\">'B'</span>;\n<span class=\"hljs-keyword\">foreach</span>($left_block <span class=\"hljs-keyword\">as</span> $row)\n{\n    <span class=\"hljs-keyword\">list</span>($label1,$text1,$label2,$text2)=$row;\n    $pdf-&gt;setCellMargins(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>);\n    $pdf-&gt;SetFont($font,<span class=\"hljs-string\">'B'</span>,$fs);\n    $pdf-&gt;MultiCell($label_w,$h,$label1,$border,<span class=\"hljs-string\">'R'</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">''</span>,<span class=\"hljs-string\">''</span>,<span class=\"hljs-keyword\">true</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-keyword\">false</span>,<span class=\"hljs-keyword\">true</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">'T'</span>,<span class=\"hljs-keyword\">true</span>);\n    $pdf-&gt;SetFont($font,<span class=\"hljs-string\">''</span>,$fs);\n    $pdf-&gt;MultiCell($text_w,$h,$text1,$border_t,<span class=\"hljs-string\">'L'</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">''</span>,<span class=\"hljs-string\">''</span>,<span class=\"hljs-keyword\">true</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-keyword\">false</span>,<span class=\"hljs-keyword\">true</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">'T'</span>,<span class=\"hljs-keyword\">true</span>);\n\n    $pdf-&gt;setCellMargins(<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>);\n    $pdf-&gt;SetFont($font,<span class=\"hljs-string\">'B'</span>,$fs);\n    $pdf-&gt;MultiCell($label_w,$h,$label2,$border,<span class=\"hljs-string\">'R'</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">''</span>,<span class=\"hljs-string\">''</span>,<span class=\"hljs-keyword\">true</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-keyword\">false</span>,<span class=\"hljs-keyword\">true</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">'T'</span>,<span class=\"hljs-keyword\">true</span>);\n    $pdf-&gt;setCellMargins(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>);\n    $pdf-&gt;SetFont($font,<span class=\"hljs-string\">''</span>,$fs);\n    $pdf-&gt;MultiCell($text_w,$h,$text2,$border_t,<span class=\"hljs-string\">'L'</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-string\">''</span>,<span class=\"hljs-string\">''</span>,<span class=\"hljs-keyword\">true</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-keyword\">false</span>,<span class=\"hljs-keyword\">true</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">'T'</span>,<span class=\"hljs-keyword\">true</span>);\n}\n\n$pdf-&gt;Ln(<span class=\"hljs-number\">4</span>);\n\n$total_text=num2str(<span class=\"hljs-number\">64581.00</span>);\n\n$table=<span class=\"hljs-string\">&lt;&lt;&lt;TABLE\n&lt;style type=\"text/css\"&gt;\n.tg  {\n    border-collapse:collapse;\n    border-spacing:0;\n}\n.tg td{\n    font-size:10px;\n    padding:1px;\n    border:1px solid #000;\n    overflow:hidden;\n    word-break:normal;\n}\n.tg th{\n    font-size:10px;\n    font-weight:bolder;\n    padding:1px;\n    border:1px solid #000;\n    overflow:hidden;\n    word-break:normal;\n    text-align:center;\n}\n.tg .c1{width:25px;}\n.tg .c2{width:170px;}\n.tg .c3{width:30px;}\n.tg .c4{width:50px;}\n.tg .c5{width:60px;}\n.tg .c6{width:100px;}\n.tg .c7{width:60px;}\n.tg .c71{width:29px;}\n.tg .c72{width:29px;}\n.tg .c8{width:100px;}\n.tg .c81{width:28px;}\n.tg .c82{width:69px;}\n.tg .c9{width:100px;}\n.tg .num{text-align:right;}\n&lt;/style&gt;\n&lt;table class=\"tg\"&gt;\n  &lt;tr&gt;\n    &lt;th class=\"tg-031e c1\" rowspan=\"2\"&gt;№ п.п.&lt;/th&gt;\n    &lt;th class=\"tg-031e c2\" rowspan=\"2\"&gt;Наименование товаров (работ,услуг)&lt;/th&gt;\n    &lt;th class=\"tg-031e c3\" rowspan=\"2\"&gt;Ед.изм&lt;/th&gt;\n    &lt;th class=\"tg-031e c4\" rowspan=\"2\"&gt;Кол-во&lt;/th&gt;\n    &lt;th class=\"tg-031e c5\" rowspan=\"2\"&gt;Цена&lt;/th&gt;\n    &lt;th class=\"tg-031e c6\" rowspan=\"2\"&gt;Стоимость поставки&lt;/th&gt;\n    &lt;th class=\"tg-031e c7\" colspan=\"2\"&gt;Акциз&lt;/th&gt;\n    &lt;th class=\"tg-031e c8\" colspan=\"2\"&gt;НДС&lt;/th&gt;\n    &lt;th class=\"tg-031e c9\" rowspan=\"2\"&gt;Стоимость поставки с учетом НДС&lt;/th&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;th class=\"tg-031e c71\"&gt;Ставка&lt;/th&gt;\n    &lt;th class=\"tg-031e c72\"&gt;Сумма&lt;/th&gt;\n    &lt;th class=\"tg-031e c81\"&gt;Ставка&lt;/th&gt;\n    &lt;th class=\"tg-031e c82\"&gt;Сумма&lt;/th&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\"tg-031e c1 num\"&gt;1&lt;/td&gt;\n    &lt;td class=\"tg-031e c2\"&gt;внесение записи в залоговый реестр&lt;/td&gt;\n    &lt;td class=\"tg-031e c3\"&gt;шт.&lt;/td&gt;\n    &lt;td class=\"tg-031e c4 num\"&gt;2&lt;/td&gt;\n    &lt;td class=\"tg-031e c5 num\"&gt;21527.00&lt;/td&gt;\n    &lt;td class=\"tg-031e c6 num\"&gt;43054.00&lt;/td&gt;\n    &lt;td class=\"tg-031e c7\" colspan=\"2\"&gt;Без акциза&lt;/td&gt;\n    &lt;td class=\"tg-031e c81 num\"&gt;20&lt;/td&gt;\n    &lt;td class=\"tg-031e c82 num\"&gt;8610.80&lt;/td&gt;\n    &lt;td class=\"tg-031e c9 num\"&gt;51664.80&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\"tg-031e c1 num\"&gt;2&lt;/td&gt;\n    &lt;td class=\"tg-031e c2\"&gt;получение выписок&lt;/td&gt;\n    &lt;td class=\"tg-031e c3\"&gt;шт.&lt;/td&gt;\n    &lt;td class=\"tg-031e c4 num\"&gt;1&lt;/td&gt;\n    &lt;td class=\"tg-031e c5 num\"&gt;10763.50&lt;/td&gt;\n    &lt;td class=\"tg-031e c6 num\"&gt;10763.50&lt;/td&gt;\n    &lt;td class=\"tg-031e c7\" colspan=\"2\"&gt;Без акциза&lt;/td&gt;\n    &lt;td class=\"tg-031e c81 num\"&gt;20&lt;/td&gt;\n    &lt;td class=\"tg-031e c82 num\"&gt;2152.70&lt;/td&gt;\n    &lt;td class=\"tg-031e c9 num\"&gt;12916.20&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\"tg-031e c1 num\"&gt;&lt;/td&gt;\n    &lt;td class=\"tg-031e c2\"&gt;Всего к оплате&lt;/td&gt;\n    &lt;td class=\"tg-031e c3\"&gt;&lt;/td&gt;\n    &lt;td class=\"tg-031e c4 num\"&gt;&lt;/td&gt;\n    &lt;td class=\"tg-031e c5 num\"&gt;&lt;/td&gt;\n    &lt;td class=\"tg-031e c6 num\"&gt;53817.50&lt;/td&gt;\n    &lt;td class=\"tg-031e c7\" colspan=\"2\"&gt;Без акциза&lt;/td&gt;\n    &lt;td class=\"tg-031e c81 num\"&gt;&lt;/td&gt;\n    &lt;td class=\"tg-031e c82 num\"&gt;10763.50&lt;/td&gt;\n    &lt;td class=\"tg-031e c9 num\"&gt;64581.00&lt;/td&gt;\n  &lt;/tr&gt;\n&lt;/table&gt;\n&lt;p&gt;Всего на сумму &lt;em&gt;&lt;u&gt;<span class=\"hljs-subst\">$total_text</span>&lt;/u&gt;&lt;/em&gt;&lt;/p&gt;\nTABLE;</span>\n\n$pdf-&gt;writeHTML($table);\n\n<span class=\"hljs-comment\">// move pointer to last page</span>\n$pdf-&gt;lastPage();\n\n<span class=\"hljs-comment\">// ---------------------------------------------------------</span>\n\n<span class=\"hljs-comment\">//Close and output PDF document</span>\n$pdf-&gt;Output(<span class=\"hljs-string\">'example_005.pdf'</span>,<span class=\"hljs-string\">'I'</span>);\n\n<span class=\"hljs-comment\">//============================================================+</span>\n<span class=\"hljs-comment\">// END OF FILE</span>\n<span class=\"hljs-comment\">//============================================================+</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/0d4a537ac9e03c340c1e","description":"Numbers to Russian text (Сумма прописью)","files":["https://gist.githubusercontent.com/umidjons/0d4a537ac9e03c340c1e/raw/f23009c634b119050420f956eecad4308afcc351/numbers-to-russian-text.md"],"content":"Numbers to Russian text (Сумма прописью)\n\n```php\n<?php\n/**\n * Возвращает сумму прописью\n * @author runcore\n * @uses morph(...)\n */\nfunction num2str($num) {\n    $nul='ноль';\n    $ten=array(\n        array('','один','два','три','четыре','пять','шесть','семь', 'восемь','девять'),\n        array('','одна','две','три','четыре','пять','шесть','семь', 'восемь','девять'),\n    );\n    $a20=array('десять','одиннадцать','двенадцать','тринадцать','четырнадцать' ,'пятнадцать','шестнадцать','семнадцать','восемнадцать','девятнадцать');\n    $tens=array(2=>'двадцать','тридцать','сорок','пятьдесят','шестьдесят','семьдесят' ,'восемьдесят','девяносто');\n    $hundred=array('','сто','двести','триста','четыреста','пятьсот','шестьсот', 'семьсот','восемьсот','девятьсот');\n    $unit=array( // Units\n        array('копейка' ,'копейки' ,'копеек',\t 1),\n        array('рубль'   ,'рубля'   ,'рублей'    ,0),\n        array('тысяча'  ,'тысячи'  ,'тысяч'     ,1),\n        array('миллион' ,'миллиона','миллионов' ,0),\n        array('миллиард','милиарда','миллиардов',0),\n    );\n    //\n    list($rub,$kop) = explode('.',sprintf(\"%015.2f\", floatval($num)));\n    $out = array();\n    if (intval($rub)>0) {\n        foreach(str_split($rub,3) as $uk=>$v) { // by 3 symbols\n            if (!intval($v)) continue;\n            $uk = sizeof($unit)-$uk-1; // unit key\n            $gender = $unit[$uk][3];\n            list($i1,$i2,$i3) = array_map('intval',str_split($v,1));\n            // mega-logic\n            $out[] = $hundred[$i1]; # 1xx-9xx\n            if ($i2>1) $out[]= $tens[$i2].' '.$ten[$gender][$i3]; # 20-99\n            else $out[]= $i2>0 ? $a20[$i3] : $ten[$gender][$i3]; # 10-19 | 1-9\n            // units without rub & kop\n            if ($uk>1) $out[]= morph($v,$unit[$uk][0],$unit[$uk][1],$unit[$uk][2]);\n        } //foreach\n    }\n    else $out[] = $nul;\n    $out[] = morph(intval($rub), $unit[1][0],$unit[1][1],$unit[1][2]); // rub\n    $out[] = $kop.' '.morph($kop,$unit[0][0],$unit[0][1],$unit[0][2]); // kop\n    return trim(preg_replace('/ {2,}/', ' ', join(' ',$out)));\n}\n\n/**\n * Склоняем словоформу\n * @ author runcore\n */\nfunction morph($n, $f1, $f2, $f5) {\n    $n = abs(intval($n)) % 100;\n    if ($n>10 && $n<20) return $f5;\n    $n = $n % 10;\n    if ($n>1 && $n<5) return $f2;\n    if ($n==1) return $f1;\n    return $f5;\n}\n```","html":"<p>Numbers to Russian text (Сумма прописью)</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-comment\">/**\n * Возвращает сумму прописью\n * <span class=\"hljs-doctag\">@author</span> runcore\n * <span class=\"hljs-doctag\">@uses</span> morph(...)\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">num2str</span><span class=\"hljs-params\">($num)</span> </span>{\n    $nul=<span class=\"hljs-string\">'ноль'</span>;\n    $ten=<span class=\"hljs-keyword\">array</span>(\n        <span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">''</span>,<span class=\"hljs-string\">'один'</span>,<span class=\"hljs-string\">'два'</span>,<span class=\"hljs-string\">'три'</span>,<span class=\"hljs-string\">'четыре'</span>,<span class=\"hljs-string\">'пять'</span>,<span class=\"hljs-string\">'шесть'</span>,<span class=\"hljs-string\">'семь'</span>, <span class=\"hljs-string\">'восемь'</span>,<span class=\"hljs-string\">'девять'</span>),\n        <span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">''</span>,<span class=\"hljs-string\">'одна'</span>,<span class=\"hljs-string\">'две'</span>,<span class=\"hljs-string\">'три'</span>,<span class=\"hljs-string\">'четыре'</span>,<span class=\"hljs-string\">'пять'</span>,<span class=\"hljs-string\">'шесть'</span>,<span class=\"hljs-string\">'семь'</span>, <span class=\"hljs-string\">'восемь'</span>,<span class=\"hljs-string\">'девять'</span>),\n    );\n    $a20=<span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">'десять'</span>,<span class=\"hljs-string\">'одиннадцать'</span>,<span class=\"hljs-string\">'двенадцать'</span>,<span class=\"hljs-string\">'тринадцать'</span>,<span class=\"hljs-string\">'четырнадцать'</span> ,<span class=\"hljs-string\">'пятнадцать'</span>,<span class=\"hljs-string\">'шестнадцать'</span>,<span class=\"hljs-string\">'семнадцать'</span>,<span class=\"hljs-string\">'восемнадцать'</span>,<span class=\"hljs-string\">'девятнадцать'</span>);\n    $tens=<span class=\"hljs-keyword\">array</span>(<span class=\"hljs-number\">2</span>=&gt;<span class=\"hljs-string\">'двадцать'</span>,<span class=\"hljs-string\">'тридцать'</span>,<span class=\"hljs-string\">'сорок'</span>,<span class=\"hljs-string\">'пятьдесят'</span>,<span class=\"hljs-string\">'шестьдесят'</span>,<span class=\"hljs-string\">'семьдесят'</span> ,<span class=\"hljs-string\">'восемьдесят'</span>,<span class=\"hljs-string\">'девяносто'</span>);\n    $hundred=<span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">''</span>,<span class=\"hljs-string\">'сто'</span>,<span class=\"hljs-string\">'двести'</span>,<span class=\"hljs-string\">'триста'</span>,<span class=\"hljs-string\">'четыреста'</span>,<span class=\"hljs-string\">'пятьсот'</span>,<span class=\"hljs-string\">'шестьсот'</span>, <span class=\"hljs-string\">'семьсот'</span>,<span class=\"hljs-string\">'восемьсот'</span>,<span class=\"hljs-string\">'девятьсот'</span>);\n    $unit=<span class=\"hljs-keyword\">array</span>( <span class=\"hljs-comment\">// Units</span>\n        <span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">'копейка'</span> ,<span class=\"hljs-string\">'копейки'</span> ,<span class=\"hljs-string\">'копеек'</span>,     <span class=\"hljs-number\">1</span>),\n        <span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">'рубль'</span>   ,<span class=\"hljs-string\">'рубля'</span>   ,<span class=\"hljs-string\">'рублей'</span>    ,<span class=\"hljs-number\">0</span>),\n        <span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">'тысяча'</span>  ,<span class=\"hljs-string\">'тысячи'</span>  ,<span class=\"hljs-string\">'тысяч'</span>     ,<span class=\"hljs-number\">1</span>),\n        <span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">'миллион'</span> ,<span class=\"hljs-string\">'миллиона'</span>,<span class=\"hljs-string\">'миллионов'</span> ,<span class=\"hljs-number\">0</span>),\n        <span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">'миллиард'</span>,<span class=\"hljs-string\">'милиарда'</span>,<span class=\"hljs-string\">'миллиардов'</span>,<span class=\"hljs-number\">0</span>),\n    );\n    <span class=\"hljs-comment\">//</span>\n    <span class=\"hljs-keyword\">list</span>($rub,$kop) = explode(<span class=\"hljs-string\">'.'</span>,sprintf(<span class=\"hljs-string\">\"%015.2f\"</span>, floatval($num)));\n    $out = <span class=\"hljs-keyword\">array</span>();\n    <span class=\"hljs-keyword\">if</span> (intval($rub)&gt;<span class=\"hljs-number\">0</span>) {\n        <span class=\"hljs-keyword\">foreach</span>(str_split($rub,<span class=\"hljs-number\">3</span>) <span class=\"hljs-keyword\">as</span> $uk=&gt;$v) { <span class=\"hljs-comment\">// by 3 symbols</span>\n            <span class=\"hljs-keyword\">if</span> (!intval($v)) <span class=\"hljs-keyword\">continue</span>;\n            $uk = sizeof($unit)-$uk<span class=\"hljs-number\">-1</span>; <span class=\"hljs-comment\">// unit key</span>\n            $gender = $unit[$uk][<span class=\"hljs-number\">3</span>];\n            <span class=\"hljs-keyword\">list</span>($i1,$i2,$i3) = array_map(<span class=\"hljs-string\">'intval'</span>,str_split($v,<span class=\"hljs-number\">1</span>));\n            <span class=\"hljs-comment\">// mega-logic</span>\n            $out[] = $hundred[$i1]; <span class=\"hljs-comment\"># 1xx-9xx</span>\n            <span class=\"hljs-keyword\">if</span> ($i2&gt;<span class=\"hljs-number\">1</span>) $out[]= $tens[$i2].<span class=\"hljs-string\">' '</span>.$ten[$gender][$i3]; <span class=\"hljs-comment\"># 20-99</span>\n            <span class=\"hljs-keyword\">else</span> $out[]= $i2&gt;<span class=\"hljs-number\">0</span> ? $a20[$i3] : $ten[$gender][$i3]; <span class=\"hljs-comment\"># 10-19 | 1-9</span>\n            <span class=\"hljs-comment\">// units without rub &amp; kop</span>\n            <span class=\"hljs-keyword\">if</span> ($uk&gt;<span class=\"hljs-number\">1</span>) $out[]= morph($v,$unit[$uk][<span class=\"hljs-number\">0</span>],$unit[$uk][<span class=\"hljs-number\">1</span>],$unit[$uk][<span class=\"hljs-number\">2</span>]);\n        } <span class=\"hljs-comment\">//foreach</span>\n    }\n    <span class=\"hljs-keyword\">else</span> $out[] = $nul;\n    $out[] = morph(intval($rub), $unit[<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">0</span>],$unit[<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">1</span>],$unit[<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">2</span>]); <span class=\"hljs-comment\">// rub</span>\n    $out[] = $kop.<span class=\"hljs-string\">' '</span>.morph($kop,$unit[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">0</span>],$unit[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>],$unit[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">2</span>]); <span class=\"hljs-comment\">// kop</span>\n    <span class=\"hljs-keyword\">return</span> trim(preg_replace(<span class=\"hljs-string\">'/ {2,}/'</span>, <span class=\"hljs-string\">' '</span>, join(<span class=\"hljs-string\">' '</span>,$out)));\n}\n\n<span class=\"hljs-comment\">/**\n * Склоняем словоформу\n * @ author runcore\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">morph</span><span class=\"hljs-params\">($n, $f1, $f2, $f5)</span> </span>{\n    $n = abs(intval($n)) % <span class=\"hljs-number\">100</span>;\n    <span class=\"hljs-keyword\">if</span> ($n&gt;<span class=\"hljs-number\">10</span> &amp;&amp; $n&lt;<span class=\"hljs-number\">20</span>) <span class=\"hljs-keyword\">return</span> $f5;\n    $n = $n % <span class=\"hljs-number\">10</span>;\n    <span class=\"hljs-keyword\">if</span> ($n&gt;<span class=\"hljs-number\">1</span> &amp;&amp; $n&lt;<span class=\"hljs-number\">5</span>) <span class=\"hljs-keyword\">return</span> $f2;\n    <span class=\"hljs-keyword\">if</span> ($n==<span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">return</span> $f1;\n    <span class=\"hljs-keyword\">return</span> $f5;\n}</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/ea0d5e0635628366394e","description":"Fixed layout table","files":["https://gist.githubusercontent.com/umidjons/ea0d5e0635628366394e/raw/a10db7380880499e1bb336a5bb2bd2b4b75b559c/fixed-layout-table.md"],"content":"Fixed layout table\n===\n\n```css\n.my-table{ table-layout:fixed; }\n.my-table .c{ overflow-wrap:break-word; }\n.my-table .c1{ width:135px; }\n.my-table .c2{ width:100px; }\n.my-table .c3{ width:60px; }\n```\n\n```html\n<table class=\"my-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th class=\"c c1\">Column 1</th>\n\t\t\t<th class=\"c c2\">Column 2</th>\n\t\t\t<th class=\"c c3\">Column 3</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td class=\"c c1\">Column 1 data</td>\n\t\t\t<td class=\"c c2\">Column 2 data</td>\n\t\t\t<td class=\"c c3\">Column 3 data</td>\n\t\t</tr>\n\t</tbody>\n</table>\n```","html":"<h1 id=\"fixed-layout-table\">Fixed layout table</h1>\n<pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.my-table</span>{ <span class=\"hljs-attribute\">table-layout</span>:fixed; }\n<span class=\"hljs-selector-class\">.my-table</span> <span class=\"hljs-selector-class\">.c</span>{ <span class=\"hljs-attribute\">overflow-wrap</span>:break-word; }\n<span class=\"hljs-selector-class\">.my-table</span> <span class=\"hljs-selector-class\">.c1</span>{ <span class=\"hljs-attribute\">width</span>:<span class=\"hljs-number\">135px</span>; }\n<span class=\"hljs-selector-class\">.my-table</span> <span class=\"hljs-selector-class\">.c2</span>{ <span class=\"hljs-attribute\">width</span>:<span class=\"hljs-number\">100px</span>; }\n<span class=\"hljs-selector-class\">.my-table</span> <span class=\"hljs-selector-class\">.c3</span>{ <span class=\"hljs-attribute\">width</span>:<span class=\"hljs-number\">60px</span>; }\n</code></pre>\n<pre><code class=\"lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">table</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"my-table\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">thead</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"c c1\"</span>&gt;</span>Column 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"c c2\"</span>&gt;</span>Column 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"c c3\"</span>&gt;</span>Column 3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">thead</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tbody</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"c c1\"</span>&gt;</span>Column 1 data<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"c c2\"</span>&gt;</span>Column 2 data<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"c c3\"</span>&gt;</span>Column 3 data<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tbody</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">table</span>&gt;</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/760393b50887dc37e4c0","description":"Database view and relations","files":["https://gist.githubusercontent.com/umidjons/760393b50887dc37e4c0/raw/58f7d5ed93dd7b389a1141f86f09a48826080472/database-view-and-relations.md"],"content":"Database view and relations\n===\n\n```php\n<?php\nclass MyView extends CActiveRecord\n{\n\tpublic function primaryKey()\n\t{\n\t\treturn 'CODE';\n\t}\n\n\tpublic function tableName()\n\t{\n\t\treturn 'V_MY';\n\t}\n\n\tpublic function relations()\n\t{\n\t\treturn [\n\t\t\t// MyView.CODE = MyViewChild.V_MY_CODE\n\t\t\t// MyView has one MyViewChild\n\t\t\t'child'=>[self::HAS_ONE,'MyViewChild','V_MY_CODE'],\n\t\t];\n\t}\n\n\tpublic function search()\n\t{\n\t\t$criteria      =new CDbCriteria;\n\t\t$criteria->with=['child']; // search view child\n\t\t$criteria->compare('CODE',$this->CODE);\n\t\t$criteria->compare('NAME',$this->NAME,true);\n\t\t$criteria->compare('ADDRESS',$this->ADDRESS,true);\n\t\treturn new CActiveDataProvider($this,['criteria'=>$criteria,]);\n\t}\n}\n```\n\nAccess related model field in CGridView:\n```php\n<?php\n$this->widget('zii.widgets.grid.CGridView',array(\n\t'id'          =>'myview-grid',\n\t'dataProvider'=>$model->search(),\n\t'columns'     =>[\n\t\t'CODE',\n\t\t'NAME',\n\t\t[\n\t\t\t'header'=>'Field from child table',\n\t\t\t'value' =>'$data->child->FIELD_ON_CHILD',\n\t\t\t'type'  =>'raw',\n\t\t],\n\t],\n));\n```","html":"<h1 id=\"database-view-and-relations\">Database view and relations</h1>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyView</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CActiveRecord</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">primaryKey</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'CODE'</span>;\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">tableName</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'V_MY'</span>;\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">relations</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> [\n            <span class=\"hljs-comment\">// MyView.CODE = MyViewChild.V_MY_CODE</span>\n            <span class=\"hljs-comment\">// MyView has one MyViewChild</span>\n            <span class=\"hljs-string\">'child'</span>=&gt;[<span class=\"hljs-keyword\">self</span>::HAS_ONE,<span class=\"hljs-string\">'MyViewChild'</span>,<span class=\"hljs-string\">'V_MY_CODE'</span>],\n        ];\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">search</span><span class=\"hljs-params\">()</span>\n    </span>{\n        $criteria      =<span class=\"hljs-keyword\">new</span> CDbCriteria;\n        $criteria-&gt;with=[<span class=\"hljs-string\">'child'</span>]; <span class=\"hljs-comment\">// search view child</span>\n        $criteria-&gt;compare(<span class=\"hljs-string\">'CODE'</span>,<span class=\"hljs-keyword\">$this</span>-&gt;CODE);\n        $criteria-&gt;compare(<span class=\"hljs-string\">'NAME'</span>,<span class=\"hljs-keyword\">$this</span>-&gt;NAME,<span class=\"hljs-keyword\">true</span>);\n        $criteria-&gt;compare(<span class=\"hljs-string\">'ADDRESS'</span>,<span class=\"hljs-keyword\">$this</span>-&gt;ADDRESS,<span class=\"hljs-keyword\">true</span>);\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> CActiveDataProvider(<span class=\"hljs-keyword\">$this</span>,[<span class=\"hljs-string\">'criteria'</span>=&gt;$criteria,]);\n    }\n}</span>\n</code></pre>\n<p>Access related model field in CGridView:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">$this</span>-&gt;widget(<span class=\"hljs-string\">'zii.widgets.grid.CGridView'</span>,<span class=\"hljs-keyword\">array</span>(\n    <span class=\"hljs-string\">'id'</span>          =&gt;<span class=\"hljs-string\">'myview-grid'</span>,\n    <span class=\"hljs-string\">'dataProvider'</span>=&gt;$model-&gt;search(),\n    <span class=\"hljs-string\">'columns'</span>     =&gt;[\n        <span class=\"hljs-string\">'CODE'</span>,\n        <span class=\"hljs-string\">'NAME'</span>,\n        [\n            <span class=\"hljs-string\">'header'</span>=&gt;<span class=\"hljs-string\">'Field from child table'</span>,\n            <span class=\"hljs-string\">'value'</span> =&gt;<span class=\"hljs-string\">'$data-&gt;child-&gt;FIELD_ON_CHILD'</span>,\n            <span class=\"hljs-string\">'type'</span>  =&gt;<span class=\"hljs-string\">'raw'</span>,\n        ],\n    ],\n));</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/733e1edeadea37b297f6","description":"Execute stored procedure with BLOB parameter in PHP with OCI","files":["https://gist.githubusercontent.com/umidjons/733e1edeadea37b297f6/raw/e72b591832dd7b2e942fe66485f41470d8ae684e/php-oci-blob-storedproc.md"],"content":"Execute stored procedure with BLOB parameter in PHP with OCI\n===\n\n```php\n<?php\ndefine('DB_USER','user1');\ndefine('DB_PSWD','pswd1');\ndefine('DB_CONN_STR','MYTNS');\ndefine('DB_CHARSET','AL32UTF8');\n\n$conn=oci_connect(DB_USER,DB_PSWD,DB_CONN_STR,DB_CHARSET);\n$stmt=oci_parse($conn,'BEGIN MYPKG.MYPROC(:pBranch,:pUser,:pFile,:pContent); END;');\n// prepare variables\n$branch_code =978;\n$user_id     =2037484758;\n$filename    =$_FILES['file']['name'];\n$tmp_filename=$_FILES['file']['tmp_name'];\n// bind primitive parameters\noci_bind_by_name($stmt,':pBranch',$branch_code);\noci_bind_by_name($stmt,':pUser',$user_id);\noci_bind_by_name($stmt,':pFile',$filename);\n// bind blob parameter\n$blob=oci_new_descriptor($conn,OCI_DTYPE_LOB);\noci_bind_by_name($stmt,':pContent',$blob,-1,OCI_B_BLOB);\n$bres=$blob->writetemporary(file_get_contents($tmp_filename));\n// execute statement and commit changes\n// specify OCI_NO_AUTO_COMMIT, otherwise you may get INVALID_OCI_HANDLE exception\n$res=oci_execute($stmt,OCI_NO_AUTO_COMMIT);\noci_commit($conn);\n// free resources and close connection\n$blob->free();\noci_free_statement($stmt);\noci_close($conn);\n```","html":"<h1 id=\"execute-stored-procedure-with-blob-parameter-in-php-with-oci\">Execute stored procedure with BLOB parameter in PHP with OCI</h1>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\ndefine(<span class=\"hljs-string\">'DB_USER'</span>,<span class=\"hljs-string\">'user1'</span>);\ndefine(<span class=\"hljs-string\">'DB_PSWD'</span>,<span class=\"hljs-string\">'pswd1'</span>);\ndefine(<span class=\"hljs-string\">'DB_CONN_STR'</span>,<span class=\"hljs-string\">'MYTNS'</span>);\ndefine(<span class=\"hljs-string\">'DB_CHARSET'</span>,<span class=\"hljs-string\">'AL32UTF8'</span>);\n\n$conn=oci_connect(DB_USER,DB_PSWD,DB_CONN_STR,DB_CHARSET);\n$stmt=oci_parse($conn,<span class=\"hljs-string\">'BEGIN MYPKG.MYPROC(:pBranch,:pUser,:pFile,:pContent); END;'</span>);\n<span class=\"hljs-comment\">// prepare variables</span>\n$branch_code =<span class=\"hljs-number\">978</span>;\n$user_id     =<span class=\"hljs-number\">2037484758</span>;\n$filename    =$_FILES[<span class=\"hljs-string\">'file'</span>][<span class=\"hljs-string\">'name'</span>];\n$tmp_filename=$_FILES[<span class=\"hljs-string\">'file'</span>][<span class=\"hljs-string\">'tmp_name'</span>];\n<span class=\"hljs-comment\">// bind primitive parameters</span>\noci_bind_by_name($stmt,<span class=\"hljs-string\">':pBranch'</span>,$branch_code);\noci_bind_by_name($stmt,<span class=\"hljs-string\">':pUser'</span>,$user_id);\noci_bind_by_name($stmt,<span class=\"hljs-string\">':pFile'</span>,$filename);\n<span class=\"hljs-comment\">// bind blob parameter</span>\n$blob=oci_new_descriptor($conn,OCI_DTYPE_LOB);\noci_bind_by_name($stmt,<span class=\"hljs-string\">':pContent'</span>,$blob,<span class=\"hljs-number\">-1</span>,OCI_B_BLOB);\n$bres=$blob-&gt;writetemporary(file_get_contents($tmp_filename));\n<span class=\"hljs-comment\">// execute statement and commit changes</span>\n<span class=\"hljs-comment\">// specify OCI_NO_AUTO_COMMIT, otherwise you may get INVALID_OCI_HANDLE exception</span>\n$res=oci_execute($stmt,OCI_NO_AUTO_COMMIT);\noci_commit($conn);\n<span class=\"hljs-comment\">// free resources and close connection</span>\n$blob-&gt;free();\noci_free_statement($stmt);\noci_close($conn);</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/52e7d24ef20a692541df","description":"Same height elements","files":["https://gist.githubusercontent.com/umidjons/52e7d24ef20a692541df/raw/561fb19e1704f9b16471f328853e9956a3cea19f/same-height.md"],"content":"Same height elements\n===\n\n```javascript\n\tjQuery(document).ready(function($){\n\t\t$(\".thumbnail.same-height\").height(Math.max.apply(null,$(\".thumbnail.same-height\").map(function(){ return $(this).height(); })));\n\t});\n```","html":"<h1 id=\"same-height-elements\">Same height elements</h1>\n<pre><code class=\"lang-javascript\">    jQuery(<span class=\"hljs-built_in\">document</span>).ready(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">$</span>)</span>{\n        $(<span class=\"hljs-string\">\".thumbnail.same-height\"</span>).height(<span class=\"hljs-built_in\">Math</span>.max.apply(<span class=\"hljs-literal\">null</span>,$(<span class=\"hljs-string\">\".thumbnail.same-height\"</span>).map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{ <span class=\"hljs-keyword\">return</span> $(<span class=\"hljs-keyword\">this</span>).height(); })));\n    });\n</code></pre>\n"},{"html_url":"https://gist.github.com/30c4c9defad5534d3b7f","description":"Using json filter to output object in AngularJS","files":["https://gist.githubusercontent.com/umidjons/30c4c9defad5534d3b7f/raw/4fe0817086a9ae0456b63469d762182ab607deb1/json-filter-angularjs.md"],"content":"Using `json` filter to output object in AngularJS\n===\n```html\n<!doctype html>\n<html lang=\"en-US\" ng-app=\"app\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title></title>\n\t<script src=\"angular.js\"></script>\n</head>\n<body ng-controller=\"Ctrl\">\n\n<h1>User Info</h1>\n\n<label>Email</label>\n<input type=\"email\" ng-model=\"user.email\"><br>\n\n<label>Last Name</label>\n<input type=\"text\" ng-model=\"user.lastName\"><br>\n\n<label>First Name</label>\n<input type=\"text\" ng-model=\"user.firstName\"><br>\n\n<label>Website</label>\n<input type=\"url\" ng-model=\"user.website\"><br>\n\n<label>Description</label>\n<textarea cols=\"30\" rows=\"10\" ng-model=\"user.description\"></textarea><br>\n\n<label>Password</label>\n<input ng-model=\"user.password\" type=\"password\"><br>\n\n<label>Password (repeat)</label>\n<input type=\"password\" ng-model=\"repeatPassword\"><br>\n\n<label>Roles</label><br>\n<label class=\"checkbox\">\n\t<input type=\"checkbox\" ng-model=\"user.admin\">Is Administrator\n</label>\n<br>\n\n<pre ng-bind=\"user|json\"></pre>\n\n<script>\n\tangular.module('app',[]).controller('Ctrl',function($scope){ });\n</script>\n</body>\n</html>\n```","html":"<h1 id=\"using-json-filter-to-output-object-in-angularjs\">Using <code>json</code> filter to output object in AngularJS</h1>\n<pre><code class=\"lang-html\"><span class=\"hljs-meta\">&lt;!doctype html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en-US\"</span> <span class=\"hljs-attr\">ng-app</span>=<span class=\"hljs-string\">\"app\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"angular.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span> <span class=\"hljs-attr\">ng-controller</span>=<span class=\"hljs-string\">\"Ctrl\"</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>User Info<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Email<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"email\"</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"user.email\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Last Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"user.lastName\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>First Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"user.firstName\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Website<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"url\"</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"user.website\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Description<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">textarea</span> <span class=\"hljs-attr\">cols</span>=<span class=\"hljs-string\">\"30\"</span> <span class=\"hljs-attr\">rows</span>=<span class=\"hljs-string\">\"10\"</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"user.description\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">textarea</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Password<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"user.password\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"password\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Password (repeat)<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"password\"</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"repeatPassword\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Roles<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"checkbox\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"checkbox\"</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"user.admin\"</span>&gt;</span>Is Administrator\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pre</span> <span class=\"hljs-attr\">ng-bind</span>=<span class=\"hljs-string\">\"user|json\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">pre</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"actionscript\">\n    angular.module(<span class=\"hljs-string\">'app'</span>,[]).controller(<span class=\"hljs-string\">'Ctrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($scope)</span></span>{ });\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/32d70b01ede8678fc7c2","description":"Styling even and odd rows with `ng-class-even` and `ng-class-odd` directives","files":["https://gist.githubusercontent.com/umidjons/32d70b01ede8678fc7c2/raw/412f42531635b09498b4df4569ee3d87e2b1724e/ng-class-even-odd.md"],"content":"Styling even and odd rows with `ng-class-even` and `ng-class-odd` directives\n====\n\n```html\n<!doctype html>\n<html lang=\"en-US\" ng-app=\"App\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<script src=\"angular.js\"></script>\n\t<title>Users</title>\n\t<style>\n\t\ttable{ border-collapse:collapse; }\n\t\ttd, th{ border:1px solid #999; }\n\t\t.col-1{ width:200px; }\n\t\t.col-2{ width:300px; }\n\t\t.dark{ background-color:#999; }\n\t\t.light{ background-color:#c6d0d0; }\n\t</style>\n</head>\n<body>\n\n<table ng-controller=\"UsersCtrl\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th class=\"col-1\">Name</th>\n\t\t\t<th class=\"col-2\">Age</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr ng-repeat=\"user in users\" ng-class-even=\"'dark'\" ng-class-odd=\"'light'\">\n\t\t\t<td>{{user.name}}</td>\n\t\t\t<td>{{user.age}}</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<script>\n\tangular.module('App',[])\n\t\t\t.factory('Users',function(){\n\t\t\t\treturn {\n\t\t\t\t\tquery:function(){\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\t{name:'John',age:25,desc:'Software Developer at MacroSoft LLC'},\n\t\t\t\t\t\t\t{name:'Jonatan',age:26,desc:'Professor at University of Tashkent'},\n\t\t\t\t\t\t\t{name:'Nataly',age:27,desc:'Nurse at central hospital'},\n\t\t\t\t\t\t\t{name:'Lucy',age:28,desc:'Teacher at district school'}\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.controller('UsersCtrl',function($scope,Users){\n\t\t\t\t$scope.users=Users.query();\n\t\t\t});\n</script>\n</body>\n</html>\n```","html":"<h1 id=\"styling-even-and-odd-rows-with-ng-class-even-and-ng-class-odd-directives\">Styling even and odd rows with <code>ng-class-even</code> and <code>ng-class-odd</code> directives</h1>\n<pre><code class=\"lang-html\"><span class=\"xml\"><span class=\"hljs-meta\">&lt;!doctype html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en-US\"</span> <span class=\"hljs-attr\">ng-app</span>=<span class=\"hljs-string\">\"App\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"angular.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>Users<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"css\">\n        <span class=\"hljs-selector-tag\">table</span>{ <span class=\"hljs-attribute\">border-collapse</span>:collapse; }\n        <span class=\"hljs-selector-tag\">td</span>, <span class=\"hljs-selector-tag\">th</span>{ <span class=\"hljs-attribute\">border</span>:<span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#999</span>; }\n        <span class=\"hljs-selector-class\">.col-1</span>{ <span class=\"hljs-attribute\">width</span>:<span class=\"hljs-number\">200px</span>; }\n        <span class=\"hljs-selector-class\">.col-2</span>{ <span class=\"hljs-attribute\">width</span>:<span class=\"hljs-number\">300px</span>; }\n        <span class=\"hljs-selector-class\">.dark</span>{ <span class=\"hljs-attribute\">background-color</span>:<span class=\"hljs-number\">#999</span>; }\n        <span class=\"hljs-selector-class\">.light</span>{ <span class=\"hljs-attribute\">background-color</span>:<span class=\"hljs-number\">#c6d0d0</span>; }\n    </span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">table</span> <span class=\"hljs-attr\">ng-controller</span>=<span class=\"hljs-string\">\"UsersCtrl\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">thead</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-1\"</span>&gt;</span>Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-2\"</span>&gt;</span>Age<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">thead</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tbody</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span> <span class=\"hljs-attr\">ng-repeat</span>=<span class=\"hljs-string\">\"user in users\"</span> <span class=\"hljs-attr\">ng-class-even</span>=<span class=\"hljs-string\">\"'dark'\"</span> <span class=\"hljs-attr\">ng-class-odd</span>=<span class=\"hljs-string\">\"'light'\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{user.name}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{user.age}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tbody</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">table</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"actionscript\">\n    angular.module(<span class=\"hljs-string\">'App'</span>,[])\n            .factory(<span class=\"hljs-string\">'Users'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n                <span class=\"hljs-keyword\">return</span> {\n                    query:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n                        <span class=\"hljs-keyword\">return</span> [\n                            {name:<span class=\"hljs-string\">'John'</span>,age:<span class=\"hljs-number\">25</span>,desc:<span class=\"hljs-string\">'Software Developer at MacroSoft LLC'</span>},\n                            {name:<span class=\"hljs-string\">'Jonatan'</span>,age:<span class=\"hljs-number\">26</span>,desc:<span class=\"hljs-string\">'Professor at University of Tashkent'</span>},\n                            {name:<span class=\"hljs-string\">'Nataly'</span>,age:<span class=\"hljs-number\">27</span>,desc:<span class=\"hljs-string\">'Nurse at central hospital'</span>},\n                            {name:<span class=\"hljs-string\">'Lucy'</span>,age:<span class=\"hljs-number\">28</span>,desc:<span class=\"hljs-string\">'Teacher at district school'</span>}\n                        ];\n                    }\n                }\n            })\n            .controller(<span class=\"hljs-string\">'UsersCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($scope,Users)</span></span>{\n                $scope.users=Users.query();\n            });\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/b3b48c1b331de61daeb7","description":"Show clicked row details. Using ng-switch, ng-click, ng-class, ng-repeat, $index.","files":["https://gist.githubusercontent.com/umidjons/b3b48c1b331de61daeb7/raw/829e76451f0a21532f430aaf7b51bb9b2d714288/show-clicked-row-details-right-way.md","https://gist.githubusercontent.com/umidjons/b3b48c1b331de61daeb7/raw/d36e79ab862c68920b67a724bcb5a01d42b90cc1/show-clicked-row-details.md"],"content":"Show clicked row details. Using ng-if, ng-repeat-start and ng-repeat-end directives\n===\n\n```html\n<!doctype html>\n<html lang=\"en-US\" ng-app=\"App\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<script src=\"angular.js\"></script>\n\t<title>Users</title>\n\t<style>\n\t\ttable{ border-collapse:collapse; }\n\t\ttd, th{ border:1px solid #999; }\n\t</style>\n</head>\n<body>\n\n<table ng-controller=\"UsersCtrl\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Name</th>\n\t\t\t<th>Age</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr ng-repeat-start=\"user in users\" ng-click=\"selUser(user)\">\n\t\t\t<td>{{user.name}}</td>\n\t\t\t<td>{{user.age}}</td>\n\t\t</tr>\n\t\t<tr ng-repeat-end ng-if=\"isSelected(user)\">\n\t\t\t<td colspan=\"2\">{{user.desc}}</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<script>\n\tangular.module('App',[])\n\t\t\t.factory('Users',function(){\n\t\t\t\treturn {\n\t\t\t\t\tquery:function(){\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\t{name:'John',age:25,desc:'Software Developer at MacroSoft LLC'},\n\t\t\t\t\t\t\t{name:'Jonatan',age:26,desc:'Professor at University of Tashkent'},\n\t\t\t\t\t\t\t{name:'Nataly',age:27,desc:'Nurse at central hospital'},\n\t\t\t\t\t\t\t{name:'Lucy',age:28,desc:'Teacher at district school'}\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.controller('UsersCtrl',function($scope,Users){\n\t\t\t\t$scope.users=Users.query();\n\t\t\t\t$scope.selUser=function(user){\n\t\t\t\t\t$scope.selected_user=user;\n\t\t\t\t}\n\t\t\t\t$scope.isSelected=function(user){\n\t\t\t\t\treturn $scope.selected_user===user;\n\t\t\t\t}\n\t\t\t});\n</script>\n</body>\n</html>\n```Show clicked row details. Using ng-switch, ng-click, ng-class, ng-repeat, $index.\n===\n\nI want to show additional row (user details) below clicked row (selected user) with details.\nFirst I need some data, therefore I create `Users` factory with `query` method.\nI'll show user `name` and `age` in row by default, but show `desc` only for selected user.\nI create 2 methods, `selUser(user,idx)` - called when clicked onto the row to select user and its index in table,\n`isSelUser(user)` - called to determine, is current row contains selected user.\nI also define `selIdx` to use in `ng-class` to switch class according selected user index.\n\nHere is our AngularJS code:\n\n```javascript\nangular.module('App',[])\n.factory('Users',function(){\n\treturn {\n\t\tquery:function(){\n\t\t\treturn [\n\t\t\t\t{name:'John',age:25,desc:'Software Developer at MacroSoft LLC'},\n\t\t\t\t{name:'Jonatan',age:26,desc:'Professor at University of Tashkent'},\n\t\t\t\t{name:'Nataly',age:27,desc:'Nurse at central hospital'},\n\t\t\t\t{name:'Lucy',age:28,desc:'Teacher at district school'}\n\t\t\t];\n\t\t}\n\t}\n})\n.controller('UsersCtrl',function($scope,Users){\n\t$scope.users=Users.query();\n\t$scope.selIdx= -1;\n\n\t$scope.selUser=function(user,idx){\n\t\t$scope.selectedUser=user;\n\t\t$scope.selIdx=idx;\n\t}\n\n\t$scope.isSelUser=function(user){\n\t\treturn $scope.selectedUser===user;\n\t}\n});\n```\n\nHere is our markup:\n\n```html\n<table ng-controller=\"UsersCtrl\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th class=\"col-1\">Name</th>\n\t\t\t<th class=\"col-2\">Age</th>\n\t\t</tr>\n\t</thead>\n\t<tbody ng-repeat=\"user in users\" ng-switch on=\"isSelUser(user)\" ng-click=\"selUser(user,$index)\">\n\t\t<tr ng-class=\"{sel:selIdx==$index}\">\n\t\t\t<td>{{user.name}}</td>\n\t\t\t<td>{{user.age}}</td>\n\t\t</tr>\n\t\t<tr ng-switch-when=\"true\">\n\t\t\t<td colspan=\"2\" class=\"desc\">{{user.desc}}</td>\n\t\t</tr>\n\t</tbody>\n</table>\n```\n\n`ng-switch-when` used to show `tr` only when current row is selected row.\n\nHere is some styling:\n```css\ntable { border-collapse: collapse; }\ntd, th { border: 1px solid #999; }\n.col-1 { width: 200px; }\n.col-2 { width: 300px; }\n.sel { background-color: #bce65e; }\n.desc { background-color: #d1e6ac; }\n```\n\nFull code is below:\n```html\n<!doctype html>\n<html lang=\"en-US\" ng-app=\"App\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<script src=\"angular.js\"></script>\n\t<title>Users</title>\n\t<style>\n\t\ttable { border-collapse: collapse; }\n\t\ttd, th { border: 1px solid #999; }\n\t\t.col-1 { width: 200px; }\n\t\t.col-2 { width: 300px; }\n\t\t.sel { background-color: #bce65e; }\n\t\t.desc { background-color: #d1e6ac; }\n\t</style>\n</head>\n<body>\n\n<table ng-controller=\"UsersCtrl\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th class=\"col-1\">Name</th>\n\t\t\t<th class=\"col-2\">Age</th>\n\t\t</tr>\n\t</thead>\n\t<tbody ng-repeat=\"user in users\" ng-switch on=\"isSelUser(user)\" ng-click=\"selUser(user,$index)\">\n\t\t<tr ng-class=\"{sel:selIdx==$index}\">\n\t\t\t<td>{{user.name}}</td>\n\t\t\t<td>{{user.age}}</td>\n\t\t</tr>\n\t\t<tr ng-switch-when=\"true\">\n\t\t\t<td colspan=\"2\" class=\"desc\">{{user.desc}}</td>\n\t\t</tr>\n\t</tbody>\n</table>\n<script>\n\tangular.module('App',[])\n\t\t\t.factory('Users',function(){\n\t\t\t\treturn {\n\t\t\t\t\tquery:function(){\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\t{name:'John',age:25,desc:'Software Developer at MacroSoft LLC'},\n\t\t\t\t\t\t\t{name:'Jonatan',age:26,desc:'Professor at University of Tashkent'},\n\t\t\t\t\t\t\t{name:'Nataly',age:27,desc:'Nurse at central hospital'},\n\t\t\t\t\t\t\t{name:'Lucy',age:28,desc:'Teacher at district school'}\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.controller('UsersCtrl',function($scope,Users){\n\t\t\t\t$scope.users=Users.query();\n\t\t\t\t$scope.selIdx= -1;\n\n\t\t\t\t$scope.selUser=function(user,idx){\n\t\t\t\t\t$scope.selectedUser=user;\n\t\t\t\t\t$scope.selIdx=idx;\n\t\t\t\t}\n\n\t\t\t\t$scope.isSelUser=function(user){\n\t\t\t\t\treturn $scope.selectedUser===user;\n\t\t\t\t}\n\t\t\t});\n</script>\n</body>\n</html>\n```","html":"<h1 id=\"show-clicked-row-details-using-ng-if-ng-repeat-start-and-ng-repeat-end-directives\">Show clicked row details. Using ng-if, ng-repeat-start and ng-repeat-end directives</h1>\n<pre><code class=\"lang-html\"><span class=\"xml\"><span class=\"hljs-meta\">&lt;!doctype html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en-US\"</span> <span class=\"hljs-attr\">ng-app</span>=<span class=\"hljs-string\">\"App\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"angular.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>Users<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"css\">\n        <span class=\"hljs-selector-tag\">table</span>{ <span class=\"hljs-attribute\">border-collapse</span>:collapse; }\n        <span class=\"hljs-selector-tag\">td</span>, <span class=\"hljs-selector-tag\">th</span>{ <span class=\"hljs-attribute\">border</span>:<span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#999</span>; }\n    </span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">table</span> <span class=\"hljs-attr\">ng-controller</span>=<span class=\"hljs-string\">\"UsersCtrl\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">thead</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>Age<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">thead</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tbody</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span> <span class=\"hljs-attr\">ng-repeat-start</span>=<span class=\"hljs-string\">\"user in users\"</span> <span class=\"hljs-attr\">ng-click</span>=<span class=\"hljs-string\">\"selUser(user)\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{user.name}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{user.age}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span> <span class=\"hljs-attr\">ng-repeat-end</span> <span class=\"hljs-attr\">ng-if</span>=<span class=\"hljs-string\">\"isSelected(user)\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span> <span class=\"hljs-attr\">colspan</span>=<span class=\"hljs-string\">\"2\"</span>&gt;</span></span><span class=\"hljs-template-variable\">{{user.desc}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tbody</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">table</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"actionscript\">\n    angular.module(<span class=\"hljs-string\">'App'</span>,[])\n            .factory(<span class=\"hljs-string\">'Users'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n                <span class=\"hljs-keyword\">return</span> {\n                    query:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n                        <span class=\"hljs-keyword\">return</span> [\n                            {name:<span class=\"hljs-string\">'John'</span>,age:<span class=\"hljs-number\">25</span>,desc:<span class=\"hljs-string\">'Software Developer at MacroSoft LLC'</span>},\n                            {name:<span class=\"hljs-string\">'Jonatan'</span>,age:<span class=\"hljs-number\">26</span>,desc:<span class=\"hljs-string\">'Professor at University of Tashkent'</span>},\n                            {name:<span class=\"hljs-string\">'Nataly'</span>,age:<span class=\"hljs-number\">27</span>,desc:<span class=\"hljs-string\">'Nurse at central hospital'</span>},\n                            {name:<span class=\"hljs-string\">'Lucy'</span>,age:<span class=\"hljs-number\">28</span>,desc:<span class=\"hljs-string\">'Teacher at district school'</span>}\n                        ];\n                    }\n                }\n            })\n            .controller(<span class=\"hljs-string\">'UsersCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($scope,Users)</span></span>{\n                $scope.users=Users.query();\n                $scope.selUser=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(user)</span></span>{\n                    $scope.selected_user=user;\n                }\n                $scope.isSelected=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(user)</span></span>{\n                    <span class=\"hljs-keyword\">return</span> $scope.selected_user===user;\n                }\n            });\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n```Show clicked row details. Using ng-switch, ng-click, ng-class, ng-repeat, $index.\n===\n\nI want to show additional row (user details) below clicked row (selected user) with details.\nFirst I need some data, therefore I create `Users` factory with `query` method.\nI'll show user `name` and `age` in row by default, but show `desc` only for selected user.\nI create 2 methods, `selUser(user,idx)` - called when clicked onto the row to select user and its index in table,\n`isSelUser(user)` - called to determine, is current row contains selected user.\nI also define `selIdx` to use in `ng-class` to switch class according selected user index.\n\nHere is our AngularJS code:\n\n```javascript\nangular.module('App',[])\n.factory('Users',function(){\n    return {\n        query:function(){\n            return [\n                {name:'John',age:25,desc:'Software Developer at MacroSoft LLC'},\n                {name:'Jonatan',age:26,desc:'Professor at University of Tashkent'},\n                {name:'Nataly',age:27,desc:'Nurse at central hospital'},\n                {name:'Lucy',age:28,desc:'Teacher at district school'}\n            ];\n        }\n    }\n})\n.controller('UsersCtrl',function($scope,Users){\n    $scope.users=Users.query();\n    $scope.selIdx= -1;\n\n    $scope.selUser=function(user,idx){\n        $scope.selectedUser=user;\n        $scope.selIdx=idx;\n    }\n\n    $scope.isSelUser=function(user){\n        return $scope.selectedUser===user;\n    }\n});</span>\n</code></pre>\n<p>Here is our markup:</p>\n<pre><code class=\"lang-html\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">table</span> <span class=\"hljs-attr\">ng-controller</span>=<span class=\"hljs-string\">\"UsersCtrl\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">thead</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-1\"</span>&gt;</span>Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-2\"</span>&gt;</span>Age<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">thead</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tbody</span> <span class=\"hljs-attr\">ng-repeat</span>=<span class=\"hljs-string\">\"user in users\"</span> <span class=\"hljs-attr\">ng-switch</span> <span class=\"hljs-attr\">on</span>=<span class=\"hljs-string\">\"isSelUser(user)\"</span> <span class=\"hljs-attr\">ng-click</span>=<span class=\"hljs-string\">\"selUser(user,$index)\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span> <span class=\"hljs-attr\">ng-class</span>=<span class=\"hljs-string\">\"</span></span></span><span class=\"hljs-template-variable\">{sel:selIdx==$index}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{user.name}</span><span class=\"xml\">}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{user.age}</span><span class=\"xml\">}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span> <span class=\"hljs-attr\">ng-switch-when</span>=<span class=\"hljs-string\">\"true\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span> <span class=\"hljs-attr\">colspan</span>=<span class=\"hljs-string\">\"2\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"desc\"</span>&gt;</span></span><span class=\"hljs-template-variable\">{{user.desc}</span><span class=\"xml\">}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tbody</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">table</span>&gt;</span></span>\n</code></pre>\n<p><code>ng-switch-when</code> used to show <code>tr</code> only when current row is selected row.</p>\n<p>Here is some styling:</p>\n<pre><code class=\"lang-css\"><span class=\"hljs-selector-tag\">table</span> { <span class=\"hljs-attribute\">border-collapse</span>: collapse; }\n<span class=\"hljs-selector-tag\">td</span>, <span class=\"hljs-selector-tag\">th</span> { <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#999</span>; }\n<span class=\"hljs-selector-class\">.col-1</span> { <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">200px</span>; }\n<span class=\"hljs-selector-class\">.col-2</span> { <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">300px</span>; }\n<span class=\"hljs-selector-class\">.sel</span> { <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#bce65e</span>; }\n<span class=\"hljs-selector-class\">.desc</span> { <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#d1e6ac</span>; }\n</code></pre>\n<p>Full code is below:</p>\n<pre><code class=\"lang-html\"><span class=\"xml\"><span class=\"hljs-meta\">&lt;!doctype html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en-US\"</span> <span class=\"hljs-attr\">ng-app</span>=<span class=\"hljs-string\">\"App\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"angular.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>Users<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"css\">\n        <span class=\"hljs-selector-tag\">table</span> { <span class=\"hljs-attribute\">border-collapse</span>: collapse; }\n        <span class=\"hljs-selector-tag\">td</span>, <span class=\"hljs-selector-tag\">th</span> { <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#999</span>; }\n        <span class=\"hljs-selector-class\">.col-1</span> { <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">200px</span>; }\n        <span class=\"hljs-selector-class\">.col-2</span> { <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">300px</span>; }\n        <span class=\"hljs-selector-class\">.sel</span> { <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#bce65e</span>; }\n        <span class=\"hljs-selector-class\">.desc</span> { <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#d1e6ac</span>; }\n    </span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">table</span> <span class=\"hljs-attr\">ng-controller</span>=<span class=\"hljs-string\">\"UsersCtrl\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">thead</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-1\"</span>&gt;</span>Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-2\"</span>&gt;</span>Age<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">thead</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tbody</span> <span class=\"hljs-attr\">ng-repeat</span>=<span class=\"hljs-string\">\"user in users\"</span> <span class=\"hljs-attr\">ng-switch</span> <span class=\"hljs-attr\">on</span>=<span class=\"hljs-string\">\"isSelUser(user)\"</span> <span class=\"hljs-attr\">ng-click</span>=<span class=\"hljs-string\">\"selUser(user,$index)\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span> <span class=\"hljs-attr\">ng-class</span>=<span class=\"hljs-string\">\"{sel:selIdx==$index}\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{user.name}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{user.age}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span> <span class=\"hljs-attr\">ng-switch-when</span>=<span class=\"hljs-string\">\"true\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span> <span class=\"hljs-attr\">colspan</span>=<span class=\"hljs-string\">\"2\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"desc\"</span>&gt;</span></span><span class=\"hljs-template-variable\">{{user.desc}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tbody</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">table</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"actionscript\">\n    angular.module(<span class=\"hljs-string\">'App'</span>,[])\n            .factory(<span class=\"hljs-string\">'Users'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n                <span class=\"hljs-keyword\">return</span> {\n                    query:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n                        <span class=\"hljs-keyword\">return</span> [\n                            {name:<span class=\"hljs-string\">'John'</span>,age:<span class=\"hljs-number\">25</span>,desc:<span class=\"hljs-string\">'Software Developer at MacroSoft LLC'</span>},\n                            {name:<span class=\"hljs-string\">'Jonatan'</span>,age:<span class=\"hljs-number\">26</span>,desc:<span class=\"hljs-string\">'Professor at University of Tashkent'</span>},\n                            {name:<span class=\"hljs-string\">'Nataly'</span>,age:<span class=\"hljs-number\">27</span>,desc:<span class=\"hljs-string\">'Nurse at central hospital'</span>},\n                            {name:<span class=\"hljs-string\">'Lucy'</span>,age:<span class=\"hljs-number\">28</span>,desc:<span class=\"hljs-string\">'Teacher at district school'</span>}\n                        ];\n                    }\n                }\n            })\n            .controller(<span class=\"hljs-string\">'UsersCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($scope,Users)</span></span>{\n                $scope.users=Users.query();\n                $scope.selIdx= <span class=\"hljs-number\">-1</span>;\n\n                $scope.selUser=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(user,idx)</span></span>{\n                    $scope.selectedUser=user;\n                    $scope.selIdx=idx;\n                }\n\n                $scope.isSelUser=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(user)</span></span>{\n                    <span class=\"hljs-keyword\">return</span> $scope.selectedUser===user;\n                }\n            });\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/ee4983bb843187cca20e","description":"Log username and ip in log entries","files":["https://gist.githubusercontent.com/umidjons/ee4983bb843187cca20e/raw/b8397897909ef4fd7dbb3719494773a76b87b805/log-username-ip-in-log-entries.md"],"content":"Log username and ip in log entries\n===\n\nInherit `CFileLogRoute`, in `components` directory create `EFileLogRoute.php`\nwith the following content:\n```php\n<?php\nclass EFileLogRoute extends CFileLogRoute\n{\n\tprotected function formatLogMessage($message,$level,$category,$time)\n\t{\n\t  // obtain username if available\n\t\t$user=(Yii::app()->user->isGuest?'guest':Yii::app()->user->name);\n\t\t\n\t\t// determine IP address\n\t\t$ip  =Yii::app()->request->userHostAddress;\n\t\t\n\t\t// put username and IP into log entries\n\t\treturn @date('Y/m/d H:i:s',$time).\" [$level] [$category] [$user@$ip] $message\\n\";\n\t}\n}\n```\n\nConfigure `log` component in application configuration:\n```php\n'log'          =>[\n\t'class' =>'CLogRouter',\n\t'routes'=>[\n\t\t[\n\t\t\t'class' =>'EFileLogRoute', // use our new component as route\n\t\t\t'levels'=>'error, warning, info',\n\t\t],\n\t],\n],\n```","html":"<h1 id=\"log-username-and-ip-in-log-entries\">Log username and ip in log entries</h1>\n<p>Inherit <code>CFileLogRoute</code>, in <code>components</code> directory create <code>EFileLogRoute.php</code>\nwith the following content:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">EFileLogRoute</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CFileLogRoute</span>\n</span>{\n    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">formatLogMessage</span><span class=\"hljs-params\">($message,$level,$category,$time)</span>\n    </span>{\n      <span class=\"hljs-comment\">// obtain username if available</span>\n        $user=(Yii::app()-&gt;user-&gt;isGuest?<span class=\"hljs-string\">'guest'</span>:Yii::app()-&gt;user-&gt;name);\n\n        <span class=\"hljs-comment\">// determine IP address</span>\n        $ip  =Yii::app()-&gt;request-&gt;userHostAddress;\n\n        <span class=\"hljs-comment\">// put username and IP into log entries</span>\n        <span class=\"hljs-keyword\">return</span> @date(<span class=\"hljs-string\">'Y/m/d H:i:s'</span>,$time).<span class=\"hljs-string\">\" [$level] [$category] [$user@$ip] $message\\n\"</span>;\n    }\n}</span>\n</code></pre>\n<p>Configure <code>log</code> component in application configuration:</p>\n<pre><code class=\"lang-php\"><span class=\"hljs-string\">'log'</span>          =&gt;[\n    <span class=\"hljs-string\">'class'</span> =&gt;<span class=\"hljs-string\">'CLogRouter'</span>,\n    <span class=\"hljs-string\">'routes'</span>=&gt;[\n        [\n            <span class=\"hljs-string\">'class'</span> =&gt;<span class=\"hljs-string\">'EFileLogRoute'</span>, <span class=\"hljs-comment\">// use our new component as route</span>\n            <span class=\"hljs-string\">'levels'</span>=&gt;<span class=\"hljs-string\">'error, warning, info'</span>,\n        ],\n    ],\n],\n</code></pre>\n"},{"html_url":"https://gist.github.com/e690f34bdc47cfb5c2fd","description":"Generate password","files":["https://gist.githubusercontent.com/umidjons/e690f34bdc47cfb5c2fd/raw/59d4c25e9faa9b0da61cdad8f2149f05dd8c9cae/generate-password.md"],"content":"Generate password\n===\n\n```php\nfunction genPswd($length=8)\n{\n\t$chars=array_merge(range(0,9),range('a','z'),range('A','Z'));\n\tshuffle($chars);\n\treturn implode(array_slice($chars,0,$length));\n}\n```","html":"<h1 id=\"generate-password\">Generate password</h1>\n<pre><code class=\"lang-php\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">genPswd</span><span class=\"hljs-params\">($length=<span class=\"hljs-number\">8</span>)</span>\n</span>{\n    $chars=array_merge(range(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">9</span>),range(<span class=\"hljs-string\">'a'</span>,<span class=\"hljs-string\">'z'</span>),range(<span class=\"hljs-string\">'A'</span>,<span class=\"hljs-string\">'Z'</span>));\n    shuffle($chars);\n    <span class=\"hljs-keyword\">return</span> implode(array_slice($chars,<span class=\"hljs-number\">0</span>,$length));\n}\n</code></pre>\n"},{"html_url":"https://gist.github.com/439c6ae83f676814c399","description":"Get URL without any parameters in JavaScript","files":["https://gist.githubusercontent.com/umidjons/439c6ae83f676814c399/raw/a66d7f0b17e099ff09e31bcc0e7b133b806b8c82/url-without-parameters.md"],"content":"Get URL without any parameters in JavaScript\n===\n\n```js\nconsole.log('path=', location.protocol + '//' + location.host + location.pathname)\n```","html":"<h1 id=\"get-url-without-any-parameters-in-javascript\">Get URL without any parameters in JavaScript</h1>\n<pre><code class=\"lang-js\">console.<span class=\"hljs-built_in\">log</span>(<span class=\"hljs-string\">'path='</span>, <span class=\"hljs-built_in\">location</span>.protocol + <span class=\"hljs-string\">'//'</span> + <span class=\"hljs-built_in\">location</span>.host + <span class=\"hljs-built_in\">location</span>.pathname)\n</code></pre>\n"},{"html_url":"https://gist.github.com/529eb02b0df7ab97d5f5","description":"EFonter - widget to change font size of the targeted element","files":["https://gist.githubusercontent.com/umidjons/529eb02b0df7ab97d5f5/raw/937fc7f2afa19a35eae7bcad3177413d77dae908/widget-change-font-size.md"],"content":"EFonter - widget to change font size of the targeted element\n===\n\nCreate `extensions.fonter.EFonter.php`\n\n```php\n<?php\nclass EFonter extends CWidget\n{\n\tpublic $selector;\n\n\tpublic function run()\n\t{\n\t\tYii::app()->clientScript->registerScript('_fonter','\n\t\t$(\".btn-font-inc,.btn-font-dec\").on(\"click\",function(e){\n\t\t\te.preventDefault();\n\t\t\tconsole.log(\"clicked\");\n\t\t\t$(\"'.$this->selector.'\").css({\"font-size\":($(this).is(\".btn-font-inc\")?\"+\":\"-\")+\"=1\"});\n\t\t}); ',CClientScript::POS_READY);\n\t\t$this->render('fonter');\n\t}\n}\n```\n\nCreate view of the widget `extensions.fonter.views.fonter.php`\n```php\n<?php /** @var EFonter $this */ ?>\n<button class=\"btn btn-xs btn-default btn-font-inc\" title=\"increate font size\">\n\t<span class=\"glyphicon glyphicon-font\"></span><span class=\"glyphicon glyphicon-plus\"></span>\n</button>\n<button class=\"btn btn-xs btn-default btn-font-dec\" title=\"decrease font size\">\n\t<span class=\"glyphicon glyphicon-font\"></span><span class=\"glyphicon glyphicon-minus\"></span>\n</button>\n```\n\nUsage example:\n```php\n<div class=\"col-sm-12 text-right\">\n  <?php $this->widget('ext.fonter.EFonter',['selector'=>'#declarations-grid']); ?>\n</div>\n```","html":"<h1 id=\"efonter-widget-to-change-font-size-of-the-targeted-element\">EFonter - widget to change font size of the targeted element</h1>\n<p>Create <code>extensions.fonter.EFonter.php</code></p>\n<pre><code class=\"lang-php\">&lt;?php\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">EFonter</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CWidget</span></span>\n{\n    public $selector;\n\n    public function run()\n    {\n        <span class=\"hljs-type\">Yii</span>::app()-&gt;clientScript-&gt;registerScript(<span class=\"hljs-symbol\">'_fonte</span>r','\n        $(<span class=\"hljs-string\">\".btn-font-inc,.btn-font-dec\"</span>).on(<span class=\"hljs-string\">\"click\"</span>,function(e){\n            e.preventDefault();\n            console.log(<span class=\"hljs-string\">\"clicked\"</span>);\n            $(<span class=\"hljs-string\">\"'.$this-&gt;selector.'\"</span>).css({<span class=\"hljs-string\">\"font-size\"</span>:($(<span class=\"hljs-keyword\">this</span>).is(<span class=\"hljs-string\">\".btn-font-inc\"</span>)?<span class=\"hljs-string\">\"+\"</span>:<span class=\"hljs-string\">\"-\"</span>)+<span class=\"hljs-string\">\"=1\"</span>});\n        }); ',<span class=\"hljs-type\">CClientScript</span>::<span class=\"hljs-type\">POS_READY</span>);\n        $<span class=\"hljs-keyword\">this</span>-&gt;render(<span class=\"hljs-symbol\">'fonte</span>r');\n    }\n}\n</code></pre>\n<p>Create view of the widget <code>extensions.fonter.views.fonter.php</code></p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-comment\">/** <span class=\"hljs-doctag\">@var</span> EFonter $this */</span> <span class=\"hljs-meta\">?&gt;</span></span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"btn btn-xs btn-default btn-font-inc\"</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"increate font size\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"glyphicon glyphicon-font\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"glyphicon glyphicon-plus\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"btn btn-xs btn-default btn-font-dec\"</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"decrease font size\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"glyphicon glyphicon-font\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"glyphicon glyphicon-minus\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n</code></pre>\n<p>Usage example:</p>\n<pre><code class=\"lang-php\">&lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"col-sm-12 text-right\"</span>&gt;\n  <span class=\"xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">$this</span>-&gt;widget(<span class=\"hljs-string\">'ext.fonter.EFonter'</span>,[<span class=\"hljs-string\">'selector'</span>=&gt;<span class=\"hljs-string\">'#declarations-grid'</span>]); <span class=\"hljs-meta\">?&gt;</span></span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/eb1e867c787fcdea5663","description":"Handlebars.js custom helper to chain some other helpers","files":["https://gist.githubusercontent.com/umidjons/eb1e867c787fcdea5663/raw/12df6e5290c2aeddb8ff4e923d9b541bfb134c5e/handlebarsjs-chain-helper.md"],"content":"Handlebars.js custom helper to chain some other helpers\n===\n\n`chain` helper implementation\n\n```js\nHandlebars.registerHelper('chain',function(){\n\tvar helpers=[];\n\tvar args=Array.prototype.slice.call(arguments);\n\tvar argsLength=args.length;\n\tvar index;\n\tvar arg;\n\tfor(index=0, arg=args[index]; index<argsLength; arg=args[++index]){\n\t\tif(Handlebars.helpers[arg])\n\t\t\thelpers.push(Handlebars.helpers[arg]);\n\t\telse{\n\t\t\targs=args.slice(index);\n\t\t\tbreak;\n\t\t}\n\t}\n\twhile(helpers.length)\n\t\targs=[helpers.pop().apply(Handlebars.helpers,args)];\n\treturn args.shift();\n});\n```\n\nUsage example\n\n```html\n<div class=\"row\">\n\t<div class=\"col-sm-5 text-right\">{{label}}</div>\n\t<div class=\"col-sm-7\">{{chain \"unescape\" \"decode\" text}}</div> {{!-- decode and unescape text --}}\n</div>\n```","html":"<h1 id=\"handlebars-js-custom-helper-to-chain-some-other-helpers\">Handlebars.js custom helper to chain some other helpers</h1>\n<p><code>chain</code> helper implementation</p>\n<pre><code class=\"lang-js\">Handlebars.registerHelper('chain',function(){\n    <span class=\"hljs-built_in\">var</span> helpers=[];\n    <span class=\"hljs-built_in\">var</span> <span class=\"hljs-built_in\">args</span>=Array.prototype.slice.call(arguments);\n    <span class=\"hljs-built_in\">var</span> argsLength=<span class=\"hljs-built_in\">args</span>.<span class=\"hljs-built_in\">length</span>;\n    <span class=\"hljs-built_in\">var</span> index;\n    <span class=\"hljs-built_in\">var</span> arg;\n    <span class=\"hljs-keyword\">for</span>(index=<span class=\"hljs-number\">0</span>, arg=<span class=\"hljs-built_in\">args</span>[index]; index&lt;argsLength; arg=<span class=\"hljs-built_in\">args</span>[++index]){\n        <span class=\"hljs-keyword\">if</span>(Handlebars.helpers[arg])\n            helpers.<span class=\"hljs-built_in\">push</span>(Handlebars.helpers[arg]);\n        <span class=\"hljs-keyword\">else</span>{\n            <span class=\"hljs-built_in\">args</span>=<span class=\"hljs-built_in\">args</span>.slice(index);\n            <span class=\"hljs-built_in\">break</span>;\n        }\n    }\n    <span class=\"hljs-keyword\">while</span>(helpers.<span class=\"hljs-built_in\">length</span>)\n        <span class=\"hljs-built_in\">args</span>=[helpers.<span class=\"hljs-built_in\">pop</span>().<span class=\"hljs-built_in\">apply</span>(Handlebars.helpers,<span class=\"hljs-built_in\">args</span>)];\n    <span class=\"hljs-built_in\">return</span> <span class=\"hljs-built_in\">args</span>.shift();\n});\n</code></pre>\n<p>Usage example</p>\n<pre><code class=\"lang-html\">&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"row\"</span>&gt;\n    &lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"col-sm-5 text-right\"</span>&gt;{{label}}&lt;/<span class=\"hljs-keyword\">div</span>&gt;\n    &lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"col-sm-7\"</span>&gt;{{chain <span class=\"hljs-string\">\"unescape\"</span> <span class=\"hljs-string\">\"decode\"</span> <span class=\"hljs-built_in\">text</span>}}&lt;/<span class=\"hljs-keyword\">div</span>&gt; {{!<span class=\"hljs-comment\">-- decode and unescape text --}}</span>\n&lt;/<span class=\"hljs-keyword\">div</span>&gt;\n</code></pre>\n"},{"html_url":"https://gist.github.com/b3e1d7f5a7093e2e4e5a","description":"Handlebars.js helper to unescape double quotes","files":["https://gist.githubusercontent.com/umidjons/b3e1d7f5a7093e2e4e5a/raw/0d558ea0a21187b8fc830adfdcd2d497c771355b/handlebars.js-helper-unescape-double-quotes.md"],"content":"Handlebars.js helper to unescape double quotes\n===\n\n```js\nHandlebars.registerHelper('unescape',function(str){\n\treturn str.replace(/\\\\\"/g,'\"'); // replace all \\\" to \"\n});\n```\n\nUsage example:\n\n```html\n<div class=\"panel panel-default\">\n\t<div class=\"panel-heading\"><h3 class=\"panel-title\">Description</h3></div>\n\t<div class=\"panel-body\">\n\t\t{{unescape description}}\n\t</div>\n</div>\n```","html":"<h1 id=\"handlebars-js-helper-to-unescape-double-quotes\">Handlebars.js helper to unescape double quotes</h1>\n<pre><code class=\"lang-js\">Handlebars.registerHelper(<span class=\"hljs-string\">'unescape'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">str</span>)</span>{\n    <span class=\"hljs-keyword\">return</span> str.replace(<span class=\"hljs-regexp\">/\\\\\"/g</span>,<span class=\"hljs-string\">'\"'</span>); <span class=\"hljs-comment\">// replace all \\\" to \"</span>\n});\n</code></pre>\n<p>Usage example:</p>\n<pre><code class=\"lang-html\">&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"panel panel-default\"</span>&gt;\n    &lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"panel-heading\"</span>&gt;&lt;h3 <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"panel-title\"</span>&gt;Description&lt;/h3&gt;&lt;/<span class=\"hljs-keyword\">div</span>&gt;\n    &lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"panel-body\"</span>&gt;\n        {{unescape description}}\n    &lt;/<span class=\"hljs-keyword\">div</span>&gt;\n&lt;/<span class=\"hljs-keyword\">div</span>&gt;\n</code></pre>\n"},{"html_url":"https://gist.github.com/3bf414cbf48aa604c6a0","description":"Escape double quotes in PL/SQL","files":["https://gist.githubusercontent.com/umidjons/3bf414cbf48aa604c6a0/raw/8810e71faf87f08789f3d2e4b980f5df11b1ccd7/escape-double-quotes-plsql.md"],"content":"Escape double quotes in PL/SQL\n===\n\n```sql\nfunction quote(pString varchar2) return varchar2 is\nbegin\n  -- replace \" or \\\" with \\\"\n  return regexp_replace(pString,'(\\\\\"|\")','\\\"'); -- fixes already quoted strings too\nend;\n```\n\nExample:\n\n```sql\nselect \n  quote('Hello \"World\\\"') -- Hello \\\"World\\\" \nfrom dual;\n```","html":"<h1 id=\"escape-double-quotes-in-pl-sql\">Escape double quotes in PL/SQL</h1>\n<pre><code class=\"lang-sql\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">quote</span>(pString varchar2) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">varchar2</span> <span class=\"hljs-keyword\">is</span>\n<span class=\"hljs-keyword\">begin</span>\n  <span class=\"hljs-comment\">-- replace \" or \\\" with \\\"</span>\n  <span class=\"hljs-keyword\">return</span> regexp_replace(pString,'(\\\\<span class=\"hljs-string\">\"|\"</span>)<span class=\"hljs-string\">','</span>\\<span class=\"hljs-string\">\"'); -- fixes already quoted strings too\nend;</span>\n</code></pre>\n<p>Example:</p>\n<pre><code class=\"lang-sql\"><span class=\"hljs-keyword\">select</span> \n  quote(<span class=\"hljs-string\">'Hello \"World\\\"'</span>) <span class=\"hljs-comment\">-- Hello \\\"World\\\" </span>\n<span class=\"hljs-keyword\">from</span> dual;\n</code></pre>\n"},{"html_url":"https://gist.github.com/0fa5b574609b43538ee7","description":"Unable to load dynamic library php_imagick.dll","files":["https://gist.githubusercontent.com/umidjons/0fa5b574609b43538ee7/raw/bd155a244903443a8886f43e5cf74c175c780c0d/unable-to-load-dynamic-library-php_imagick.md"],"content":"Unable to load dynamic library php_imagick.dll (PHP-5.5.10)\n===\n\nPHP on Windows is 32bit, so we need to download x86 ImageMagick\nfrom [http://ftp.sunet.se/pub/multimedia/graphics/ImageMagick/binaries/](sunet)\n\nI download `ImageMagick-6.7.7-5-Q16-windows-dll.exe` and install\ninto c:\\imagemagick\\.\n\nI also tried installing newer `ImageMagick-6.8.9-7-Q16-x86-dll.exe` version,\nbut it doesn't work for me.\n\nAlso in httpd.conf I set environment variable `MAGICK_HOME`\n```\nSetEnv MAGICK_HOME \"c:/imagemagick\"\n```\n\nIf you don't have `php_imagick.dll`, you can obtain it from [http://www.peewit.fr/imagick/](here) and paste it\ninto you `ext` directory.","html":"<h1 id=\"unable-to-load-dynamic-library-php_imagick-dll-php-5-5-10-\">Unable to load dynamic library php_imagick.dll (PHP-5.5.10)</h1>\n<p>PHP on Windows is 32bit, so we need to download x86 ImageMagick\nfrom <a href=\"sunet\">http://ftp.sunet.se/pub/multimedia/graphics/ImageMagick/binaries/</a></p>\n<p>I download <code>ImageMagick-6.7.7-5-Q16-windows-dll.exe</code> and install\ninto c:\\imagemagick.</p>\n<p>I also tried installing newer <code>ImageMagick-6.8.9-7-Q16-x86-dll.exe</code> version,\nbut it doesn&#39;t work for me.</p>\n<p>Also in httpd.conf I set environment variable <code>MAGICK_HOME</code></p>\n<pre><code><span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">SetEnv</span></span> MAGICK_HOME <span class=\"hljs-string\">\"c:/imagemagick\"</span>\n</code></pre><p>If you don&#39;t have <code>php_imagick.dll</code>, you can obtain it from <a href=\"here\">http://www.peewit.fr/imagick/</a> and paste it\ninto you <code>ext</code> directory.</p>\n"},{"html_url":"https://gist.github.com/e0a5b87543418f86c926","description":"Handle paste and drop events on jQuery","files":["https://gist.githubusercontent.com/umidjons/e0a5b87543418f86c926/raw/c6347ac3e82fcc396eedc5a013a1dafec040beb0/jquery-paste-drop-events.md"],"content":"Handle paste and drop events on jQuery\n===\n\nImagine we have `.myinput` input field, that we should process its value after\ntext pasted into it. We can't access value in paste directly, so we should\nwait some time. For that purpose one can use `setTimeout` function. \nHere is example how to correctly handle `paste` event.\n\n```js\njQuery(document).ready(function($){\n\t$(\".myinput\").on(\"paste\",function(){\n\t\tvar _this=$(this);\n\t\t// we can access input value on paste after some time\n\t\tsetTimeout(function(){\n\t\t\t// access element value\n\t\t\tconsole.log(_this.val());\n\t\t},1);\n\t});\n});\n```\n\nText/value can be pasted into input field via drag&drop. So we can also\nwant to handle `drop` event. And when drop event fired we couldn't access\nits value directly too. Again we can use `setTimeout`.\n\n```js\njQuery(document).ready(function($){\n\t$(document).on(\"drop\",function(e){\n\t\tvar target=$(e.target);\n\t\t// drop acts as paste, but doesn't trigger paste event\n\t\t// and here too we can access text/value dropped into input after some time\n\t\tsetTimeout(function(){\n\t\t\t// access element value\n\t\t\tconsole.log(target.val());\n\t\t},1);\n\t});\n\n});\n```\n\nNote that, in the above code `e.target` is our input field. We can check it via `$.is()`.\n\n```js\njQuery(document).ready(function($){\n\t$(document).on(\"drop\",function(e){\n\t\tvar target=$(e.target);\n\t\tif($(target).is('.myinput'))\n  \t\t// drop acts as paste, but doesn't trigger paste event\n  \t\t// and here too we can access text/value dropped into input after some time\n  \t\tsetTimeout(function(){\n  \t\t\t// access element value\n  \t\t\tconsole.log(target.val());\n  \t\t},1);\n\t});\n\n});\n```\n","html":"<h1 id=\"handle-paste-and-drop-events-on-jquery\">Handle paste and drop events on jQuery</h1>\n<p>Imagine we have <code>.myinput</code> input field, that we should process its value after\ntext pasted into it. We can&#39;t access value in paste directly, so we should\nwait some time. For that purpose one can use <code>setTimeout</code> function. \nHere is example how to correctly handle <code>paste</code> event.</p>\n<pre><code class=\"lang-js\">jQuery(<span class=\"hljs-built_in\">document</span>).ready(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">$</span>)</span>{\n    $(<span class=\"hljs-string\">\".myinput\"</span>).on(<span class=\"hljs-string\">\"paste\"</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n        <span class=\"hljs-keyword\">var</span> _this=$(<span class=\"hljs-keyword\">this</span>);\n        <span class=\"hljs-comment\">// we can access input value on paste after some time</span>\n        setTimeout(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n            <span class=\"hljs-comment\">// access element value</span>\n            <span class=\"hljs-built_in\">console</span>.log(_this.val());\n        },<span class=\"hljs-number\">1</span>);\n    });\n});\n</code></pre>\n<p>Text/value can be pasted into input field via drag&amp;drop. So we can also\nwant to handle <code>drop</code> event. And when drop event fired we couldn&#39;t access\nits value directly too. Again we can use <code>setTimeout</code>.</p>\n<pre><code class=\"lang-js\">jQuery(<span class=\"hljs-built_in\">document</span>).ready(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">$</span>)</span>{\n    $(<span class=\"hljs-built_in\">document</span>).on(<span class=\"hljs-string\">\"drop\"</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">e</span>)</span>{\n        <span class=\"hljs-keyword\">var</span> target=$(e.target);\n        <span class=\"hljs-comment\">// drop acts as paste, but doesn't trigger paste event</span>\n        <span class=\"hljs-comment\">// and here too we can access text/value dropped into input after some time</span>\n        setTimeout(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n            <span class=\"hljs-comment\">// access element value</span>\n            <span class=\"hljs-built_in\">console</span>.log(target.val());\n        },<span class=\"hljs-number\">1</span>);\n    });\n\n});\n</code></pre>\n<p>Note that, in the above code <code>e.target</code> is our input field. We can check it via <code>$.is()</code>.</p>\n<pre><code class=\"lang-js\">jQuery(<span class=\"hljs-built_in\">document</span>).ready(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">$</span>)</span>{\n    $(<span class=\"hljs-built_in\">document</span>).on(<span class=\"hljs-string\">\"drop\"</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">e</span>)</span>{\n        <span class=\"hljs-keyword\">var</span> target=$(e.target);\n        <span class=\"hljs-keyword\">if</span>($(target).is(<span class=\"hljs-string\">'.myinput'</span>))\n          <span class=\"hljs-comment\">// drop acts as paste, but doesn't trigger paste event</span>\n          <span class=\"hljs-comment\">// and here too we can access text/value dropped into input after some time</span>\n          setTimeout(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n              <span class=\"hljs-comment\">// access element value</span>\n              <span class=\"hljs-built_in\">console</span>.log(target.val());\n          },<span class=\"hljs-number\">1</span>);\n    });\n\n});\n</code></pre>\n"},{"html_url":"https://gist.github.com/7684a1a64c34ff5e15b6","description":"Filter to group items by given quantity. Angular.js using bootstrap and dynamically creating rows.","files":["https://gist.githubusercontent.com/umidjons/7684a1a64c34ff5e15b6/raw/50db4ee499eb96dfc317e9c6a2a869b2cbd22a0c/angularjs-bootstrap-group-by-rows.md"],"content":"Filter to group items by given quantity. Angular.js using bootstrap and dynamically creating rows.\n===\n\nCreate custom filter to group items by given quantity\n```js\nangular.module('AppFilters',[])\n\t.filter('groupBy',function(){\n\t\treturn function(items,groupedBy){\n\t\t\tif(items){\n\t\t\t\tvar newArr=[];\n\t\t\t\tfor(var i=0; i<items.length; i+=groupedBy)\n\t\t\t\t\tif(i+groupedBy>items.length)\n\t\t\t\t\t\tnewArr.push(items.slice(i));\n\t\t\t\t\telse\n\t\t\t\t\t\tnewArr.push(items.slice(i,i+groupedBy));\n\t\t\t\treturn newArr;\n\t\t\t}\n\t\t}\n\t});\n```\n\nUsing our filter in controller\n\n```js\nangular.module('AppControllers',[])\n\t.controller('ProductsCtrl',function($scope,Product,$filter){\n\t\tProduct.query(function(data){\n\t\t  // group products by 3 in row\n\t\t\t$scope.products=$filter('groupBy')(data,3);\n\t\t\t// just to be sure output\n\t\t\tconsole.log('products=',$scope.products);\n\t\t});\n\t});\n```\n\nConfigure routing:\n\n```js\nangular.module('App',['AppServices','AppControllers','AppFilters','ngRoute'])\n\t.config(function($routeProvider){\n\t\t$routeProvider\n\t\t\t.when('/',{\n\t\t\t\ttemplateUrl:'/partials/products.html',\n\t\t\t\tcontroller :'ProductsCtrl'\n\t\t\t})\n\t\t\t.when('/contact',{\n\t\t\t\ttemplateUrl:'/partials/contacts.html',\n\t\t\t\tcontroller :'ContactCtrl'\n\t\t\t})\n\t\t\t.when('/about',{\n\t\t\t\ttemplateUrl:'/partials/about.html',\n\t\t\t\tcontroller :'AboutCtrl'\n\t\t\t})\n\t\t\t.otherwise({redirectTo:'/'});\n\t});\n```\n\nproducts.html\n\n```html\n<div class=\"row\" ng-repeat=\"prodGroup in products\">\n\t<div class=\"col-sm-4\" ng-repeat=\"prod in prodGroup\">\n\t\t<div class=\"panel panel-info\">\n\t\t\t<div class=\"panel-heading\">\n\t\t\t\t<h3 class=\"panel-title\">{{prod.title}}</h3>\n\t\t\t</div>\n\t\t\t<div class=\"panel-body\">\n\t\t\t\t{{prod.description}}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n```","html":"<h1 id=\"filter-to-group-items-by-given-quantity-angular-js-using-bootstrap-and-dynamically-creating-rows-\">Filter to group items by given quantity. Angular.js using bootstrap and dynamically creating rows.</h1>\n<p>Create custom filter to group items by given quantity</p>\n<pre><code class=\"lang-js\">angular.module(<span class=\"hljs-string\">'AppFilters'</span>,[])\n    .filter(<span class=\"hljs-string\">'groupBy'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(items,groupedBy)</span></span>{\n            <span class=\"hljs-keyword\">if</span>(items){\n                <span class=\"hljs-keyword\">var</span> newArr=[];\n                <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">var</span> i=<span class=\"hljs-number\">0</span>; i&lt;items.length; i+=groupedBy)\n                    <span class=\"hljs-keyword\">if</span>(i+groupedBy&gt;items.length)\n                        newArr.push(items.slice(i));\n                    <span class=\"hljs-keyword\">else</span>\n                        newArr.push(items.slice(i,i+groupedBy));\n                <span class=\"hljs-keyword\">return</span> newArr;\n            }\n        }\n    });\n</code></pre>\n<p>Using our filter in controller</p>\n<pre><code class=\"lang-js\">angular.module(<span class=\"hljs-string\">'AppControllers'</span>,[])\n    .controller(<span class=\"hljs-string\">'ProductsCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($scope,Product,$filter)</span></span>{\n        Product.query(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(data)</span></span>{\n          <span class=\"hljs-comment\">// group products by 3 in row</span>\n            $scope.products=$filter(<span class=\"hljs-string\">'groupBy'</span>)(data,<span class=\"hljs-number\">3</span>);\n            <span class=\"hljs-comment\">// just to be sure output</span>\n            console.log(<span class=\"hljs-string\">'products='</span>,$scope.products);\n        });\n    });\n</code></pre>\n<p>Configure routing:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-selector-tag\">angular</span><span class=\"hljs-selector-class\">.module</span>(<span class=\"hljs-string\">'App'</span>,[<span class=\"hljs-string\">'AppServices'</span>,<span class=\"hljs-string\">'AppControllers'</span>,<span class=\"hljs-string\">'AppFilters'</span>,<span class=\"hljs-string\">'ngRoute'</span>])\n    <span class=\"hljs-selector-class\">.config</span>(function($routeProvider){\n        $<span class=\"hljs-selector-tag\">routeProvider</span>\n            <span class=\"hljs-selector-class\">.when</span>(<span class=\"hljs-string\">'/'</span>,{\n                <span class=\"hljs-attribute\">templateUrl</span>:<span class=\"hljs-string\">'/partials/products.html'</span>,\n                <span class=\"hljs-attribute\">controller </span>:<span class=\"hljs-string\">'ProductsCtrl'</span>\n            })\n            <span class=\"hljs-selector-class\">.when</span>(<span class=\"hljs-string\">'/contact'</span>,{\n                <span class=\"hljs-attribute\">templateUrl</span>:<span class=\"hljs-string\">'/partials/contacts.html'</span>,\n                <span class=\"hljs-attribute\">controller </span>:<span class=\"hljs-string\">'ContactCtrl'</span>\n            })\n            <span class=\"hljs-selector-class\">.when</span>(<span class=\"hljs-string\">'/about'</span>,{\n                <span class=\"hljs-attribute\">templateUrl</span>:<span class=\"hljs-string\">'/partials/about.html'</span>,\n                <span class=\"hljs-attribute\">controller </span>:<span class=\"hljs-string\">'AboutCtrl'</span>\n            })\n            <span class=\"hljs-selector-class\">.otherwise</span>({<span class=\"hljs-attribute\">redirectTo</span>:<span class=\"hljs-string\">'/'</span>});\n    });\n</code></pre>\n<p>products.html</p>\n<pre><code class=\"lang-html\">&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"row\"</span> ng-<span class=\"hljs-keyword\">repeat</span>=<span class=\"hljs-string\">\"prodGroup in products\"</span>&gt;\n    &lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"col-sm-4\"</span> ng-<span class=\"hljs-keyword\">repeat</span>=<span class=\"hljs-string\">\"prod in prodGroup\"</span>&gt;\n        &lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"panel panel-info\"</span>&gt;\n            &lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"panel-heading\"</span>&gt;\n                &lt;h3 <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"panel-title\"</span>&gt;{{prod.title}}&lt;/h3&gt;\n            &lt;/<span class=\"hljs-keyword\">div</span>&gt;\n            &lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"panel-body\"</span>&gt;\n                {{prod.description}}\n            &lt;/<span class=\"hljs-keyword\">div</span>&gt;\n        &lt;/<span class=\"hljs-keyword\">div</span>&gt;\n    &lt;/<span class=\"hljs-keyword\">div</span>&gt;\n&lt;/<span class=\"hljs-keyword\">div</span>&gt;\n</code></pre>\n"},{"html_url":"https://gist.github.com/1fb8ae674df4c71f85cf","description":"Compile dynamic template from outside of angular.","files":["https://gist.githubusercontent.com/umidjons/1fb8ae674df4c71f85cf/raw/ae57e5e410c244dd9d5b352cbbe92aada070cafc/angular-compile-dynamic-html.md"],"content":"Compile dynamic template from outside of angular\n===\n\nI want to load dynamic HTML content via AJAX, then compile it, because it contains\nangular directives.\n\n```html\n<!DOCTYPE html>\n<html ng-app=\"app\">\n<head>\n\t<title>Compile dynamic HTML</title>\n\t<script type=\"text/javascript\" src=\"js/jquery-1.11.0.js\"></script>\n\t<script type=\"text/javascript\" src=\"js/angular.js\"></script>\n</head>\n<body ng-controller=\"TestCtrl\">\n\n<div obj></div>\n\n<button class=\"foo\">Change</button>\n\n<script type=\"text/javascript\">\n\tvar app=angular.module('app',[]);\n\tapp.controller('TestCtrl',function($scope){});\n\n\tjQuery(document).ready(function($){\n\t\t$('.foo').on('click',function(e){\n\t\t  // todo: load HTML content via AJAX or generate via jQuery\n\t\t  // todo: compile new HTML content, which contains Angular directives\n\t\t});\n\t});\n</script>\n</body>\n</html>\n```\n\nWe can get reference to `$compile` outside of angular via `injector().invoke()`.\n\n```javascript\n\tjQuery(document).ready(function($){\n\t\t$('.foo').on('click',function(e){\n\t\t\te.preventDefault();\n\t\t\tangular.element(document).injector().invoke(function($compile){\n\t\t\t\tvar obj=$('[obj]'); // get wrapper\n\t\t\t\tvar scope=obj.scope(); // get scope\n\t\t\t\t// generate dynamic content\n\t\t\t\tobj.html($('<input type=\"text\" ng-pattern=\"/^([0-9]+)$/\" ng-model=\"test\"><span>{{test}}</span>'));\n\t\t\t\t// compile!!!\n\t\t\t\t$compile(obj.contents())(scope);\n\t\t\t});\n\t\t});\n\t});\n```","html":"<h1 id=\"compile-dynamic-template-from-outside-of-angular\">Compile dynamic template from outside of angular</h1>\n<p>I want to load dynamic HTML content via AJAX, then compile it, because it contains\nangular directives.</p>\n<pre><code class=\"lang-html\"><span class=\"hljs-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">ng-app</span>=<span class=\"hljs-string\">\"app\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>Compile dynamic HTML<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text/javascript\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"js/jquery-1.11.0.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text/javascript\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"js/angular.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span> <span class=\"hljs-attr\">ng-controller</span>=<span class=\"hljs-string\">\"TestCtrl\"</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">obj</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"foo\"</span>&gt;</span>Change<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">var</span> app=angular.module(<span class=\"hljs-string\">'app'</span>,[]);\n    app.controller(<span class=\"hljs-string\">'TestCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">$scope</span>)</span>{});\n\n    jQuery(<span class=\"hljs-built_in\">document</span>).ready(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">$</span>)</span>{\n        $(<span class=\"hljs-string\">'.foo'</span>).on(<span class=\"hljs-string\">'click'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">e</span>)</span>{\n          <span class=\"hljs-comment\">// <span class=\"hljs-doctag\">todo:</span> load HTML content via AJAX or generate via jQuery</span>\n          <span class=\"hljs-comment\">// <span class=\"hljs-doctag\">todo:</span> compile new HTML content, which contains Angular directives</span>\n        });\n    });\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n<p>We can get reference to <code>$compile</code> outside of angular via <code>injector().invoke()</code>.</p>\n<pre><code class=\"lang-javascript\">    jQuery(<span class=\"hljs-built_in\">document</span>).ready(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">$</span>)</span>{\n        $(<span class=\"hljs-string\">'.foo'</span>).on(<span class=\"hljs-string\">'click'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">e</span>)</span>{\n            e.preventDefault();\n            angular.element(<span class=\"hljs-built_in\">document</span>).injector().invoke(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">$compile</span>)</span>{\n                <span class=\"hljs-keyword\">var</span> obj=$(<span class=\"hljs-string\">'[obj]'</span>); <span class=\"hljs-comment\">// get wrapper</span>\n                <span class=\"hljs-keyword\">var</span> scope=obj.scope(); <span class=\"hljs-comment\">// get scope</span>\n                <span class=\"hljs-comment\">// generate dynamic content</span>\n                obj.html($(<span class=\"hljs-string\">'&lt;input type=\"text\" ng-pattern=\"/^([0-9]+)$/\" ng-model=\"test\"&gt;&lt;span&gt;{{test}}&lt;/span&gt;'</span>));\n                <span class=\"hljs-comment\">// compile!!!</span>\n                $compile(obj.contents())(scope);\n            });\n        });\n    });\n</code></pre>\n"},{"html_url":"https://gist.github.com/1807b6455fb4af4b6463","description":"Run commands parallelly in batch file on Windows","files":["https://gist.githubusercontent.com/umidjons/1807b6455fb4af4b6463/raw/c6e3af44f78f59a8a554a38596d3f74b9e5d9476/run-commands-parallelly-in-batch-file-windows.md"],"content":"Run commands parallelly in batch file on Windows\n===\n\nCreate batch file, run commands with `start`:\n```bat\nstart command1\nstart command2\nstart commandN\n```\n","html":"<h1 id=\"run-commands-parallelly-in-batch-file-on-windows\">Run commands parallelly in batch file on Windows</h1>\n<p>Create batch file, run commands with <code>start</code>:</p>\n<pre><code class=\"lang-bat\">start <span class=\"hljs-built_in\">command</span>1\nstart <span class=\"hljs-built_in\">command</span>2\nstart <span class=\"hljs-built_in\">command</span>N\n</code></pre>\n"},{"html_url":"https://gist.github.com/6ea73e0aa596ce3e55dd","description":"Execute PL/SQL statement from command line via SQLPlus. \nExecute PL/SQL statements parallelly in batch file via sqlplus (`windows` only).","files":["https://gist.githubusercontent.com/umidjons/6ea73e0aa596ce3e55dd/raw/d27f1fe0f6de4700cfd5eed5abafc0f72d0f4660/execute-plsql-stmt-sqlplus-cli-parallel.md"],"content":"Execute PL/SQL statement from command line via SQLPlus\n===\n\nCreate SQL file with PL/SQL statement:\n\n```sql\nbegin\nfor t in 1..10000 loop\n\tinsert into test_seq values(seq_test.nextval);\nend loop;\ncommit;\nend;\n/\nexit;\n```\n\nRun sqlplus with this file:\n\n```bat\nsqlplus login/password@db @test.sql\n```\n\nExecute PL/SQL statements parallelly in batch file via sqlplus (`windows` only).\nCreate `parallel.bat` with this content:\n\n```bat\nstart sqlplus -S login/password@db @test.sql\nstart sqlplus -S login/password@db @test.sql\nstart sqlplus -S login/password@db @test.sql\nstart sqlplus -S login/password@db @test.sql\nstart sqlplus -S login/password@db @test.sql\nstart sqlplus -S login/password@db @test.sql\nstart sqlplus -S login/password@db @test.sql\nstart sqlplus -S login/password@db @test.sql\n```","html":"<h1 id=\"execute-pl-sql-statement-from-command-line-via-sqlplus\">Execute PL/SQL statement from command line via SQLPlus</h1>\n<p>Create SQL file with PL/SQL statement:</p>\n<pre><code class=\"lang-sql\"><span class=\"hljs-keyword\">begin</span>\n<span class=\"hljs-keyword\">for</span> t <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">1.</span><span class=\"hljs-number\">.10000</span> <span class=\"hljs-keyword\">loop</span>\n    <span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> test_seq <span class=\"hljs-keyword\">values</span>(seq_test.nextval);\n<span class=\"hljs-keyword\">end</span> <span class=\"hljs-keyword\">loop</span>;\n<span class=\"hljs-keyword\">commit</span>;\n<span class=\"hljs-keyword\">end</span>;\n/\nexit;\n</code></pre>\n<p>Run sqlplus with this file:</p>\n<pre><code class=\"lang-bat\"><span class=\"hljs-attribute\">sqlplus</span> login/password<span class=\"hljs-variable\">@db</span> <span class=\"hljs-variable\">@test</span>.sql\n</code></pre>\n<p>Execute PL/SQL statements parallelly in batch file via sqlplus (<code>windows</code> only).\nCreate <code>parallel.bat</code> with this content:</p>\n<pre><code class=\"lang-bat\"><span class=\"hljs-attribute\">start</span> sqlplus -S login/password<span class=\"hljs-variable\">@db</span> <span class=\"hljs-variable\">@test</span>.sql\nstart sqlplus -S login/password<span class=\"hljs-variable\">@db</span> <span class=\"hljs-variable\">@test</span>.sql\nstart sqlplus -S login/password<span class=\"hljs-variable\">@db</span> <span class=\"hljs-variable\">@test</span>.sql\nstart sqlplus -S login/password<span class=\"hljs-variable\">@db</span> <span class=\"hljs-variable\">@test</span>.sql\nstart sqlplus -S login/password<span class=\"hljs-variable\">@db</span> <span class=\"hljs-variable\">@test</span>.sql\nstart sqlplus -S login/password<span class=\"hljs-variable\">@db</span> <span class=\"hljs-variable\">@test</span>.sql\nstart sqlplus -S login/password<span class=\"hljs-variable\">@db</span> <span class=\"hljs-variable\">@test</span>.sql\nstart sqlplus -S login/password<span class=\"hljs-variable\">@db</span> <span class=\"hljs-variable\">@test</span>.sql\n</code></pre>\n"},{"html_url":"https://gist.github.com/88988c001d28893a0af5","description":"Search data from two columns","files":["https://gist.githubusercontent.com/umidjons/88988c001d28893a0af5/raw/76cc8a1343f80882483cc0d62601dcc2dd266551/search-data-from-2-columns.md"],"content":"Search data from two columns\n===\n\nI want to search author from two columns: from relation `rCUser.USERNAME` (user name of authorized user) and `NICK` (guest nick).\nIn my `Comment` model I do these changes:\n\n```php\n<?php\n\tpublic $author_search;\n\n\tpublic function rules()\n\t{\n\t\treturn [\n\t\t\t['ID, NICK, TEXT, STATUS, author_search', 'safe', 'on' => 'search'],\n\t\t];\n\t}\n\n\tpublic function search()\n\t{\n\t\t$criteria       = new CDbCriteria;\n\t\t$criteria->with = ['rCUser']; // relation\n\t\t$criteria->compare('\"t\".ID', $this->ID);\n\t\t$criteria->compare('\"t\".NICK', $this->NICK, true);\n\t\t$criteria->compare('\"t\".TEXT', $this->TEXT, true);\n\t\t$criteria->compare('\"t\".STATUS', $this->STATUS);\n\t\tif($this->author_search)\n\t\t{\n\t\t\t// search author_search in rCUser.USERNAME or NICK columns\n\t\t\t$criteria->addCondition('(USERNAME LIKE :author OR NICK LIKE :author)');\n\t\t\t$criteria->params[':author'] = '%'.$this->author_search.'%';\n\t\t}\n\t\treturn new CActiveDataProvider($this, ['criteria' => $criteria,]);\n\t}\n```\n","html":"<h1 id=\"search-data-from-two-columns\">Search data from two columns</h1>\n<p>I want to search author from two columns: from relation <code>rCUser.USERNAME</code> (user name of authorized user) and <code>NICK</code> (guest nick).\nIn my <code>Comment</code> model I do these changes:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n    <span class=\"hljs-keyword\">public</span> $author_search;\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">rules</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> [\n            [<span class=\"hljs-string\">'ID, NICK, TEXT, STATUS, author_search'</span>, <span class=\"hljs-string\">'safe'</span>, <span class=\"hljs-string\">'on'</span> =&gt; <span class=\"hljs-string\">'search'</span>],\n        ];\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">search</span><span class=\"hljs-params\">()</span>\n    </span>{\n        $criteria       = <span class=\"hljs-keyword\">new</span> CDbCriteria;\n        $criteria-&gt;with = [<span class=\"hljs-string\">'rCUser'</span>]; <span class=\"hljs-comment\">// relation</span>\n        $criteria-&gt;compare(<span class=\"hljs-string\">'\"t\".ID'</span>, <span class=\"hljs-keyword\">$this</span>-&gt;ID);\n        $criteria-&gt;compare(<span class=\"hljs-string\">'\"t\".NICK'</span>, <span class=\"hljs-keyword\">$this</span>-&gt;NICK, <span class=\"hljs-keyword\">true</span>);\n        $criteria-&gt;compare(<span class=\"hljs-string\">'\"t\".TEXT'</span>, <span class=\"hljs-keyword\">$this</span>-&gt;TEXT, <span class=\"hljs-keyword\">true</span>);\n        $criteria-&gt;compare(<span class=\"hljs-string\">'\"t\".STATUS'</span>, <span class=\"hljs-keyword\">$this</span>-&gt;STATUS);\n        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">$this</span>-&gt;author_search)\n        {\n            <span class=\"hljs-comment\">// search author_search in rCUser.USERNAME or NICK columns</span>\n            $criteria-&gt;addCondition(<span class=\"hljs-string\">'(USERNAME LIKE :author OR NICK LIKE :author)'</span>);\n            $criteria-&gt;params[<span class=\"hljs-string\">':author'</span>] = <span class=\"hljs-string\">'%'</span>.<span class=\"hljs-keyword\">$this</span>-&gt;author_search.<span class=\"hljs-string\">'%'</span>;\n        }\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> CActiveDataProvider(<span class=\"hljs-keyword\">$this</span>, [<span class=\"hljs-string\">'criteria'</span> =&gt; $criteria,]);\n    }</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/a1aa99bd6ce24f189faf","description":"Fix favicon.ico request issue on Apache","files":["https://gist.githubusercontent.com/umidjons/a1aa99bd6ce24f189faf/raw/a526c62c3d5ac3323abecea30dcb24f69d22551d/favicon-htaccess.md"],"content":"Fix favicon.ico request issue on Apache\n===\n\n```htaccess\n# enable mod_rewrite\nRewriteEngine On\n\n# put favicon.ico into web root folder\n# and redirect all favicon.ico requests into that icon file \nRewriteRule ^(.*)favicon\\.ico /favicon.ico [L]\n```\n","html":"<h1 id=\"fix-favicon-ico-request-issue-on-apache\">Fix favicon.ico request issue on Apache</h1>\n<pre><code class=\"lang-htaccess\"><span class=\"hljs-comment\"># enable mod_rewrite</span>\n<span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteEngine</span></span> <span class=\"hljs-literal\">On</span>\n\n<span class=\"hljs-comment\"># put favicon.ico into web root folder</span>\n<span class=\"hljs-comment\"># and redirect all favicon.ico requests into that icon file </span>\n<span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteRule</span></span> ^(.*)favicon\\.ico /favicon.ico<span class=\"hljs-meta\"> [L]</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/dda81094abf049107b96","description":"Ignore favicon.ico via mod_rewrite","files":["https://gist.githubusercontent.com/umidjons/dda81094abf049107b96/raw/6bd9251b0b0da681ab65ee1e8d654973e68aa432/ignore-favicon-modrewrite.md"],"content":"Ignore favicon.ico via mod_rewrite\n===\n\nDo not forward request to `index.php` if it is `favicon.ico` request:\n\n```htaccess\nRewriteEngine On\n\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteCond ^(/?.+)$ !^favicon\\.ico\nRewriteRule . index.php\n```","html":"<h1 id=\"ignore-favicon-ico-via-mod_rewrite\">Ignore favicon.ico via mod_rewrite</h1>\n<p>Do not forward request to <code>index.php</code> if it is <code>favicon.ico</code> request:</p>\n<pre><code class=\"lang-htaccess\"><span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteEngine</span></span> <span class=\"hljs-literal\">On</span>\n\n<span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteCond</span></span> <span class=\"hljs-variable\">%{REQUEST_FILENAME}</span> !-f\n<span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteCond</span></span> <span class=\"hljs-variable\">%{REQUEST_FILENAME}</span> !-d\n<span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteCond</span></span> ^(/?.+)$ !^favicon\\.ico\n<span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">RewriteRule</span></span> . index.php\n</code></pre>\n"},{"html_url":"https://gist.github.com/c86d700c82adc5652664","description":"Start Apache via shell script setting necessary environment variables for Oracle","files":["https://gist.githubusercontent.com/umidjons/c86d700c82adc5652664/raw/4f3b31b4df16ef66e7b1c453764b930b450d4aae/start-apache-with-oracle-vars.md"],"content":"Start Apache via shell script setting necessary environment variables for Oracle\n===\n\n```bash\n#!/bin/sh\nexport ORACLE_BASE=/u01/app/oracle\nexport ORACLE_HOME=$ORACLE_BASE/client\nexport NLS_LANG=AMERICAN_AMERICA.AL32UTF8\nexport NLS_DATE_FORMAT=\"DD.MM.YYYY HH24:MI:SS\"\nexport PATH=$PATH:$ORACLE_HOME/bin\nexport LD_LIBRARY_PATH=$ORACLE_HOME/lib\nPATH=$PATH:$HOME/bin\nexport PATH\necho \"Oracle Home: $ORACLE_HOME\"\necho Starting Apache\n/usr/sbin/apachectl start\n```","html":"<h1 id=\"start-apache-via-shell-script-setting-necessary-environment-variables-for-oracle\">Start Apache via shell script setting necessary environment variables for Oracle</h1>\n<pre><code class=\"lang-bash\"><span class=\"hljs-meta\">#!/bin/sh</span>\n<span class=\"hljs-built_in\">export</span> ORACLE_BASE=/u01/app/oracle\n<span class=\"hljs-built_in\">export</span> ORACLE_HOME=<span class=\"hljs-variable\">$ORACLE_BASE</span>/client\n<span class=\"hljs-built_in\">export</span> NLS_LANG=AMERICAN_AMERICA.AL32UTF8\n<span class=\"hljs-built_in\">export</span> NLS_DATE_FORMAT=<span class=\"hljs-string\">\"DD.MM.YYYY HH24:MI:SS\"</span>\n<span class=\"hljs-built_in\">export</span> PATH=<span class=\"hljs-variable\">$PATH</span>:<span class=\"hljs-variable\">$ORACLE_HOME</span>/bin\n<span class=\"hljs-built_in\">export</span> LD_LIBRARY_PATH=<span class=\"hljs-variable\">$ORACLE_HOME</span>/lib\nPATH=<span class=\"hljs-variable\">$PATH</span>:<span class=\"hljs-variable\">$HOME</span>/bin\n<span class=\"hljs-built_in\">export</span> PATH\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Oracle Home: <span class=\"hljs-variable\">$ORACLE_HOME</span>\"</span>\n<span class=\"hljs-built_in\">echo</span> Starting Apache\n/usr/sbin/apachectl start\n</code></pre>\n"},{"html_url":"https://gist.github.com/9a74b69e19ff70f4b0be","description":"Send additional data on CGridView update","files":["https://gist.githubusercontent.com/umidjons/9a74b69e19ff70f4b0be/raw/480ba99374a870d80752343f041a2f45bc15c98d/send-additional-data-on-gridview-update.md"],"content":"Send additional data on CGridView update\n===\n\n```html\n<div class=\"col-sm-12\">\n\t<?php $this->widget('zii.widgets.grid.CGridView',[\n\t\t'id'              =>'supplements-grid',\n\t\t'dataProvider'    =>$model->search(),\n\t\t'filter'          =>null,\n\t\t'enableSorting'   =>false,\n\t\t'itemsCssClass'   =>'table table-striped table-hover table-condensed',\n\t\t'beforeAjaxUpdate'=>'function(id,options){\n\t\t\t\tvar sinn=$(\"#Search_SUBJECT_INN\").val();\n\t\t\t\toptions[\"data\"]={SUBJECT_INN:sinn}; // this will be available as $_GET['SUBJECT_INN'] in the PHP handler\n\t\t\t}',\n\t\t'template'        =>'{items}{pager}',\n\t\t'columns'         =>[\n\t\t\t'DOC_NAME',\n\t\t\t'DOC_N',\n\t\t\t'DOC_D:date',\n\t\t\t'SUBJECT_INN',\n\t\t],\n\t]); ?>\n</div>\n```\n","html":"<h1 id=\"send-additional-data-on-cgridview-update\">Send additional data on CGridView update</h1>\n<pre><code class=\"lang-html\">&lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"col-sm-12\"</span>&gt;\n    <span class=\"xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">$this</span>-&gt;widget(<span class=\"hljs-string\">'zii.widgets.grid.CGridView'</span>,[\n        <span class=\"hljs-string\">'id'</span>              =&gt;<span class=\"hljs-string\">'supplements-grid'</span>,\n        <span class=\"hljs-string\">'dataProvider'</span>    =&gt;$model-&gt;search(),\n        <span class=\"hljs-string\">'filter'</span>          =&gt;<span class=\"hljs-keyword\">null</span>,\n        <span class=\"hljs-string\">'enableSorting'</span>   =&gt;<span class=\"hljs-keyword\">false</span>,\n        <span class=\"hljs-string\">'itemsCssClass'</span>   =&gt;<span class=\"hljs-string\">'table table-striped table-hover table-condensed'</span>,\n        <span class=\"hljs-string\">'beforeAjaxUpdate'</span>=&gt;<span class=\"hljs-string\">'function(id,options){\n                var sinn=$(\"#Search_SUBJECT_INN\").val();\n                options[\"data\"]={SUBJECT_INN:sinn}; // this will be available as $_GET['</span>SUBJECT_INN<span class=\"hljs-string\">'] in the PHP handler\n            }'</span>,\n        <span class=\"hljs-string\">'template'</span>        =&gt;<span class=\"hljs-string\">'{items}{pager}'</span>,\n        <span class=\"hljs-string\">'columns'</span>         =&gt;[\n            <span class=\"hljs-string\">'DOC_NAME'</span>,\n            <span class=\"hljs-string\">'DOC_N'</span>,\n            <span class=\"hljs-string\">'DOC_D:date'</span>,\n            <span class=\"hljs-string\">'SUBJECT_INN'</span>,\n        ],\n    ]); <span class=\"hljs-meta\">?&gt;</span></span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/4a6cd2ace35fa29f30fb","description":"Start/stop/restart apache and memcached services in linux","files":["https://gist.githubusercontent.com/umidjons/4a6cd2ace35fa29f30fb/raw/a4040687d9df96a6ca0aa65cb1d1aa8e1b6b6805/control-apache-memcached-linux.md"],"content":"Restart apache\n===\n\n```\n/usr/local/apache2/bin/apachectl start\n/usr/local/apache2/bin/apachectl stop\n/usr/local/apache2/bin/apachectl restart\n```\n\nRestart memcached\n===\n\n```\nservice memcached start\nservice memcached stop\nservice memcached restart\n```\n","html":"<h1 id=\"restart-apache\">Restart apache</h1>\n<pre><code><span class=\"hljs-meta-keyword\">/usr/</span>local<span class=\"hljs-meta-keyword\">/apache2/</span>bin/apachectl start\n<span class=\"hljs-meta-keyword\">/usr/</span>local<span class=\"hljs-meta-keyword\">/apache2/</span>bin/apachectl stop\n<span class=\"hljs-meta-keyword\">/usr/</span>local<span class=\"hljs-meta-keyword\">/apache2/</span>bin/apachectl restart\n</code></pre><h1 id=\"restart-memcached\">Restart memcached</h1>\n<pre><code>service memcached <span class=\"hljs-literal\">start</span>\nservice memcached <span class=\"hljs-literal\">stop</span>\nservice memcached restart\n</code></pre>"},{"html_url":"https://gist.github.com/84090669b61b90523bb3","description":"Merge CGridView columns header","files":["https://gist.githubusercontent.com/umidjons/84090669b61b90523bb3/raw/9fb0e2ada08bcd7e2b824ad90473ba50347eca77/merge-gridview-cols.md"],"content":"Merge CGridView columns header\n===\n\n```php\n<?php\n<?php $this->widget('zii.widgets.grid.CGridView',[\n\t'id'                   =>'declarations-grid',\n\t'dataProvider'         =>$model->search(),\n\t'filter'               =>null,\n\t'itemsCssClass'        =>'table table-striped table-hover table-condensed',\n\t'rowCssClassExpression'=>'!$data->REC_STATE?\"danger\":($data->REC_OBJECTIONS?\"warning\":\"\")',\n\t'template'             =>'{items}{pager}',\n\t'columns'              =>[\n\t\t[\n\t\t\t'header'           =>Yii::t('zr','Grounds'),\n\t\t\t'name'             =>'REC_DOC_NAME',\n\t\t\t'headerHtmlOptions'=>['colspan'=>3],\n\t\t],\n\t\t[\n\t\t\t'name'             =>'REC_DOC_N',\n\t\t\t'headerHtmlOptions'=>['style'=>'display:none'],\n\t\t],\n\t\t[\n\t\t\t'name'             =>'REC_DOC_D',\n\t\t\t'headerHtmlOptions'=>['style'=>'display:none'],\n\t\t],\n\t],\n]); ?>\n```\n","html":"<h1 id=\"merge-cgridview-columns-header\">Merge CGridView columns header</h1>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">$this</span>-&gt;widget(<span class=\"hljs-string\">'zii.widgets.grid.CGridView'</span>,[\n    <span class=\"hljs-string\">'id'</span>                   =&gt;<span class=\"hljs-string\">'declarations-grid'</span>,\n    <span class=\"hljs-string\">'dataProvider'</span>         =&gt;$model-&gt;search(),\n    <span class=\"hljs-string\">'filter'</span>               =&gt;<span class=\"hljs-keyword\">null</span>,\n    <span class=\"hljs-string\">'itemsCssClass'</span>        =&gt;<span class=\"hljs-string\">'table table-striped table-hover table-condensed'</span>,\n    <span class=\"hljs-string\">'rowCssClassExpression'</span>=&gt;<span class=\"hljs-string\">'!$data-&gt;REC_STATE?\"danger\":($data-&gt;REC_OBJECTIONS?\"warning\":\"\")'</span>,\n    <span class=\"hljs-string\">'template'</span>             =&gt;<span class=\"hljs-string\">'{items}{pager}'</span>,\n    <span class=\"hljs-string\">'columns'</span>              =&gt;[\n        [\n            <span class=\"hljs-string\">'header'</span>           =&gt;Yii::t(<span class=\"hljs-string\">'zr'</span>,<span class=\"hljs-string\">'Grounds'</span>),\n            <span class=\"hljs-string\">'name'</span>             =&gt;<span class=\"hljs-string\">'REC_DOC_NAME'</span>,\n            <span class=\"hljs-string\">'headerHtmlOptions'</span>=&gt;[<span class=\"hljs-string\">'colspan'</span>=&gt;<span class=\"hljs-number\">3</span>],\n        ],\n        [\n            <span class=\"hljs-string\">'name'</span>             =&gt;<span class=\"hljs-string\">'REC_DOC_N'</span>,\n            <span class=\"hljs-string\">'headerHtmlOptions'</span>=&gt;[<span class=\"hljs-string\">'style'</span>=&gt;<span class=\"hljs-string\">'display:none'</span>],\n        ],\n        [\n            <span class=\"hljs-string\">'name'</span>             =&gt;<span class=\"hljs-string\">'REC_DOC_D'</span>,\n            <span class=\"hljs-string\">'headerHtmlOptions'</span>=&gt;[<span class=\"hljs-string\">'style'</span>=&gt;<span class=\"hljs-string\">'display:none'</span>],\n        ],\n    ],\n]); <span class=\"hljs-meta\">?&gt;</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/930b5ca0de0d4067d679","description":"Using PHP expressions in CGridView columns","files":["https://gist.githubusercontent.com/umidjons/930b5ca0de0d4067d679/raw/669771296acecbe6132e3321d06e86e5bca6c242/using-php-expressions-in-gridview-columns.md"],"content":"Using PHP expressions in CGridView columns\n===\n\n```php\n<?php\n<?php $this->widget('zii.widgets.grid.CGridView',[\n\t'id'                   =>'declarations-grid',\n\t'dataProvider'         =>$model->search(),\n\t'itemsCssClass'        =>'table table-striped table-hover table-condensed',\n\t'rowCssClassExpression'=>'!$data->REC_STATE?\"danger\":($data->REC_OBJECTIONS?\"warning\":\"\")',\n\t'template'             =>'{items}{pager}',\n\t'columns'              =>[\n\t\t[\n\t\t\t'name' =>'SUBJECT_CONTENT',\n\t\t\t'value'=>'(string)str_replace(array(\"\\r\", \"\\r\\n\", \"\\n\"),\"<br>\",$data->SUBJECT_CONTENT)',\n\t\t\t'type' =>'raw',\n\t\t],\n\t\t[\n\t\t\t'header'=>'',\n\t\t\t'value' =>'\"<a href=\\\"#\\\" data-reccode=\\\"\".$data->REC_CODE.\"\\\" class=\\\"rec-detail\\\"><span class=\\\"glyphicon glyphicon-list\\\"></span></a>\"',\n\t\t\t'type'  =>'raw',\n\t\t],\n\t],\n]); ?>\n```\n","html":"<h1 id=\"using-php-expressions-in-cgridview-columns\">Using PHP expressions in CGridView columns</h1>\n<pre><code class=\"lang-php\"><span class=\"xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">$this</span>-&gt;widget(<span class=\"hljs-string\">'zii.widgets.grid.CGridView'</span>,[\n    <span class=\"hljs-string\">'id'</span>                   =&gt;<span class=\"hljs-string\">'declarations-grid'</span>,\n    <span class=\"hljs-string\">'dataProvider'</span>         =&gt;$model-&gt;search(),\n    <span class=\"hljs-string\">'itemsCssClass'</span>        =&gt;<span class=\"hljs-string\">'table table-striped table-hover table-condensed'</span>,\n    <span class=\"hljs-string\">'rowCssClassExpression'</span>=&gt;<span class=\"hljs-string\">'!$data-&gt;REC_STATE?\"danger\":($data-&gt;REC_OBJECTIONS?\"warning\":\"\")'</span>,\n    <span class=\"hljs-string\">'template'</span>             =&gt;<span class=\"hljs-string\">'</span></span></span><span class=\"hljs-template-variable\">{items}</span><span class=\"xml\"><span class=\"php\"></span></span><span class=\"hljs-template-variable\">{pager}</span><span class=\"xml\"><span class=\"php\"><span class=\"hljs-string\">',\n    '</span>columns<span class=\"hljs-string\">'              =&gt;[\n        [\n            '</span>name<span class=\"hljs-string\">' =&gt;'</span>SUBJECT_CONTENT<span class=\"hljs-string\">',\n            '</span>value<span class=\"hljs-string\">'=&gt;'</span>(string)str_replace(<span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">\"\\r\"</span>, <span class=\"hljs-string\">\"\\r\\n\"</span>, <span class=\"hljs-string\">\"\\n\"</span>),<span class=\"hljs-string\">\"&lt;br&gt;\"</span>,$data-&gt;SUBJECT_CONTENT)<span class=\"hljs-string\">',\n            '</span>type<span class=\"hljs-string\">' =&gt;'</span>raw<span class=\"hljs-string\">',\n        ],\n        [\n            '</span>header<span class=\"hljs-string\">'=&gt;'</span><span class=\"hljs-string\">',\n            '</span>value<span class=\"hljs-string\">' =&gt;'</span><span class=\"hljs-string\">\"&lt;a href=\\\"#\\\" data-reccode=\\\"\"</span>.$data-&gt;REC_CODE.<span class=\"hljs-string\">\"\\\" class=\\\"rec-detail\\\"&gt;&lt;span class=\\\"glyphicon glyphicon-list\\\"&gt;&lt;/span&gt;&lt;/a&gt;\"</span><span class=\"hljs-string\">',\n            '</span>type<span class=\"hljs-string\">'  =&gt;'</span>raw<span class=\"hljs-string\">',\n        ],\n    ],\n]); ?&gt;</span></span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/0e18a60ec353b1e86b82","description":"Replace `EOL` to `<br>` in PHP","files":["https://gist.githubusercontent.com/umidjons/0e18a60ec353b1e86b82/raw/d6b7bfd44f03290f65423d7081c553e75345d595/replace-eol-to-br.md"],"content":"Replace `EOL` to `<br>` in PHP\n===\n\n```php\n<?php\n(string)str_replace(array(\"\\r\\n\", \"\\r\", \"\\n\"), \"<br>\", $text);\n```\n\nIn php there is `nl2br` function, but it preserves `EOL` symbols.","html":"<h1 id=\"replace-eol-to-br-in-php\">Replace <code>EOL</code> to <code>&lt;br&gt;</code> in PHP</h1>\n<pre><code class=\"lang-php\">&lt;?php\n(<span class=\"hljs-keyword\">string</span>)str_replace(<span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">\"\\r\\n\"</span>, <span class=\"hljs-string\">\"\\r\"</span>, <span class=\"hljs-string\">\"\\n\"</span>), <span class=\"hljs-string\">\"&lt;br&gt;\"</span>, $<span class=\"hljs-built_in\">text</span>);\n</code></pre>\n<p>In php there is <code>nl2br</code> function, but it preserves <code>EOL</code> symbols.</p>\n"},{"html_url":"https://gist.github.com/395e89a1c119e60229b3","description":"Flush memcached cache","files":["https://gist.githubusercontent.com/umidjons/395e89a1c119e60229b3/raw/5dafd4581cd7792cdc27c855d29013d8ed3b5fb1/flush-clear-memcached-cache.md"],"content":"Flush memcached cache via Telnet interface\n===\n\n```bash\necho 'flush_all' | telnet 127.0.0.1 11211\n```\n\nIf `telnet` is not available, then following will work too:\n```bash\necho \"flush_all\" | nc localhost 11211\n```\n\nOn windows, open host and port via `putty` or `kitty`, type `flush_all`, then `Enter`.\n\nWe also can clear cache via PHP\n```php\n$m=new Memcache();\n$m->addServer('localhost');\n$m->flush();\n```","html":"<h1 id=\"flush-memcached-cache-via-telnet-interface\">Flush memcached cache via Telnet interface</h1>\n<pre><code class=\"lang-bash\">echo 'flush_all' | telnet <span class=\"hljs-number\">127.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.1</span> <span class=\"hljs-number\">11211</span>\n</code></pre>\n<p>If <code>telnet</code> is not available, then following will work too:</p>\n<pre><code class=\"lang-bash\">echo <span class=\"hljs-string\">\"flush_all\"</span> <span class=\"hljs-string\">| nc localhost 11211</span>\n</code></pre>\n<p>On windows, open host and port via <code>putty</code> or <code>kitty</code>, type <code>flush_all</code>, then <code>Enter</code>.</p>\n<p>We also can clear cache via PHP</p>\n<pre><code class=\"lang-php\">$m=<span class=\"hljs-keyword\">new</span> Memcache();\n$m-&gt;addServer(<span class=\"hljs-string\">'localhost'</span>);\n$m-&gt;flush();\n</code></pre>\n"},{"html_url":"https://gist.github.com/f6cc60f9bb98a99c8077","description":"Parse JSON in PL/SQL","files":["https://gist.githubusercontent.com/umidjons/f6cc60f9bb98a99c8077/raw/4b6444b9a8902cdc33060be3e69f6307955a2a87/parse-json-in-plsql.md"],"content":"Parse JSON in PL/SQL\n===\n\nDownload and install [PL/JSON](http://sourceforge.net/projects/pljson).\n\nFollowing is an example of how to parse a JSON array represented as string:\n\n```sql\ndeclare\n\tmy_clob clob := '[\n\t\t\t\t\t{\"element_code\" : 1, \"element_type\":11, \"element_value\" : \"John Doe\"},\n\t\t\t\t\t{\"element_code\" : 2, \"element_type\":12, \"element_value\" : \"10W384SSD\"},\n\t\t\t\t\t{\"element_code\" :21, \"element_type\":17, \"element_value\" : \"2013\"}\n\t\t\t\t\t]';\n\tarr_    json_list;\n\tobj_    json;\n\tval_    json_value;\n\tel_code number(2);\n\tel_type number(2);\n\tel_val  varchar2(2000);\nbegin\n\t-- parse json array string\n\tarr_ := json_list(my_clob);\n\tfor i in 1 .. arr_.count loop\n\t\tobj_    := json(arr_.get(i)); -- get i element as json object\n\t\tval_    := obj_.get('element_code');\n\t\tel_code := val_.get_number; -- read value as number\n\t\tval_    := obj_.get('element_type');\n\t\tel_type := val_.get_number; -- read value as number\n\t\tval_    := obj_.get('element_value');\n\t\tel_val  := val_.get_string; -- read value as string\n\t\t-- output read values\n\t\tdbms_output.put_line('Code: ' || el_code || ' Type: ' || el_type || ' Value: ' || el_val);\n\tend loop;\nend;\n```\n","html":"<h1 id=\"parse-json-in-pl-sql\">Parse JSON in PL/SQL</h1>\n<p>Download and install <a href=\"http://sourceforge.net/projects/pljson\">PL/JSON</a>.</p>\n<p>Following is an example of how to parse a JSON array represented as string:</p>\n<pre><code class=\"lang-sql\">declare\n    my_clob clob := '[\n                    {<span class=\"hljs-string\">\"element_code\"</span> : 1, <span class=\"hljs-string\">\"element_type\"</span>:11, <span class=\"hljs-string\">\"element_value\"</span> : <span class=\"hljs-string\">\"John Doe\"</span>},\n                    {<span class=\"hljs-string\">\"element_code\"</span> : 2, <span class=\"hljs-string\">\"element_type\"</span>:12, <span class=\"hljs-string\">\"element_value\"</span> : <span class=\"hljs-string\">\"10W384SSD\"</span>},\n                    {<span class=\"hljs-string\">\"element_code\"</span> :21, <span class=\"hljs-string\">\"element_type\"</span>:17, <span class=\"hljs-string\">\"element_value\"</span> : <span class=\"hljs-string\">\"2013\"</span>}\n                    ]';\n    arr_    json_list;\n    obj_    json;\n    val_    json_value;\n    el_code number(2);\n    el_type number(2);\n    el_val  varchar2(2000);\nbegin\n    -- <span class=\"hljs-keyword\">parse</span> json array <span class=\"hljs-built_in\">string</span>\n    arr_ := json_list(my_clob);\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> 1 .. arr_.<span class=\"hljs-keyword\">count</span> loop\n        obj_    := json(arr_.<span class=\"hljs-built_in\">get</span>(i)); -- get i element <span class=\"hljs-keyword\">as</span> json object\n        val_    := obj_.<span class=\"hljs-built_in\">get</span>('element_code');\n        el_code := val_.get_number; -- <span class=\"hljs-keyword\">read</span> value <span class=\"hljs-keyword\">as</span> number\n        val_    := obj_.<span class=\"hljs-built_in\">get</span>('element_type');\n        el_type := val_.get_number; -- <span class=\"hljs-keyword\">read</span> value <span class=\"hljs-keyword\">as</span> number\n        val_    := obj_.<span class=\"hljs-built_in\">get</span>('element_value');\n        el_val  := val_.get_string; -- <span class=\"hljs-keyword\">read</span> value <span class=\"hljs-keyword\">as</span> <span class=\"hljs-built_in\">string</span>\n        -- output <span class=\"hljs-keyword\">read</span> values\n        dbms_output.put_line('Code: ' || el_code || ' <span class=\"hljs-keyword\">Type</span>: ' || el_type || ' Value: ' || el_val);\n    end loop;\nend;\n</code></pre>\n"},{"html_url":"https://gist.github.com/5821f1060bf84bb9790e","description":"Call Oracle stored procedure/function with CLOB parameter","files":["https://gist.githubusercontent.com/umidjons/5821f1060bf84bb9790e/raw/326c9e3e4ef8a2fe920059e0b0bda042f11e8cb5/yii-call-oracle-stored-procedure-function-with-clob-param.md"],"content":"Call Oracle stored procedure/function with CLOB parameter\n===\n\nStored function with `CLOB` parameter implementation:\n\n```sql\ncreate or replace package body site_manager is\n\tfunction add_content(pExcerpt CLOB,pText CLOB) RETURN NUMBER IS\n\tbegin\n\t\t-- implementation of the function\n\tend;\nend site_manager;\n```\n\nModel implementation:\n\n```php\n<?php\nclass Content extends CActiveRecord{\n\tpublic function insertDb()\n\t{\n\t\t$oID = 0;\n\t\ttry\n\t\t{\n\t\t\tYii::app()->db->createCommand(\"BEGIN :oID := SITE_MANAGER.ADD_CONTENT(:pExcerpt, :pText); END;\")\n\t\t\t\t->bindParam(':oID', $oID, PDO::PARAM_INT, 12) // OUT parameter or function result\n\t\t\t\t->bindParam(':pExcerpt', $this->EXCERPT, PDO::PARAM_STR, strlen($this->EXCERPT)) // CLOB parameter as STR with LENGTH specified\n\t\t\t\t->bindParam(':pText', $this->TEXT, PDO::PARAM_STR, strlen($this->TEXT)) // CLOB parameter as STR with LENGTH specified\n\t\t\t\t->execute();\n\t\t\treturn $oID;\n\t\t}\n\t\tcatch(CDbException $ex)\n\t\t{\n\t\t\tE::handle($ex);\n\t\t\treturn false;\n\t\t}\n\t}\n}\n```","html":"<h1 id=\"call-oracle-stored-procedure-function-with-clob-parameter\">Call Oracle stored procedure/function with CLOB parameter</h1>\n<p>Stored function with <code>CLOB</code> parameter implementation:</p>\n<pre><code class=\"lang-sql\"><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">or</span> <span class=\"hljs-keyword\">replace</span> <span class=\"hljs-keyword\">package</span> <span class=\"hljs-keyword\">body</span> site_manager <span class=\"hljs-keyword\">is</span>\n    <span class=\"hljs-keyword\">function</span> add_content(pExcerpt <span class=\"hljs-keyword\">CLOB</span>,pText <span class=\"hljs-keyword\">CLOB</span>) <span class=\"hljs-keyword\">RETURN</span> <span class=\"hljs-built_in\">NUMBER</span> <span class=\"hljs-keyword\">IS</span>\n    <span class=\"hljs-keyword\">begin</span>\n        <span class=\"hljs-comment\">-- implementation of the function</span>\n    <span class=\"hljs-keyword\">end</span>;\n<span class=\"hljs-keyword\">end</span> site_manager;\n</code></pre>\n<p>Model implementation:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Content</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CActiveRecord</span></span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">insertDb</span><span class=\"hljs-params\">()</span>\n    </span>{\n        $oID = <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">try</span>\n        {\n            Yii::app()-&gt;db-&gt;createCommand(<span class=\"hljs-string\">\"BEGIN :oID := SITE_MANAGER.ADD_CONTENT(:pExcerpt, :pText); END;\"</span>)\n                -&gt;bindParam(<span class=\"hljs-string\">':oID'</span>, $oID, PDO::PARAM_INT, <span class=\"hljs-number\">12</span>) <span class=\"hljs-comment\">// OUT parameter or function result</span>\n                -&gt;bindParam(<span class=\"hljs-string\">':pExcerpt'</span>, <span class=\"hljs-keyword\">$this</span>-&gt;EXCERPT, PDO::PARAM_STR, strlen(<span class=\"hljs-keyword\">$this</span>-&gt;EXCERPT)) <span class=\"hljs-comment\">// CLOB parameter as STR with LENGTH specified</span>\n                -&gt;bindParam(<span class=\"hljs-string\">':pText'</span>, <span class=\"hljs-keyword\">$this</span>-&gt;TEXT, PDO::PARAM_STR, strlen(<span class=\"hljs-keyword\">$this</span>-&gt;TEXT)) <span class=\"hljs-comment\">// CLOB parameter as STR with LENGTH specified</span>\n                -&gt;execute();\n            <span class=\"hljs-keyword\">return</span> $oID;\n        }\n        <span class=\"hljs-keyword\">catch</span>(CDbException $ex)\n        {\n            E::handle($ex);\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n    }\n}</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/2751077d9d9d639e0f49","description":"Set default value to select in dropDownList","files":["https://gist.githubusercontent.com/umidjons/2751077d9d9d639e0f49/raw/f66e1154a7441ac568043a39066f6c63f3f5b4be/select-option-dropdownlist.md"],"content":"Set default value to select in dropDownList\n===\n\nOptions (`<option>`) attributes set as following:\n```php\n<?php\n$form->dropDownList($model,'attr',$data,['options'=>['value1'=>['attr1'=>'attr1 val', 'attr2'=>'attr2 val',]]]);\n```\n\nI want to select option with value 860, like so:\n```html\n<option value=860 selected>Uzb</option>\n```\n\nI can use following code to achieve this (`R::country()` and `R::region()` returns list data in `array(val=>text,...)` format):\n\n```html\n<div class=\"form-group\">\n\t<div class=\"col-sm-4\">\n\t\t<?= $form->label($model, 'COUNTRY'); ?>\n\t\t<?= $form->dropDownList($model, 'COUNTRY', R::country(), ['class' => 'form-control', 'options' => ['860' => ['selected' => true],]]); ?>\n\t\t<?= $form->error($model, 'COUNTRY'); ?>\n\t</div>\n\t<div class=\"col-sm-4\">\n\t\t<?= $form->label($model, 'REGION'); ?>\n\t\t<?= $form->dropDownList($model, 'REGION', R::region(), ['class' => 'form-control', 'options' => ['26' => ['selected' => true],]]); ?>\n\t\t<?= $form->error($model, 'REGION'); ?>\n\t</div>\n</div>\n```\n","html":"<h1 id=\"set-default-value-to-select-in-dropdownlist\">Set default value to select in dropDownList</h1>\n<p>Options (<code>&lt;option&gt;</code>) attributes set as following:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n$form-&gt;dropDownList($model,<span class=\"hljs-string\">'attr'</span>,$data,[<span class=\"hljs-string\">'options'</span>=&gt;[<span class=\"hljs-string\">'value1'</span>=&gt;[<span class=\"hljs-string\">'attr1'</span>=&gt;<span class=\"hljs-string\">'attr1 val'</span>, <span class=\"hljs-string\">'attr2'</span>=&gt;<span class=\"hljs-string\">'attr2 val'</span>,]]]);</span>\n</code></pre>\n<p>I want to select option with value 860, like so:</p>\n<pre><code class=\"lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">860</span> <span class=\"hljs-attr\">selected</span>&gt;</span>Uzb<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n</code></pre>\n<p>I can use following code to achieve this (<code>R::country()</code> and <code>R::region()</code> returns list data in <code>array(val=&gt;text,...)</code> format):</p>\n<pre><code class=\"lang-html\">&lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"form-group\"</span>&gt;\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-4\"</span>&gt;</span>\n        <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;label($model, <span class=\"hljs-string\">'COUNTRY'</span>); <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;dropDownList($model, <span class=\"hljs-string\">'COUNTRY'</span>, R::country(), [<span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'form-control'</span>, <span class=\"hljs-string\">'options'</span> =&gt; [<span class=\"hljs-string\">'860'</span> =&gt; [<span class=\"hljs-string\">'selected'</span> =&gt; <span class=\"hljs-keyword\">true</span>],]]); <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;error($model, <span class=\"hljs-string\">'COUNTRY'</span>); <span class=\"hljs-meta\">?&gt;</span></span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n    &lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"col-sm-4\"</span>&gt;\n        <span class=\"xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;label($model, <span class=\"hljs-string\">'REGION'</span>); <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;dropDownList($model, <span class=\"hljs-string\">'REGION'</span>, R::region(), [<span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'form-control'</span>, <span class=\"hljs-string\">'options'</span> =&gt; [<span class=\"hljs-string\">'26'</span> =&gt; [<span class=\"hljs-string\">'selected'</span> =&gt; <span class=\"hljs-keyword\">true</span>],]]); <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;error($model, <span class=\"hljs-string\">'REGION'</span>); <span class=\"hljs-meta\">?&gt;</span></span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n&lt;<span class=\"hljs-regexp\">/div&gt;</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/d032e37fcf7c55b81f32","description":"Switch NLS_LANG between CP1251 and UTF8","files":["https://gist.githubusercontent.com/umidjons/d032e37fcf7c55b81f32/raw/ab3be43a617b0290b0faec15f72fb49a75fbecbc/switch-nlslang-between-cp1251-and-utf8.md"],"content":"Switch NLS_LANG between CP1251 and UTF8\n===\n\n```bat\nsetx NLS_LANG AMERICAN_AMERICA.CL8MSWIN1251\nsetx NLS_LANG RUSSIAN_CIS.CL8MSWIN1251\nsetx NLS_LANG AMERICAN_AMERICA.UTF8\n```\n","html":"<h1 id=\"switch-nls_lang-between-cp1251-and-utf8\">Switch NLS_LANG between CP1251 and UTF8</h1>\n<pre><code class=\"lang-bat\">setx NLS_LANG AMERICAN_AMERICA<span class=\"hljs-selector-class\">.CL8MSWIN1251</span>\nsetx NLS_LANG RUSSIAN_CIS<span class=\"hljs-selector-class\">.CL8MSWIN1251</span>\nsetx NLS_LANG AMERICAN_AMERICA.UTF8\n</code></pre>\n"},{"html_url":"https://gist.github.com/b82f2a1bdb4bedc34a23","description":"Behavior to show CLOB fields in Oracle","files":["https://gist.githubusercontent.com/umidjons/b82f2a1bdb4bedc34a23/raw/bda6a5035046cf7493ebb6bd28fbf122e5787b39/clob-behavior.md"],"content":"Behavior to show CLOB fields in Oracle\n===\n\nLast implementation via OCI to avoid Oracle SDU issues:\n```php\n<?php\n\nclass EClobBehavior extends CActiveRecordBehavior\n{\n\tpublic $idName='ID'; // ID column name\n\tpublic $clobAttributes=[]; // array or comma separated attribute names\n\tpublic $condition='';\n\n\tpublic function afterFind($event)\n\t{\n\t\tif(!empty($this->clobAttributes))\n\t\t{\n\t\t\t$attributes=[];\n\t\t\t$model     =$this->owner;\n\t\t\tif(is_string($this->clobAttributes))\n\t\t\t\t$this->clobAttributes=explode(',',$this->clobAttributes);\n\n\t\t\tforeach($this->clobAttributes as $attr)\n\t\t\t{\n\t\t\t\t$attr=trim($attr);\n\t\t\t\tif(is_resource($model->{$attr}))\n\t\t\t\t\t$attributes[]=$attr;\n\t\t\t}\n\t\t\tif(!empty($attributes))\n\t\t\t{\n\t\t\t\t$tab     =$model->tableName(); // table name\n\t\t\t\t$idcolumn=$this->idName; // column name to identify row/record\n\t\t\t\t$idvalue =$model->{$idcolumn}; // column value to identify row/record\n\t\t\t\t$attrs   =implode(',',$attributes); // comma separated column names\n\t\t\t\t$sql     =\"SELECT $attrs FROM $tab WHERE $idcolumn=:id AND rownum<2\"; // query to retrieve row/record\n\t\t\t\tif($this->condition)\n\t\t\t\t\t$sql.=' AND '.$this->condition;\n\t\t\t\t$row=Yii::app()->odb->select($sql,[':id'=>$idvalue],true);\n\t\t\t\tforeach($attributes as $a)\n\t\t\t\t\tif(gettype($row[$a])==\"object\" && get_class($row[$a])=='OCI-Lob')\n\t\t\t\t\t\t$model->{$a}=$row[$a]->load();\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\nUsage example:\n\n```php\n<?php\n/**\n * @property integer        $ID\n * @property string         $TITLE\n * @property string         $EXCERPT\n * @property string         $TEXT\n */\nclass Content extends CActiveRecord\n{\n\tpublic function behaviors()\n\t{\n\t\treturn [\n\t\t\t'EClobBehavior'    => [\n\t\t\t\t'class'          => 'EClobBehavior',\n\t\t\t\t'clobAttributes' => 'EXCERPT,TEXT',\n\t\t\t],\n\t\t];\n\t}\n}\n```\n\nUsage example with primary key:\n\n```php\n<?php\n/**\n * @property integer        $CODE\n * @property string         $TITLE\n * @property string         $EXCERPT\n * @property string         $TEXT\n */\nclass Content extends CActiveRecord\n{\n\tpublic function behaviors()\n\t{\n\t\treturn [\n\t\t\t'EClobBehavior'    => [\n\t\t\t\t'class'          => 'EClobBehavior',\n\t\t\t\t'clobAttributes' => 'EXCERPT,TEXT',\n\t\t\t\t'idName'         => 'CODE',\n\t\t\t],\n\t\t];\n\t}\n}\n```\n\nUsage example with additional condition:\n\n```php\n<?php\n/**\n * @property string $PHP_SESSION\n * @property string $USER_ID\n * @property string $NORDER\n * @property string $CONTENT\n */\nclass ShowContent extends CActiveRecord\n{\n\t// ...\n\tpublic function behaviors()\n\t{\n\t\treturn [\n\t\t\t'EClobBehavior'=>[\n\t\t\t\t'class'         =>'EClobBehavior',\n\t\t\t\t'clobAttributes'=>'CONTENT',\n\t\t\t\t'idName'        =>'NORDER',\n\t\t\t\t'condition'     =>Yii::app()->getUser()->isGuest ? \"PHP_SESSION='\".session_id().\"'\" : \"USER_ID=\".Yii::app()->getUser()->getId(),\n\t\t\t],\n\t\t];\n\t}\n\t// ...\n}\n```","html":"<h1 id=\"behavior-to-show-clob-fields-in-oracle\">Behavior to show CLOB fields in Oracle</h1>\n<p>Last implementation via OCI to avoid Oracle SDU issues:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">EClobBehavior</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CActiveRecordBehavior</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> $idName=<span class=\"hljs-string\">'ID'</span>; <span class=\"hljs-comment\">// ID column name</span>\n    <span class=\"hljs-keyword\">public</span> $clobAttributes=[]; <span class=\"hljs-comment\">// array or comma separated attribute names</span>\n    <span class=\"hljs-keyword\">public</span> $condition=<span class=\"hljs-string\">''</span>;\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">afterFind</span><span class=\"hljs-params\">($event)</span>\n    </span>{\n        <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">empty</span>(<span class=\"hljs-keyword\">$this</span>-&gt;clobAttributes))\n        {\n            $attributes=[];\n            $model     =<span class=\"hljs-keyword\">$this</span>-&gt;owner;\n            <span class=\"hljs-keyword\">if</span>(is_string(<span class=\"hljs-keyword\">$this</span>-&gt;clobAttributes))\n                <span class=\"hljs-keyword\">$this</span>-&gt;clobAttributes=explode(<span class=\"hljs-string\">','</span>,<span class=\"hljs-keyword\">$this</span>-&gt;clobAttributes);\n\n            <span class=\"hljs-keyword\">foreach</span>(<span class=\"hljs-keyword\">$this</span>-&gt;clobAttributes <span class=\"hljs-keyword\">as</span> $attr)\n            {\n                $attr=trim($attr);\n                <span class=\"hljs-keyword\">if</span>(is_resource($model-&gt;{$attr}))\n                    $attributes[]=$attr;\n            }\n            <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">empty</span>($attributes))\n            {\n                $tab     =$model-&gt;tableName(); <span class=\"hljs-comment\">// table name</span>\n                $idcolumn=<span class=\"hljs-keyword\">$this</span>-&gt;idName; <span class=\"hljs-comment\">// column name to identify row/record</span>\n                $idvalue =$model-&gt;{$idcolumn}; <span class=\"hljs-comment\">// column value to identify row/record</span>\n                $attrs   =implode(<span class=\"hljs-string\">','</span>,$attributes); <span class=\"hljs-comment\">// comma separated column names</span>\n                $sql     =<span class=\"hljs-string\">\"SELECT $attrs FROM $tab WHERE $idcolumn=:id AND rownum&lt;2\"</span>; <span class=\"hljs-comment\">// query to retrieve row/record</span>\n                <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">$this</span>-&gt;condition)\n                    $sql.=<span class=\"hljs-string\">' AND '</span>.<span class=\"hljs-keyword\">$this</span>-&gt;condition;\n                $row=Yii::app()-&gt;odb-&gt;select($sql,[<span class=\"hljs-string\">':id'</span>=&gt;$idvalue],<span class=\"hljs-keyword\">true</span>);\n                <span class=\"hljs-keyword\">foreach</span>($attributes <span class=\"hljs-keyword\">as</span> $a)\n                    <span class=\"hljs-keyword\">if</span>(gettype($row[$a])==<span class=\"hljs-string\">\"object\"</span> &amp;&amp; get_class($row[$a])==<span class=\"hljs-string\">'OCI-Lob'</span>)\n                        $model-&gt;{$a}=$row[$a]-&gt;load();\n            }\n        }\n    }\n}</span>\n</code></pre>\n<p>Usage example:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-comment\">/**\n * <span class=\"hljs-doctag\">@property</span> integer        $ID\n * <span class=\"hljs-doctag\">@property</span> string         $TITLE\n * <span class=\"hljs-doctag\">@property</span> string         $EXCERPT\n * <span class=\"hljs-doctag\">@property</span> string         $TEXT\n */</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Content</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CActiveRecord</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">behaviors</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> [\n            <span class=\"hljs-string\">'EClobBehavior'</span>    =&gt; [\n                <span class=\"hljs-string\">'class'</span>          =&gt; <span class=\"hljs-string\">'EClobBehavior'</span>,\n                <span class=\"hljs-string\">'clobAttributes'</span> =&gt; <span class=\"hljs-string\">'EXCERPT,TEXT'</span>,\n            ],\n        ];\n    }\n}</span>\n</code></pre>\n<p>Usage example with primary key:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-comment\">/**\n * <span class=\"hljs-doctag\">@property</span> integer        $CODE\n * <span class=\"hljs-doctag\">@property</span> string         $TITLE\n * <span class=\"hljs-doctag\">@property</span> string         $EXCERPT\n * <span class=\"hljs-doctag\">@property</span> string         $TEXT\n */</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Content</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CActiveRecord</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">behaviors</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> [\n            <span class=\"hljs-string\">'EClobBehavior'</span>    =&gt; [\n                <span class=\"hljs-string\">'class'</span>          =&gt; <span class=\"hljs-string\">'EClobBehavior'</span>,\n                <span class=\"hljs-string\">'clobAttributes'</span> =&gt; <span class=\"hljs-string\">'EXCERPT,TEXT'</span>,\n                <span class=\"hljs-string\">'idName'</span>         =&gt; <span class=\"hljs-string\">'CODE'</span>,\n            ],\n        ];\n    }\n}</span>\n</code></pre>\n<p>Usage example with additional condition:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-comment\">/**\n * <span class=\"hljs-doctag\">@property</span> string $PHP_SESSION\n * <span class=\"hljs-doctag\">@property</span> string $USER_ID\n * <span class=\"hljs-doctag\">@property</span> string $NORDER\n * <span class=\"hljs-doctag\">@property</span> string $CONTENT\n */</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ShowContent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CActiveRecord</span>\n</span>{\n    <span class=\"hljs-comment\">// ...</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">behaviors</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> [\n            <span class=\"hljs-string\">'EClobBehavior'</span>=&gt;[\n                <span class=\"hljs-string\">'class'</span>         =&gt;<span class=\"hljs-string\">'EClobBehavior'</span>,\n                <span class=\"hljs-string\">'clobAttributes'</span>=&gt;<span class=\"hljs-string\">'CONTENT'</span>,\n                <span class=\"hljs-string\">'idName'</span>        =&gt;<span class=\"hljs-string\">'NORDER'</span>,\n                <span class=\"hljs-string\">'condition'</span>     =&gt;Yii::app()-&gt;getUser()-&gt;isGuest ? <span class=\"hljs-string\">\"PHP_SESSION='\"</span>.session_id().<span class=\"hljs-string\">\"'\"</span> : <span class=\"hljs-string\">\"USER_ID=\"</span>.Yii::app()-&gt;getUser()-&gt;getId(),\n            ],\n        ];\n    }\n    <span class=\"hljs-comment\">// ...</span>\n}</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/1680385a896839321151","description":"EUserBehavior to set created and updated user IDs in Oracle","files":["https://gist.githubusercontent.com/umidjons/1680385a896839321151/raw/10aaf7dca40bae82c3d8403c8cb220d9459b1e67/user-behavior.md"],"content":"EUserBehavior to set created and updated user IDs in Oracle\n===\n\nBehavior implementation:\n\n```php\n<?php\nclass EUserBehavior extends CActiveRecordBehavior\n{\n\tpublic $createAttribute = 'CUSER_ID';\n\tpublic $updateAttribute = 'UUSER_ID'; // null - do not use\n\tpublic $updateOnCreate = false;\n\n\tpublic function beforeSave($event)\n\t{\n\t\t$model   = $this->owner;\n\t\t$user_id = Yii::app()->user->isGuest ? 0 : Yii::app()->user->id;\n\t\tif($model->isNewRecord && $this->createAttribute !== null)\n\t\t\t$model->{$this->createAttribute} = $user_id;\n\t\tif((!$model->isNewRecord || $this->updateOnCreate) && $this->updateAttribute !== null)\n\t\t\t$model->{$this->updateAttribute} = $user_id;\n\t}\n}\n```\n\nUsage example:\n\n```php\n<?php\n/**\n * @property integer        $ID\n * @property string         $TITLE\n * @property string         $TEXT\n * @property integer        $CUSER_ID\n * @property integer        $UUSER_ID\n */\nclass Content extends CActiveRecord\n{\n\tpublic function behaviors()\n\t{\n\t\treturn [\n\t\t\t'EUserBehavior'    => [\n\t\t\t\t'class'          => 'EUserBehavior',\n\t\t\t\t//'createAttribute'=> 'CUSER_ID', // set if different from default\n\t\t\t\t//'updateAttribute'=> 'UUSER_ID', // set if different from default\n\t\t\t\t'updateOnCreate' => true,\n\t\t\t],\n\t\t];\n\t}\n}\n```\n","html":"<h1 id=\"euserbehavior-to-set-created-and-updated-user-ids-in-oracle\">EUserBehavior to set created and updated user IDs in Oracle</h1>\n<p>Behavior implementation:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">EUserBehavior</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CActiveRecordBehavior</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> $createAttribute = <span class=\"hljs-string\">'CUSER_ID'</span>;\n    <span class=\"hljs-keyword\">public</span> $updateAttribute = <span class=\"hljs-string\">'UUSER_ID'</span>; <span class=\"hljs-comment\">// null - do not use</span>\n    <span class=\"hljs-keyword\">public</span> $updateOnCreate = <span class=\"hljs-keyword\">false</span>;\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">beforeSave</span><span class=\"hljs-params\">($event)</span>\n    </span>{\n        $model   = <span class=\"hljs-keyword\">$this</span>-&gt;owner;\n        $user_id = Yii::app()-&gt;user-&gt;isGuest ? <span class=\"hljs-number\">0</span> : Yii::app()-&gt;user-&gt;id;\n        <span class=\"hljs-keyword\">if</span>($model-&gt;isNewRecord &amp;&amp; <span class=\"hljs-keyword\">$this</span>-&gt;createAttribute !== <span class=\"hljs-keyword\">null</span>)\n            $model-&gt;{<span class=\"hljs-keyword\">$this</span>-&gt;createAttribute} = $user_id;\n        <span class=\"hljs-keyword\">if</span>((!$model-&gt;isNewRecord || <span class=\"hljs-keyword\">$this</span>-&gt;updateOnCreate) &amp;&amp; <span class=\"hljs-keyword\">$this</span>-&gt;updateAttribute !== <span class=\"hljs-keyword\">null</span>)\n            $model-&gt;{<span class=\"hljs-keyword\">$this</span>-&gt;updateAttribute} = $user_id;\n    }\n}</span>\n</code></pre>\n<p>Usage example:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-comment\">/**\n * <span class=\"hljs-doctag\">@property</span> integer        $ID\n * <span class=\"hljs-doctag\">@property</span> string         $TITLE\n * <span class=\"hljs-doctag\">@property</span> string         $TEXT\n * <span class=\"hljs-doctag\">@property</span> integer        $CUSER_ID\n * <span class=\"hljs-doctag\">@property</span> integer        $UUSER_ID\n */</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Content</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CActiveRecord</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">behaviors</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> [\n            <span class=\"hljs-string\">'EUserBehavior'</span>    =&gt; [\n                <span class=\"hljs-string\">'class'</span>          =&gt; <span class=\"hljs-string\">'EUserBehavior'</span>,\n                <span class=\"hljs-comment\">//'createAttribute'=&gt; 'CUSER_ID', // set if different from default</span>\n                <span class=\"hljs-comment\">//'updateAttribute'=&gt; 'UUSER_ID', // set if different from default</span>\n                <span class=\"hljs-string\">'updateOnCreate'</span> =&gt; <span class=\"hljs-keyword\">true</span>,\n            ],\n        ];\n    }\n}</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/9e66d102b5db585f7f2f","description":"ESysdateBehavior to set current date and time in oracle","files":["https://gist.githubusercontent.com/umidjons/9e66d102b5db585f7f2f/raw/84f535ffdbab84a2ccb3d5c37ee48ced59ff3da5/sysdate-behavior.md"],"content":"ESysdateBehavior to set current date and time in oracle\n===\n\nImplementation of behavior is following:\n\n```php\n<?php\nclass ESysdateBehavior extends CActiveRecordBehavior\n{\n\tpublic $createAttribute = 'CREATED_AT';\n\tpublic $updateAttribute = 'UPDATED_AT'; // null - do not use\n\tpublic $updateOnCreate = false;\n\n\tpublic function beforeSave($event)\n\t{\n\t\t$model   = $this->owner;\n\t\t$sysdate = new CDbExpression('sysdate');\n\t\tif($model->isNewRecord && $this->createAttribute !== null)\n\t\t\t$model->{$this->createAttribute} = $sysdate;\n\t\tif((!$model->isNewRecord || $this->updateOnCreate) && $this->updateAttribute !== null)\n\t\t\t$model->{$this->updateAttribute} = $sysdate;\n\t}\n}\n```\n\nUsage example:\n\n```php\n<?php\n/**\n * @property integer        $ID\n * @property string         $TITLE\n * @property string         $TEXT\n * @property string         $CREATED_AT\n * @property string         $UPDATED_AT\n */\n\nclass Content extends CActiveRecord\n{\n\tpublic function behaviors()\n\t{\n\t\treturn [\n\t\t\t'ESysdateBehavior' => [\n\t\t\t\t'class'          => 'ESysdateBehavior',\n\t\t\t\t//'createAttribute'=> 'CREATED_AT', // set if different from default\n\t\t\t\t//'updateAttribute'=> 'UPDATED_AT', // set if different from default\n\t\t\t\t'updateOnCreate' => true,\n\t\t\t],\n\t\t];\n\t}\n}\n```\n","html":"<h1 id=\"esysdatebehavior-to-set-current-date-and-time-in-oracle\">ESysdateBehavior to set current date and time in oracle</h1>\n<p>Implementation of behavior is following:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ESysdateBehavior</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CActiveRecordBehavior</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> $createAttribute = <span class=\"hljs-string\">'CREATED_AT'</span>;\n    <span class=\"hljs-keyword\">public</span> $updateAttribute = <span class=\"hljs-string\">'UPDATED_AT'</span>; <span class=\"hljs-comment\">// null - do not use</span>\n    <span class=\"hljs-keyword\">public</span> $updateOnCreate = <span class=\"hljs-keyword\">false</span>;\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">beforeSave</span><span class=\"hljs-params\">($event)</span>\n    </span>{\n        $model   = <span class=\"hljs-keyword\">$this</span>-&gt;owner;\n        $sysdate = <span class=\"hljs-keyword\">new</span> CDbExpression(<span class=\"hljs-string\">'sysdate'</span>);\n        <span class=\"hljs-keyword\">if</span>($model-&gt;isNewRecord &amp;&amp; <span class=\"hljs-keyword\">$this</span>-&gt;createAttribute !== <span class=\"hljs-keyword\">null</span>)\n            $model-&gt;{<span class=\"hljs-keyword\">$this</span>-&gt;createAttribute} = $sysdate;\n        <span class=\"hljs-keyword\">if</span>((!$model-&gt;isNewRecord || <span class=\"hljs-keyword\">$this</span>-&gt;updateOnCreate) &amp;&amp; <span class=\"hljs-keyword\">$this</span>-&gt;updateAttribute !== <span class=\"hljs-keyword\">null</span>)\n            $model-&gt;{<span class=\"hljs-keyword\">$this</span>-&gt;updateAttribute} = $sysdate;\n    }\n}</span>\n</code></pre>\n<p>Usage example:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-comment\">/**\n * <span class=\"hljs-doctag\">@property</span> integer        $ID\n * <span class=\"hljs-doctag\">@property</span> string         $TITLE\n * <span class=\"hljs-doctag\">@property</span> string         $TEXT\n * <span class=\"hljs-doctag\">@property</span> string         $CREATED_AT\n * <span class=\"hljs-doctag\">@property</span> string         $UPDATED_AT\n */</span>\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Content</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CActiveRecord</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">behaviors</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> [\n            <span class=\"hljs-string\">'ESysdateBehavior'</span> =&gt; [\n                <span class=\"hljs-string\">'class'</span>          =&gt; <span class=\"hljs-string\">'ESysdateBehavior'</span>,\n                <span class=\"hljs-comment\">//'createAttribute'=&gt; 'CREATED_AT', // set if different from default</span>\n                <span class=\"hljs-comment\">//'updateAttribute'=&gt; 'UPDATED_AT', // set if different from default</span>\n                <span class=\"hljs-string\">'updateOnCreate'</span> =&gt; <span class=\"hljs-keyword\">true</span>,\n            ],\n        ];\n    }\n}</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/920c7b09cca1c746941d","description":"Show time part of dates for Oracle DB","files":["https://gist.githubusercontent.com/umidjons/920c7b09cca1c746941d/raw/1d84ed9bb1e13b407ec821b7fea33597a0a33125/show-time-part-of-dates-for-oracle-db.md"],"content":"Show time part of dates for Oracle DB\n===\n\nTo show time part of dates we have to set `NLS_DATE_FORMAT` variable.\nWe can set it in configuration file via `initSQLs` key.\n\n```php\n<?php\n'db'            => [\n\t'class'                 => 'CDbConnection',\n\t'connectionString'      => 'oci:dbname=MYTNS;charset=utf8',\n\t'username'              => 'mylogin',\n\t'password'              => 'mypassword',\n\t'schemaCachingDuration' => '3600',\n\t'enableParamLogging'    => true,\n\t'attributes'            => [PDO::ATTR_CASE => PDO::CASE_NATURAL],\n\t'initSQLs'              => [\n\t\t'ALTER SESSION SET NLS_DATE_FORMAT=\"DD.MM.YYYY HH24:MI:SS\"',\n\t],\n],\n```\n","html":"<h1 id=\"show-time-part-of-dates-for-oracle-db\">Show time part of dates for Oracle DB</h1>\n<p>To show time part of dates we have to set <code>NLS_DATE_FORMAT</code> variable.\nWe can set it in configuration file via <code>initSQLs</code> key.</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-string\">'db'</span>            =&gt; [\n    <span class=\"hljs-string\">'class'</span>                 =&gt; <span class=\"hljs-string\">'CDbConnection'</span>,\n    <span class=\"hljs-string\">'connectionString'</span>      =&gt; <span class=\"hljs-string\">'oci:dbname=MYTNS;charset=utf8'</span>,\n    <span class=\"hljs-string\">'username'</span>              =&gt; <span class=\"hljs-string\">'mylogin'</span>,\n    <span class=\"hljs-string\">'password'</span>              =&gt; <span class=\"hljs-string\">'mypassword'</span>,\n    <span class=\"hljs-string\">'schemaCachingDuration'</span> =&gt; <span class=\"hljs-string\">'3600'</span>,\n    <span class=\"hljs-string\">'enableParamLogging'</span>    =&gt; <span class=\"hljs-keyword\">true</span>,\n    <span class=\"hljs-string\">'attributes'</span>            =&gt; [PDO::ATTR_CASE =&gt; PDO::CASE_NATURAL],\n    <span class=\"hljs-string\">'initSQLs'</span>              =&gt; [\n        <span class=\"hljs-string\">'ALTER SESSION SET NLS_DATE_FORMAT=\"DD.MM.YYYY HH24:MI:SS\"'</span>,\n    ],\n],</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/467c998a5b65e97c082e","description":"Configure Yii for Oracle database","files":["https://gist.githubusercontent.com/umidjons/467c998a5b65e97c082e/raw/82a4b237d1985cd4f0c3e0c50bb8b106a6d858e4/yii-oracle.md"],"content":"Configure Yii for Oracle database\n===\n\nEnable `php_oci8` and `php_pdo_oci` extensions in `php.ini` file.\nRestart web server to apply new settings.\n\nAfter creating web application via `yiic` configure database connection like this:\n```php\n<?php\n\t\t'db'           => array(\n\t\t\t'class'            => 'CDbConnection',\n\t\t\t'connectionString' => 'oci:dbname=MYDB;charset=UTF8', // MYDB is TNS name\n\t\t\t'username'         => 'mylogin',\n\t\t\t'password'         => 'mypassword',\n\t\t),\n\n```\n\nEncoding of database is UTF8, so we should set environment variable `NLS_LANG`:\n\n```bash\nexport NLS_LANG=american_america.utf8\n```\n","html":"<h1 id=\"configure-yii-for-oracle-database\">Configure Yii for Oracle database</h1>\n<p>Enable <code>php_oci8</code> and <code>php_pdo_oci</code> extensions in <code>php.ini</code> file.\nRestart web server to apply new settings.</p>\n<p>After creating web application via <code>yiic</code> configure database connection like this:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n        <span class=\"hljs-string\">'db'</span>           =&gt; <span class=\"hljs-keyword\">array</span>(\n            <span class=\"hljs-string\">'class'</span>            =&gt; <span class=\"hljs-string\">'CDbConnection'</span>,\n            <span class=\"hljs-string\">'connectionString'</span> =&gt; <span class=\"hljs-string\">'oci:dbname=MYDB;charset=UTF8'</span>, <span class=\"hljs-comment\">// MYDB is TNS name</span>\n            <span class=\"hljs-string\">'username'</span>         =&gt; <span class=\"hljs-string\">'mylogin'</span>,\n            <span class=\"hljs-string\">'password'</span>         =&gt; <span class=\"hljs-string\">'mypassword'</span>,\n        ),</span>\n</code></pre>\n<p>Encoding of database is UTF8, so we should set environment variable <code>NLS_LANG</code>:</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-keyword\">export</span> NLS_LANG=american_america.utf8\n</code></pre>\n"},{"html_url":"https://gist.github.com/e4ec5ce2b26b150214b6","description":"Get package body text in sqlplus","files":["https://gist.githubusercontent.com/umidjons/e4ec5ce2b26b150214b6/raw/7ee22966c0570b5c5989bba1ec0f83b1b7768096/sqlplus-package-body.md"],"content":"Get package body text in sqlplus\n===\n\n```sql\nselect text \nfrom all_source \nwhere \n  name='MY_PKG' \n  and type='PACKAGE BODY'\norder by line;\n```","html":"<h1 id=\"get-package-body-text-in-sqlplus\">Get package body text in sqlplus</h1>\n<pre><code class=\"lang-sql\"><span class=\"hljs-keyword\">select</span> <span class=\"hljs-built_in\">text</span> \n<span class=\"hljs-keyword\">from</span> all_source \n<span class=\"hljs-keyword\">where</span> \n  <span class=\"hljs-keyword\">name</span>=<span class=\"hljs-string\">'MY_PKG'</span> \n  <span class=\"hljs-keyword\">and</span> <span class=\"hljs-keyword\">type</span>=<span class=\"hljs-string\">'PACKAGE BODY'</span>\n<span class=\"hljs-keyword\">order</span> <span class=\"hljs-keyword\">by</span> line;\n</code></pre>\n"},{"html_url":"https://gist.github.com/a2c219d78786a36b0ae7","description":"Timestamp like string/number","files":["https://gist.githubusercontent.com/umidjons/a2c219d78786a36b0ae7/raw/fa25fc7702ffc61f779b841d207f9e86a6787e41/timestamp-like-string.md"],"content":"Timestamp like string/number\n\n```sql\nselect to_char(systimestamp ,'YYYYMMDDHH24MISSFF9') from dual\n```\n\nOutputs:\n\n```\n20140725102421783445000\n```","html":"<p>Timestamp like string/number</p>\n<pre><code class=\"lang-sql\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">select</span> <span class=\"hljs-title\">to_char</span>(<span class=\"hljs-params\">systimestamp ,<span class=\"hljs-string\">'YYYYMMDDHH24MISSFF9'</span></span>) <span class=\"hljs-keyword\">from</span> dual</span>\n</code></pre>\n<p>Outputs:</p>\n<pre><code><span class=\"hljs-number\">20140725102421783445000</span>\n</code></pre>"},{"html_url":"https://gist.github.com/d2d0674d59d8c1876a91","description":"Execute dos2unix for directory recursively.","files":["https://gist.githubusercontent.com/umidjons/d2d0674d59d8c1876a91/raw/7e5b53673e893705135f01e3f600dc381d50cc6b/dos2unix.md"],"content":"\nWill recursively find all files inside current directory and call for these files dos2unix command. Would break if you had spaces in file name.\n```bash\nfind . -type f -exec dos2unix {} \\;\n```\n\nWouldn't break if you had spaces in file names.\n```bash\nfind . -type f -print0 | xargs -0 dos2unix\n```\n\nConvert only *.php files\n```bash\nfind . -type f -name \"*.php\" -print0 | xargs -0 dos2unix\n```\n\n\nIf it's a large directory you may want to consider running with multiple processors:\n```bash\nfind . -type f -print0 | xargs -0 -n 1 -P 4 dos2unix \n```\nThis will pass 1 file at a time, and use 4 processors.","html":"<p>Will recursively find all files inside current directory and call for these files dos2unix command. Would break if you had spaces in file name.</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-title\">find</span> . -<span class=\"hljs-keyword\">type</span> f -exec dos2unix {} \\;\n</code></pre>\n<p>Wouldn&#39;t break if you had spaces in file names.</p>\n<pre><code class=\"lang-bash\">find . -<span class=\"hljs-keyword\">type</span> <span class=\"hljs-type\">f </span>-print0 | xargs -<span class=\"hljs-number\">0</span> dos2unix\n</code></pre>\n<p>Convert only *.php files</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-built_in\">find</span> . -<span class=\"hljs-built_in\">type</span> f -<span class=\"hljs-built_in\">name</span> <span class=\"hljs-string\">\"*.php\"</span> -print0 | xargs -<span class=\"hljs-number\">0</span> dos2unix\n</code></pre>\n<p>If it&#39;s a large directory you may want to consider running with multiple processors:</p>\n<pre><code class=\"lang-bash\"><span class=\"hljs-built_in\">find</span> . -<span class=\"hljs-built_in\">type</span> f -print0 | xargs -<span class=\"hljs-number\">0</span> -<span class=\"hljs-built_in\">n</span> <span class=\"hljs-number\">1</span> -P <span class=\"hljs-number\">4</span> dos2unix\n</code></pre>\n<p>This will pass 1 file at a time, and use 4 processors.</p>\n"},{"html_url":"https://gist.github.com/fac3e1603ee0ae00a2b4","description":"Configure sqlplus","files":["https://gist.githubusercontent.com/umidjons/fac3e1603ee0ae00a2b4/raw/6b18c2da8aab575928f2156df3dd7c9d2584aee3/configure-sqlplus.md"],"content":"Configure sqlplus\n===\n\nSet line and page size\n\n```sql\nset linesize 157 pagesize 50\nset trimout on\nset space 1\nset tab off\n```\n\nConfigure column format and size\n```sql\ncolumn id format 999999999\ncolumn text format a35\n```","html":"<h1 id=\"configure-sqlplus\">Configure sqlplus</h1>\n<p>Set line and page size</p>\n<pre><code class=\"lang-sql\"><span class=\"hljs-keyword\">set</span> linesize <span class=\"hljs-number\">157</span> pagesize <span class=\"hljs-number\">50</span>\n<span class=\"hljs-keyword\">set</span> trimout <span class=\"hljs-keyword\">on</span>\n<span class=\"hljs-keyword\">set</span> <span class=\"hljs-literal\">space</span> <span class=\"hljs-number\">1</span>\n<span class=\"hljs-keyword\">set</span> <span class=\"hljs-literal\">tab</span> off\n</code></pre>\n<p>Configure column format and size</p>\n<pre><code class=\"lang-sql\"><span class=\"hljs-built_in\">column</span> id format <span class=\"hljs-number\">999999999</span>\n<span class=\"hljs-built_in\">column</span> <span class=\"hljs-built_in\">text</span> format <span class=\"hljs-symbol\">a35</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/4b5ed06917a0e71e5dd6","description":"Compile package in sqlplus","files":["https://gist.githubusercontent.com/umidjons/4b5ed06917a0e71e5dd6/raw/6e9e208796f6f0cfd86f19001fbf276945defd4e/compile-package-in-sqlplus.md"],"content":"Compile all objects in schema\n===\n\n```sql\nEXEC DBMS_UTILITY.compile_schema(schema => 'MYSCHEMA');\n```\nCompile package in sqlplus\n===\n\nCompile package header and body with following two statements\n```sql\nalter package my_package compile package;\nalter package my_package compile body;\n```\n\nThen check, are there any invalid objects\n```sql\nselect object_name from user_objects where status='INVALID';\n```\n\nIf there is error, show it with following statement\n```sql\nshow errors;\n```\n\nThen we can correct and recompile package, also should check invalid objects again.","html":"<h1 id=\"compile-all-objects-in-schema\">Compile all objects in schema</h1>\n<pre><code class=\"lang-sql\">EXEC DBMS_UTILITY.compile_schema(<span class=\"hljs-function\"><span class=\"hljs-params\">schema</span> =&gt;</span> <span class=\"hljs-string\">'MYSCHEMA'</span>);\n</code></pre>\n<h1 id=\"compile-package-in-sqlplus\">Compile package in sqlplus</h1>\n<p>Compile package header and body with following two statements</p>\n<pre><code class=\"lang-sql\"><span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">package</span> my_package compile <span class=\"hljs-keyword\">package</span>;\n<span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">package</span> my_package compile <span class=\"hljs-keyword\">body</span>;\n</code></pre>\n<p>Then check, are there any invalid objects</p>\n<pre><code class=\"lang-sql\"><span class=\"hljs-keyword\">select</span> object_name <span class=\"hljs-keyword\">from</span> user_objects <span class=\"hljs-keyword\">where</span> <span class=\"hljs-keyword\">status</span>=<span class=\"hljs-string\">'INVALID'</span>;\n</code></pre>\n<p>If there is error, show it with following statement</p>\n<pre><code class=\"lang-sql\"><span class=\"hljs-keyword\">show</span> <span class=\"hljs-keyword\">errors</span>;\n</code></pre>\n<p>Then we can correct and recompile package, also should check invalid objects again.</p>\n"},{"html_url":"https://gist.github.com/5d5dff3fbc4752a7f162","description":"AngularJS: Load data from the server. Filter by columns.","files":["https://gist.githubusercontent.com/umidjons/5d5dff3fbc4752a7f162/raw/4de5b1828fab28d78b0bbbbb525fccd937ff8615/load-data-from-server-filter-by-cols.md"],"content":"Load data from the server and filter by columns example\n==\n\nIn the server side I use this PHP snippet to retrieve data from the db \nand convert it to JSON:\n\n```php\n<?php\n$db     = new PDO('mysql:dbname=ajs', 'root', '');\n$stmt   = $db->query('select id, title, phone, email, address from people');\n$people = $stmt->fetchAll(PDO::FETCH_ASSOC);\necho json_encode($people);\n```\n\nMain page to show data:\n\n```html\n<!doctype html>\n<html lang=\"en-US\" ng-app=\"PeopleModule\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>People</title>\n\t<script type=\"text/javascript\" src=\"angular.js\"></script>\n</head>\n<body ng-controller=\"PeopleCtrl\">\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>ID</th>\n\t\t\t<th>Name</th>\n\t\t\t<th>Phone</th>\n\t\t\t<th>Email</th>\n\t\t\t<th>Address</th>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th><input type=\"text\" ng-model=\"search.id\"/></th>\n\t\t\t<th><input type=\"text\" ng-model=\"search.title\"/></th>\n\t\t\t<th><input type=\"text\" ng-model=\"search.phone\"/></th>\n\t\t\t<th><input type=\"text\" ng-model=\"search.email\"/></th>\n\t\t\t<th><input type=\"text\" ng-model=\"search.address\"/></th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr ng-repeat=\"person in people | filter:search\">\n\t\t\t<td>{{person.id}}</td>\n\t\t\t<td>{{person.title}}</td>\n\t\t\t<td>{{person.phone}}</td>\n\t\t\t<td>{{person.email}}</td>\n\t\t\t<td>{{person.address}}</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<script type=\"text/javascript\">\n\tvar PeopleModule=angular.module('PeopleModule',[]);\n\tPeopleModule.controller('PeopleCtrl',function($scope,$http){\n\t\t// used to filter records by attributes\n\t\t$scope.search={};\n\n\t\t// get data from the server in JSON format\n\t\t$http.get('/people.php').success(function(data,status,header,config){\n\t\t\t$scope.people=data;\n\t\t});\n\t});\n</script>\n\n</body>\n</html>\n```","html":"<h1 id=\"load-data-from-the-server-and-filter-by-columns-example\">Load data from the server and filter by columns example</h1>\n<p>In the server side I use this PHP snippet to retrieve data from the db \nand convert it to JSON:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n$db     = <span class=\"hljs-keyword\">new</span> PDO(<span class=\"hljs-string\">'mysql:dbname=ajs'</span>, <span class=\"hljs-string\">'root'</span>, <span class=\"hljs-string\">''</span>);\n$stmt   = $db-&gt;query(<span class=\"hljs-string\">'select id, title, phone, email, address from people'</span>);\n$people = $stmt-&gt;fetchAll(PDO::FETCH_ASSOC);\n<span class=\"hljs-keyword\">echo</span> json_encode($people);</span>\n</code></pre>\n<p>Main page to show data:</p>\n<pre><code class=\"lang-html\"><span class=\"xml\"><span class=\"hljs-meta\">&lt;!doctype html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en-US\"</span> <span class=\"hljs-attr\">ng-app</span>=<span class=\"hljs-string\">\"PeopleModule\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>People<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text/javascript\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"angular.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span> <span class=\"hljs-attr\">ng-controller</span>=<span class=\"hljs-string\">\"PeopleCtrl\"</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">table</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">thead</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>ID<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>Phone<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>Email<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>Address<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"search.id\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"search.title\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"search.phone\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"search.email\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"search.address\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">thead</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tbody</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span> <span class=\"hljs-attr\">ng-repeat</span>=<span class=\"hljs-string\">\"person in people | filter:search\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{person.id}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{person.title}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{person.phone}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{person.email}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{person.address}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tbody</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">table</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text/javascript\"</span>&gt;</span><span class=\"actionscript\">\n    <span class=\"hljs-keyword\">var</span> PeopleModule=angular.module(<span class=\"hljs-string\">'PeopleModule'</span>,[]);\n    PeopleModule.controller(<span class=\"hljs-string\">'PeopleCtrl'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($scope,$http)</span></span>{\n        <span class=\"hljs-comment\">// used to filter records by attributes</span>\n        $scope.search={};\n\n        <span class=\"hljs-comment\">// get data from the server in JSON format</span>\n        $http.get(<span class=\"hljs-string\">'/people.php'</span>).success(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(data,status,header,config)</span></span>{\n            $scope.people=data;\n        });\n    });\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/57801c7d1d3665e813d6","description":"PHP Interactive mode","files":["https://gist.githubusercontent.com/umidjons/57801c7d1d3665e813d6/raw/2eb2a05014453ffe794e812dd85a10d7ef95db7d/php-interactive-mode.md"],"content":"Run commands in PHP in interactive mode\n===\n\nTo start PHP in interactive mode type following in Windows CLI\n```batch\ncmd /k \"php -a\"\n```\n\nThen you can type some PHP code\n```php\n<?php\necho preg_replace(\"/[^0-9]/\",\"\",\"+998 90 130-45-27\");\n```\n\nDO NOT FORGET `<?php`!!!\n\nThen, to see output hit `CTRL_Z` and press `Enter`.\n","html":"<h1 id=\"run-commands-in-php-in-interactive-mode\">Run commands in PHP in interactive mode</h1>\n<p>To start PHP in interactive mode type following in Windows CLI</p>\n<pre><code class=\"lang-batch\"><span class=\"hljs-keyword\">cmd</span><span class=\"bash\"> /k <span class=\"hljs-string\">\"php -a\"</span></span>\n</code></pre>\n<p>Then you can type some PHP code</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">echo</span> preg_replace(<span class=\"hljs-string\">\"/[^0-9]/\"</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\"+998 90 130-45-27\"</span>);</span>\n</code></pre>\n<p>DO NOT FORGET <code>&lt;?php</code>!!!</p>\n<p>Then, to see output hit <code>CTRL_Z</code> and press <code>Enter</code>.</p>\n"},{"html_url":"https://gist.github.com/da41bc8a0a0bf470e8cc","description":"sqlplus: Import user objects into database via sqlplus","files":["https://gist.githubusercontent.com/umidjons/da41bc8a0a0bf470e8cc/raw/8342b3f96a674efa27f484ea5b63be77677d03f3/import-user-objects-sqlplus.md"],"content":"Import user objects into database via sqlplus\n===\n\n```bash\nsqlplus user/pass@db @mydb_exported_user_objects.sql\n```","html":"<h1 id=\"import-user-objects-into-database-via-sqlplus\">Import user objects into database via sqlplus</h1>\n<pre><code class=\"lang-bash\"><span class=\"hljs-attribute\">sqlplus</span> user/pass<span class=\"hljs-variable\">@db</span> <span class=\"hljs-variable\">@mydb_exported_user_objects</span>.sql\n</code></pre>\n"},{"html_url":"https://gist.github.com/1a51d957a56375d5bb59","description":"Run sqlplus with readline wrapper","files":["https://gist.githubusercontent.com/umidjons/1a51d957a56375d5bb59/raw/d40d2beb38ba1aed788e426bfcb10e7ab1769dc3/sqlplus-readline-wrap.md"],"content":"Run `sqlplus` with readline\n===\n\n```bash\nrlwrap sqlplus\n```","html":"<h1 id=\"run-sqlplus-with-readline\">Run <code>sqlplus</code> with readline</h1>\n<pre><code class=\"lang-bash\"><span class=\"hljs-attribute\">rlwrap sqlplus</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/6cfc2760cf32fcf8506b","description":"AngularJS: ng-view example - changing views","files":["https://gist.githubusercontent.com/umidjons/6cfc2760cf32fcf8506b/raw/79370178d5f6365cd8317a0a800531821c164783/ng-view-changing-views.md"],"content":"Using `ng-view` to change views in AngularJS\n==\n\nMain layout with `ng-view`\n====\n\n```html\n\n<!-- mail.html -->\n\n<!doctype html>\n<html lang=\"en-US\" ng-app=\"AMail\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>Mail</title>\n\t<script type=\"text/javascript\" src=\"angular.js\"></script>\n\t<script type=\"text/javascript\" src=\"angular-route.js\"></script>\n\t<script type=\"text/javascript\" src=\"mail-controllers.js\"></script>\n</head>\n<body>\n\n<h1>A-Mail</h1>\n<div ng-view></div>\n\n</body>\n</html>\n```\n\nFirst view: list of emails\n====\n\n```html\n\n<!-- list.html -->\n<table>\n\t<tr>\n\t\t<th>Sender</th>\n\t\t<th>Subject</th>\n\t\t<th>Date</th>\n\t</tr>\n\t<tr ng-repeat=\"message in messages\">\n\t\t<td>{{message.sender}}</td>\n\t\t<td><a href=\"#/view/{{message.id}}\">{{message.subject}}</a></td>\n\t\t<td>{{message.date}}</td>\n\t</tr>\n</table>\n```\n\nSecond view: details of email\n====\n\n```html\n\n<!-- detail.html -->\n<div><strong>Subject:</strong> {{message.subject}}</div>\n<div><strong>Sender:</strong> {{message.sender}}</div>\n<div><strong>Date:</strong> {{message.date}}</div>\n<div>\n\t<strong>To:</strong>\n\t<span ng-repeat=\"recipient in message.recipients\">{{recipient}}</span>\n</div>\n<div>{{message.message}}</div>\n<a href=\"#/\">Back to message list</a>\n```\n\nControllers\n====\n\n```javascript\n\n// mail-controllers.js\n\nvar aMailServices=angular.module('AMail',['ngRoute']);\n\nfunction emailRouteConfig($routeProvider){\n\t$routeProvider\n\t\t.when('/',{\n\t\t\tcontroller :ListController,\n\t\t\ttemplateUrl:'list.html'\n\t\t})\n\t\t.when('/view/:id',{\n\t\t\tcontroller :DetailController,\n\t\t\ttemplateUrl:'detail.html'\n\t\t})\n\t\t.otherwise({redirectTo:'/'});\n}\n\naMailServices.config(emailRouteConfig);\n\nmessages=[\n\t{\n\t\tid        :0,\n\t\tsender    :'jean@somecompany.com',\n\t\tsubject   :'Hi there, old friend',\n\t\tdate      :'Dec 7, 2013 12:32:00',\n\t\trecipients:['greg@somecompany.com'],\n\t\tmessage   :'Hey, we should get together for lunch sometime and catch up.'\n\t\t+'There are many things we should collaborate on this year.'\n\t},\n\t{\n\t\tid        :1,\n\t\tsender    :'maria@somecompany.com',\n\t\tsubject   :'Where did you leave my laptop?',\n\t\tdate      :'Dec 7, 2013 8:15:12',\n\t\trecipients:['greg@somecompany.com'],\n\t\tmessage   :'I thought you were going to put it in my desk drawer.'\n\t\t+'But it does not seem to be there.'\n\t},\n\t{\n\t\tid        :2,\n\t\tsender    :'bill@somecompany.com',\n\t\tsubject   :'Lost python',\n\t\tdate      :'Dec 6, 2013 20:35:02',\n\t\trecipients:['greg@somecompany.com'],\n\t\tmessage   :'Nobody panic, but my pet python is missing from her cage.'\n\t\t+'She doesn\\'t move too fast,so just call me if you see her.'\n\t}\n];\n\nfunction ListController($scope){\n\t$scope.messages=messages;\n}\n\nfunction DetailController($scope,$routeParams){\n\t$scope.message=messages[$routeParams.id];\n}\n```","html":"<h1 id=\"using-ng-view-to-change-views-in-angularjs\">Using <code>ng-view</code> to change views in AngularJS</h1>\n<h1 id=\"main-layout-with-ng-view-\">Main layout with <code>ng-view</code></h1>\n<pre><code class=\"lang-html\">\n<span class=\"hljs-comment\">&lt;!-- mail.html --&gt;</span>\n\n<span class=\"hljs-meta\">&lt;!doctype html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en-US\"</span> <span class=\"hljs-attr\">ng-app</span>=<span class=\"hljs-string\">\"AMail\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>Mail<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text/javascript\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"angular.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text/javascript\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"angular-route.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text/javascript\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"mail-controllers.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>A-Mail<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ng-view</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n<h1 id=\"first-view-list-of-emails\">First view: list of emails</h1>\n<pre><code class=\"lang-html\"><span class=\"xml\">\n<span class=\"hljs-comment\">&lt;!-- list.html --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">table</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>Sender<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>Subject<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span>&gt;</span>Date<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span> <span class=\"hljs-attr\">ng-repeat</span>=<span class=\"hljs-string\">\"message in messages\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{message.sender}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#/view/</span></span></span><span class=\"hljs-template-variable\">{{message.id}}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">\"</span>&gt;</span></span><span class=\"hljs-template-variable\">{{message.subject}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span></span><span class=\"hljs-template-variable\">{{message.date}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">table</span>&gt;</span></span>\n</code></pre>\n<h1 id=\"second-view-details-of-email\">Second view: details of email</h1>\n<pre><code class=\"lang-html\"><span class=\"xml\">\n<span class=\"hljs-comment\">&lt;!-- detail.html --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">strong</span>&gt;</span>Subject:<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">strong</span>&gt;</span> </span><span class=\"hljs-template-variable\">{{message.subject}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">strong</span>&gt;</span>Sender:<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">strong</span>&gt;</span> </span><span class=\"hljs-template-variable\">{{message.sender}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">strong</span>&gt;</span>Date:<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">strong</span>&gt;</span> </span><span class=\"hljs-template-variable\">{{message.date}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">strong</span>&gt;</span>To:<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">strong</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">ng-repeat</span>=<span class=\"hljs-string\">\"recipient in message.recipients\"</span>&gt;</span></span><span class=\"hljs-template-variable\">{{recipient}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span></span><span class=\"hljs-template-variable\">{{message.message}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#/\"</span>&gt;</span>Back to message list<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span></span>\n</code></pre>\n<h1 id=\"controllers\">Controllers</h1>\n<pre><code class=\"lang-javascript\">\n<span class=\"hljs-comment\">// mail-controllers.js</span>\n\nvar aMailServices=angular.module(<span class=\"hljs-string\">'AMail'</span>,[<span class=\"hljs-string\">'ngRoute'</span>]);\n\nfunction emailRouteConfig($routeProvider){\n    $routeProvider\n        .when(<span class=\"hljs-string\">'/'</span>,{\n            <span class=\"hljs-string\">controller :</span>ListController,\n<span class=\"hljs-symbol\">            templateUrl:</span><span class=\"hljs-string\">'list.html'</span>\n        })\n        .when(<span class=\"hljs-string\">'/view/:id'</span>,{\n            <span class=\"hljs-string\">controller :</span>DetailController,\n<span class=\"hljs-symbol\">            templateUrl:</span><span class=\"hljs-string\">'detail.html'</span>\n        })\n        .otherwise({<span class=\"hljs-string\">redirectTo:</span><span class=\"hljs-string\">'/'</span>});\n}\n\naMailServices.config(emailRouteConfig);\n\nmessages=[\n    {\n        <span class=\"hljs-string\">id        :</span><span class=\"hljs-number\">0</span>,\n        <span class=\"hljs-string\">sender    :</span><span class=\"hljs-string\">'jean@somecompany.com'</span>,\n        <span class=\"hljs-string\">subject   :</span><span class=\"hljs-string\">'Hi there, old friend'</span>,\n        <span class=\"hljs-string\">date      :</span><span class=\"hljs-string\">'Dec 7, 2013 12:32:00'</span>,\n<span class=\"hljs-symbol\">        recipients:</span>[<span class=\"hljs-string\">'greg@somecompany.com'</span>],\n        <span class=\"hljs-string\">message   :</span><span class=\"hljs-string\">'Hey, we should get together for lunch sometime and catch up.'</span>\n        +<span class=\"hljs-string\">'There are many things we should collaborate on this year.'</span>\n    },\n    {\n        <span class=\"hljs-string\">id        :</span><span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">sender    :</span><span class=\"hljs-string\">'maria@somecompany.com'</span>,\n        <span class=\"hljs-string\">subject   :</span><span class=\"hljs-string\">'Where did you leave my laptop?'</span>,\n        <span class=\"hljs-string\">date      :</span><span class=\"hljs-string\">'Dec 7, 2013 8:15:12'</span>,\n<span class=\"hljs-symbol\">        recipients:</span>[<span class=\"hljs-string\">'greg@somecompany.com'</span>],\n        <span class=\"hljs-string\">message   :</span><span class=\"hljs-string\">'I thought you were going to put it in my desk drawer.'</span>\n        +<span class=\"hljs-string\">'But it does not seem to be there.'</span>\n    },\n    {\n        <span class=\"hljs-string\">id        :</span><span class=\"hljs-number\">2</span>,\n        <span class=\"hljs-string\">sender    :</span><span class=\"hljs-string\">'bill@somecompany.com'</span>,\n        <span class=\"hljs-string\">subject   :</span><span class=\"hljs-string\">'Lost python'</span>,\n        <span class=\"hljs-string\">date      :</span><span class=\"hljs-string\">'Dec 6, 2013 20:35:02'</span>,\n<span class=\"hljs-symbol\">        recipients:</span>[<span class=\"hljs-string\">'greg@somecompany.com'</span>],\n        <span class=\"hljs-string\">message   :</span><span class=\"hljs-string\">'Nobody panic, but my pet python is missing from her cage.'</span>\n        +<span class=\"hljs-string\">'She doesn\\'t move too fast,so just call me if you see her.'</span>\n    }\n];\n\nfunction ListController($scope){\n    $scope.messages=messages;\n}\n\nfunction DetailController($scope,$routeParams){\n    $scope.message=messages[$routeParams.id];\n}\n</code></pre>\n"},{"html_url":"https://gist.github.com/c1b075d9f009b9df14e4","description":"Call PL/SQL function with boolean return value","files":["https://gist.githubusercontent.com/umidjons/c1b075d9f009b9df14e4/raw/99261593a9cbbe744a323c4c7b7bfe603e23e774/plsql-function-with-boolean-return-value.md"],"content":"Call PL/SQL function with boolean return value\n===\n\n```php\n<?php\ntry\n{\n\t$pRes=0;\n\treturn Yii::app()->db->createCommand('\n\tDECLARE result boolean; \n\tBEGIN \n\t\tresult:=CLIENT_MANAGER.DEL(:pUser,:pClient);\n\t\t:pRes:=sys.diutil.bool_to_int(result);\n\tEND;')\n\t\t->bindParam(':pRes',$pRes,PDO::PARAM_INT,10)\n\t\t->bindParam(':pUser',Yii::app()->getUser()->getId())\n\t\t->bindParam(':pClient',$client_code)\n\t\t->execute();\n}\ncatch(CDbException $ex)\n{\n\tYii::log($ex->getMessage());\n\treturn false;\n}\n```","html":"<h1 id=\"call-pl-sql-function-with-boolean-return-value\">Call PL/SQL function with boolean return value</h1>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">try</span>\n{\n    $pRes=<span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">return</span> Yii::app()-&gt;db-&gt;createCommand(<span class=\"hljs-string\">'\n    DECLARE result boolean; \n    BEGIN \n        result:=CLIENT_MANAGER.DEL(:pUser,:pClient);\n        :pRes:=sys.diutil.bool_to_int(result);\n    END;'</span>)\n        -&gt;bindParam(<span class=\"hljs-string\">':pRes'</span>,$pRes,PDO::PARAM_INT,<span class=\"hljs-number\">10</span>)\n        -&gt;bindParam(<span class=\"hljs-string\">':pUser'</span>,Yii::app()-&gt;getUser()-&gt;getId())\n        -&gt;bindParam(<span class=\"hljs-string\">':pClient'</span>,$client_code)\n        -&gt;execute();\n}\n<span class=\"hljs-keyword\">catch</span>(CDbException $ex)\n{\n    Yii::log($ex-&gt;getMessage());\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n}</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/aeb5f349cc8de7662f6e","description":"Custom Filter example in AngularJS","files":[],"content":""},{"html_url":"https://gist.github.com/bea019aff905c162d3b3","description":"Create factory example in AngularJS","files":[],"content":""},{"html_url":"https://gist.github.com/50f15e875bf723304251","description":"nginx installation","files":["https://gist.githubusercontent.com/umidjons/50f15e875bf723304251/raw/1a661883996a8e8035f55dda22aff477e2a8bd74/nginx-install.md"],"content":"```bash\n# gcc\napt-get install build-essentials\n# pcre\napt-get install libpcre3 libpcre3-dev\n# zlib\napt-get install zlib1g zlib1g-dev\n# openssl\napt-get install openssl libssl-dev\n# libxml2\napt-get install libxml2 libxslt1-dev\n# gd\napt-get install libgd2-noxpm-dev\n```\n\n```bash\nmkdir src && cd src\nwget http://nginx.org/download/nginx-1.7.2.tar.gz\ntar xzf nginx-1.7.2.tar.gz\n```\n\n```bash\n# see available switches\n./configure --help\n```\n\n```bash\n# clean if you run configure again\nmake clean\n\n./configure \\\n  --prefix=/usr/local/nginx-1.7.2 \\\n  --user=www-data \\\n  --group=www-data \\\n  --with-http_ssl_module \\\n  --with-http_realip_module \\\n  --with-http_xslt_module \\\n  --with-http_image_filter_module \\\n  --with-http_gzip_static_module \\\n  --with-http_degradation_module\n```\n\n```bash\nmake\nsudo make install\n```\n\n```bash\n# create symlink\nsudo ln -s /usr/local/nginx-1.7.2 /usr/local/nginx\n```","html":"<pre><code class=\"lang-bash\"><span class=\"hljs-meta\"># gcc</span>\napt-<span class=\"hljs-keyword\">get</span> install build-essentials\n<span class=\"hljs-meta\"># pcre</span>\napt-<span class=\"hljs-keyword\">get</span> install libpcre3 libpcre3-dev\n<span class=\"hljs-meta\"># zlib</span>\napt-<span class=\"hljs-keyword\">get</span> install zlib1g zlib1g-dev\n<span class=\"hljs-meta\"># openssl</span>\napt-<span class=\"hljs-keyword\">get</span> install openssl libssl-dev\n<span class=\"hljs-meta\"># libxml2</span>\napt-<span class=\"hljs-keyword\">get</span> install libxml2 libxslt1-dev\n<span class=\"hljs-meta\"># gd</span>\napt-<span class=\"hljs-keyword\">get</span> install libgd2-noxpm-dev\n</code></pre>\n<pre><code class=\"lang-bash\">mkdir src &amp;&amp; cd src\nwget http:<span class=\"hljs-comment\">//nginx.org/download/nginx-1.7.2.tar.gz</span>\ntar xzf nginx-<span class=\"hljs-number\">1.7</span>.<span class=\"hljs-number\">2</span><span class=\"hljs-selector-class\">.tar</span><span class=\"hljs-selector-class\">.gz</span>\n</code></pre>\n<pre><code class=\"lang-bash\"><span class=\"hljs-comment\"># see available switches</span>\n./configure <span class=\"hljs-comment\">--help</span>\n</code></pre>\n<pre><code class=\"lang-bash\"># clean if you run configure again\nmake clean\n\n./configure \\\n  -<span class=\"ruby\">-prefix=<span class=\"hljs-regexp\">/usr/local</span><span class=\"hljs-regexp\">/nginx-1.7.2 \\\n</span></span>  -<span class=\"ruby\"><span class=\"hljs-regexp\">-user=www-data \\\n</span></span>  -<span class=\"ruby\"><span class=\"hljs-regexp\">-group=www-data \\\n</span></span>  -<span class=\"ruby\"><span class=\"hljs-regexp\">-with-http_ssl_module \\\n</span></span>  -<span class=\"ruby\"><span class=\"hljs-regexp\">-with-http_realip_module \\\n</span></span>  -<span class=\"ruby\"><span class=\"hljs-regexp\">-with-http_xslt_module \\\n</span></span>  -<span class=\"ruby\"><span class=\"hljs-regexp\">-with-http_image_filter_module \\\n</span></span>  -<span class=\"ruby\"><span class=\"hljs-regexp\">-with-http_gzip_static_module \\\n</span></span>  -<span class=\"ruby\"><span class=\"hljs-regexp\">-with-http_degradation_module</span></span>\n</code></pre>\n<pre><code class=\"lang-bash\"><span class=\"hljs-built_in\">make</span>\nsudo <span class=\"hljs-built_in\">make</span> install\n</code></pre>\n<pre><code class=\"lang-bash\"><span class=\"hljs-comment\"># create symlink</span>\nsudo ln -s <span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/nginx-1.7.2 /u</span>sr<span class=\"hljs-regexp\">/local/</span>nginx\n</code></pre>\n"},{"html_url":"https://gist.github.com/dbd141c85b9c177fda51","description":"Proxy for Git","files":["https://gist.githubusercontent.com/umidjons/dbd141c85b9c177fda51/raw/17997c8a05e10900b40dd93caac257e6e3472cbd/git-proxy.md"],"content":"Set proxy for Git\n===\n\nSet:\n```\ngit config --global http.proxy http://proxyuser:proxypwd@proxy.server.com:8080\ngit config --global https.proxy http://proxyuser:proxypwd@proxy.server.com:8080\n```\n\nUnset:\n```\ngit config --global http.proxy \"\"\ngit config --global https.proxy \"\"\ngit config --global --unset http.proxy\ngit config --global --unset https.proxy\n```","html":"<h1 id=\"set-proxy-for-git\">Set proxy for Git</h1>\n<p>Set:</p>\n<pre><code>git config --global http<span class=\"hljs-selector-class\">.proxy</span> http:<span class=\"hljs-comment\">//proxyuser:proxypwd@proxy.server.com:8080</span>\ngit config --global https<span class=\"hljs-selector-class\">.proxy</span> http:<span class=\"hljs-comment\">//proxyuser:proxypwd@proxy.server.com:8080</span>\n</code></pre><p>Unset:</p>\n<pre><code>git config --<span class=\"hljs-keyword\">global</span> <span class=\"hljs-keyword\">http</span>.proxy <span class=\"hljs-string\">\"\"</span>\ngit config --<span class=\"hljs-keyword\">global</span> https.proxy <span class=\"hljs-string\">\"\"</span>\ngit config --<span class=\"hljs-keyword\">global</span> --<span class=\"hljs-keyword\">unset</span> <span class=\"hljs-keyword\">http</span>.proxy\ngit config --<span class=\"hljs-keyword\">global</span> --<span class=\"hljs-keyword\">unset</span> https.proxy\n</code></pre>"},{"html_url":"https://gist.github.com/2bf96c14fb5e8bf55733","description":"Yii: Set aliases in configuration file","files":["https://gist.githubusercontent.com/umidjons/2bf96c14fb5e8bf55733/raw/e7eb79975270e052ae8a67b28f7e528650df215d/aliases-in-config.md"],"content":"Set aliases in configuration file\n===\n\n```php\n<?php\nreturn [\n    // ...\n\t'aliases'        => [\n\t\t'uploads' => 'webroot.uploads', // /www/mysite/uploads OR c:/www/mysite\\uploads\n\t\t'notice'  => 'webroot.uploads.notice', // /www/mysite/uploads/notice OR c:/www/mysite\\uploads\\notice\n\t\t'files'   => 'webroot.uploads.files', // /www/mysite/uploads/files OR c:/www/mysite\\uploads\\files\n\t\t'users'   => 'webroot.uploads.users', // /www/mysite/uploads/users OR c:/www/mysite\\uploads\\users\n\t],\n\t// ...\n];\n```\n\nUsage example:\n```php\n<?php\nYii::log(Yii::getPathOfAlias('users')); // c:/www/mysite\\uploads\\users\\\n```\n\nShorter helper method with trailing directory separator symbol:\n```php\n<?php\nclass F\n{\n\tpublic static function alias($alias)\n\t{\n\t\t$path = Yii::getPathOfAlias($alias);\n\t\treturn $path.DIRECTORY_SEPARATOR;\n\t}\n}\n```\n\nUsage example:\n```php\n<?php\nYii::log(F::alias('users').'myfile.txt'); // c:/www/mysite\\uploads\\users\\myfile.txt\n```","html":"<h1 id=\"set-aliases-in-configuration-file\">Set aliases in configuration file</h1>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">return</span> [\n    <span class=\"hljs-comment\">// ...</span>\n    <span class=\"hljs-string\">'aliases'</span>        =&gt; [\n        <span class=\"hljs-string\">'uploads'</span> =&gt; <span class=\"hljs-string\">'webroot.uploads'</span>, <span class=\"hljs-comment\">// /www/mysite/uploads OR c:/www/mysite\\uploads</span>\n        <span class=\"hljs-string\">'notice'</span>  =&gt; <span class=\"hljs-string\">'webroot.uploads.notice'</span>, <span class=\"hljs-comment\">// /www/mysite/uploads/notice OR c:/www/mysite\\uploads\\notice</span>\n        <span class=\"hljs-string\">'files'</span>   =&gt; <span class=\"hljs-string\">'webroot.uploads.files'</span>, <span class=\"hljs-comment\">// /www/mysite/uploads/files OR c:/www/mysite\\uploads\\files</span>\n        <span class=\"hljs-string\">'users'</span>   =&gt; <span class=\"hljs-string\">'webroot.uploads.users'</span>, <span class=\"hljs-comment\">// /www/mysite/uploads/users OR c:/www/mysite\\uploads\\users</span>\n    ],\n    <span class=\"hljs-comment\">// ...</span>\n];</span>\n</code></pre>\n<p>Usage example:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\nYii::log(Yii::getPathOfAlias(<span class=\"hljs-string\">'users'</span>)); <span class=\"hljs-comment\">// c:/www/mysite\\uploads\\users\\</span></span>\n</code></pre>\n<p>Shorter helper method with trailing directory separator symbol:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">F</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">alias</span><span class=\"hljs-params\">($alias)</span>\n    </span>{\n        $path = Yii::getPathOfAlias($alias);\n        <span class=\"hljs-keyword\">return</span> $path.DIRECTORY_SEPARATOR;\n    }\n}</span>\n</code></pre>\n<p>Usage example:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\nYii::log(F::alias(<span class=\"hljs-string\">'users'</span>).<span class=\"hljs-string\">'myfile.txt'</span>); <span class=\"hljs-comment\">// c:/www/mysite\\uploads\\users\\myfile.txt</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/0b192229bc9e083abd9f","description":"Prettify JSON data in PHP","files":["https://gist.githubusercontent.com/umidjons/0b192229bc9e083abd9f/raw/e39e6cd4e3e93049c2e051f2d2d4f2410e28304c/prettify-json-in-php.md"],"content":"Prettify JSON in PHP\n===\n\nMy JSON data looks like as this:\n\n```json\n{\"attributes\":{\"id\":\"146\",\"thumbnail\":\"\\/uploads\\/files\\/Oreilly.Learning.JavaScript.Design.Patterns.May.20121398922870.1667.thumb.jpg\",\"title\":\"\\u0422\\u0435\\u0441\\u0442 \\u04b3\\u0443\\u0436\\u0436\\u0430\\u0442 5\",\"slug\":\"test-huzhzhat-5\",\"created_at\":\"2014-04-30 15:54:24\",\"edited_at\":{\"expression\":\"NOW()\",\"params\":[]},\"author_id\":\"1\",\"source_title\":\"\",\"source_url\":\"\",\"status\":\"0\",\"allow_comments\":\"0\",\"category_id\":\"2\",\"language\":\"4\",\"trans_ru\":\"0\",\"trans_uz_latn\":\"0\",\"trans_uz\":\"146\",\"trans_en\":\"0\",\"content_file\":\"\\/uploads\\/files\\/Oreilly.Learning.JavaScript.Design.Patterns.May.20121398922870.1667.pdf\"}}\n```\n\nHere is how I prettify my JSON data:\n\n```php\n<?php\n$json_data = 'JSON data is here';\necho '<pre>';\njson_encode( json_decode( $json_data ), JSON_UNESCAPED_UNICODE | JSON_UNESCAPED_SLASHES | JSON_PRETTY_PRINT );\necho '</pre>';\n```\n\n`JSON_PRETTY_PRINT` prettifies JSON data. I use `JSON_UNESCAPED_UNICODE` to convert `\\uXXXX` characters into normal text. Also use `JSON_UNESCAPED_SLASHES` to convert `\\/` into `/`.\n\nPrettified JSON data looks like as following:\n\n```json\n{\n    \"attributes\": {\n        \"id\": \"146\",\n        \"thumbnail\": \"/uploads/files/Oreilly.Learning.JavaScript.Design.Patterns.May.20121398922870.1667.thumb.jpg\",\n        \"title\": \"Тест ҳужжат 5\",\n        \"slug\": \"test-huzhzhat-5\",\n        \"created_at\": \"2014-04-30 15:54:24\",\n        \"edited_at\": {\n            \"expression\": \"NOW()\",\n            \"params\": [\n\n            ]\n        },\n        \"author_id\": \"1\",\n        \"source_title\": \"\",\n        \"source_url\": \"\",\n        \"status\": \"0\",\n        \"allow_comments\": \"0\",\n        \"category_id\": \"2\",\n        \"language\": \"4\",\n        \"trans_ru\": \"0\",\n        \"trans_uz_latn\": \"0\",\n        \"trans_uz\": \"146\",\n        \"trans_en\": \"0\",\n        \"content_file\": \"/uploads/files/Oreilly.Learning.JavaScript.Design.Patterns.May.20121398922870.1667.pdf\"\n    }\n}\n```","html":"<h1 id=\"prettify-json-in-php\">Prettify JSON in PHP</h1>\n<p>My JSON data looks like as this:</p>\n<pre><code class=\"lang-json\">{<span class=\"hljs-attr\">\"attributes\"</span>:{<span class=\"hljs-attr\">\"id\"</span>:<span class=\"hljs-string\">\"146\"</span>,<span class=\"hljs-attr\">\"thumbnail\"</span>:<span class=\"hljs-string\">\"\\/uploads\\/files\\/Oreilly.Learning.JavaScript.Design.Patterns.May.20121398922870.1667.thumb.jpg\"</span>,<span class=\"hljs-attr\">\"title\"</span>:<span class=\"hljs-string\">\"\\u0422\\u0435\\u0441\\u0442 \\u04b3\\u0443\\u0436\\u0436\\u0430\\u0442 5\"</span>,<span class=\"hljs-attr\">\"slug\"</span>:<span class=\"hljs-string\">\"test-huzhzhat-5\"</span>,<span class=\"hljs-attr\">\"created_at\"</span>:<span class=\"hljs-string\">\"2014-04-30 15:54:24\"</span>,<span class=\"hljs-attr\">\"edited_at\"</span>:{<span class=\"hljs-attr\">\"expression\"</span>:<span class=\"hljs-string\">\"NOW()\"</span>,<span class=\"hljs-attr\">\"params\"</span>:[]},<span class=\"hljs-attr\">\"author_id\"</span>:<span class=\"hljs-string\">\"1\"</span>,<span class=\"hljs-attr\">\"source_title\"</span>:<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-attr\">\"source_url\"</span>:<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-attr\">\"status\"</span>:<span class=\"hljs-string\">\"0\"</span>,<span class=\"hljs-attr\">\"allow_comments\"</span>:<span class=\"hljs-string\">\"0\"</span>,<span class=\"hljs-attr\">\"category_id\"</span>:<span class=\"hljs-string\">\"2\"</span>,<span class=\"hljs-attr\">\"language\"</span>:<span class=\"hljs-string\">\"4\"</span>,<span class=\"hljs-attr\">\"trans_ru\"</span>:<span class=\"hljs-string\">\"0\"</span>,<span class=\"hljs-attr\">\"trans_uz_latn\"</span>:<span class=\"hljs-string\">\"0\"</span>,<span class=\"hljs-attr\">\"trans_uz\"</span>:<span class=\"hljs-string\">\"146\"</span>,<span class=\"hljs-attr\">\"trans_en\"</span>:<span class=\"hljs-string\">\"0\"</span>,<span class=\"hljs-attr\">\"content_file\"</span>:<span class=\"hljs-string\">\"\\/uploads\\/files\\/Oreilly.Learning.JavaScript.Design.Patterns.May.20121398922870.1667.pdf\"</span>}}\n</code></pre>\n<p>Here is how I prettify my JSON data:</p>\n<pre><code class=\"lang-php\">&lt;?php\n$<span class=\"hljs-keyword\">json_data </span>= <span class=\"hljs-string\">'JSON data is here'</span><span class=\"hljs-comment\">;</span>\necho <span class=\"hljs-string\">'&lt;pre&gt;'</span><span class=\"hljs-comment\">;</span>\n<span class=\"hljs-keyword\">json_encode( </span><span class=\"hljs-keyword\">json_decode( </span>$<span class=\"hljs-keyword\">json_data </span>), <span class=\"hljs-keyword\">JSON_UNESCAPED_UNICODE </span><span class=\"hljs-title\">| JSON_UNESCAPED_SLASHES |</span> <span class=\"hljs-keyword\">JSON_PRETTY_PRINT </span>)<span class=\"hljs-comment\">;</span>\necho <span class=\"hljs-string\">'&lt;/pre&gt;'</span><span class=\"hljs-comment\">;</span>\n</code></pre>\n<p><code>JSON_PRETTY_PRINT</code> prettifies JSON data. I use <code>JSON_UNESCAPED_UNICODE</code> to convert <code>\\uXXXX</code> characters into normal text. Also use <code>JSON_UNESCAPED_SLASHES</code> to convert <code>\\/</code> into <code>/</code>.</p>\n<p>Prettified JSON data looks like as following:</p>\n<pre><code class=\"lang-json\">{\n    <span class=\"hljs-attr\">\"attributes\"</span>: {\n        <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-string\">\"146\"</span>,\n        <span class=\"hljs-attr\">\"thumbnail\"</span>: <span class=\"hljs-string\">\"/uploads/files/Oreilly.Learning.JavaScript.Design.Patterns.May.20121398922870.1667.thumb.jpg\"</span>,\n        <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"Тест ҳужжат 5\"</span>,\n        <span class=\"hljs-attr\">\"slug\"</span>: <span class=\"hljs-string\">\"test-huzhzhat-5\"</span>,\n        <span class=\"hljs-attr\">\"created_at\"</span>: <span class=\"hljs-string\">\"2014-04-30 15:54:24\"</span>,\n        <span class=\"hljs-attr\">\"edited_at\"</span>: {\n            <span class=\"hljs-attr\">\"expression\"</span>: <span class=\"hljs-string\">\"NOW()\"</span>,\n            <span class=\"hljs-attr\">\"params\"</span>: [\n\n            ]\n        },\n        <span class=\"hljs-attr\">\"author_id\"</span>: <span class=\"hljs-string\">\"1\"</span>,\n        <span class=\"hljs-attr\">\"source_title\"</span>: <span class=\"hljs-string\">\"\"</span>,\n        <span class=\"hljs-attr\">\"source_url\"</span>: <span class=\"hljs-string\">\"\"</span>,\n        <span class=\"hljs-attr\">\"status\"</span>: <span class=\"hljs-string\">\"0\"</span>,\n        <span class=\"hljs-attr\">\"allow_comments\"</span>: <span class=\"hljs-string\">\"0\"</span>,\n        <span class=\"hljs-attr\">\"category_id\"</span>: <span class=\"hljs-string\">\"2\"</span>,\n        <span class=\"hljs-attr\">\"language\"</span>: <span class=\"hljs-string\">\"4\"</span>,\n        <span class=\"hljs-attr\">\"trans_ru\"</span>: <span class=\"hljs-string\">\"0\"</span>,\n        <span class=\"hljs-attr\">\"trans_uz_latn\"</span>: <span class=\"hljs-string\">\"0\"</span>,\n        <span class=\"hljs-attr\">\"trans_uz\"</span>: <span class=\"hljs-string\">\"146\"</span>,\n        <span class=\"hljs-attr\">\"trans_en\"</span>: <span class=\"hljs-string\">\"0\"</span>,\n        <span class=\"hljs-attr\">\"content_file\"</span>: <span class=\"hljs-string\">\"/uploads/files/Oreilly.Learning.JavaScript.Design.Patterns.May.20121398922870.1667.pdf\"</span>\n    }\n}\n</code></pre>\n"},{"html_url":"https://gist.github.com/5cfde5d260835e2c6d2f","description":"Yii: Up and Down icons for sorted columns in CGridView with Twitter Bootstrap","files":["https://gist.githubusercontent.com/umidjons/5cfde5d260835e2c6d2f/raw/6786055e556adf61b61676b7fcb9158edec2be03/sort-icons-gridview-bootstrap.md"],"content":"Up and Down icons for sorted columns in CGridView with Twitter Bootstrap\n===\n\n```css\na.sort-link {\n  text-decoration: none;\n}\n.sort-link.asc:before, .sort-link.desc:before {\n  font-family: 'Glyphicons Halflings';\n  position: relative;\n  top: 3px;\n  padding-right: 3px;\n}\n.sort-link.asc:before {\n  content: \"\\e113\";\n}\n.sort-link.desc:before {\n  content: \"\\e114\";\n}\n```","html":"<h1 id=\"up-and-down-icons-for-sorted-columns-in-cgridview-with-twitter-bootstrap\">Up and Down icons for sorted columns in CGridView with Twitter Bootstrap</h1>\n<pre><code class=\"lang-css\"><span class=\"hljs-selector-tag\">a</span><span class=\"hljs-selector-class\">.sort-link</span> {\n  <span class=\"hljs-attribute\">text-decoration</span>: none;\n}\n<span class=\"hljs-selector-class\">.sort-link</span><span class=\"hljs-selector-class\">.asc</span><span class=\"hljs-selector-pseudo\">:before</span>, <span class=\"hljs-selector-class\">.sort-link</span><span class=\"hljs-selector-class\">.desc</span><span class=\"hljs-selector-pseudo\">:before</span> {\n  <span class=\"hljs-attribute\">font-family</span>: <span class=\"hljs-string\">'Glyphicons Halflings'</span>;\n  <span class=\"hljs-attribute\">position</span>: relative;\n  <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">3px</span>;\n  <span class=\"hljs-attribute\">padding-right</span>: <span class=\"hljs-number\">3px</span>;\n}\n<span class=\"hljs-selector-class\">.sort-link</span><span class=\"hljs-selector-class\">.asc</span><span class=\"hljs-selector-pseudo\">:before</span> {\n  <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">\"\\e113\"</span>;\n}\n<span class=\"hljs-selector-class\">.sort-link</span><span class=\"hljs-selector-class\">.desc</span><span class=\"hljs-selector-pseudo\">:before</span> {\n  <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">\"\\e114\"</span>;\n}\n</code></pre>\n"},{"html_url":"https://gist.github.com/11368089","description":"Installing PHP Mess Detector","files":["https://gist.githubusercontent.com/umidjons/11368089/raw/8776cc5fc378a8b72e5ae14393c6c5d4579f16e3/php-mess-detector.md"],"content":"Installing PHP Mess Detector\n===\n\n```bat\ncmd.exe\ncd c:\\openserver\\modules\\php\\php-5.4.22\\PEAR\\\nphp go-pear.phar\n\nset HTTP_PROXY=http://xxx.xxx.xxx.xxx:xx\nset HTTPS_PROXY=http://xxx.xxx.xxx.xxx:xx\n```\n\nAdd `pear` directory `c:\\openserver\\modules\\php\\php-5.4.22\\PEAR\\` into `PATH`.\n\n```bat\npear channel-discover pear.phpmd.org\npear channel-discover pear.pdepend.org\n```\n\nInstall PHPMD\n\n```bat\npear install --alldeps phpmd/PHP_PMD\n```\n\nCreate link to `php.ini`, otherwise there is issue with PHP CLI\n```bat\nmklink C:\\Windows\\php.ini C:\\OpenServer\\userdata\\temp\\config\\php.ini\n```\n\nCheck mess detector with:\n```bat\nphpmd\n```\n\nIf there is error related to `imagemagick` add `c:\\OpenServer\\modules\\imagemagick\\` into `PATH`.\n","html":"<h1 id=\"installing-php-mess-detector\">Installing PHP Mess Detector</h1>\n<pre><code class=\"lang-bat\">cmd<span class=\"hljs-selector-class\">.exe</span>\ncd c:\\openserver\\modules\\php\\php-<span class=\"hljs-number\">5.4</span>.<span class=\"hljs-number\">22</span>\\PEAR\\\nphp go-pear<span class=\"hljs-selector-class\">.phar</span>\n\nset HTTP_PROXY=http:<span class=\"hljs-comment\">//xxx.xxx.xxx.<span class=\"hljs-doctag\">xxx:</span>xx</span>\nset HTTPS_PROXY=http:<span class=\"hljs-comment\">//xxx.xxx.xxx.<span class=\"hljs-doctag\">xxx:</span>xx</span>\n</code></pre>\n<p>Add <code>pear</code> directory <code>c:\\openserver\\modules\\php\\php-5.4.22\\PEAR\\</code> into <code>PATH</code>.</p>\n<pre><code class=\"lang-bat\">pear channel-discover pear<span class=\"hljs-selector-class\">.phpmd</span><span class=\"hljs-selector-class\">.org</span>\npear channel-discover pear<span class=\"hljs-selector-class\">.pdepend</span><span class=\"hljs-selector-class\">.org</span>\n</code></pre>\n<p>Install PHPMD</p>\n<pre><code class=\"lang-bat\">pear <span class=\"hljs-keyword\">install</span> <span class=\"hljs-comment\">--alldeps phpmd/PHP_PMD</span>\n</code></pre>\n<p>Create link to <code>php.ini</code>, otherwise there is issue with PHP CLI</p>\n<pre><code class=\"lang-bat\">mklink C:<span class=\"hljs-symbol\">\\W</span>indows<span class=\"hljs-symbol\">\\p</span>hp.ini C:<span class=\"hljs-symbol\">\\O</span>penServer<span class=\"hljs-symbol\">\\u</span>serdata<span class=\"hljs-symbol\">\\t</span>emp<span class=\"hljs-symbol\">\\c</span>onfig<span class=\"hljs-symbol\">\\p</span>hp.ini\n</code></pre>\n<p>Check mess detector with:</p>\n<pre><code class=\"lang-bat\"><span class=\"hljs-attribute\">phpmd</span>\n</code></pre>\n<p>If there is error related to <code>imagemagick</code> add <code>c:\\OpenServer\\modules\\imagemagick\\</code> into <code>PATH</code>.</p>\n"},{"html_url":"https://gist.github.com/11285772","description":"npm behind proxy","files":["https://gist.githubusercontent.com/umidjons/11285772/raw/477e1a9de3df26f1fade4eac4556ac0df2b731ab/npm-behind-proxy.md"],"content":"npm behind proxy\n===\n\n```\nnpm config set proxy http://proxy.company.com:8080\nnpm config set https-proxy http://proxy.company.com:8080\n```\n\nIf you need to specify credentials, they can be passed in the url using the following syntax.\n\n```\nhttp://user_name:password@proxy.company.com:8080\n```","html":"<h1 id=\"npm-behind-proxy\">npm behind proxy</h1>\n<pre><code>npm config <span class=\"hljs-keyword\">set</span> proxy <span class=\"hljs-comment\">http:</span>//<span class=\"hljs-comment\">proxy.company.com:8080</span>\nnpm <span class=\"hljs-comment\">config set https-proxy http:</span>//<span class=\"hljs-comment\">proxy.company.com:8080</span>\n</code></pre><p>If you need to specify credentials, they can be passed in the url using the following syntax.</p>\n<pre><code><span class=\"hljs-symbol\">http:</span><span class=\"hljs-comment\">//user_name:password@proxy.company.com:8080</span>\n</code></pre>"},{"html_url":"https://gist.github.com/11240660","description":"My favorite VIM plugins","files":["https://gist.githubusercontent.com/umidjons/11240660/raw/ad2a9944a9e7203a6d99fbe60a48d84099b17f01/vim-plugins.md"],"content":"My favorite VIM plugins\n===\n\n- [vim-pathogen](https://github.com/tpope/vim-pathogen)\n- [vimtodo](https://github.com/mivok/vimtodo.git)\n- [vim-commentary](https://github.com/tpope/vim-commentary)\n- [syntastic](https://github.com/scrooloose/syntastic)\n- To check javascript install [JSHint](http://jshint.com/install/).\n- To check css install [CSSLint](https://github.com/CSSLint/csslint/wiki/Command-line-interface)\n- To check json install [JSONLint](https://github.com/arc90/jsonlintdotcom)\n- [jshint](https://github.com/Shutnik/jshint2.vim)","html":"<h1 id=\"my-favorite-vim-plugins\">My favorite VIM plugins</h1>\n<ul>\n<li><a href=\"https://github.com/tpope/vim-pathogen\">vim-pathogen</a></li>\n<li><a href=\"https://github.com/mivok/vimtodo.git\">vimtodo</a></li>\n<li><a href=\"https://github.com/tpope/vim-commentary\">vim-commentary</a></li>\n<li><a href=\"https://github.com/scrooloose/syntastic\">syntastic</a></li>\n<li>To check javascript install <a href=\"http://jshint.com/install/\">JSHint</a>.</li>\n<li>To check css install <a href=\"https://github.com/CSSLint/csslint/wiki/Command-line-interface\">CSSLint</a></li>\n<li>To check json install <a href=\"https://github.com/arc90/jsonlintdotcom\">JSONLint</a></li>\n<li><a href=\"https://github.com/Shutnik/jshint2.vim\">jshint</a></li>\n</ul>\n"},{"html_url":"https://gist.github.com/11208197","description":"Yii: Inherit controller actions","files":["https://gist.githubusercontent.com/umidjons/11208197/raw/b38c1f26b995147a80e7b11f380945512dc24404/inherit-controller-actions.md"],"content":"Inherit controller actions\n===\n\nSuppose we have base controller with these actions:\n\n```php\n<?php\nclass Controller extends CController\n{\n\tpublic function actions()\n\t{\n\t\treturn [\n\t\t\t'uplimagehandle' => [\n\t\t\t\t'class'           => 'ext.upl.components.EUplAction',\n\t\t\t\t'uploadsFolder'   => Yii::app()->params['filesFolder'],\n\t\t\t\t'validExtensions' => ['jpeg', 'jpg', 'png', 'gif',],\n\t\t\t\t'createThumbnail' => true,\n\t\t\t],\n\t\t\t'uplpdfhandle'   => [\n\t\t\t\t'class'           => 'ext.upl.components.EUplAction',\n\t\t\t\t'uploadsFolder'   => Yii::app()->params['filesFolder'],\n\t\t\t\t'validExtensions' => ['pdf',],\n\t\t\t\t'createThumbnail' => true,\n\t\t\t]\n\t\t];\n\t}\n\t// ...\n}\n```\n\nIn order to inherit actions defined in the parent class, a child class needs to merge the parent actions with child actions using functions like `array_merge()`.\n\n```php\n<?php\nclass SiteController extends Controller\n{\n\tpublic function actions()\n\t{\n\t\treturn array_merge(parent::actions(), [\n\t\t\t'captcha' => [\n\t\t\t\t'class'     => 'CCaptchaAction',\n\t\t\t\t'backColor' => 0xFFFFFF,\n\t\t\t],\n\t\t\t'page'    => [\n\t\t\t\t'class' => 'CViewAction',\n\t\t\t],\n\t\t\t'soato'   => [\n\t\t\t\t'class' => 'ext.soato.ESoatoAction',\n\t\t\t],\n\t\t]);\n\t}\n}\n```\n\nNow, we can access base class actions as usual actions. For example, `http://mysite.loc/site/uplpdfhandle`.","html":"<h1 id=\"inherit-controller-actions\">Inherit controller actions</h1>\n<p>Suppose we have base controller with these actions:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Controller</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CController</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">actions</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> [\n            <span class=\"hljs-string\">'uplimagehandle'</span> =&gt; [\n                <span class=\"hljs-string\">'class'</span>           =&gt; <span class=\"hljs-string\">'ext.upl.components.EUplAction'</span>,\n                <span class=\"hljs-string\">'uploadsFolder'</span>   =&gt; Yii::app()-&gt;params[<span class=\"hljs-string\">'filesFolder'</span>],\n                <span class=\"hljs-string\">'validExtensions'</span> =&gt; [<span class=\"hljs-string\">'jpeg'</span>, <span class=\"hljs-string\">'jpg'</span>, <span class=\"hljs-string\">'png'</span>, <span class=\"hljs-string\">'gif'</span>,],\n                <span class=\"hljs-string\">'createThumbnail'</span> =&gt; <span class=\"hljs-keyword\">true</span>,\n            ],\n            <span class=\"hljs-string\">'uplpdfhandle'</span>   =&gt; [\n                <span class=\"hljs-string\">'class'</span>           =&gt; <span class=\"hljs-string\">'ext.upl.components.EUplAction'</span>,\n                <span class=\"hljs-string\">'uploadsFolder'</span>   =&gt; Yii::app()-&gt;params[<span class=\"hljs-string\">'filesFolder'</span>],\n                <span class=\"hljs-string\">'validExtensions'</span> =&gt; [<span class=\"hljs-string\">'pdf'</span>,],\n                <span class=\"hljs-string\">'createThumbnail'</span> =&gt; <span class=\"hljs-keyword\">true</span>,\n            ]\n        ];\n    }\n    <span class=\"hljs-comment\">// ...</span>\n}</span>\n</code></pre>\n<p>In order to inherit actions defined in the parent class, a child class needs to merge the parent actions with child actions using functions like <code>array_merge()</code>.</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SiteController</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Controller</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">actions</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> array_merge(<span class=\"hljs-keyword\">parent</span>::actions(), [\n            <span class=\"hljs-string\">'captcha'</span> =&gt; [\n                <span class=\"hljs-string\">'class'</span>     =&gt; <span class=\"hljs-string\">'CCaptchaAction'</span>,\n                <span class=\"hljs-string\">'backColor'</span> =&gt; <span class=\"hljs-number\">0xFFFFFF</span>,\n            ],\n            <span class=\"hljs-string\">'page'</span>    =&gt; [\n                <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'CViewAction'</span>,\n            ],\n            <span class=\"hljs-string\">'soato'</span>   =&gt; [\n                <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'ext.soato.ESoatoAction'</span>,\n            ],\n        ]);\n    }\n}</span>\n</code></pre>\n<p>Now, we can access base class actions as usual actions. For example, <code>http://mysite.loc/site/uplpdfhandle</code>.</p>\n"},{"html_url":"https://gist.github.com/11174306","description":"Find unique objects from array of objects.","files":["https://gist.githubusercontent.com/umidjons/11174306/raw/a7b254b56fe19df097b4ab9206d1020b6e9c0127/unique-objects-js.md"],"content":"Find unique objects from array of objects\n===\n\n```js\nvar Uniquer={\n\t/**\n\t * Return unique items from array of objects.\n\t * @param {Array} objects array of objects\n\t * @returns {Array} unique items/objects\n\t */\n\tuniqueItems:function(objects){\n\t\tvar self=this;\n\t\tvar unique_items=[];\n\t\t$.each(objects,function(i,obj){\n\t\t\tif(!unique_items.length) // no unique items yet, so\n\t\t\t\tunique_items.push(obj); // register first item as unique\n\t\t\telse{\n\t\t\t\tvar same_objs=$.grep(unique_items,function(uniq){\n\t\t\t\t\treturn self._equals(uniq,obj); // is obj equal to uniq?\n\t\t\t\t});\n\t\t\t\tif(!same_objs.length) // in unique_items obj not found\n\t\t\t\t\tunique_items.push(obj); // then register it as unique\n\t\t\t}\n\t\t});\n\t\treturn unique_items;\n\t},\n\t/**\n\t * Compares two object for equality. Checks only own properties and their values.\n\t * @param {object} a object to compare\n\t * @param {object} b object to compare\n\t * @returns {boolean} true, if both objects are equal, otherwise false\n\t * @private\n\t */\n\t_equals    :function(a,b){\n\t\tvar self=this;\n\t\tvar i;\n\t\tfor(i in a){\n\t\t\tif(!a.hasOwnProperty(i))\n\t\t\t\tcontinue;\n\t\t\tif(typeof b[i]=='undefined')\n\t\t\t\treturn false;\n\t\t\tif(typeof b[i]=='object')\n\t\t\t\tif(!self._equals(b[i],a[i]))\n\t\t\t\t\treturn false;\n\t\t\tif(b[i]!=a[i])\n\t\t\t\treturn false;\n\t\t}\n\t\tfor(i in b){\n\t\t\tif(!b.hasOwnProperty(i))\n\t\t\t\tcontinue;\n\t\t\tif(typeof a[i]=='undefined')\n\t\t\t\treturn false;\n\t\t\tif(typeof a[i]=='object')\n\t\t\t\tif(!self._equals(a[i],b[i]))\n\t\t\t\t\treturn false;\n\t\t\tif(a[i]!=b[i])\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n};\n```\n\nUsage example\n===\n\nSuppose, we have these objects:\n\n```js\nvar objects=[\n\t{notice_id:11,property_id:22},\n\t{notice_id:11,property_id:33},\n\t{notice_id:11,property_id:22},\n\t{notice_id:11,property_id:44}\n];\n```\n\nThen we can get unique objects as such:\n\n```js\nUniquer.uniqueItems(objects);\n```\n\nResult:\n\n```js\n[\n\t{notice_id:11,property_id:22},\n\t{notice_id:11,property_id:33},\n\t{notice_id:11,property_id:44}\n]\n ```","html":"<h1 id=\"find-unique-objects-from-array-of-objects\">Find unique objects from array of objects</h1>\n<pre><code class=\"lang-js\"><span class=\"hljs-keyword\">var</span> Uniquer={\n    <span class=\"hljs-comment\">/**\n     * Return unique items from array of objects.\n     * <span class=\"hljs-doctag\">@param</span> {Array} objects array of objects\n     * <span class=\"hljs-doctag\">@returns</span> {Array} unique items/objects\n     */</span>\n    uniqueItems:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(objects)</span></span>{\n        <span class=\"hljs-keyword\">var</span> <span class=\"hljs-keyword\">self</span>=this;\n        <span class=\"hljs-keyword\">var</span> unique_items=[];\n        $.each(objects,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(i,obj)</span></span>{\n            <span class=\"hljs-keyword\">if</span>(!unique_items.length) <span class=\"hljs-comment\">// no unique items yet, so</span>\n                unique_items.push(obj); <span class=\"hljs-comment\">// register first item as unique</span>\n            <span class=\"hljs-keyword\">else</span>{\n                <span class=\"hljs-keyword\">var</span> same_objs=$.grep(unique_items,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(uniq)</span></span>{\n                    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">self</span>._equals(uniq,obj); <span class=\"hljs-comment\">// is obj equal to uniq?</span>\n                });\n                <span class=\"hljs-keyword\">if</span>(!same_objs.length) <span class=\"hljs-comment\">// in unique_items obj not found</span>\n                    unique_items.push(obj); <span class=\"hljs-comment\">// then register it as unique</span>\n            }\n        });\n        <span class=\"hljs-keyword\">return</span> unique_items;\n    },\n    <span class=\"hljs-comment\">/**\n     * Compares two object for equality. Checks only own properties and their values.\n     * <span class=\"hljs-doctag\">@param</span> {object} a object to compare\n     * <span class=\"hljs-doctag\">@param</span> {object} b object to compare\n     * <span class=\"hljs-doctag\">@returns</span> {boolean} true, if both objects are equal, otherwise false\n     * <span class=\"hljs-doctag\">@private</span>\n     */</span>\n    _equals    :<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(a,b)</span></span>{\n        <span class=\"hljs-keyword\">var</span> <span class=\"hljs-keyword\">self</span>=this;\n        <span class=\"hljs-keyword\">var</span> i;\n        <span class=\"hljs-keyword\">for</span>(i in a){\n            <span class=\"hljs-keyword\">if</span>(!a.hasOwnProperty(i))\n                <span class=\"hljs-keyword\">continue</span>;\n            <span class=\"hljs-keyword\">if</span>(typeof b[i]==<span class=\"hljs-string\">'undefined'</span>)\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n            <span class=\"hljs-keyword\">if</span>(typeof b[i]==<span class=\"hljs-string\">'object'</span>)\n                <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">self</span>._equals(b[i],a[i]))\n                    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n            <span class=\"hljs-keyword\">if</span>(b[i]!=a[i])\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        <span class=\"hljs-keyword\">for</span>(i in b){\n            <span class=\"hljs-keyword\">if</span>(!b.hasOwnProperty(i))\n                <span class=\"hljs-keyword\">continue</span>;\n            <span class=\"hljs-keyword\">if</span>(typeof a[i]==<span class=\"hljs-string\">'undefined'</span>)\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n            <span class=\"hljs-keyword\">if</span>(typeof a[i]==<span class=\"hljs-string\">'object'</span>)\n                <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">self</span>._equals(a[i],b[i]))\n                    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n            <span class=\"hljs-keyword\">if</span>(a[i]!=b[i])\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">true</span>;\n    }\n};\n</code></pre>\n<h1 id=\"usage-example\">Usage example</h1>\n<p>Suppose, we have these objects:</p>\n<pre><code class=\"lang-js\">var objects=[\n    {<span class=\"hljs-string\">notice_id:</span><span class=\"hljs-number\">11</span>,<span class=\"hljs-string\">property_id:</span><span class=\"hljs-number\">22</span>},\n    {<span class=\"hljs-string\">notice_id:</span><span class=\"hljs-number\">11</span>,<span class=\"hljs-string\">property_id:</span><span class=\"hljs-number\">33</span>},\n    {<span class=\"hljs-string\">notice_id:</span><span class=\"hljs-number\">11</span>,<span class=\"hljs-string\">property_id:</span><span class=\"hljs-number\">22</span>},\n    {<span class=\"hljs-string\">notice_id:</span><span class=\"hljs-number\">11</span>,<span class=\"hljs-string\">property_id:</span><span class=\"hljs-number\">44</span>}\n];\n</code></pre>\n<p>Then we can get unique objects as such:</p>\n<pre><code class=\"lang-js\">Uniquer.uniqueItems(objects)<span class=\"hljs-comment\">;</span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-js\">[\n    {<span class=\"hljs-string\">notice_id:</span><span class=\"hljs-number\">11</span>,<span class=\"hljs-string\">property_id:</span><span class=\"hljs-number\">22</span>},\n    {<span class=\"hljs-string\">notice_id:</span><span class=\"hljs-number\">11</span>,<span class=\"hljs-string\">property_id:</span><span class=\"hljs-number\">33</span>},\n    {<span class=\"hljs-string\">notice_id:</span><span class=\"hljs-number\">11</span>,<span class=\"hljs-string\">property_id:</span><span class=\"hljs-number\">44</span>}\n]\n</code></pre>\n"},{"html_url":"https://gist.github.com/11140374","description":"Yii QueryBuilder example","files":["https://gist.githubusercontent.com/umidjons/11140374/raw/feae7aaf94685a401b79c5f482871cc6077c2bfc/yii-query-builder.md"],"content":"Build following SQL statement with QueryBuilder\n\n```sql\nselect distinct property_id\nfrom notices n\njoin person_info i on (n.id=i.notice_id and i.type=1)\njoin property2notice p on (p.notice_id=n.id)\nwhere n.status=1 and i.tin=1122334\n```\n\n```php\n<?php\n\tpublic function actionSearchInfo($data, $type = \"t\") // t-by tin, p-by pin\n\t{\n\t\t$qb = Yii::app()->db->createCommand()\n\t\t\t->selectDistinct('property_id')\n\t\t\t->from('notices n')\n\t\t\t->join('person_info i', 'n.id=i.notice_id and i.type=1')\n\t\t\t->join('property2notice p', 'p.notice_id=n.id')\n\t\t\t->where('n.status=1');\n\t\tif(!empty($data))\n\t\t\tif($type == \"t\")\n\t\t\t\t$qb->andWhere('i.tin=:tin', [':tin' => $data]);\n\t\t\telseif($type == \"p\")\n\t\t\t\t$qb->andWhere('i.pin=:pin', [':pin' => $data]);\n\t\t$ids = $qb->queryColumn();\n\t\tYii::log('data: '.print_r($ids, true));\n\t}\n```\n\nSample output:\n\n```\ndata: Array\n(\n    [0] => 4\n    [1] => 17\n    [2] => 20\n)\n```","html":"<p>Build following SQL statement with QueryBuilder</p>\n<pre><code class=\"lang-sql\">select distinct property_id\nfrom notices n\njoin person_info <span class=\"hljs-selector-tag\">i</span> on (n.id=<span class=\"hljs-selector-tag\">i</span><span class=\"hljs-selector-class\">.notice_id</span> and <span class=\"hljs-selector-tag\">i</span>.type=<span class=\"hljs-number\">1</span>)\njoin property2notice <span class=\"hljs-selector-tag\">p</span> on (<span class=\"hljs-selector-tag\">p</span>.notice_id=n.id)\nwhere n.status=<span class=\"hljs-number\">1</span> and <span class=\"hljs-selector-tag\">i</span>.tin=<span class=\"hljs-number\">1122334</span>\n</code></pre>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">actionSearchInfo</span><span class=\"hljs-params\">($data, $type = <span class=\"hljs-string\">\"t\"</span>)</span> // <span class=\"hljs-title\">t</span>-<span class=\"hljs-title\">by</span> <span class=\"hljs-title\">tin</span>, <span class=\"hljs-title\">p</span>-<span class=\"hljs-title\">by</span> <span class=\"hljs-title\">pin</span>\n    </span>{\n        $qb = Yii::app()-&gt;db-&gt;createCommand()\n            -&gt;selectDistinct(<span class=\"hljs-string\">'property_id'</span>)\n            -&gt;from(<span class=\"hljs-string\">'notices n'</span>)\n            -&gt;join(<span class=\"hljs-string\">'person_info i'</span>, <span class=\"hljs-string\">'n.id=i.notice_id and i.type=1'</span>)\n            -&gt;join(<span class=\"hljs-string\">'property2notice p'</span>, <span class=\"hljs-string\">'p.notice_id=n.id'</span>)\n            -&gt;where(<span class=\"hljs-string\">'n.status=1'</span>);\n        <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">empty</span>($data))\n            <span class=\"hljs-keyword\">if</span>($type == <span class=\"hljs-string\">\"t\"</span>)\n                $qb-&gt;andWhere(<span class=\"hljs-string\">'i.tin=:tin'</span>, [<span class=\"hljs-string\">':tin'</span> =&gt; $data]);\n            <span class=\"hljs-keyword\">elseif</span>($type == <span class=\"hljs-string\">\"p\"</span>)\n                $qb-&gt;andWhere(<span class=\"hljs-string\">'i.pin=:pin'</span>, [<span class=\"hljs-string\">':pin'</span> =&gt; $data]);\n        $ids = $qb-&gt;queryColumn();\n        Yii::log(<span class=\"hljs-string\">'data: '</span>.print_r($ids, <span class=\"hljs-keyword\">true</span>));\n    }</span>\n</code></pre>\n<p>Sample output:</p>\n<pre><code>data: <span class=\"hljs-keyword\">Array</span>\n(\n    [<span class=\"hljs-number\">0</span>] =&gt; <span class=\"hljs-number\">4</span>\n    [<span class=\"hljs-number\">1</span>] =&gt; <span class=\"hljs-number\">17</span>\n    [<span class=\"hljs-number\">2</span>] =&gt; <span class=\"hljs-number\">20</span>\n)\n</code></pre>"},{"html_url":"https://gist.github.com/11137734","description":"Vim Tips","files":["https://gist.githubusercontent.com/umidjons/11137734/raw/c6e7ef36f05e232576f63a164c8e1f056ad300e7/vim-tips.md"],"content":"Set vim as default editor\n===\n\nAdd vim into alternatives list\n```bash\n# /usr/bin/vim is a link, /usr/bin/vim73 is a executable, 100 priority\nupdate-alternatives --install /usr/bin/vim editor /usr/bin/vim73 100\n\n# change default editor\nupdate-alternatives --config editor\n```\n\nReload configuration (vimrc) without closing Vim\n===\n\n```vim\n:source $MYVIMRC<CR>\n```\n\nMotion\n===\n\n`H` window top\n\n`M` window middle\n\n`L` window bottom\n\n`:157<CR>`, `157G`, `157gg` go to 157 line\n\nSearch and replace step by step\n===\n\nMove to the word you want to search, then press `*`. Or manually search for some word by typing `/{word}`.\n\nMove between found words by hitting `n` or `N`.\n\nTo replace word type `cw`, then type new word, then `<Esc>`.\n\nMove to next occurence, then press `.` to repeat last change.\n\nUppercase/Lowercase\n===\n\n`~` uppercase/lowercase a character\n\n`g~w` uppercase/lowercase word from cursor until end of a word\n\n`g~aw` uppercase/lowercase a word in any position\n\n`gUaw` uppercase a word\n\n`guaw` lowercase a word\n\n`gUU` uppercase a line\n\n`guu` lowercase a line\n\n`gUap` `guap` uppercase/lowercase a paragraph\n\nAutocomplete\n===\n\nType `<C-n><C-p>` or `<C-p><C-n>` to open auto complete popup, then continue typing, popup items will be filtered as you type.\n\nTo choose from list just type `<C-n>` or `<C-p>` following by `<C-y>` or `<CR>`.\n\n`<C-x><C-n>` complete from buffer.\n\n`<C-x><C-i>` complete from included files.\n\nAutocomplete for PHP\n====\n\n```bash\ncd ~/.vim/bundle\ngit clone git://github.com/shawncplus/phpcomplete.vim.git\n```\n\nInstalling exuberant-ctags on ubuntu\n===\n```bash\nsudo apt-get install exuberant-ctags\n```\nGenerating tags:\n```bash\n# change dir\ncd my_project_root_dir_OR_my_framework_root_dir\n# generate tags\nctags-exuberant -f php.tags --languages=PHP -R\n# tell vim to use our tags file\n:set tags=~/path/to/php.tags\n```\nOpen up a new PHP file, set the tag file and start typing the name of a class that you know exists. After a few characters type `<c-x><c-o>` (insert mode) and the omnicompletion will kick in. Then, on the completed class name in command mode, type `<c-]>`. You will be taken to the class definition, or given a list of definitions if it matches more than one.\n\nAnother neat feature is jumping to a tag from the Vim command line. For example, if you know you need to get to the file containing the class `MyLovelyClass`, just type:\n```\n:tag MyLovelyClass\n```\nAnd hit return. You will be taken straight to it. This is almost always quicker than trying to navigate a file tree to find the file you want. Also, this supports tab completion, so you could just type `:tag My<tab>` and you would get a list of options.\n\nSuperTab\n===\n\nInstalling `supertab` to open omni via `Tab` instead of `<c-n><c-o>`\n```\ngit clone https://github.com/ervandew/supertab.git\n```\n\nSet default completion type in your .vimrc:\n```\nlet g:SuperTabDefaultCompletionType=\"<c-x><c-o>\"\n```\n\nOpen your source file in vim, type some characters, then hit `Tab`. To navigate in omni type `Tab` some more time.\n\nCorrection in Insert mode\n===\n\n`<C-h>` removes one character (backspace)\n\n`<C-w>` removes one word back\n\n`<C-u>` removes one line back\n\nRebuild documentation/How to add plugin documentation\n===\n\n```vim\n:helptags c:\\Program\\ Files\\ (x86)\\Vim\\vimfiles\\bundle\\vimtodo\\doc\\\n```\n\nChange directory in Vim\n===\n\n`:cd mydir` or to change disk drive on Windows `:cd c:\\`.\n\nList files & directories\n===\n\nType `:e`, then space, then hit `CTRL-D` to list files & directories in the current directory.\n\nVim File Explorer\n===\n\nOpen File Explorer vertically splitting window: `:Vex` or with `:Vexplore` or with `:Explore!`.\n\nOpen File Explorer with `:Ex` or with `:Explore`.\n\nOpen File Explorer horizontally splitting window: `:Sexplore`.\n\nOpen File Explorer in new tab with `:Texplore`.\n\nWalk between windows with `CTRL-w`.\n\n`Enter` to open file or directory. \n`CTRL-6` to return to File Explorer.\n\nChange netrw window size with `:let g:netrw_winsize=25`.\n\nEnable netrw file preview `:let g:netrw_preview=1`.\n\nPreview file under cursor, type `p`.\n\nClose preview window `CTRL-w-z`.\n\nSyntax checking\n===\n\n[Syntastic](https://github.com/scrooloose/syntastic)\n\nIt will always check syntax on every write.\n\n`:SyntasticInfo` show info\n\n`:SyntasticCheck php` run `php` checker\n\nEffectively open a file\n===\n\nTo efficiently open a file in the current directory or subdirectories do following:\n\nSet `path` variable in your `vimrc`:\n\n```vim\nset path+=**\n```\n\nChange current directory to your project path:\n\n```vim\n:cd c:\\openserver\\domains\\mysite.loc\\\n```\n\nSearch and open a file:\n\n```vim\n:find MyController.php\n:fin MyController.php\n```\n\nSearch and open a file in new tab:\n\n```vim\n:tabfind MyController.php\n:tabf MyController.php\n:tabf myfolder\\MyController.php\n```\n\nTo autocomplete file name, for example, type `:tabf myfolder\\ind` then hit `<TAB>`, Vim will search files and if found autocompletes file name with relative path.\n\nInvoke normal mode command with other language keyboards (`langmap` option)\n===\n\nRussian\n\n```vim\n:set langmap=ФИСВУАПРШОЛДЬТЩЗЙКЫЕГМЦЧНЯ;ABCDEFGHIJKLMNOPQRSTUVWXYZ,фисвуапршолдьтщзйкыегмцчня;abcdefghijklmnopqrstuvwxyz\n```\n\nUzbek\n\n```vim\n:set langmap=ФИСВУАПРШОЛДЬТЎЗЙКҚЕГМЦЧНЯ;ABCDEFGHIJKLMNOPQRSTUVWXYZ,фисвуапршолдьтўзйкқегмцчня;abcdefghijklmnopqrstuvwxyz\n```\n\nVisual Block mode\n===\n\nSuppose, we have following code:\n```js\nvar a='hello world'\nvar b=123456\nvar c=null\n```\n\nTo put semicolon (any character or text, no matter) at the end of lines, do following steps:\n- `gg` to go to the begin of a file\n- Switch to visual block mode with `<C-v>`\n- Select lines moving down with `j`\n- Go to end of line with `$`\n- Switch to append mode with `A` (or insert mode with `I`)\n- Type `;`, then `<Esc>`\n- Now Vim puts semicolon at the end of all selected lines","html":"<h1 id=\"set-vim-as-default-editor\">Set vim as default editor</h1>\n<p>Add vim into alternatives list</p>\n<pre><code class=\"lang-bash\"># /usr/bin/<span class=\"hljs-keyword\">vim</span> <span class=\"hljs-keyword\">is</span> <span class=\"hljs-keyword\">a</span> link, /usr/bin/vim73 <span class=\"hljs-keyword\">is</span> <span class=\"hljs-keyword\">a</span> <span class=\"hljs-built_in\">executable</span>, <span class=\"hljs-number\">100</span> priority\n<span class=\"hljs-keyword\">update</span>-alternatives --install /usr/bin/<span class=\"hljs-keyword\">vim</span> editor /usr/bin/vim73 <span class=\"hljs-number\">100</span>\n\n# <span class=\"hljs-keyword\">change</span> default editor\n<span class=\"hljs-keyword\">update</span>-alternatives --config editor\n</code></pre>\n<h1 id=\"reload-configuration-vimrc-without-closing-vim\">Reload configuration (vimrc) without closing Vim</h1>\n<pre><code class=\"lang-vim\">:<span class=\"hljs-built_in\">source</span> <span class=\"hljs-variable\">$MYVIMRC</span>&lt;CR&gt;\n</code></pre>\n<h1 id=\"motion\">Motion</h1>\n<p><code>H</code> window top</p>\n<p><code>M</code> window middle</p>\n<p><code>L</code> window bottom</p>\n<p><code>:157&lt;CR&gt;</code>, <code>157G</code>, <code>157gg</code> go to 157 line</p>\n<h1 id=\"search-and-replace-step-by-step\">Search and replace step by step</h1>\n<p>Move to the word you want to search, then press <code>*</code>. Or manually search for some word by typing <code>/{word}</code>.</p>\n<p>Move between found words by hitting <code>n</code> or <code>N</code>.</p>\n<p>To replace word type <code>cw</code>, then type new word, then <code>&lt;Esc&gt;</code>.</p>\n<p>Move to next occurence, then press <code>.</code> to repeat last change.</p>\n<h1 id=\"uppercase-lowercase\">Uppercase/Lowercase</h1>\n<p><code>~</code> uppercase/lowercase a character</p>\n<p><code>g~w</code> uppercase/lowercase word from cursor until end of a word</p>\n<p><code>g~aw</code> uppercase/lowercase a word in any position</p>\n<p><code>gUaw</code> uppercase a word</p>\n<p><code>guaw</code> lowercase a word</p>\n<p><code>gUU</code> uppercase a line</p>\n<p><code>guu</code> lowercase a line</p>\n<p><code>gUap</code> <code>guap</code> uppercase/lowercase a paragraph</p>\n<h1 id=\"autocomplete\">Autocomplete</h1>\n<p>Type <code>&lt;C-n&gt;&lt;C-p&gt;</code> or <code>&lt;C-p&gt;&lt;C-n&gt;</code> to open auto complete popup, then continue typing, popup items will be filtered as you type.</p>\n<p>To choose from list just type <code>&lt;C-n&gt;</code> or <code>&lt;C-p&gt;</code> following by <code>&lt;C-y&gt;</code> or <code>&lt;CR&gt;</code>.</p>\n<p><code>&lt;C-x&gt;&lt;C-n&gt;</code> complete from buffer.</p>\n<p><code>&lt;C-x&gt;&lt;C-i&gt;</code> complete from included files.</p>\n<h1 id=\"autocomplete-for-php\">Autocomplete for PHP</h1>\n<pre><code class=\"lang-bash\"><span class=\"hljs-keyword\">cd</span> ~/.<span class=\"hljs-keyword\">vim</span>/bundle\ngit clone gi<span class=\"hljs-variable\">t:</span>//github.<span class=\"hljs-keyword\">com</span>/shawncplus/phpcomplete.<span class=\"hljs-keyword\">vim</span>.git\n</code></pre>\n<h1 id=\"installing-exuberant-ctags-on-ubuntu\">Installing exuberant-ctags on ubuntu</h1>\n<pre><code class=\"lang-bash\">sudo apt-<span class=\"hljs-keyword\">get</span> install exuberant-ctags\n</code></pre>\n<p>Generating tags:</p>\n<pre><code class=\"lang-bash\"># <span class=\"hljs-keyword\">change</span> dir\n<span class=\"hljs-keyword\">cd</span> my_project_root_dir_OR_my_framework_root_dir\n# generate <span class=\"hljs-keyword\">tags</span>\nctags-exuberant -<span class=\"hljs-keyword\">f</span> php.<span class=\"hljs-keyword\">tags</span> --languages=PHP -R\n# tell <span class=\"hljs-keyword\">vim</span> <span class=\"hljs-keyword\">to</span> use our <span class=\"hljs-keyword\">tags</span> <span class=\"hljs-keyword\">file</span>\n:<span class=\"hljs-keyword\">set</span> <span class=\"hljs-keyword\">tags</span>=~/path/<span class=\"hljs-keyword\">to</span>/php.<span class=\"hljs-keyword\">tags</span>\n</code></pre>\n<p>Open up a new PHP file, set the tag file and start typing the name of a class that you know exists. After a few characters type <code>&lt;c-x&gt;&lt;c-o&gt;</code> (insert mode) and the omnicompletion will kick in. Then, on the completed class name in command mode, type <code>&lt;c-]&gt;</code>. You will be taken to the class definition, or given a list of definitions if it matches more than one.</p>\n<p>Another neat feature is jumping to a tag from the Vim command line. For example, if you know you need to get to the file containing the class <code>MyLovelyClass</code>, just type:</p>\n<pre><code>:<span class=\"hljs-keyword\">tag</span> <span class=\"hljs-title\">MyLovelyClass</span>\n</code></pre><p>And hit return. You will be taken straight to it. This is almost always quicker than trying to navigate a file tree to find the file you want. Also, this supports tab completion, so you could just type <code>:tag My&lt;tab&gt;</code> and you would get a list of options.</p>\n<h1 id=\"supertab\">SuperTab</h1>\n<p>Installing <code>supertab</code> to open omni via <code>Tab</code> instead of <code>&lt;c-n&gt;&lt;c-o&gt;</code></p>\n<pre><code>git <span class=\"hljs-keyword\">clone</span> <span class=\"hljs-title\">https</span>://github.com/ervandew/supertab.git\n</code></pre><p>Set default completion type in your .vimrc:</p>\n<pre><code><span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">g:SuperTabDefaultCompletionType</span>=<span class=\"hljs-string\">\"&lt;c-x&gt;&lt;c-o&gt;\"</span>\n</code></pre><p>Open your source file in vim, type some characters, then hit <code>Tab</code>. To navigate in omni type <code>Tab</code> some more time.</p>\n<h1 id=\"correction-in-insert-mode\">Correction in Insert mode</h1>\n<p><code>&lt;C-h&gt;</code> removes one character (backspace)</p>\n<p><code>&lt;C-w&gt;</code> removes one word back</p>\n<p><code>&lt;C-u&gt;</code> removes one line back</p>\n<h1 id=\"rebuild-documentation-how-to-add-plugin-documentation\">Rebuild documentation/How to add plugin documentation</h1>\n<pre><code class=\"lang-vim\"><span class=\"hljs-meta\">:helptags c:\\Program\\</span> Files\\ (x86)\\Vim\\vimfiles\\bundle\\vimtodo\\doc\\\n</code></pre>\n<h1 id=\"change-directory-in-vim\">Change directory in Vim</h1>\n<p><code>:cd mydir</code> or to change disk drive on Windows <code>:cd c:\\</code>.</p>\n<h1 id=\"list-files-directories\">List files &amp; directories</h1>\n<p>Type <code>:e</code>, then space, then hit <code>CTRL-D</code> to list files &amp; directories in the current directory.</p>\n<h1 id=\"vim-file-explorer\">Vim File Explorer</h1>\n<p>Open File Explorer vertically splitting window: <code>:Vex</code> or with <code>:Vexplore</code> or with <code>:Explore!</code>.</p>\n<p>Open File Explorer with <code>:Ex</code> or with <code>:Explore</code>.</p>\n<p>Open File Explorer horizontally splitting window: <code>:Sexplore</code>.</p>\n<p>Open File Explorer in new tab with <code>:Texplore</code>.</p>\n<p>Walk between windows with <code>CTRL-w</code>.</p>\n<p><code>Enter</code> to open file or directory. \n<code>CTRL-6</code> to return to File Explorer.</p>\n<p>Change netrw window size with <code>:let g:netrw_winsize=25</code>.</p>\n<p>Enable netrw file preview <code>:let g:netrw_preview=1</code>.</p>\n<p>Preview file under cursor, type <code>p</code>.</p>\n<p>Close preview window <code>CTRL-w-z</code>.</p>\n<h1 id=\"syntax-checking\">Syntax checking</h1>\n<p><a href=\"https://github.com/scrooloose/syntastic\">Syntastic</a></p>\n<p>It will always check syntax on every write.</p>\n<p><code>:SyntasticInfo</code> show info</p>\n<p><code>:SyntasticCheck php</code> run <code>php</code> checker</p>\n<h1 id=\"effectively-open-a-file\">Effectively open a file</h1>\n<p>To efficiently open a file in the current directory or subdirectories do following:</p>\n<p>Set <code>path</code> variable in your <code>vimrc</code>:</p>\n<pre><code class=\"lang-vim\"><span class=\"hljs-built_in\">set</span> <span class=\"hljs-built_in\">path</span>+=**\n</code></pre>\n<p>Change current directory to your project path:</p>\n<pre><code class=\"lang-vim\">:cd c:<span class=\"hljs-symbol\">\\o</span>penserver<span class=\"hljs-symbol\">\\d</span>omains<span class=\"hljs-symbol\">\\m</span>ysite.loc\\\n</code></pre>\n<p>Search and open a file:</p>\n<pre><code class=\"lang-vim\"><span class=\"hljs-selector-pseudo\">:find</span> <span class=\"hljs-selector-tag\">MyController</span><span class=\"hljs-selector-class\">.php</span>\n<span class=\"hljs-selector-pseudo\">:fin</span> <span class=\"hljs-selector-tag\">MyController</span><span class=\"hljs-selector-class\">.php</span>\n</code></pre>\n<p>Search and open a file in new tab:</p>\n<pre><code class=\"lang-vim\"><span class=\"hljs-selector-pseudo\">:tabfind</span> <span class=\"hljs-selector-tag\">MyController</span><span class=\"hljs-selector-class\">.php</span>\n<span class=\"hljs-selector-pseudo\">:tabf</span> <span class=\"hljs-selector-tag\">MyController</span><span class=\"hljs-selector-class\">.php</span>\n<span class=\"hljs-selector-pseudo\">:tabf</span> <span class=\"hljs-selector-tag\">myfolder</span>\\<span class=\"hljs-selector-tag\">MyController</span><span class=\"hljs-selector-class\">.php</span>\n</code></pre>\n<p>To autocomplete file name, for example, type <code>:tabf myfolder\\ind</code> then hit <code>&lt;TAB&gt;</code>, Vim will search files and if found autocompletes file name with relative path.</p>\n<h1 id=\"invoke-normal-mode-command-with-other-language-keyboards-langmap-option-\">Invoke normal mode command with other language keyboards (<code>langmap</code> option)</h1>\n<p>Russian</p>\n<pre><code class=\"lang-vim\">:<span class=\"hljs-keyword\">set</span> langmap=ФИСВУАПРШОЛДЬТЩЗЙКЫЕГМЦЧНЯ;ABCDEFGHIJKLMNOPQRSTUVWXYZ,фисвуапршолдьтщзйкыегмцчня;abcdefghijklmnopqrstuvwxyz\n</code></pre>\n<p>Uzbek</p>\n<pre><code class=\"lang-vim\">:<span class=\"hljs-keyword\">set</span> langmap=ФИСВУАПРШОЛДЬТЎЗЙКҚЕГМЦЧНЯ;ABCDEFGHIJKLMNOPQRSTUVWXYZ,фисвуапршолдьтўзйкқегмцчня;abcdefghijklmnopqrstuvwxyz\n</code></pre>\n<h1 id=\"visual-block-mode\">Visual Block mode</h1>\n<p>Suppose, we have following code:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-selector-tag\">var</span> a=<span class=\"hljs-string\">'hello world'</span>\n<span class=\"hljs-selector-tag\">var</span> b=<span class=\"hljs-number\">123456</span>\n<span class=\"hljs-selector-tag\">var</span> c=null\n</code></pre>\n<p>To put semicolon (any character or text, no matter) at the end of lines, do following steps:</p>\n<ul>\n<li><code>gg</code> to go to the begin of a file</li>\n<li>Switch to visual block mode with <code>&lt;C-v&gt;</code></li>\n<li>Select lines moving down with <code>j</code></li>\n<li>Go to end of line with <code>$</code></li>\n<li>Switch to append mode with <code>A</code> (or insert mode with <code>I</code>)</li>\n<li>Type <code>;</code>, then <code>&lt;Esc&gt;</code></li>\n<li>Now Vim puts semicolon at the end of all selected lines</li>\n</ul>\n"},{"html_url":"https://gist.github.com/11037635","description":"Creating PDF thumbnails in PHP","files":["https://gist.githubusercontent.com/umidjons/11037635/raw/31b3eedf2b0ae600692b784bf5e93eb272bc8e37/pdf-thumbnail-php.md"],"content":"Creating PDF thumbnails in PHP\n==\n\nInstall Ghostscript\n===\n\nDownload and install right version of [ghostscript](http://www.ghostscript.com/download/gsdnld.html). In my case my PHP was x86 architecture, so I download `Ghostscript 9.14 for Windows (32 bit)`.\n\nEnable ImageMagick\n===\n\nCheck, is `imagick` extension available and loaded.\n\nThis line should be present in your `php.ini`:\n```ini\nextension=php_imagick.dll\n```\n\nAlso, check `php_imagick.dll` in PHP's `ext` directory.\n\nPHP function\n===\n\n```php\n<?php\n\tfunction genPdfThumbnail($source, $target)\n\t{\n\t\t//$source = realpath($source);\n\t\t$target = dirname($source).DIRECTORY_SEPARATOR.$target;\n\t\t$im     = new Imagick($source.\"[0]\"); // 0-first page, 1-second page\n\t\t$im->setImageColorspace(255); // prevent image colors from inverting\n\t\t$im->setimageformat(\"jpeg\");\n\t\t$im->thumbnailimage(160, 120); // width and height\n\t\t$im->writeimage($target);\n\t\t$im->clear();\n\t\t$im->destroy();\n\t}\n```\n\nCall that function:\n\n```php\n<?php\ngenPdfThumbnail('/uploads/my.pdf','my.jpg'); // generates /uploads/my.jpg\n```\n","html":"<h1 id=\"creating-pdf-thumbnails-in-php\">Creating PDF thumbnails in PHP</h1>\n<h1 id=\"install-ghostscript\">Install Ghostscript</h1>\n<p>Download and install right version of <a href=\"http://www.ghostscript.com/download/gsdnld.html\">ghostscript</a>. In my case my PHP was x86 architecture, so I download <code>Ghostscript 9.14 for Windows (32 bit)</code>.</p>\n<h1 id=\"enable-imagemagick\">Enable ImageMagick</h1>\n<p>Check, is <code>imagick</code> extension available and loaded.</p>\n<p>This line should be present in your <code>php.ini</code>:</p>\n<pre><code class=\"lang-ini\"><span class=\"hljs-attr\">extension</span>=php_imagick.dll\n</code></pre>\n<p>Also, check <code>php_imagick.dll</code> in PHP&#39;s <code>ext</code> directory.</p>\n<h1 id=\"php-function\">PHP function</h1>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">genPdfThumbnail</span><span class=\"hljs-params\">($source, $target)</span>\n    </span>{\n        <span class=\"hljs-comment\">//$source = realpath($source);</span>\n        $target = dirname($source).DIRECTORY_SEPARATOR.$target;\n        $im     = <span class=\"hljs-keyword\">new</span> Imagick($source.<span class=\"hljs-string\">\"[0]\"</span>); <span class=\"hljs-comment\">// 0-first page, 1-second page</span>\n        $im-&gt;setImageColorspace(<span class=\"hljs-number\">255</span>); <span class=\"hljs-comment\">// prevent image colors from inverting</span>\n        $im-&gt;setimageformat(<span class=\"hljs-string\">\"jpeg\"</span>);\n        $im-&gt;thumbnailimage(<span class=\"hljs-number\">160</span>, <span class=\"hljs-number\">120</span>); <span class=\"hljs-comment\">// width and height</span>\n        $im-&gt;writeimage($target);\n        $im-&gt;clear();\n        $im-&gt;destroy();\n    }</span>\n</code></pre>\n<p>Call that function:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\ngenPdfThumbnail(<span class=\"hljs-string\">'/uploads/my.pdf'</span>,<span class=\"hljs-string\">'my.jpg'</span>); <span class=\"hljs-comment\">// generates /uploads/my.jpg</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/11026279","description":"Select parent element and remove child element in jQuery","files":["https://gist.githubusercontent.com/umidjons/11026279/raw/52704f7fc459be39a568bee86b41577be01667de/remove-child-select-parent.md"],"content":"Select parent element and remove child element in jQuery\n==\n\n```html\n<div class=\"container\">\n  <div class=\"child\">content is here</div>\n</div>\n```\n\nSelect parent element, then empty its content:\n```js\nvar container=$(\".child\").parent().empty();\n```\n\nSelect parent element, then select specific child, remove it and back to parent element:\n```js\nvar container=$(\".child\").parent().children().remove().end();\n```","html":"<h1 id=\"select-parent-element-and-remove-child-element-in-jquery\">Select parent element and remove child element in jQuery</h1>\n<pre><code class=\"lang-html\">&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"container\"</span>&gt;\n  &lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"child\"</span>&gt;content <span class=\"hljs-keyword\">is</span> here&lt;/<span class=\"hljs-keyword\">div</span>&gt;\n&lt;/<span class=\"hljs-keyword\">div</span>&gt;\n</code></pre>\n<p>Select parent element, then empty its content:</p>\n<pre><code class=\"lang-js\">var <span class=\"hljs-keyword\">container</span>=$(<span class=\"hljs-string\">\".child\"</span>).<span class=\"hljs-keyword\">parent</span>().empty();\n</code></pre>\n<p>Select parent element, then select specific child, remove it and back to parent element:</p>\n<pre><code class=\"lang-js\">var <span class=\"hljs-keyword\">container</span>=$(<span class=\"hljs-string\">\".child\"</span>).<span class=\"hljs-keyword\">parent</span>().children().remove().end();\n</code></pre>\n"},{"html_url":"https://gist.github.com/11025873","description":"Generate random string in JavaScript","files":["https://gist.githubusercontent.com/umidjons/11025873/raw/894b731f1d4a311f8c3f86b35f75ce05eeb24bf4/random-string-js.md"],"content":"Generate random string in JavaScript\n==\n\n```js\nconsole.log(Math.random().toString(36).slice(2)); // o0dagqcr6f6zjjor\n```","html":"<h1 id=\"generate-random-string-in-javascript\">Generate random string in JavaScript</h1>\n<pre><code class=\"lang-js\">console.<span class=\"hljs-built_in\">log</span>(Math.<span class=\"hljs-built_in\">random</span>().<span class=\"hljs-built_in\">toString</span>(<span class=\"hljs-number\">36</span>).slice(<span class=\"hljs-number\">2</span>)); <span class=\"hljs-comment\">// o0dagqcr6f6zjjor</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/10861091","description":"Yii: File mime type","files":["https://gist.githubusercontent.com/umidjons/10861091/raw/a49048d8035ad965dde769d991b0848d913b669c/file-mime-type.md"],"content":"# Get a file MIME type\n\nTo get a file mime type use `CFileHelper` class. It has static method `getMimeType`. Here is sample code:\n\n```php\n<?php\n$file_path = Yii::getPathOfAlias('webroot').$model->attachment_uri;\necho CFileHelper::getMimeType($file_path); // application/pdf\n```","html":"<h1 id=\"get-a-file-mime-type\">Get a file MIME type</h1>\n<p>To get a file mime type use <code>CFileHelper</code> class. It has static method <code>getMimeType</code>. Here is sample code:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n$file_path = Yii::getPathOfAlias(<span class=\"hljs-string\">'webroot'</span>).$model-&gt;attachment_uri;\n<span class=\"hljs-keyword\">echo</span> CFileHelper::getMimeType($file_path); <span class=\"hljs-comment\">// application/pdf</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/10859940","description":"Repeat string N times without loop in Java","files":["https://gist.githubusercontent.com/umidjons/10859940/raw/4abe3a33c654d48cc31ca19456d3fdaa9b008cde/java-repeat-string.md"],"content":"# Repeat string N times without loop in Java\n```java\npackage javaapplication1;\npublic class JavaApplication1 {\n    /**\n     * Repeat string <b>str</b> <b>times</b> time.\n     * @param str string to repeat\n     * @param times repeat str times time\n     * @return generated string\n     */\n    public static String repeat(String str, int times) {\n        return new String(new char[times]).replace(\"\\0\", str);\n    }\n    public static void main(String[] args) {\n        System.out.println(repeat(\"*\", 5));\n    }\n\n}\n```","html":"<h1 id=\"repeat-string-n-times-without-loop-in-java\">Repeat string N times without loop in Java</h1>\n<pre><code class=\"lang-java\"><span class=\"hljs-keyword\">package</span> javaapplication1;\n<span class=\"hljs-keyword\">public</span> class JavaApplication1 {\n    <span class=\"hljs-comment\">/**\n     * Repeat string &lt;b&gt;str&lt;/b&gt; &lt;b&gt;times&lt;/b&gt; time.\n     * @param str string to repeat\n     * @param times repeat str times time\n     * @return generated string\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">String</span> repeat(<span class=\"hljs-keyword\">String</span> <span class=\"hljs-built_in\">str</span>, <span class=\"hljs-built_in\">int</span> times) {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">String</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">char</span>[times]).replace(<span class=\"hljs-string\">\"\\0\"</span>, <span class=\"hljs-built_in\">str</span>);\n    }\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> main(<span class=\"hljs-keyword\">String</span>[] args) {\n        System.out.<span class=\"hljs-built_in\">println</span>(repeat(<span class=\"hljs-string\">\"*\"</span>, <span class=\"hljs-number\">5</span>));\n    }\n\n}\n</code></pre>\n"},{"html_url":"https://gist.github.com/10824124","description":"Yii: Using Number formatter in Yii","files":["https://gist.githubusercontent.com/umidjons/10824124/raw/0f6c009884c0b60a52bc5c76eb6604c2d9eaba58/number-format.md"],"content":"# Using Number formatter in Yii\n\n```php\n<?php\nYii::app()->numberFormatter->formatCurrency(1234.5678, 'USD'); // 1 234,57 $\nYii::app()->numberFormatter->formatCurrency(1234.5678, 'EUR'); // 1 234,57 €\nYii::app()->numberFormatter->formatCurrency(1234.5678, 'RUB'); // 1 234,57 руб.\n```\n\nIt is easy do this with wrapper function:\n\n```php\n<?php\nfunction formatCurrency($value, $currency = \"USD\")\n{\n\treturn Yii::app()->numberFormatter->formatCurrency($value, $currency);\n}\n\nformatCurrency(1234.5678, 'USD'); // 1 234,57 $\nformatCurrency(1234.5678, 'EUR'); // 1 234,57 €\nformatCurrency(1234.5678, 'RUB'); // 1 234,57 руб.\n```","html":"<h1 id=\"using-number-formatter-in-yii\">Using Number formatter in Yii</h1>\n<pre><code class=\"lang-php\">&lt;?php\nY<span class=\"hljs-function\"><span class=\"hljs-title\">ii</span>::app()-&gt;</span><span class=\"hljs-function\"><span class=\"hljs-title\">numberFormatter</span>-&gt;</span>formatCurrency(<span class=\"hljs-number\">1234.5678</span>, <span class=\"hljs-string\">'USD'</span>); <span class=\"hljs-comment\">// 1 234,57 $</span>\nY<span class=\"hljs-function\"><span class=\"hljs-title\">ii</span>::app()-&gt;</span><span class=\"hljs-function\"><span class=\"hljs-title\">numberFormatter</span>-&gt;</span>formatCurrency(<span class=\"hljs-number\">1234.5678</span>, <span class=\"hljs-string\">'EUR'</span>); <span class=\"hljs-comment\">// 1 234,57 €</span>\nY<span class=\"hljs-function\"><span class=\"hljs-title\">ii</span>::app()-&gt;</span><span class=\"hljs-function\"><span class=\"hljs-title\">numberFormatter</span>-&gt;</span>formatCurrency(<span class=\"hljs-number\">1234.5678</span>, <span class=\"hljs-string\">'RUB'</span>); <span class=\"hljs-comment\">// 1 234,57 руб.</span>\n</code></pre>\n<p>It is easy do this with wrapper function:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">formatCurrency</span><span class=\"hljs-params\">($value, $currency = <span class=\"hljs-string\">\"USD\"</span>)</span>\n</span>{\n    <span class=\"hljs-keyword\">return</span> Yii::app()-&gt;numberFormatter-&gt;formatCurrency($value, $currency);\n}\n\nformatCurrency(<span class=\"hljs-number\">1234.5678</span>, <span class=\"hljs-string\">'USD'</span>); <span class=\"hljs-comment\">// 1 234,57 $</span>\nformatCurrency(<span class=\"hljs-number\">1234.5678</span>, <span class=\"hljs-string\">'EUR'</span>); <span class=\"hljs-comment\">// 1 234,57 €</span>\nformatCurrency(<span class=\"hljs-number\">1234.5678</span>, <span class=\"hljs-string\">'RUB'</span>); <span class=\"hljs-comment\">// 1 234,57 руб.</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/10803531","description":"Helper class to work with parameters without DB","files":["https://gist.githubusercontent.com/umidjons/10803531/raw/beac0955adcd80086c24255796905bd6b6cfe492/params-class.md"],"content":"# Helper class to work with parameters without DB\n\nIf we omit `$param` it will return all values & descriptions as associative array, which is ready to pass to `CHtml::dropDownList()`.\n\nIf we specify `$param` as string (name), it will return parameter value by name.\n\nIf we specify `$param` as integer (value), it will return parameter description by value (index).\n\n```php\n<?php\nclass P\n{\n\tpublic static function comment( $param = null )\n\t{\n\t\t$items = [\n\t\t\t0 => [ 'disabled', Yii::t( 'zr', 'Disabled' ), ],\n\t\t\t1 => [ 'allowed', Yii::t( 'zr', 'Allowed' ), ],\n\t\t];\n\t\treturn self::handle( $items, $param );\n\t}\n\n\tpublic static function contentStatus( $param = null )\n\t{\n\t\t$items = [\n\t\t\t0 => [ 'draft', Yii::t( 'zr', 'Draft' ), ],\n\t\t\t1 => [ 'published', Yii::t( 'zr', 'Published' ), ],\n\t\t\t2 => [ 'deleted', Yii::t( 'zr', 'Deleted' ), ],\n\t\t];\n\t\treturn self::handle( $items, $param );\n\t}\n\n\tpublic static function language( $param = null )\n\t{\n\t\t$items = [\n\t\t\t1 => [ 'ru', Yii::t( 'zr', 'Russian' ), ],\n\t\t\t2 => [ 'uz', Yii::t( 'zr', 'Uzbek' ), ],\n\t\t\t3 => [ 'en', Yii::t( 'zr', 'English' ), ],\n\t\t];\n\t\treturn self::handle( $items, $param );\n\t}\n\n\tpublic static function status( $param = null )\n\t{\n\t\t$items = [\n\t\t\t0 => [ 'disabled', Yii::t( 'zr', 'Disabled' ), ],\n\t\t\t1 => [ 'active', Yii::t( 'zr', 'Active' ), ],\n\t\t];\n\t\treturn self::handle( $items, $param );\n\t}\n\n\t/**\n\t * Handle parameters.\n\t * @param array           $items parameters list [param_value=>[param_name, param_description], ...]\n\t * @param int|null|string $param null to return list of [param_value=>param_description,...],\n\t *                               param name string to return value,\n\t *                               param value to return param description.\n\t * @return int|null|string param value, list of param value and description or param description by value.\n\t */\n\tprivate static function handle( $items, $param )\n\t{\n\t\tif ( is_null( $param ) ) // return [value => description,...]\n\t\t{\n\t\t\t$res = null;\n\t\t\tforeach ( $items as $key => $val )\n\t\t\t\t$res[ $key ] = $val[ 1 ];\n\t\t\treturn $res;\n\t\t}\n\t\telseif ( is_numeric( $param ) )\n\t\t\treturn $items[ $param ][ 1 ];\n\t\telseif ( is_string( $param ) ) // return value\n\t\t{\n\t\t\tforeach ( $items as $key => $val )\n\t\t\t\tif ( $param == $val[ 0 ] )\n\t\t\t\t\treturn $key;\n\t\t\treturn null;\n\t\t}\n\t}\n}\n```\n\nUsage example\n\n```php\n<?php\n// Get all content statuses and show in drop down\necho CHtml::dropDownList('contentstatus', false, P::contentStatus(), ['class' => 'form-control']);\n\n// Get content status value by name\necho P::contentStatus('published'); // 1\n\n// Get content status description by value\necho P::contentStatus((int)1); // 'Published'\n```","html":"<h1 id=\"helper-class-to-work-with-parameters-without-db\">Helper class to work with parameters without DB</h1>\n<p>If we omit <code>$param</code> it will return all values &amp; descriptions as associative array, which is ready to pass to <code>CHtml::dropDownList()</code>.</p>\n<p>If we specify <code>$param</code> as string (name), it will return parameter value by name.</p>\n<p>If we specify <code>$param</code> as integer (value), it will return parameter description by value (index).</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">P</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">comment</span><span class=\"hljs-params\">( $param = null )</span>\n    </span>{\n        $items = [\n            <span class=\"hljs-number\">0</span> =&gt; [ <span class=\"hljs-string\">'disabled'</span>, Yii::t( <span class=\"hljs-string\">'zr'</span>, <span class=\"hljs-string\">'Disabled'</span> ), ],\n            <span class=\"hljs-number\">1</span> =&gt; [ <span class=\"hljs-string\">'allowed'</span>, Yii::t( <span class=\"hljs-string\">'zr'</span>, <span class=\"hljs-string\">'Allowed'</span> ), ],\n        ];\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">self</span>::handle( $items, $param );\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">contentStatus</span><span class=\"hljs-params\">( $param = null )</span>\n    </span>{\n        $items = [\n            <span class=\"hljs-number\">0</span> =&gt; [ <span class=\"hljs-string\">'draft'</span>, Yii::t( <span class=\"hljs-string\">'zr'</span>, <span class=\"hljs-string\">'Draft'</span> ), ],\n            <span class=\"hljs-number\">1</span> =&gt; [ <span class=\"hljs-string\">'published'</span>, Yii::t( <span class=\"hljs-string\">'zr'</span>, <span class=\"hljs-string\">'Published'</span> ), ],\n            <span class=\"hljs-number\">2</span> =&gt; [ <span class=\"hljs-string\">'deleted'</span>, Yii::t( <span class=\"hljs-string\">'zr'</span>, <span class=\"hljs-string\">'Deleted'</span> ), ],\n        ];\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">self</span>::handle( $items, $param );\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">language</span><span class=\"hljs-params\">( $param = null )</span>\n    </span>{\n        $items = [\n            <span class=\"hljs-number\">1</span> =&gt; [ <span class=\"hljs-string\">'ru'</span>, Yii::t( <span class=\"hljs-string\">'zr'</span>, <span class=\"hljs-string\">'Russian'</span> ), ],\n            <span class=\"hljs-number\">2</span> =&gt; [ <span class=\"hljs-string\">'uz'</span>, Yii::t( <span class=\"hljs-string\">'zr'</span>, <span class=\"hljs-string\">'Uzbek'</span> ), ],\n            <span class=\"hljs-number\">3</span> =&gt; [ <span class=\"hljs-string\">'en'</span>, Yii::t( <span class=\"hljs-string\">'zr'</span>, <span class=\"hljs-string\">'English'</span> ), ],\n        ];\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">self</span>::handle( $items, $param );\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">status</span><span class=\"hljs-params\">( $param = null )</span>\n    </span>{\n        $items = [\n            <span class=\"hljs-number\">0</span> =&gt; [ <span class=\"hljs-string\">'disabled'</span>, Yii::t( <span class=\"hljs-string\">'zr'</span>, <span class=\"hljs-string\">'Disabled'</span> ), ],\n            <span class=\"hljs-number\">1</span> =&gt; [ <span class=\"hljs-string\">'active'</span>, Yii::t( <span class=\"hljs-string\">'zr'</span>, <span class=\"hljs-string\">'Active'</span> ), ],\n        ];\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">self</span>::handle( $items, $param );\n    }\n\n    <span class=\"hljs-comment\">/**\n     * Handle parameters.\n     * <span class=\"hljs-doctag\">@param</span> array           $items parameters list [param_value=&gt;[param_name, param_description], ...]\n     * <span class=\"hljs-doctag\">@param</span> int|null|string $param null to return list of [param_value=&gt;param_description,...],\n     *                               param name string to return value,\n     *                               param value to return param description.\n     * <span class=\"hljs-doctag\">@return</span> int|null|string param value, list of param value and description or param description by value.\n     */</span>\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">handle</span><span class=\"hljs-params\">( $items, $param )</span>\n    </span>{\n        <span class=\"hljs-keyword\">if</span> ( is_null( $param ) ) <span class=\"hljs-comment\">// return [value =&gt; description,...]</span>\n        {\n            $res = <span class=\"hljs-keyword\">null</span>;\n            <span class=\"hljs-keyword\">foreach</span> ( $items <span class=\"hljs-keyword\">as</span> $key =&gt; $val )\n                $res[ $key ] = $val[ <span class=\"hljs-number\">1</span> ];\n            <span class=\"hljs-keyword\">return</span> $res;\n        }\n        <span class=\"hljs-keyword\">elseif</span> ( is_numeric( $param ) )\n            <span class=\"hljs-keyword\">return</span> $items[ $param ][ <span class=\"hljs-number\">1</span> ];\n        <span class=\"hljs-keyword\">elseif</span> ( is_string( $param ) ) <span class=\"hljs-comment\">// return value</span>\n        {\n            <span class=\"hljs-keyword\">foreach</span> ( $items <span class=\"hljs-keyword\">as</span> $key =&gt; $val )\n                <span class=\"hljs-keyword\">if</span> ( $param == $val[ <span class=\"hljs-number\">0</span> ] )\n                    <span class=\"hljs-keyword\">return</span> $key;\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">null</span>;\n        }\n    }\n}</span>\n</code></pre>\n<p>Usage example</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-comment\">// Get all content statuses and show in drop down</span>\n<span class=\"hljs-keyword\">echo</span> CHtml::dropDownList(<span class=\"hljs-string\">'contentstatus'</span>, <span class=\"hljs-keyword\">false</span>, P::contentStatus(), [<span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'form-control'</span>]);\n\n<span class=\"hljs-comment\">// Get content status value by name</span>\n<span class=\"hljs-keyword\">echo</span> P::contentStatus(<span class=\"hljs-string\">'published'</span>); <span class=\"hljs-comment\">// 1</span>\n\n<span class=\"hljs-comment\">// Get content status description by value</span>\n<span class=\"hljs-keyword\">echo</span> P::contentStatus((int)<span class=\"hljs-number\">1</span>); <span class=\"hljs-comment\">// 'Published'</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/10462499","description":"Yii: Using more than one ServerFileInput widgets on a page","files":["https://gist.githubusercontent.com/umidjons/10462499/raw/2771419537e2dd489ebda538b3cf467b1677f4c4/many-serverfileinput-widgets.md"],"content":"# Using more than one ServerFileInput widgets on a page\n\nI need `ServerFileInput` widget without model and attribute, just to select file on a server or to upload file to the server, then select it. In advance I don't know how much inputs such widgets will be on a page. Therefore, I add temporary field to the model to use with this widget, then plan to clone it with jQuery.\n\n```php\n<?php\nclass MyModel extends CActiveRecord\n{\n\tpublic $my_attachment; // used only to generate elFinder.ServerFileInput widget\n\t// ...\n}\n```\n\nThen configure connector settings in a controller:\n\n```php\n<?php\n\nclass MyController extends Controller\n{\n\tpublic function accessRules()\n\t{\n\t\treturn [\n\t\t\t[\n\t\t\t\t'allow',\n\t\t\t\t'actions' => [ 'elFinderConnector', ],\n\t\t\t\t'roles'   => [ 'admin', 'authorizedUser', ],\n\t\t\t],\n\t\t\t[\n\t\t\t\t'deny',\n\t\t\t\t'users' => [ '*' ],\n\t\t\t],\n\t\t];\n\t}\n\n\tpublic function actionElFinderConnector()\n\t{\n\t\t// each user has own path named with ID, e.g.: /uploads/users/190/ for user with ID 190\n\t\t$userPath = Yii::app()->params[ 'userUploadsFolder' ] . Yii::app()->user->id . '/';\n\t\t$userRoot = Yii::getPathOfAlias( 'webroot' ) . $userPath; // full path to the user's folder\n\n\t\t// if directory doesn't exist, create them\n\t\tif ( !file_exists( $userRoot ) )\n\t\t\tmkdir( $userRoot, 0777, true );\n\n\t\t// initialize ElFinder\n\t\t$connector                            = new ElFinderConnectorAction( $this, $this->action->id );\n\t\t$connector->settings[ 'root' ]        = $userRoot;\n\t\t$connector->settings[ 'URL' ]         = Yii::app()->baseUrl . $userPath;\n\t\t$connector->settings[ 'rootAlias' ]   = 'Home';\n\t\t$connector->settings[ 'uploadAllow' ] = [ 'application/pdf' ]; // allow only PDF mime type\n\t\t$connector->settings[ 'uploadDeny' ]  = [ 'all' ]; // deny all other mime types\n\t\t$connector->run();\n\t}\n\n}\n```\n\nIn view I prepare container for attachments and template widget to clone later via JavaScript:\n\n```php\n<?php \n/* @var MyController $this */\n/* @var MyModel $model */\n?>\n<div class=\"attachments-container\">\n<!-- here will be many ServerFileInput widgets later -->\n</div>\n\n<div class=\"attachment-template\" style=\"display: none;\">\n\t<?php\n\t$this->widget( 'ext.elfinder.ServerFileInput', [\n\t\t'model'          => $model,\n\t\t'attribute'      => 'my_attachment',\n\t\t'connectorRoute' => 'myModule/myController/elFinderConnector',\n\t\t'twbsControls'   => true, // https://gist.github.com/umidjons/9525300\n\t] );\n\t/* Do not forget change this line in javascript code, if you change above settings!!!\n\t * window.elfinderBrowse(\"MyModel_my_attachment\", '/myModule/myController/elFinderConnector');\n\t * */\n\t?>\n</div>\n```\n\nI prepare function to generate new attachment widgets. In real world applications you would generate such widgets with button clicks.\n\n```js\njQuery(document).ready(function($){\n\t/**\n\t * Generates new attachment widget.\n\t * @param {int} idx index of attachment\n\t */\n\tfunction newAttachment(idx){\n\t\t// clone from template and show widget\n\t\tvar attachment=$(\".attachment-template\").clone(true)\n\t\t\t.removeClass(\"attachment-template\").addClass(\".attachment\")\n\t\t\t.appendTo(\".attachments-container\").show();\n\t\t// change name, id and value attributes\n\t\tattachment.children(\"div\").attr({name: \"Attachments[\"+idx+\"][attachment]\", id: \"Attachments_\"+idx+\"_attachmentcontainer\"});\n\t\tattachment.find(\"input[type=text]\").attr({name: \"Attachments[\"+idx+\"][attachment]\", id: \"Attachments_\"+idx+\"_attachment\", value: \"\"});\n\t}\n\t\n\t// generate attachments\n\tfor(var i=0; i<3; i++)\n\t\tnewAttachment(i);\n});\n```\n\nWhen user chooses a file actual URL of the chosen file written into template's input field. So we need to handle this, and copy URL into our input value.\n\nFirst, I will remember current input ID as body's property:\n```js\n\t$(\"body\").on(\"click\", \".attachment input[type=button]\", function(){ // save elFinder input field id as body's property\n\t\t$(\"body\").prop(\"elfinderInput\", $(this).closest(\"div\").find(\"input[type=text]\")[0].id);\n\t\t// open file browser\n\t\twindow.elfinderBrowse(\"MyModel_my_attachment\", '/myModule/myController/elFinderConnector');\n\t});\n```\n\nDefault `ServerFileInput` implementation do not handle file select event. So we need some hack to catch file selection, also selected URL. Open `ServerFileInput.php`, then change this line:\n\n```php\n<?php\n\t$settings[ 'editorCallback' ]        = 'js:function(url) {\n    \t$(\\'#\\'+aFieldId).attr(\\'value\\',url);\n    }';\n```\n\nwith this:\n\n```php\n<?php\n\t$settings[ 'editorCallback' ]        = 'js:function(url) {\n    \t$(\\'#\\'+aFieldId).attr(\\'value\\',url);\n    \t$(\"body\").trigger(\"elfinderFileSelected\", url); // trigger custom event, also send URL to that event as parameter\n    }';\n```\n\nNow we will catch `elfinderFileSelected` event and write selected URL from template's input value into current input value, which ID holded in body as a property:\n\n```js\n\t$(\"body\").on(\"elfinderFileSelected\", function(event, url){ // set elFinder input value to URL of selected file\n\t\t$(\"#\"+$(\"body\").prop(\"elfinderInput\")).val(url);\n\t});\n```\n\nNow all things are ready to play, just handle submit request on the controller to do something with attachments, for example save their URLs in a DB:\n\n```php\n<?php\nclass MyController extends Controller\n{\n\tpublic function actionManageAttachments()\n\t{\n\t\tif ( isset( $_POST[ 'Attachments' ] ) )\n\t\t{\n\t\t\tforeach ( $_POST[ 'Attachments' ] as $idx => $attachment )\n\t\t\t{\n\t\t\t\t$attachment_model             = new MyAttachmentModel();\n\t\t\t\t$attachment_model->attributes = $attachment;\n\t\t\t\t$attachment_model->save();\n\t\t\t}\n\t\t}\n\t}\n}\n```","html":"<h1 id=\"using-more-than-one-serverfileinput-widgets-on-a-page\">Using more than one ServerFileInput widgets on a page</h1>\n<p>I need <code>ServerFileInput</code> widget without model and attribute, just to select file on a server or to upload file to the server, then select it. In advance I don&#39;t know how much inputs such widgets will be on a page. Therefore, I add temporary field to the model to use with this widget, then plan to clone it with jQuery.</p>\n<pre><code class=\"lang-php\">&lt;?php\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyModel</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CActiveRecord</span></span>\n{\n    public $my_attachment; <span class=\"hljs-comment\">// used only to generate elFinder.ServerFileInput widget</span>\n    <span class=\"hljs-comment\">// ...</span>\n}\n</code></pre>\n<p>Then configure connector settings in a controller:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyController</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Controller</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">accessRules</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> [\n            [\n                <span class=\"hljs-string\">'allow'</span>,\n                <span class=\"hljs-string\">'actions'</span> =&gt; [ <span class=\"hljs-string\">'elFinderConnector'</span>, ],\n                <span class=\"hljs-string\">'roles'</span>   =&gt; [ <span class=\"hljs-string\">'admin'</span>, <span class=\"hljs-string\">'authorizedUser'</span>, ],\n            ],\n            [\n                <span class=\"hljs-string\">'deny'</span>,\n                <span class=\"hljs-string\">'users'</span> =&gt; [ <span class=\"hljs-string\">'*'</span> ],\n            ],\n        ];\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">actionElFinderConnector</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-comment\">// each user has own path named with ID, e.g.: /uploads/users/190/ for user with ID 190</span>\n        $userPath = Yii::app()-&gt;params[ <span class=\"hljs-string\">'userUploadsFolder'</span> ] . Yii::app()-&gt;user-&gt;id . <span class=\"hljs-string\">'/'</span>;\n        $userRoot = Yii::getPathOfAlias( <span class=\"hljs-string\">'webroot'</span> ) . $userPath; <span class=\"hljs-comment\">// full path to the user's folder</span>\n\n        <span class=\"hljs-comment\">// if directory doesn't exist, create them</span>\n        <span class=\"hljs-keyword\">if</span> ( !file_exists( $userRoot ) )\n            mkdir( $userRoot, <span class=\"hljs-number\">0777</span>, <span class=\"hljs-keyword\">true</span> );\n\n        <span class=\"hljs-comment\">// initialize ElFinder</span>\n        $connector                            = <span class=\"hljs-keyword\">new</span> ElFinderConnectorAction( <span class=\"hljs-keyword\">$this</span>, <span class=\"hljs-keyword\">$this</span>-&gt;action-&gt;id );\n        $connector-&gt;settings[ <span class=\"hljs-string\">'root'</span> ]        = $userRoot;\n        $connector-&gt;settings[ <span class=\"hljs-string\">'URL'</span> ]         = Yii::app()-&gt;baseUrl . $userPath;\n        $connector-&gt;settings[ <span class=\"hljs-string\">'rootAlias'</span> ]   = <span class=\"hljs-string\">'Home'</span>;\n        $connector-&gt;settings[ <span class=\"hljs-string\">'uploadAllow'</span> ] = [ <span class=\"hljs-string\">'application/pdf'</span> ]; <span class=\"hljs-comment\">// allow only PDF mime type</span>\n        $connector-&gt;settings[ <span class=\"hljs-string\">'uploadDeny'</span> ]  = [ <span class=\"hljs-string\">'all'</span> ]; <span class=\"hljs-comment\">// deny all other mime types</span>\n        $connector-&gt;run();\n    }\n\n}</span>\n</code></pre>\n<p>In view I prepare container for attachments and template widget to clone later via JavaScript:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> \n<span class=\"hljs-comment\">/* <span class=\"hljs-doctag\">@var</span> MyController $this */</span>\n<span class=\"hljs-comment\">/* <span class=\"hljs-doctag\">@var</span> MyModel $model */</span>\n<span class=\"hljs-meta\">?&gt;</span></span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"attachments-container\"</span>&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- here will be many ServerFileInput widgets later --&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"attachment-template\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"display: none;\"</span>&gt;</span>\n    <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n    <span class=\"hljs-keyword\">$this</span>-&gt;widget( <span class=\"hljs-string\">'ext.elfinder.ServerFileInput'</span>, [\n        <span class=\"hljs-string\">'model'</span>          =&gt; $model,\n        <span class=\"hljs-string\">'attribute'</span>      =&gt; <span class=\"hljs-string\">'my_attachment'</span>,\n        <span class=\"hljs-string\">'connectorRoute'</span> =&gt; <span class=\"hljs-string\">'myModule/myController/elFinderConnector'</span>,\n        <span class=\"hljs-string\">'twbsControls'</span>   =&gt; <span class=\"hljs-keyword\">true</span>, <span class=\"hljs-comment\">// https://gist.github.com/umidjons/9525300</span>\n    ] );\n    <span class=\"hljs-comment\">/* Do not forget change this line in javascript code, if you change above settings!!!\n     * window.elfinderBrowse(\"MyModel_my_attachment\", '/myModule/myController/elFinderConnector');\n     * */</span>\n    <span class=\"hljs-meta\">?&gt;</span></span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n<p>I prepare function to generate new attachment widgets. In real world applications you would generate such widgets with button clicks.</p>\n<pre><code class=\"lang-js\">jQuery(<span class=\"hljs-built_in\">document</span>).ready(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">$</span>)</span>{\n    <span class=\"hljs-comment\">/**\n     * Generates new attachment widget.\n     * @param {int} idx index of attachment\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">newAttachment</span>(<span class=\"hljs-params\">idx</span>)</span>{\n        <span class=\"hljs-comment\">// clone from template and show widget</span>\n        <span class=\"hljs-keyword\">var</span> attachment=$(<span class=\"hljs-string\">\".attachment-template\"</span>).clone(<span class=\"hljs-literal\">true</span>)\n            .removeClass(<span class=\"hljs-string\">\"attachment-template\"</span>).addClass(<span class=\"hljs-string\">\".attachment\"</span>)\n            .appendTo(<span class=\"hljs-string\">\".attachments-container\"</span>).show();\n        <span class=\"hljs-comment\">// change name, id and value attributes</span>\n        attachment.children(<span class=\"hljs-string\">\"div\"</span>).attr({<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Attachments[\"</span>+idx+<span class=\"hljs-string\">\"][attachment]\"</span>, <span class=\"hljs-attr\">id</span>: <span class=\"hljs-string\">\"Attachments_\"</span>+idx+<span class=\"hljs-string\">\"_attachmentcontainer\"</span>});\n        attachment.find(<span class=\"hljs-string\">\"input[type=text]\"</span>).attr({<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Attachments[\"</span>+idx+<span class=\"hljs-string\">\"][attachment]\"</span>, <span class=\"hljs-attr\">id</span>: <span class=\"hljs-string\">\"Attachments_\"</span>+idx+<span class=\"hljs-string\">\"_attachment\"</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">\"\"</span>});\n    }\n\n    <span class=\"hljs-comment\">// generate attachments</span>\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">var</span> i=<span class=\"hljs-number\">0</span>; i&lt;<span class=\"hljs-number\">3</span>; i++)\n        newAttachment(i);\n});\n</code></pre>\n<p>When user chooses a file actual URL of the chosen file written into template&#39;s input field. So we need to handle this, and copy URL into our input value.</p>\n<p>First, I will remember current input ID as body&#39;s property:</p>\n<pre><code class=\"lang-js\">    $(<span class=\"hljs-string\">\"body\"</span>).on(<span class=\"hljs-string\">\"click\"</span>, <span class=\"hljs-string\">\".attachment input[type=button]\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{ <span class=\"hljs-comment\">// save elFinder input field id as body's property</span>\n        $(<span class=\"hljs-string\">\"body\"</span>).prop(<span class=\"hljs-string\">\"elfinderInput\"</span>, $(<span class=\"hljs-keyword\">this</span>).closest(<span class=\"hljs-string\">\"div\"</span>).find(<span class=\"hljs-string\">\"input[type=text]\"</span>)[<span class=\"hljs-number\">0</span>].id);\n        <span class=\"hljs-comment\">// open file browser</span>\n        <span class=\"hljs-built_in\">window</span>.elfinderBrowse(<span class=\"hljs-string\">\"MyModel_my_attachment\"</span>, <span class=\"hljs-string\">'/myModule/myController/elFinderConnector'</span>);\n    });\n</code></pre>\n<p>Default <code>ServerFileInput</code> implementation do not handle file select event. So we need some hack to catch file selection, also selected URL. Open <code>ServerFileInput.php</code>, then change this line:</p>\n<pre><code class=\"lang-php\">&lt;?php\n    $settings[ <span class=\"hljs-string\">'editorCallback'</span> ]        = <span class=\"hljs-string\">'js:function(url) {\n        $(\\'</span><span class=\"hljs-meta\">#\\<span class=\"hljs-string\">'+aFieldId).attr(\\'</span>value\\<span class=\"hljs-string\">',url);\n    }'</span><span class=\"hljs-comment\">;</span></span>\n</code></pre>\n<p>with this:</p>\n<pre><code class=\"lang-php\">&lt;?php\n    $settings[ <span class=\"hljs-symbol\">'editorCallback</span>' ]        = <span class=\"hljs-symbol\">'js</span>:<span class=\"hljs-keyword\">function</span>(url) {\n        $(\\'#\\'+aFieldId).attr(\\<span class=\"hljs-symbol\">'value</span>\\',url);\n        $(<span class=\"hljs-string\">\"body\"</span>).trigger(<span class=\"hljs-string\">\"elfinderFileSelected\"</span>, url); // trigger custom event, also send URL to that event as parameter\n    }';\n</code></pre>\n<p>Now we will catch <code>elfinderFileSelected</code> event and write selected URL from template&#39;s input value into current input value, which ID holded in body as a property:</p>\n<pre><code class=\"lang-js\">    $(<span class=\"hljs-string\">\"body\"</span>).on(<span class=\"hljs-string\">\"elfinderFileSelected\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">event, url</span>)</span>{ <span class=\"hljs-comment\">// set elFinder input value to URL of selected file</span>\n        $(<span class=\"hljs-string\">\"#\"</span>+$(<span class=\"hljs-string\">\"body\"</span>).prop(<span class=\"hljs-string\">\"elfinderInput\"</span>)).val(url);\n    });\n</code></pre>\n<p>Now all things are ready to play, just handle submit request on the controller to do something with attachments, for example save their URLs in a DB:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyController</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Controller</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">actionManageAttachments</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">if</span> ( <span class=\"hljs-keyword\">isset</span>( $_POST[ <span class=\"hljs-string\">'Attachments'</span> ] ) )\n        {\n            <span class=\"hljs-keyword\">foreach</span> ( $_POST[ <span class=\"hljs-string\">'Attachments'</span> ] <span class=\"hljs-keyword\">as</span> $idx =&gt; $attachment )\n            {\n                $attachment_model             = <span class=\"hljs-keyword\">new</span> MyAttachmentModel();\n                $attachment_model-&gt;attributes = $attachment;\n                $attachment_model-&gt;save();\n            }\n        }\n    }\n}</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/10441936","description":"JavaScript: Inheritance example","files":["https://gist.githubusercontent.com/umidjons/10441936/raw/f52a6d363babc44065dbdd8b7bba3cd263fda7c3/inheritance-example-javascript.md"],"content":"# Inheritance example in JavaScript\n\nFor example, we create `Person` class:\n```js\n// Person class\nfunction Person(options, data){\n\tthis._default_options={\n\t\toption1: 'default_val_1',\n\t\toption2: 'default_val_2'\n\t};\n\tthis.options=$.extend({}, this._default_options, options); // override default options if specified\n\t// some common properties\n\tthis.first_name='';\n\tthis.last_name='';\n\tthis.age=0;\n};\n\nPerson.prototype.method_1=function(data){\n\t// process data, do some useful operations\n\treturn this; // support chains\n};\n```\n\nThen we create `Student` class inheriting all members from `Person`:\n```js\n// Student class\nfunction Student(data){\n\tPerson.call(this, {options1: 'abc', options2: 'def'}, data); // call parent constructor\n\tthis.courses=data.courses; // specific members of student\n}\n\nStudent.prototype=new Person({}); // actual inheritance is here\n```\n\nNow we can use `Student` class:\n```js\n// using\nvar student=new Student({mark: 100, courses: ['programming', 'RDBA', 'security'], hours: 6});\nstudent.first_name='Tony';\nstudent.last_name='Hunter';\nstudent.age=19;\nstudent.method_1('some data');\n\nconsole.log('Student:', student);\n```","html":"<h1 id=\"inheritance-example-in-javascript\">Inheritance example in JavaScript</h1>\n<p>For example, we create <code>Person</code> class:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-comment\">// Person class</span>\nfunction Person(options, <span class=\"hljs-keyword\">data</span>){\n    <span class=\"hljs-keyword\">this</span>._default_options={\n        option1: <span class=\"hljs-string\">'default_val_1'</span>,\n        option2: <span class=\"hljs-string\">'default_val_2'</span>\n    };\n    <span class=\"hljs-keyword\">this</span>.options=$.extend({}, <span class=\"hljs-keyword\">this</span>._default_options, options); <span class=\"hljs-comment\">// override default options if specified</span>\n    <span class=\"hljs-comment\">// some common properties</span>\n    <span class=\"hljs-keyword\">this</span>.first_name=<span class=\"hljs-string\">''</span>;\n    <span class=\"hljs-keyword\">this</span>.last_name=<span class=\"hljs-string\">''</span>;\n    <span class=\"hljs-keyword\">this</span>.age=<span class=\"hljs-number\">0</span>;\n};\n\nPerson.prototype.method_1=function(<span class=\"hljs-keyword\">data</span>){\n    <span class=\"hljs-comment\">// process data, do some useful operations</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>; <span class=\"hljs-comment\">// support chains</span>\n};\n</code></pre>\n<p>Then we create <code>Student</code> class inheriting all members from <code>Person</code>:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-comment\">// Student class</span>\nfunction Student(<span class=\"hljs-keyword\">data</span>){\n    Person.call(<span class=\"hljs-keyword\">this</span>, {options1: <span class=\"hljs-string\">'abc'</span>, options2: <span class=\"hljs-string\">'def'</span>}, <span class=\"hljs-keyword\">data</span>); <span class=\"hljs-comment\">// call parent constructor</span>\n    <span class=\"hljs-keyword\">this</span>.courses=<span class=\"hljs-keyword\">data</span>.courses; <span class=\"hljs-comment\">// specific members of student</span>\n}\n\nStudent.prototype=new Person({}); <span class=\"hljs-comment\">// actual inheritance is here</span>\n</code></pre>\n<p>Now we can use <code>Student</code> class:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-comment\">// using</span>\nvar student=<span class=\"hljs-keyword\">new</span> Student({<span class=\"hljs-string\">mark:</span> <span class=\"hljs-number\">100</span>, <span class=\"hljs-string\">courses:</span> [<span class=\"hljs-string\">'programming'</span>, <span class=\"hljs-string\">'RDBA'</span>, <span class=\"hljs-string\">'security'</span>], <span class=\"hljs-string\">hours:</span> <span class=\"hljs-number\">6</span>});\nstudent.first_name=<span class=\"hljs-string\">'Tony'</span>;\nstudent.last_name=<span class=\"hljs-string\">'Hunter'</span>;\nstudent.age=<span class=\"hljs-number\">19</span>;\nstudent.method_1(<span class=\"hljs-string\">'some data'</span>);\n\nconsole.log(<span class=\"hljs-string\">'Student:'</span>, student);\n</code></pre>\n"},{"html_url":"https://gist.github.com/10102626","description":"Yii: Multilingual/Translatable Application name","files":["https://gist.githubusercontent.com/umidjons/10102626/raw/44af699561f4640ca668c3f694a41830a7be8993/multilang-app-name.md"],"content":"# Multilingual application name\n\nWe can't directly translate application name in config files as following:\n\n```php\n<?php\nreturn [\n\t'basePath'       => dirname( __FILE__ ) . DIRECTORY_SEPARATOR . '..',\n\t'name'           => Yii::t('domain', 'My Application'), // this doesn't work!!!\n\t// ...\n];\n```\n\nBut we can use workaround here, instead of translating application name in configuration file, we translate it in using places, for example, in layouts.\n\nIn configuration file just use original/primary language:\n\n```php\n<?php\nreturn [\n\t'basePath'       => dirname( __FILE__ ) . DIRECTORY_SEPARATOR . '..',\n\t'name'           => 'My Application', // do not translate here!!!\n\t// ...\n];\n```\n\nThen in layout use this code with `Yii::t()` call:\n\n```php\n<title><?php echo CHtml::encode( Yii::t( 'domain', Yii::app()->name ) . ' - ' . $this->pageTitle ); ?></title>\n```\n\nDo not forget to include translation in `protected/messages/LANG_CODE/domain.php` files. For russian it well be `protected/messages/ru/domain.php` with this content:\n\n```php\n<?php\nreturn array (\n\t'My Application' => 'Моя приложения',\n\t// ...\n];\n```\n\n### Generate translation files\n\nCreate configuration file for translations `protected/config/messages.php` with following content:\n\n```php\n<?php\nreturn [\n\t'sourcePath'  => '/var/www/mywebapp/protected', // look for sources here\n\t'messagePath' => '/var/www/mywebapp/protected/messages', // generate translation files here\n\t'languages'  =>['ru','uz'],\n\t'fileTypes'  =>['php','js'],\n\t'exclude'    =>['.git'],\n\t'translator' =>['Yii::t','$.Yii.t'], // Yii::t() for PHP, $.Yii.t() for JS\n\t'removeOld'  =>true, // remove old unused entries, instead of mark them as @@\n\t'overwrite'  =>true, // overwrite translated files\n\t'sort'       =>true, // sort by key\n];\n```\nFor information about `$.Yii.t()` look https://gist.github.com/umidjons/9888711.\n\nThen we can issue `yiic` command to generate translations specifying above file:\n\n```sh\ncd /var/www/mywebapp\nyiic message protected/config/messages.php\n```\n\nNow we can open generated files and type translations.","html":"<h1 id=\"multilingual-application-name\">Multilingual application name</h1>\n<p>We can&#39;t directly translate application name in config files as following:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">return</span> [\n    <span class=\"hljs-string\">'basePath'</span>       =&gt; dirname( <span class=\"hljs-keyword\">__FILE__</span> ) . DIRECTORY_SEPARATOR . <span class=\"hljs-string\">'..'</span>,\n    <span class=\"hljs-string\">'name'</span>           =&gt; Yii::t(<span class=\"hljs-string\">'domain'</span>, <span class=\"hljs-string\">'My Application'</span>), <span class=\"hljs-comment\">// this doesn't work!!!</span>\n    <span class=\"hljs-comment\">// ...</span>\n];</span>\n</code></pre>\n<p>But we can use workaround here, instead of translating application name in configuration file, we translate it in using places, for example, in layouts.</p>\n<p>In configuration file just use original/primary language:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">return</span> [\n    <span class=\"hljs-string\">'basePath'</span>       =&gt; dirname( <span class=\"hljs-keyword\">__FILE__</span> ) . DIRECTORY_SEPARATOR . <span class=\"hljs-string\">'..'</span>,\n    <span class=\"hljs-string\">'name'</span>           =&gt; <span class=\"hljs-string\">'My Application'</span>, <span class=\"hljs-comment\">// do not translate here!!!</span>\n    <span class=\"hljs-comment\">// ...</span>\n];</span>\n</code></pre>\n<p>Then in layout use this code with <code>Yii::t()</code> call:</p>\n<pre><code class=\"lang-php\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">echo</span> CHtml::encode( Yii::t( <span class=\"hljs-string\">'domain'</span>, Yii::app()-&gt;name ) . <span class=\"hljs-string\">' - '</span> . <span class=\"hljs-keyword\">$this</span>-&gt;pageTitle ); <span class=\"hljs-meta\">?&gt;</span></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n</code></pre>\n<p>Do not forget to include translation in <code>protected/messages/LANG_CODE/domain.php</code> files. For russian it well be <code>protected/messages/ru/domain.php</code> with this content:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">array</span> (\n    <span class=\"hljs-string\">'My Application'</span> =&gt; <span class=\"hljs-string\">'Моя приложения'</span>,\n    <span class=\"hljs-comment\">// ...</span>\n];</span>\n</code></pre>\n<h3 id=\"generate-translation-files\">Generate translation files</h3>\n<p>Create configuration file for translations <code>protected/config/messages.php</code> with following content:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">return</span> [\n    <span class=\"hljs-string\">'sourcePath'</span>  =&gt; <span class=\"hljs-string\">'/var/www/mywebapp/protected'</span>, <span class=\"hljs-comment\">// look for sources here</span>\n    <span class=\"hljs-string\">'messagePath'</span> =&gt; <span class=\"hljs-string\">'/var/www/mywebapp/protected/messages'</span>, <span class=\"hljs-comment\">// generate translation files here</span>\n    <span class=\"hljs-string\">'languages'</span>  =&gt;[<span class=\"hljs-string\">'ru'</span>,<span class=\"hljs-string\">'uz'</span>],\n    <span class=\"hljs-string\">'fileTypes'</span>  =&gt;[<span class=\"hljs-string\">'php'</span>,<span class=\"hljs-string\">'js'</span>],\n    <span class=\"hljs-string\">'exclude'</span>    =&gt;[<span class=\"hljs-string\">'.git'</span>],\n    <span class=\"hljs-string\">'translator'</span> =&gt;[<span class=\"hljs-string\">'Yii::t'</span>,<span class=\"hljs-string\">'$.Yii.t'</span>], <span class=\"hljs-comment\">// Yii::t() for PHP, $.Yii.t() for JS</span>\n    <span class=\"hljs-string\">'removeOld'</span>  =&gt;<span class=\"hljs-keyword\">true</span>, <span class=\"hljs-comment\">// remove old unused entries, instead of mark them as @@</span>\n    <span class=\"hljs-string\">'overwrite'</span>  =&gt;<span class=\"hljs-keyword\">true</span>, <span class=\"hljs-comment\">// overwrite translated files</span>\n    <span class=\"hljs-string\">'sort'</span>       =&gt;<span class=\"hljs-keyword\">true</span>, <span class=\"hljs-comment\">// sort by key</span>\n];</span>\n</code></pre>\n<p>For information about <code>$.Yii.t()</code> look <a href=\"https://gist.github.com/umidjons/9888711\">https://gist.github.com/umidjons/9888711</a>.</p>\n<p>Then we can issue <code>yiic</code> command to generate translations specifying above file:</p>\n<pre><code class=\"lang-sh\">cd /<span class=\"hljs-keyword\">var</span>/www/mywebapp\nyiic <span class=\"hljs-keyword\">message</span> <span class=\"hljs-keyword\">protected</span>/config/messages.php\n</code></pre>\n<p>Now we can open generated files and type translations.</p>\n"},{"html_url":"https://gist.github.com/10094793","description":"PHP: startsWith & endsWith functions","files":["https://gist.githubusercontent.com/umidjons/10094793/raw/01b5a815dffa261e650243db9d2d30b47c7972fc/startswith-endswith.md"],"content":"# startsWith & endsWith functions\n\n```php\n<?php\nfunction startsWith($haystack, $needle)\n{\n    return strncmp($haystack, $needle, strlen($needle)) === 0;\n}\n\nfunction endsWith($haystack, $needle)\n{\n    return $needle === '' || substr_compare($haystack, $needle, -strlen($needle)) === 0;\n}\n```\n\n[Link to discussion on StackOverflow](http://stackoverflow.com/questions/834303/php-startswith-and-endswith-functions)","html":"<h1 id=\"startswith-endswith-functions\">startsWith &amp; endsWith functions</h1>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">startsWith</span><span class=\"hljs-params\">($haystack, $needle)</span>\n</span>{\n    <span class=\"hljs-keyword\">return</span> strncmp($haystack, $needle, strlen($needle)) === <span class=\"hljs-number\">0</span>;\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">endsWith</span><span class=\"hljs-params\">($haystack, $needle)</span>\n</span>{\n    <span class=\"hljs-keyword\">return</span> $needle === <span class=\"hljs-string\">''</span> || substr_compare($haystack, $needle, -strlen($needle)) === <span class=\"hljs-number\">0</span>;\n}</span>\n</code></pre>\n<p><a href=\"http://stackoverflow.com/questions/834303/php-startswith-and-endswith-functions\">Link to discussion on StackOverflow</a></p>\n"},{"html_url":"https://gist.github.com/9969749","description":"Yii: Using transactions with ActiveRecord","files":["https://gist.githubusercontent.com/umidjons/9969749/raw/f07a34b0c58a6a652b51be121b171d280fd9e9ff/transactions-activerecord.md"],"content":"# Using transactions with ActiveRecord\n\n```php\n<?php\n$model       = new PersonInfo();\n$transaction = $model->dbConnection->beginTransaction();\n// ... work with this and other models\n\n// save models...\nif ( !$model->save() )\n\t$error = $model->getErrors();\n\nif ( $error ) // something wrong\n{\n\tif ( $transaction->active ) // rollback transaction\n\t\t$transaction->rollback();\n\n\t// show errors\n\t$this->render( 'errors', [ 'error' => $error ] );\n}\nelseif ( $transaction->active ) // everything is OK\n\t$transaction->commit(); // commit changes\n\n$this->render( 'success', [ 'model' => $model ] );\n```","html":"<h1 id=\"using-transactions-with-activerecord\">Using transactions with ActiveRecord</h1>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n$model       = <span class=\"hljs-keyword\">new</span> PersonInfo();\n$transaction = $model-&gt;dbConnection-&gt;beginTransaction();\n<span class=\"hljs-comment\">// ... work with this and other models</span>\n\n<span class=\"hljs-comment\">// save models...</span>\n<span class=\"hljs-keyword\">if</span> ( !$model-&gt;save() )\n    $error = $model-&gt;getErrors();\n\n<span class=\"hljs-keyword\">if</span> ( $error ) <span class=\"hljs-comment\">// something wrong</span>\n{\n    <span class=\"hljs-keyword\">if</span> ( $transaction-&gt;active ) <span class=\"hljs-comment\">// rollback transaction</span>\n        $transaction-&gt;rollback();\n\n    <span class=\"hljs-comment\">// show errors</span>\n    <span class=\"hljs-keyword\">$this</span>-&gt;render( <span class=\"hljs-string\">'errors'</span>, [ <span class=\"hljs-string\">'error'</span> =&gt; $error ] );\n}\n<span class=\"hljs-keyword\">elseif</span> ( $transaction-&gt;active ) <span class=\"hljs-comment\">// everything is OK</span>\n    $transaction-&gt;commit(); <span class=\"hljs-comment\">// commit changes</span>\n\n<span class=\"hljs-keyword\">$this</span>-&gt;render( <span class=\"hljs-string\">'success'</span>, [ <span class=\"hljs-string\">'model'</span> =&gt; $model ] );</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/9927376","description":"Hide browser's scroll bar, but be able to scroll.","files":["https://gist.githubusercontent.com/umidjons/9927376/raw/9d3cf4cd7b57ed735e41779cdd7dd61ed3cac78d/no-browser-scrollbar.md"],"content":"# Hide browser's scrollbars, but be able to scroll\n\nMy HTML structure was as following (I've used twitter bootstrap):\n\n```html\n<body>\n  <div class=\"container\">\n  \t<!-- long content -->\n  </div>\n</body>\n```\n\nTo hide scrollbars  I've used this CSS code:\n\n```css\nbody{\n\twidth: 100%;\n\theight: 100%;\n\toverflow: hidden;\n}\n\n.container{\n\toverflow: auto;\n}\n```\n\nOriginal code was as this in [jsFiddle](http://jsfiddle.net/5GCsJ/4/):\n\n```html\n<div id=\"container1\">\n  <div id=\"container2\">\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    hello<br/>I<br/>am<br/>here<br/>\n    good<br/>bye.\n  </div>\n<div>\n```\n\n```css\n#container1{\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n}\n\n#container2{\n    width: 100%;\n    height: 99%;\n    overflow: auto;\n}\n\nhtml, body{\n    height: 100%;\n    overflow: hidden;\n}\n```\n\n","html":"<h1 id=\"hide-browser-s-scrollbars-but-be-able-to-scroll\">Hide browser&#39;s scrollbars, but be able to scroll</h1>\n<p>My HTML structure was as following (I&#39;ve used twitter bootstrap):</p>\n<pre><code class=\"lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"container\"</span>&gt;</span>\n      <span class=\"hljs-comment\">&lt;!-- long content --&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n</code></pre>\n<p>To hide scrollbars  I&#39;ve used this CSS code:</p>\n<pre><code class=\"lang-css\"><span class=\"hljs-selector-tag\">body</span>{\n    <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;\n    <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100%</span>;\n    <span class=\"hljs-attribute\">overflow</span>: hidden;\n}\n\n<span class=\"hljs-selector-class\">.container</span>{\n    <span class=\"hljs-attribute\">overflow</span>: auto;\n}\n</code></pre>\n<p>Original code was as this in <a href=\"http://jsfiddle.net/5GCsJ/4/\">jsFiddle</a>:</p>\n<pre><code class=\"lang-html\">&lt;div id=<span class=\"hljs-string\">\"container1\"</span>&gt;\n  &lt;div id=<span class=\"hljs-string\">\"container2\"</span>&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    hello&lt;<span class=\"hljs-keyword\">br</span>/&gt;I&lt;<span class=\"hljs-keyword\">br</span>/&gt;<span class=\"hljs-keyword\">am</span>&lt;<span class=\"hljs-keyword\">br</span>/&gt;here&lt;<span class=\"hljs-keyword\">br</span>/&gt;\n    good&lt;<span class=\"hljs-keyword\">br</span>/&gt;bye.\n  &lt;/div&gt;\n<span class=\"hljs-symbol\">&lt;div&gt;</span>\n</code></pre>\n<pre><code class=\"lang-css\"><span class=\"hljs-selector-id\">#container1</span>{\n    <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100%</span>;\n    <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;\n    <span class=\"hljs-attribute\">overflow</span>: hidden;\n}\n\n<span class=\"hljs-selector-id\">#container2</span>{\n    <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;\n    <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">99%</span>;\n    <span class=\"hljs-attribute\">overflow</span>: auto;\n}\n\n<span class=\"hljs-selector-tag\">html</span>, <span class=\"hljs-selector-tag\">body</span>{\n    <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100%</span>;\n    <span class=\"hljs-attribute\">overflow</span>: hidden;\n}\n</code></pre>\n"},{"html_url":"https://gist.github.com/9912003","description":"Yii: Using more checkboxlists with the same model","files":["https://gist.githubusercontent.com/umidjons/9912003/raw/44225d1a749d4ee3aafcdb0d62d9a1e9e3f3475c/more-checkboxlist.md"],"content":"# Using more checkboxlists with the same model\n\nIf we need to use more than one `checkboxlist` with the same model in the same page `ID`s of checkboxes/labels may be clashed. To prevent clashes we should set special attribute `baseID`. It is a string, which specifies the base ID prefix to be used for checkboxes in the list.\n\n```php\n<div class=\"form-group\">\n\t<div class=\"col-sm-6\">\n\t\t<?php $form->checkBoxList( $model, 'property', $models_1,\n\t\t\t[ 'baseID' => 'User_property_1' ] ); // generate IDs id=\"User_property_1_N\", where N=0,1,2...\n\t\t?>\n\t</div>\n\t<div class=\"col-sm-6\">\n\t\t<?php $form->checkBoxList( $model, 'property', $models_2,\n\t\t\t[ 'baseID' => 'User_property_2' ] ); // generate IDs id=\"User_property_2_N\", where N=0,1,2...\n\t\t?>\n\t</div>\n</div>\n```","html":"<h1 id=\"using-more-checkboxlists-with-the-same-model\">Using more checkboxlists with the same model</h1>\n<p>If we need to use more than one <code>checkboxlist</code> with the same model in the same page <code>ID</code>s of checkboxes/labels may be clashed. To prevent clashes we should set special attribute <code>baseID</code>. It is a string, which specifies the base ID prefix to be used for checkboxes in the list.</p>\n<pre><code class=\"lang-php\">&lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"form-group\"</span>&gt;\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-6\"</span>&gt;</span>\n        <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> $form-&gt;checkBoxList( $model, <span class=\"hljs-string\">'property'</span>, $models_1,\n            [ <span class=\"hljs-string\">'baseID'</span> =&gt; <span class=\"hljs-string\">'User_property_1'</span> ] ); <span class=\"hljs-comment\">// generate IDs id=\"User_property_1_N\", where N=0,1,2...</span>\n        <span class=\"hljs-meta\">?&gt;</span></span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n    &lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"col-sm-6\"</span>&gt;\n        <span class=\"xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> $form-&gt;checkBoxList( $model, <span class=\"hljs-string\">'property'</span>, $models_2,\n            [ <span class=\"hljs-string\">'baseID'</span> =&gt; <span class=\"hljs-string\">'User_property_2'</span> ] ); <span class=\"hljs-comment\">// generate IDs id=\"User_property_2_N\", where N=0,1,2...</span>\n        <span class=\"hljs-meta\">?&gt;</span></span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n&lt;<span class=\"hljs-regexp\">/div&gt;</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/9911915","description":"Yii: Using clips in widgets","files":["https://gist.githubusercontent.com/umidjons/9911915/raw/85b5215166efedd31db76f9b81a4bc9cb83acd41/clips-in-widgets.md"],"content":"# Using clips in widgets\n\nSometimes we want to pass one widget output as content to another widget. In such situations clips are very useful. Below is example, we clip output, then pass this output as content to other widget:\n\n```php\n<?php\n/* @var $this EUserAccessInfo */\n?>\n\n<?php $this->beginClip( 'list_of_operations' ); //--< start clipping >--?>\n\t<ul class=\"list-group\">\n\t\t<?php foreach ( $operations as $oper ): ?>\n\t\t\t<li class=\"list-group-item\"><?= $oper->description; ?></li>\n\t\t<?php endforeach; ?>\n\t</ul>\n<?php $this->endClip(); //--< end clipping >-- ?>\n\n<?php $this->widget( 'ext.panel.Panel', [\n\t'title'   => Yii::t( 'zr', 'Roles/Tasks/Operations' ),\n\t'content' => $this->controller->clips[ 'list_of_operations' ], // access clip via controller\n] ); ?>\n```\n\n**Note:** we can't access the clips directly from widget, instead can get it via a controller.\n","html":"<h1 id=\"using-clips-in-widgets\">Using clips in widgets</h1>\n<p>Sometimes we want to pass one widget output as content to another widget. In such situations clips are very useful. Below is example, we clip output, then pass this output as content to other widget:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-comment\">/* <span class=\"hljs-doctag\">@var</span> $this EUserAccessInfo */</span>\n<span class=\"hljs-meta\">?&gt;</span></span>\n\n<span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">$this</span>-&gt;beginClip( <span class=\"hljs-string\">'list_of_operations'</span> ); <span class=\"hljs-comment\">//--&lt; start clipping &gt;--<span class=\"hljs-meta\">?&gt;</span></span></span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"list-group\"</span>&gt;</span>\n        <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">foreach</span> ( $operations <span class=\"hljs-keyword\">as</span> $oper ): <span class=\"hljs-meta\">?&gt;</span></span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"list-group-item\"</span>&gt;</span><span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $oper-&gt;description; <span class=\"hljs-meta\">?&gt;</span></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n        <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">endforeach</span>; <span class=\"hljs-meta\">?&gt;</span></span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n<span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">$this</span>-&gt;endClip(); <span class=\"hljs-comment\">//--&lt; end clipping &gt;-- <span class=\"hljs-meta\">?&gt;</span></span></span>\n\n<span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">$this</span>-&gt;widget( <span class=\"hljs-string\">'ext.panel.Panel'</span>, [\n    <span class=\"hljs-string\">'title'</span>   =&gt; Yii::t( <span class=\"hljs-string\">'zr'</span>, <span class=\"hljs-string\">'Roles/Tasks/Operations'</span> ),\n    <span class=\"hljs-string\">'content'</span> =&gt; <span class=\"hljs-keyword\">$this</span>-&gt;controller-&gt;clips[ <span class=\"hljs-string\">'list_of_operations'</span> ], <span class=\"hljs-comment\">// access clip via controller</span>\n] ); <span class=\"hljs-meta\">?&gt;</span></span>\n</code></pre>\n<p><strong>Note:</strong> we can&#39;t access the clips directly from widget, instead can get it via a controller.</p>\n"},{"html_url":"https://gist.github.com/9893735","description":"Normalize $_FILES array when uploading multiple files (from php.net)","files":["https://gist.githubusercontent.com/umidjons/9893735/raw/7006f341e5123a96f2893568cfe249538dbb9764/files-array-normalize.md"],"content":"# Normalize `$_FILES` array when uploading multiple files\n\nWhen uploading multiple files, the `$_FILES` variable is created in the form:\n\n```\nArray\n(\n    [name] => Array\n        (\n            [0] => foo.txt\n            [1] => bar.txt\n        )\n\n    [type] => Array\n        (\n            [0] => text/plain\n            [1] => text/plain\n        )\n\n    [tmp_name] => Array\n        (\n            [0] => /tmp/phpYzdqkD\n            [1] => /tmp/phpeEwEWG\n        )\n\n    [error] => Array\n        (\n            [0] => 0\n            [1] => 0\n        )\n\n    [size] => Array\n        (\n            [0] => 123\n            [1] => 456\n        )\n)\n```\n\nIt would be cleaner if the uploaded files array in the form:\n\n```\nArray\n(\n    [0] => Array\n        (\n            [name] => foo.txt\n            [type] => text/plain\n            [tmp_name] => /tmp/phpYzdqkD\n            [error] => 0\n            [size] => 123\n        )\n\n    [1] => Array\n        (\n            [name] => bar.txt\n            [type] => text/plain\n            [tmp_name] => /tmp/phpeEwEWG\n            [error] => 0\n            [size] => 456\n        )\n)\n```\n\nWe can convert `$_FILES` array to cleaner one with this function:\n\n```php\n<?php\nfunction normalizeFiles( &$files )\n{\n\t$_files       = [ ];\n\t$_files_count = count( $files[ 'name' ] );\n\t$_files_keys  = array_keys( $files );\n\n\tfor ( $i = 0; $i < $_files_count; $i++ )\n\t\tforeach ( $_files_keys as $key )\n\t\t\t$_files[ $i ][ $key ] = $files[ $key ][ $i ];\n\n\treturn $_files;\n}\n```\n\nThen we can use it like so:\n\n```php\n<?php\nif ( $_FILES[ 'upload' ] )\n{\n\t$files = normalizeFiles( $_FILES[ 'myfiles' ] );\n\tforeach ( $files as $file )\n\t{\n\t\tprint 'File Name: ' . $file[ 'name' ] . \"<br>\\n\";\n\t\tprint 'File Type: ' . $file[ 'type' ] . \"<br>\\n\";\n\t\tprint 'File Size: ' . $file[ 'size' ] . \"<br><br>\\n\";\n\t}\n}\n```\n\nOutput:\n```\nFile Name: shanideveloper-blogspot-com.pdf\nFile Type: application/pdf\nFile Size: 175928\n\nFile Name: Packtpub.Yii.1.1.Application.Development.Cookbook.Aug.2011.rar\nFile Type: application/octet-stream\nFile Size: 5960406\n```","html":"<h1 id=\"normalize-_files-array-when-uploading-multiple-files\">Normalize <code>$_FILES</code> array when uploading multiple files</h1>\n<p>When uploading multiple files, the <code>$_FILES</code> variable is created in the form:</p>\n<pre><code><span class=\"hljs-keyword\">Array</span>\n(\n    [name] =&gt; <span class=\"hljs-keyword\">Array</span>\n        (\n            [<span class=\"hljs-number\">0</span>] =&gt; foo.txt\n            [<span class=\"hljs-number\">1</span>] =&gt; bar.txt\n        )\n\n    [type] =&gt; <span class=\"hljs-keyword\">Array</span>\n        (\n            [<span class=\"hljs-number\">0</span>] =&gt; text/plain\n            [<span class=\"hljs-number\">1</span>] =&gt; text/plain\n        )\n\n    [tmp_name] =&gt; <span class=\"hljs-keyword\">Array</span>\n        (\n            [<span class=\"hljs-number\">0</span>] =&gt; /tmp/phpYzdqkD\n            [<span class=\"hljs-number\">1</span>] =&gt; /tmp/phpeEwEWG\n        )\n\n    [error] =&gt; <span class=\"hljs-keyword\">Array</span>\n        (\n            [<span class=\"hljs-number\">0</span>] =&gt; <span class=\"hljs-number\">0</span>\n            [<span class=\"hljs-number\">1</span>] =&gt; <span class=\"hljs-number\">0</span>\n        )\n\n    [size] =&gt; <span class=\"hljs-keyword\">Array</span>\n        (\n            [<span class=\"hljs-number\">0</span>] =&gt; <span class=\"hljs-number\">123</span>\n            [<span class=\"hljs-number\">1</span>] =&gt; <span class=\"hljs-number\">456</span>\n        )\n)\n</code></pre><p>It would be cleaner if the uploaded files array in the form:</p>\n<pre><code><span class=\"hljs-keyword\">Array</span>\n(\n    [<span class=\"hljs-number\">0</span>] =&gt; <span class=\"hljs-keyword\">Array</span>\n        (\n            [name] =&gt; foo.txt\n            [type] =&gt; text/plain\n            [tmp_name] =&gt; /tmp/phpYzdqkD\n            [error] =&gt; <span class=\"hljs-number\">0</span>\n            [size] =&gt; <span class=\"hljs-number\">123</span>\n        )\n\n    [<span class=\"hljs-number\">1</span>] =&gt; <span class=\"hljs-keyword\">Array</span>\n        (\n            [name] =&gt; bar.txt\n            [type] =&gt; text/plain\n            [tmp_name] =&gt; /tmp/phpeEwEWG\n            [error] =&gt; <span class=\"hljs-number\">0</span>\n            [size] =&gt; <span class=\"hljs-number\">456</span>\n        )\n)\n</code></pre><p>We can convert <code>$_FILES</code> array to cleaner one with this function:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">normalizeFiles</span><span class=\"hljs-params\">( &amp;$files )</span>\n</span>{\n    $_files       = [ ];\n    $_files_count = count( $files[ <span class=\"hljs-string\">'name'</span> ] );\n    $_files_keys  = array_keys( $files );\n\n    <span class=\"hljs-keyword\">for</span> ( $i = <span class=\"hljs-number\">0</span>; $i &lt; $_files_count; $i++ )\n        <span class=\"hljs-keyword\">foreach</span> ( $_files_keys <span class=\"hljs-keyword\">as</span> $key )\n            $_files[ $i ][ $key ] = $files[ $key ][ $i ];\n\n    <span class=\"hljs-keyword\">return</span> $_files;\n}</span>\n</code></pre>\n<p>Then we can use it like so:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">if</span> ( $_FILES[ <span class=\"hljs-string\">'upload'</span> ] )\n{\n    $files = normalizeFiles( $_FILES[ <span class=\"hljs-string\">'myfiles'</span> ] );\n    <span class=\"hljs-keyword\">foreach</span> ( $files <span class=\"hljs-keyword\">as</span> $file )\n    {\n        <span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">'File Name: '</span> . $file[ <span class=\"hljs-string\">'name'</span> ] . <span class=\"hljs-string\">\"&lt;br&gt;\\n\"</span>;\n        <span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">'File Type: '</span> . $file[ <span class=\"hljs-string\">'type'</span> ] . <span class=\"hljs-string\">\"&lt;br&gt;\\n\"</span>;\n        <span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">'File Size: '</span> . $file[ <span class=\"hljs-string\">'size'</span> ] . <span class=\"hljs-string\">\"&lt;br&gt;&lt;br&gt;\\n\"</span>;\n    }\n}</span>\n</code></pre>\n<p>Output:</p>\n<pre><code><span class=\"hljs-keyword\">File</span> <span class=\"hljs-keyword\">Name</span>: shanideveloper-blogspot-com.pdf\n<span class=\"hljs-keyword\">File</span> <span class=\"hljs-keyword\">Type</span>: application/pdf\n<span class=\"hljs-keyword\">File</span> <span class=\"hljs-built_in\">Size</span>: <span class=\"hljs-number\">175928</span>\n\n<span class=\"hljs-keyword\">File</span> <span class=\"hljs-keyword\">Name</span>: Packtpub.Yii<span class=\"hljs-number\">.1.</span><span class=\"hljs-number\">1.</span>Application.Development.Cookbook.Aug<span class=\"hljs-number\">.2011.</span>rar\n<span class=\"hljs-keyword\">File</span> <span class=\"hljs-keyword\">Type</span>: application/octet-stream\n<span class=\"hljs-keyword\">File</span> <span class=\"hljs-built_in\">Size</span>: <span class=\"hljs-number\">5960406</span>\n</code></pre>"},{"html_url":"https://gist.github.com/9889371","description":"Yii: Add additional `data-` attributes to each row in `CGridView`","files":["https://gist.githubusercontent.com/umidjons/9889371/raw/66278a356b54f5dff4be8626b826b25a9611cfd3/rowHtmlOptionsExpression.md"],"content":"# Add additional `data-` attributes to each row in `CGridView`\n\nSometimes we need to hold some values from model in `data-` attributes of tag. But we can't use `$data` special variable in cell's `htmlOptions` attributes. Instead of holding data in cell, we can generate `data-` attributes for rows (`tr`). For this purpose `CGridView` has special attribute `rowHtmlOptionsExpression`.\n\n```php\n<?php\n$this->widget( 'zii.widgets.grid.CGridView',\n[\n\t'id'                       => 'my-grid',\n\t'dataProvider'             => $model->search(),\n\t'filter'                   => null,\n\t'itemsCssClass'            => 'table table-striped table-hover table-condensed',\n\t'template'                 => '{items}{pager}',\n\t'columns'                  =>\n\t\t[\n\t\t\t[\n\t\t\t\t'name'        => 'id',\n\t\t\t\t'htmlOptions' => [ 'class' => 'id' ],\n\t\t\t],\n\t\t\t[\n\t\t\t\t'name'        => 'animal_class',\n\t\t\t\t'value'       => 'AnimalClass::visualValues( $data->animal_class )', // class name, not class ID\n\t\t\t\t'htmlOptions' => [ 'class' => 'animal-class', ],\n\t\t\t],\n\t\t\t[\n\t\t\t\t'name'        => 'title',\n\t\t\t\t'htmlOptions' => [ 'class' => 'title' ],\n\t\t\t],\n\t\t],\n\t'rowHtmlOptionsExpression' => '[ \"data-animalclass\" => $data->animal_class, ]', // <tr data-animalclass = \"123\">\n] );\n```\n\nAccess `data-animalclass` property using jQuery.\n\n```js\n// $(this) - clicked link in the row or, for example, button in the CButtonColumn.\nvar row=$(this).closest('tr'),\n\tanimalClassID=row.data('animalclass');\nconsole.log('Animal class ID:', animalClassID);\n```\n","html":"<h1 id=\"add-additional-data-attributes-to-each-row-in-cgridview-\">Add additional <code>data-</code> attributes to each row in <code>CGridView</code></h1>\n<p>Sometimes we need to hold some values from model in <code>data-</code> attributes of tag. But we can&#39;t use <code>$data</code> special variable in cell&#39;s <code>htmlOptions</code> attributes. Instead of holding data in cell, we can generate <code>data-</code> attributes for rows (<code>tr</code>). For this purpose <code>CGridView</code> has special attribute <code>rowHtmlOptionsExpression</code>.</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">$this</span>-&gt;widget( <span class=\"hljs-string\">'zii.widgets.grid.CGridView'</span>,\n[\n    <span class=\"hljs-string\">'id'</span>                       =&gt; <span class=\"hljs-string\">'my-grid'</span>,\n    <span class=\"hljs-string\">'dataProvider'</span>             =&gt; $model-&gt;search(),\n    <span class=\"hljs-string\">'filter'</span>                   =&gt; <span class=\"hljs-keyword\">null</span>,\n    <span class=\"hljs-string\">'itemsCssClass'</span>            =&gt; <span class=\"hljs-string\">'table table-striped table-hover table-condensed'</span>,\n    <span class=\"hljs-string\">'template'</span>                 =&gt; <span class=\"hljs-string\">'{items}{pager}'</span>,\n    <span class=\"hljs-string\">'columns'</span>                  =&gt;\n        [\n            [\n                <span class=\"hljs-string\">'name'</span>        =&gt; <span class=\"hljs-string\">'id'</span>,\n                <span class=\"hljs-string\">'htmlOptions'</span> =&gt; [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'id'</span> ],\n            ],\n            [\n                <span class=\"hljs-string\">'name'</span>        =&gt; <span class=\"hljs-string\">'animal_class'</span>,\n                <span class=\"hljs-string\">'value'</span>       =&gt; <span class=\"hljs-string\">'AnimalClass::visualValues( $data-&gt;animal_class )'</span>, <span class=\"hljs-comment\">// class name, not class ID</span>\n                <span class=\"hljs-string\">'htmlOptions'</span> =&gt; [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'animal-class'</span>, ],\n            ],\n            [\n                <span class=\"hljs-string\">'name'</span>        =&gt; <span class=\"hljs-string\">'title'</span>,\n                <span class=\"hljs-string\">'htmlOptions'</span> =&gt; [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'title'</span> ],\n            ],\n        ],\n    <span class=\"hljs-string\">'rowHtmlOptionsExpression'</span> =&gt; <span class=\"hljs-string\">'[ \"data-animalclass\" =&gt; $data-&gt;animal_class, ]'</span>, <span class=\"hljs-comment\">// &lt;tr data-animalclass = \"123\"&gt;</span>\n] );</span>\n</code></pre>\n<p>Access <code>data-animalclass</code> property using jQuery.</p>\n<pre><code class=\"lang-js\">// $(this) - clicked link <span class=\"hljs-keyword\">in</span> the <span class=\"hljs-built_in\">row</span> <span class=\"hljs-keyword\">or</span>, <span class=\"hljs-keyword\">for</span> <span class=\"hljs-built_in\">example</span>, button <span class=\"hljs-keyword\">in</span> the CButtonColumn.\n<span class=\"hljs-built_in\">var</span> <span class=\"hljs-built_in\">row</span>=$(this).closest('<span class=\"hljs-built_in\">tr</span>'),\n    animalClassID=<span class=\"hljs-built_in\">row</span>.data('animalclass');\nconsole.<span class=\"hljs-built_in\">log</span>('Animal class ID:', animalClassID);\n</code></pre>\n"},{"html_url":"https://gist.github.com/9888711","description":"Yii: Access translated messages from JavaScript","files":["https://gist.githubusercontent.com/umidjons/9888711/raw/2971721e7ea885556fe62982acbe5ed426ae9994/access-translated-messages-from-javascript.md"],"content":"# Access translated messages from JavaScript\n\nCreate `PhpMessageSource` class in `protected/components/` folder and inherit `CPhpMessageSource` class. Override its `loadMessages` method to make it available to public (parent's method is `protected`, we can't access it from outside).\n\n```php\n<?php\nclass PhpMessageSource extends CPhpMessageSource\n{\n\t// override this, just to make it available for public\n\tpublic function loadMessages( $category, $language )\n\t{\n\t\treturn parent::loadMessages( $category, $language );\n\t}\n}\n```\n\nConfigure application configuration to use `PhpMessageSource` class instead of `CPhpMessageSource`:\n\n```php\n<?php\nreturn [\n\t// ...\n\t'components' => [\n\t\t// ...\n\t\t'messages' => [\n\t\t\t'class' => 'PhpMessageSource',\n\t\t],\n\t\t// ...\n\t]\n\t// ...\n]\n```\n\nHelper method to load messages by category.\n\n```php\n<?php\nclass F\n{\n\t/**\n\t * Load Yii messages for a given category, and makes it available via jQuery.Yii.t(text).<br>\n\t * NOTE: Just one category can be loaded!\n\t * @param string $category category of messages\n\t */\n\tpublic static function jsTranslations( $category )\n\t{\n\t\t$trans=CJSON::encode(Yii::app()->messages->loadMessages($category,Yii::app()->language));\n\t\t$js   ='\n\t\tjQuery.Yii=\n\t\t\t{\n\t\t\t\ttranslations:'.$trans.',\n\t\t\t\tt           : function(text)\n\t\t\t\t{\n\t\t\t\t\tif(text in this.translations && this.translations[text])\n\t\t\t\t\t\treturn this.translations[text];\n\t\t\t\t\treturn text;\n\t\t\t\t}\n\t\t\t};\n\t\t';\n\t\tYii::app()->clientScript->registerScript('jsTranslations',$js,CClientScript::POS_END);\n\t}\n}\n```\n\nLoad messages in, for example layout file:\n\n```php\n<?php\n/* @var SiteController $this */\nF::jsTranslations( 'zr' ); // load before javascript files, that may use translations\n?>\n<!DOCTYPE html>\n<html>\n...\n```\n\nIn JavaScript files use as following:\n\n```js\n$.Yii.t(\"Add\"); // \"Добавить\"\n```\n","html":"<h1 id=\"access-translated-messages-from-javascript\">Access translated messages from JavaScript</h1>\n<p>Create <code>PhpMessageSource</code> class in <code>protected/components/</code> folder and inherit <code>CPhpMessageSource</code> class. Override its <code>loadMessages</code> method to make it available to public (parent&#39;s method is <code>protected</code>, we can&#39;t access it from outside).</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">PhpMessageSource</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CPhpMessageSource</span>\n</span>{\n    <span class=\"hljs-comment\">// override this, just to make it available for public</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">loadMessages</span><span class=\"hljs-params\">( $category, $language )</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">parent</span>::loadMessages( $category, $language );\n    }\n}</span>\n</code></pre>\n<p>Configure application configuration to use <code>PhpMessageSource</code> class instead of <code>CPhpMessageSource</code>:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">return</span> [\n    <span class=\"hljs-comment\">// ...</span>\n    <span class=\"hljs-string\">'components'</span> =&gt; [\n        <span class=\"hljs-comment\">// ...</span>\n        <span class=\"hljs-string\">'messages'</span> =&gt; [\n            <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'PhpMessageSource'</span>,\n        ],\n        <span class=\"hljs-comment\">// ...</span>\n    ]\n    <span class=\"hljs-comment\">// ...</span>\n]</span>\n</code></pre>\n<p>Helper method to load messages by category.</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">F</span>\n</span>{\n    <span class=\"hljs-comment\">/**\n     * Load Yii messages for a given category, and makes it available via jQuery.Yii.t(text).&lt;br&gt;\n     * <span class=\"hljs-doctag\">NOTE:</span> Just one category can be loaded!\n     * <span class=\"hljs-doctag\">@param</span> string $category category of messages\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">jsTranslations</span><span class=\"hljs-params\">( $category )</span>\n    </span>{\n        $trans=CJSON::encode(Yii::app()-&gt;messages-&gt;loadMessages($category,Yii::app()-&gt;language));\n        $js   =<span class=\"hljs-string\">'\n        jQuery.Yii=\n            {\n                translations:'</span>.$trans.<span class=\"hljs-string\">',\n                t           : function(text)\n                {\n                    if(text in this.translations &amp;&amp; this.translations[text])\n                        return this.translations[text];\n                    return text;\n                }\n            };\n        '</span>;\n        Yii::app()-&gt;clientScript-&gt;registerScript(<span class=\"hljs-string\">'jsTranslations'</span>,$js,CClientScript::POS_END);\n    }\n}</span>\n</code></pre>\n<p>Load messages in, for example layout file:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-comment\">/* <span class=\"hljs-doctag\">@var</span> SiteController $this */</span>\nF::jsTranslations( <span class=\"hljs-string\">'zr'</span> ); <span class=\"hljs-comment\">// load before javascript files, that may use translations</span>\n<span class=\"hljs-meta\">?&gt;</span></span>\n<span class=\"hljs-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span>&gt;</span>\n...\n</code></pre>\n<p>In JavaScript files use as following:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-variable\">$.</span>Yii.t(<span class=\"hljs-string\">\"Add\"</span>); <span class=\"hljs-regexp\">//</span> <span class=\"hljs-string\">\"Добавить\"</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/9884932","description":"Yii: Using `CHtml::ajaxSubmitButton` in active forms","files":["https://gist.githubusercontent.com/umidjons/9884932/raw/ed5cbb0b42baf5f3fe1c83664444316a6a94c1bb/chtml-ajaxsubmitbutton.md"],"content":"# Using `CHtml::ajaxSubmitButton` in active forms\n\n```php\n<div class=\"form-group\">\n\t<div class=\"col-sm-12 text-right\">\n\t\t<?=\n\t\tCHtml::ajaxSubmitButton( Yii::t( 'zr', 'Add' ), [ 'createProperty' ],\n\t\t\t[\n\t\t\t\t'type'     => 'POST',\n\t\t\t\t'dataType' => 'json',\n\t\t\t\t'data'     => 'js:$(\"#property-form\").serialize()',\n\t\t\t\t'complete' => 'js:function(){location.reload();}',\n\t\t\t\t'success'  => 'js:function(resp){console.log(resp);}',\n\t\t\t],\n\t\t\t[ 'class' => 'btn btn-default' ] );\n\t\t?>\n\t</div>\n</div>\n```\n\nSerialize form with `$(form#form-id).serialize()` method.\nReload whole page with `location.reload()` method.\nTo accept response in `JSON` format, set `dataType` to `json`. Then we can use response as `JSON` object (no need to parse response with `$.parseJSON()`).\n\nAction `createProperty` may look like as following:\n\n```php\n<?php\npublic function actionCreateProperty()\n{\n\t//echo CJSON::encode( $_POST[ 'Property' ] ); // just echo data back\n\t\n\t// actual data saving:\n\t$model = new Property();\n\tif ( isset( $_POST[ 'Property' ] ) )\n\t{\n\t\t$model->attributes = $_POST[ 'Property' ];\n\t\tif ( $model->save() )\n\t\t\tCJSON::encode( [ 'msg' => Yii::t( 'zr', 'New Property successfully added.' ) ] );\n\t\telse\n\t\t\tCJSON::encode( $model->getErrors() );\n\t}\n}\n```\n\nWe can also control request type via filters, for example, we can accept only `AJAX POST` request:\n\n```php\n<?php\npublic function filters()\n{\n\treturn [\n\t\t'accessControl',\n\t\t'postOnly + createProperty',\n\t\t'ajaxOnly + createProperty',\n\t];\n}\n```\n","html":"<h1 id=\"using-chtml-ajaxsubmitbutton-in-active-forms\">Using <code>CHtml::ajaxSubmitButton</code> in active forms</h1>\n<pre><code class=\"lang-php\">&lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"form-group\"</span>&gt;\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-12 text-right\"</span>&gt;</span>\n        <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>=\n        CHtml::ajaxSubmitButton( Yii::t( <span class=\"hljs-string\">'zr'</span>, <span class=\"hljs-string\">'Add'</span> ), [ <span class=\"hljs-string\">'createProperty'</span> ],\n            [\n                <span class=\"hljs-string\">'type'</span>     =&gt; <span class=\"hljs-string\">'POST'</span>,\n                <span class=\"hljs-string\">'dataType'</span> =&gt; <span class=\"hljs-string\">'json'</span>,\n                <span class=\"hljs-string\">'data'</span>     =&gt; <span class=\"hljs-string\">'js:$(\"#property-form\").serialize()'</span>,\n                <span class=\"hljs-string\">'complete'</span> =&gt; <span class=\"hljs-string\">'js:function(){location.reload();}'</span>,\n                <span class=\"hljs-string\">'success'</span>  =&gt; <span class=\"hljs-string\">'js:function(resp){console.log(resp);}'</span>,\n            ],\n            [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'btn btn-default'</span> ] );\n        <span class=\"hljs-meta\">?&gt;</span></span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n&lt;<span class=\"hljs-regexp\">/div&gt;</span>\n</code></pre>\n<p>Serialize form with <code>$(form#form-id).serialize()</code> method.\nReload whole page with <code>location.reload()</code> method.\nTo accept response in <code>JSON</code> format, set <code>dataType</code> to <code>json</code>. Then we can use response as <code>JSON</code> object (no need to parse response with <code>$.parseJSON()</code>).</p>\n<p>Action <code>createProperty</code> may look like as following:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">actionCreateProperty</span><span class=\"hljs-params\">()</span>\n</span>{\n    <span class=\"hljs-comment\">//echo CJSON::encode( $_POST[ 'Property' ] ); // just echo data back</span>\n\n    <span class=\"hljs-comment\">// actual data saving:</span>\n    $model = <span class=\"hljs-keyword\">new</span> Property();\n    <span class=\"hljs-keyword\">if</span> ( <span class=\"hljs-keyword\">isset</span>( $_POST[ <span class=\"hljs-string\">'Property'</span> ] ) )\n    {\n        $model-&gt;attributes = $_POST[ <span class=\"hljs-string\">'Property'</span> ];\n        <span class=\"hljs-keyword\">if</span> ( $model-&gt;save() )\n            CJSON::encode( [ <span class=\"hljs-string\">'msg'</span> =&gt; Yii::t( <span class=\"hljs-string\">'zr'</span>, <span class=\"hljs-string\">'New Property successfully added.'</span> ) ] );\n        <span class=\"hljs-keyword\">else</span>\n            CJSON::encode( $model-&gt;getErrors() );\n    }\n}</span>\n</code></pre>\n<p>We can also control request type via filters, for example, we can accept only <code>AJAX POST</code> request:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">filters</span><span class=\"hljs-params\">()</span>\n</span>{\n    <span class=\"hljs-keyword\">return</span> [\n        <span class=\"hljs-string\">'accessControl'</span>,\n        <span class=\"hljs-string\">'postOnly + createProperty'</span>,\n        <span class=\"hljs-string\">'ajaxOnly + createProperty'</span>,\n    ];\n}</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/9829421","description":"Work with common parameters in Yii","files":["https://gist.githubusercontent.com/umidjons/9829421/raw/19177378eb20ac6095d3877e67129e2510f9955b/common-parameters-yii.md"],"content":"# Work with common parameters in Yii\n\n`Params` table structure:\n\n```sql\n-- ----------------------------\n-- Table structure for params\n-- ----------------------------\nDROP TABLE IF EXISTS `params`;\nCREATE TABLE `params` (\n  `param_type` varchar(50) NOT NULL,\n  `param_name` varchar(50) NOT NULL,\n  `param_value` varchar(255) NOT NULL,\n  `param_description` varchar(255) NOT NULL,\n  PRIMARY KEY (`param_type`,`param_name`,`param_value`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n```\n\nExample records:\n\n```sql\n-- ----------------------------\n-- Records of params\n-- ----------------------------\nINSERT INTO `params` VALUES ('citizenship', 'foreigner', '2', 'Иностранец');\nINSERT INTO `params` VALUES ('citizenship', 'legalPerson', '3', 'Юридическое лицо');\nINSERT INTO `params` VALUES ('citizenship', 'uzbekistan', '1', 'Гражданин Узбекистана');\nINSERT INTO `params` VALUES ('contentStatus', 'deleted', '2', 'Удален');\nINSERT INTO `params` VALUES ('contentStatus', 'draft', '0', 'Черновик');\nINSERT INTO `params` VALUES ('contentStatus', 'published', '1', 'Опубликован');\nINSERT INTO `params` VALUES ('noticeType', 'forbid', '2', 'Налоговый или таможенный запрет');\nINSERT INTO `params` VALUES ('noticeType', 'restrictionOfRights', '3', 'Ограничение прав');\nINSERT INTO `params` VALUES ('noticeType', 'rightsOfCreditor', '1', 'Право кредитора на имущество');\nINSERT INTO `params` VALUES ('personType', 'creditor', '2', 'Кредитор');\nINSERT INTO `params` VALUES ('personType', 'debtor', '1', 'Дебитор');\nINSERT INTO `params` VALUES ('propertyClass', 'attachedProperty', '3', 'Прикрепленный объект');\nINSERT INTO `params` VALUES ('propertyClass', 'immovableProperty', '1', 'Недвижимое имущество');\nINSERT INTO `params` VALUES ('propertyClass', 'movableProperty', '2', 'Движимое имущество');\nINSERT INTO `params` VALUES ('status', 'active', '1', 'Активный');\nINSERT INTO `params` VALUES ('status', 'disabled', '0', 'Отключенный');\n```\n\nGenerate model for params, remove unnecessary methods:\n\n```php\n<?php\n\n/**\n * The followings are the available columns in table 'params':\n * @property string $param_type\n * @property string $param_name\n * @property string $param_value\n * @property string $param_description\n */\nclass Params extends CActiveRecord\n{\n\tpublic function tableName()\n\t{\n\t\treturn 'params';\n\t}\n\n\tpublic static function model( $className = __CLASS__ )\n\t{\n\t\treturn parent::model( $className );\n\t}\n\n\t/**\n\t * Get parameter types as array.\n\t * @return array parameter types.\n\t */\n\tpublic static function types()\n\t{\n\t\t$criteria    = new CDbCriteria( [ 'select' => 'param_type', 'distinct' => true ] );\n\t\t$param_types = CHtml::listData( self::model()->findAll( $criteria ), 'param_type', 'param_type' );\n\t\treturn array_values( $param_types );\n\t}\n\n\t/**\n\t * Get parameter values as array.\n\t * @param string $paramType\n\t * @return array parameter values.\n\t */\n\tpublic static function values( $paramType )\n\t{\n\t\t$values = self::model()->findAll( [ 'condition' => 'param_type=:param_type', 'params' => [ ':param_type' => $paramType ] ] );\n\t\treturn CHtml::listData( $values, 'param_value', 'param_name' );\n\t}\n\n\t/**\n\t * Get parameter value by type and name.\n\t * @param string $paramType type of the parameter\n\t * @param string $paramName name of the parameter\n\t * @return mixed parameter value or null, if no such parameter exist.\n\t */\n\tpublic static function value( $paramType, $paramName )\n\t{\n\t\treturn self::model()->find( [\n\t\t\t'condition' => 'param_type=:param_type AND param_name=:param_name',\n\t\t\t'params'    => [\n\t\t\t\t':param_type' => $paramType,\n\t\t\t\t':param_name' => $paramName,\n\t\t\t], ] )->param_value;\n\t}\n}\n```\n\nUsage example:\n\n```php\n<?php\nYii::log( 'types: ' . print_r( Params::types(), true ) );\nYii::log( 'values: ' . print_r( Params::values( 'noticeType' ), true ) );\nYii::log( 'value: ' . print_r( Params::value( 'noticeType', 'restrictionOfRights' ), true ) );\n```\n\nOutputs\n\n```\ntypes: Array\n(\n    [0] => citizenship\n    [1] => contentStatus\n    [2] => noticeType\n    [3] => personType\n    [4] => propertyClass\n    [5] => status\n)\n```\n\n```\nvalues: Array\n(\n    [2] => forbid\n    [3] => restrictionOfRights\n    [1] => rightsOfCreditor\n)\n```\n\n```\nvalue: 3\n```\n","html":"<h1 id=\"work-with-common-parameters-in-yii\">Work with common parameters in Yii</h1>\n<p><code>Params</code> table structure:</p>\n<pre><code class=\"lang-sql\"><span class=\"hljs-comment\">-- ----------------------------</span>\n<span class=\"hljs-comment\">-- Table structure for params</span>\n<span class=\"hljs-comment\">-- ----------------------------</span>\n<span class=\"hljs-keyword\">DROP</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-keyword\">IF</span> <span class=\"hljs-keyword\">EXISTS</span> <span class=\"hljs-string\">`params`</span>;\n<span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-string\">`params`</span> (\n  <span class=\"hljs-string\">`param_type`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">50</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span>,\n  <span class=\"hljs-string\">`param_name`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">50</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span>,\n  <span class=\"hljs-string\">`param_value`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">255</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span>,\n  <span class=\"hljs-string\">`param_description`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">255</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span>,\n  PRIMARY <span class=\"hljs-keyword\">KEY</span> (<span class=\"hljs-string\">`param_type`</span>,<span class=\"hljs-string\">`param_name`</span>,<span class=\"hljs-string\">`param_value`</span>)\n) <span class=\"hljs-keyword\">ENGINE</span>=<span class=\"hljs-keyword\">InnoDB</span> <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-keyword\">CHARSET</span>=utf8;\n</code></pre>\n<p>Example records:</p>\n<pre><code class=\"lang-sql\"><span class=\"hljs-comment\">-- ----------------------------</span>\n<span class=\"hljs-comment\">-- Records of params</span>\n<span class=\"hljs-comment\">-- ----------------------------</span>\n<span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> <span class=\"hljs-string\">`params`</span> <span class=\"hljs-keyword\">VALUES</span> (<span class=\"hljs-string\">'citizenship'</span>, <span class=\"hljs-string\">'foreigner'</span>, <span class=\"hljs-string\">'2'</span>, <span class=\"hljs-string\">'Иностранец'</span>);\n<span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> <span class=\"hljs-string\">`params`</span> <span class=\"hljs-keyword\">VALUES</span> (<span class=\"hljs-string\">'citizenship'</span>, <span class=\"hljs-string\">'legalPerson'</span>, <span class=\"hljs-string\">'3'</span>, <span class=\"hljs-string\">'Юридическое лицо'</span>);\n<span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> <span class=\"hljs-string\">`params`</span> <span class=\"hljs-keyword\">VALUES</span> (<span class=\"hljs-string\">'citizenship'</span>, <span class=\"hljs-string\">'uzbekistan'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'Гражданин Узбекистана'</span>);\n<span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> <span class=\"hljs-string\">`params`</span> <span class=\"hljs-keyword\">VALUES</span> (<span class=\"hljs-string\">'contentStatus'</span>, <span class=\"hljs-string\">'deleted'</span>, <span class=\"hljs-string\">'2'</span>, <span class=\"hljs-string\">'Удален'</span>);\n<span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> <span class=\"hljs-string\">`params`</span> <span class=\"hljs-keyword\">VALUES</span> (<span class=\"hljs-string\">'contentStatus'</span>, <span class=\"hljs-string\">'draft'</span>, <span class=\"hljs-string\">'0'</span>, <span class=\"hljs-string\">'Черновик'</span>);\n<span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> <span class=\"hljs-string\">`params`</span> <span class=\"hljs-keyword\">VALUES</span> (<span class=\"hljs-string\">'contentStatus'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'Опубликован'</span>);\n<span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> <span class=\"hljs-string\">`params`</span> <span class=\"hljs-keyword\">VALUES</span> (<span class=\"hljs-string\">'noticeType'</span>, <span class=\"hljs-string\">'forbid'</span>, <span class=\"hljs-string\">'2'</span>, <span class=\"hljs-string\">'Налоговый или таможенный запрет'</span>);\n<span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> <span class=\"hljs-string\">`params`</span> <span class=\"hljs-keyword\">VALUES</span> (<span class=\"hljs-string\">'noticeType'</span>, <span class=\"hljs-string\">'restrictionOfRights'</span>, <span class=\"hljs-string\">'3'</span>, <span class=\"hljs-string\">'Ограничение прав'</span>);\n<span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> <span class=\"hljs-string\">`params`</span> <span class=\"hljs-keyword\">VALUES</span> (<span class=\"hljs-string\">'noticeType'</span>, <span class=\"hljs-string\">'rightsOfCreditor'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'Право кредитора на имущество'</span>);\n<span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> <span class=\"hljs-string\">`params`</span> <span class=\"hljs-keyword\">VALUES</span> (<span class=\"hljs-string\">'personType'</span>, <span class=\"hljs-string\">'creditor'</span>, <span class=\"hljs-string\">'2'</span>, <span class=\"hljs-string\">'Кредитор'</span>);\n<span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> <span class=\"hljs-string\">`params`</span> <span class=\"hljs-keyword\">VALUES</span> (<span class=\"hljs-string\">'personType'</span>, <span class=\"hljs-string\">'debtor'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'Дебитор'</span>);\n<span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> <span class=\"hljs-string\">`params`</span> <span class=\"hljs-keyword\">VALUES</span> (<span class=\"hljs-string\">'propertyClass'</span>, <span class=\"hljs-string\">'attachedProperty'</span>, <span class=\"hljs-string\">'3'</span>, <span class=\"hljs-string\">'Прикрепленный объект'</span>);\n<span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> <span class=\"hljs-string\">`params`</span> <span class=\"hljs-keyword\">VALUES</span> (<span class=\"hljs-string\">'propertyClass'</span>, <span class=\"hljs-string\">'immovableProperty'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'Недвижимое имущество'</span>);\n<span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> <span class=\"hljs-string\">`params`</span> <span class=\"hljs-keyword\">VALUES</span> (<span class=\"hljs-string\">'propertyClass'</span>, <span class=\"hljs-string\">'movableProperty'</span>, <span class=\"hljs-string\">'2'</span>, <span class=\"hljs-string\">'Движимое имущество'</span>);\n<span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> <span class=\"hljs-string\">`params`</span> <span class=\"hljs-keyword\">VALUES</span> (<span class=\"hljs-string\">'status'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'Активный'</span>);\n<span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> <span class=\"hljs-string\">`params`</span> <span class=\"hljs-keyword\">VALUES</span> (<span class=\"hljs-string\">'status'</span>, <span class=\"hljs-string\">'disabled'</span>, <span class=\"hljs-string\">'0'</span>, <span class=\"hljs-string\">'Отключенный'</span>);\n</code></pre>\n<p>Generate model for params, remove unnecessary methods:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n\n<span class=\"hljs-comment\">/**\n * The followings are the available columns in table 'params':\n * <span class=\"hljs-doctag\">@property</span> string $param_type\n * <span class=\"hljs-doctag\">@property</span> string $param_name\n * <span class=\"hljs-doctag\">@property</span> string $param_value\n * <span class=\"hljs-doctag\">@property</span> string $param_description\n */</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Params</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CActiveRecord</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">tableName</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'params'</span>;\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">model</span><span class=\"hljs-params\">( $className = __CLASS__ )</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">parent</span>::model( $className );\n    }\n\n    <span class=\"hljs-comment\">/**\n     * Get parameter types as array.\n     * <span class=\"hljs-doctag\">@return</span> array parameter types.\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">types</span><span class=\"hljs-params\">()</span>\n    </span>{\n        $criteria    = <span class=\"hljs-keyword\">new</span> CDbCriteria( [ <span class=\"hljs-string\">'select'</span> =&gt; <span class=\"hljs-string\">'param_type'</span>, <span class=\"hljs-string\">'distinct'</span> =&gt; <span class=\"hljs-keyword\">true</span> ] );\n        $param_types = CHtml::listData( <span class=\"hljs-keyword\">self</span>::model()-&gt;findAll( $criteria ), <span class=\"hljs-string\">'param_type'</span>, <span class=\"hljs-string\">'param_type'</span> );\n        <span class=\"hljs-keyword\">return</span> array_values( $param_types );\n    }\n\n    <span class=\"hljs-comment\">/**\n     * Get parameter values as array.\n     * <span class=\"hljs-doctag\">@param</span> string $paramType\n     * <span class=\"hljs-doctag\">@return</span> array parameter values.\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">values</span><span class=\"hljs-params\">( $paramType )</span>\n    </span>{\n        $values = <span class=\"hljs-keyword\">self</span>::model()-&gt;findAll( [ <span class=\"hljs-string\">'condition'</span> =&gt; <span class=\"hljs-string\">'param_type=:param_type'</span>, <span class=\"hljs-string\">'params'</span> =&gt; [ <span class=\"hljs-string\">':param_type'</span> =&gt; $paramType ] ] );\n        <span class=\"hljs-keyword\">return</span> CHtml::listData( $values, <span class=\"hljs-string\">'param_value'</span>, <span class=\"hljs-string\">'param_name'</span> );\n    }\n\n    <span class=\"hljs-comment\">/**\n     * Get parameter value by type and name.\n     * <span class=\"hljs-doctag\">@param</span> string $paramType type of the parameter\n     * <span class=\"hljs-doctag\">@param</span> string $paramName name of the parameter\n     * <span class=\"hljs-doctag\">@return</span> mixed parameter value or null, if no such parameter exist.\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">value</span><span class=\"hljs-params\">( $paramType, $paramName )</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">self</span>::model()-&gt;find( [\n            <span class=\"hljs-string\">'condition'</span> =&gt; <span class=\"hljs-string\">'param_type=:param_type AND param_name=:param_name'</span>,\n            <span class=\"hljs-string\">'params'</span>    =&gt; [\n                <span class=\"hljs-string\">':param_type'</span> =&gt; $paramType,\n                <span class=\"hljs-string\">':param_name'</span> =&gt; $paramName,\n            ], ] )-&gt;param_value;\n    }\n}</span>\n</code></pre>\n<p>Usage example:</p>\n<pre><code class=\"lang-php\">&lt;?php\nYii<span class=\"hljs-type\">::log</span>( <span class=\"hljs-string\">'types: '</span> . print_r( <span class=\"hljs-keyword\">Params</span><span class=\"hljs-type\">::types</span>(), <span class=\"hljs-literal\">true</span> ) );\nYii<span class=\"hljs-type\">::log</span>( <span class=\"hljs-string\">'values: '</span> . print_r( <span class=\"hljs-keyword\">Params</span><span class=\"hljs-type\">::values</span>( <span class=\"hljs-string\">'noticeType'</span> ), <span class=\"hljs-literal\">true</span> ) );\nYii<span class=\"hljs-type\">::log</span>( <span class=\"hljs-string\">'value: '</span> . print_r( <span class=\"hljs-keyword\">Params</span><span class=\"hljs-type\">::value</span>( <span class=\"hljs-string\">'noticeType'</span>, <span class=\"hljs-string\">'restrictionOfRights'</span> ), <span class=\"hljs-literal\">true</span> ) );\n</code></pre>\n<p>Outputs</p>\n<pre><code>types: <span class=\"hljs-keyword\">Array</span>\n(\n    [<span class=\"hljs-number\">0</span>] =&gt; citizenship\n    [<span class=\"hljs-number\">1</span>] =&gt; contentStatus\n    [<span class=\"hljs-number\">2</span>] =&gt; noticeType\n    [<span class=\"hljs-number\">3</span>] =&gt; personType\n    [<span class=\"hljs-number\">4</span>] =&gt; propertyClass\n    [<span class=\"hljs-number\">5</span>] =&gt; status\n)\n</code></pre><pre><code>values: <span class=\"hljs-keyword\">Array</span>\n(\n    [<span class=\"hljs-number\">2</span>] =&gt; forbid\n    [<span class=\"hljs-number\">3</span>] =&gt; restrictionOfRights\n    [<span class=\"hljs-number\">1</span>] =&gt; rightsOfCreditor\n)\n</code></pre><pre><code><span class=\"hljs-symbol\">value:</span> <span class=\"hljs-number\">3</span>\n</code></pre>"},{"html_url":"https://gist.github.com/9802253","description":"Yii: Configuring number format & using in CGridView column","files":["https://gist.githubusercontent.com/umidjons/9802253/raw/b041867074747dbdd94d92ef6b526db3f36e1061/configuring-number-date-time-formats.md"],"content":"# Configuring number format & using in CGridView column\n\nWe can configure numbers format in application configuration as below:\n\n```php\n<?php\nreturn [\n\t// ...\n\t'components'     => [\n\t\t// ...\n\t\t'format'        => [\n\t\t\t// number format\n\t\t\t'numberFormat'   => [ 'decimals' => 2, 'decimalSeparator' => '.', 'thousandSeparator' => false ],\n\t\t\t\n\t\t\t// date time formats\n\t\t\t'datetimeFormat' => 'd.m.Y H:i:s',\n\t\t\t'dateFormat'     => 'd.m.Y',\n\t\t],\n\t],\n];\n```\n\nIn CGridView we can set columns' format as follow:\n\n```php\n<?php $this->widget( 'zii.widgets.grid.CGridView', [\n\t'id'            => 'service-grid',\n\t'dataProvider'  => $model->search(),\n\t'filter'        => null,\n\t'itemsCssClass' => 'table table-striped table-hover table-condensed',\n\t'template'      => '{items}{pager}',\n\t'columns'       => [\n\t\t[\n\t\t\t'header'      => Yii::t( 'zr', 'Service' ),\n\t\t\t'name'        => 'description',\n\t\t\t'htmlOptions' => [ 'class' => 'service-name' ],\n\t\t],\n\t\t[\n\t\t\t'header'      => Yii::t( 'zr', 'Price' ),\n\t\t\t'name'        => 'price',\n\t\t\t'value'       => '$data->currentPrice->price',\n\t\t\t'htmlOptions' => [ 'class' => 'service-price' ],\n\t\t\t'type'        => 'number', // format as number\n\t\t],\n\t\t[\n\t\t\t'header' => Yii::t( 'zr', 'Create Date' ),\n\t\t\t'name'   => 'created_at',\n\t\t\t'value'  => '$data->currentPrice->created_at',\n\t\t\t'type'   => 'datetime', // format as date and time\n\t\t],\n\t\t[\n\t\t\t'class'    => 'CButtonColumn',\n\t\t],\n\t],\n] ); ?>\n```\n\nIn other places we can format number like:\n\n```php\n<?= Yii::app()->format->formatNumber( \"6632678.64857\" ); ?>\n```","html":"<h1 id=\"configuring-number-format-using-in-cgridview-column\">Configuring number format &amp; using in CGridView column</h1>\n<p>We can configure numbers format in application configuration as below:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">return</span> [\n    <span class=\"hljs-comment\">// ...</span>\n    <span class=\"hljs-string\">'components'</span>     =&gt; [\n        <span class=\"hljs-comment\">// ...</span>\n        <span class=\"hljs-string\">'format'</span>        =&gt; [\n            <span class=\"hljs-comment\">// number format</span>\n            <span class=\"hljs-string\">'numberFormat'</span>   =&gt; [ <span class=\"hljs-string\">'decimals'</span> =&gt; <span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">'decimalSeparator'</span> =&gt; <span class=\"hljs-string\">'.'</span>, <span class=\"hljs-string\">'thousandSeparator'</span> =&gt; <span class=\"hljs-keyword\">false</span> ],\n\n            <span class=\"hljs-comment\">// date time formats</span>\n            <span class=\"hljs-string\">'datetimeFormat'</span> =&gt; <span class=\"hljs-string\">'d.m.Y H:i:s'</span>,\n            <span class=\"hljs-string\">'dateFormat'</span>     =&gt; <span class=\"hljs-string\">'d.m.Y'</span>,\n        ],\n    ],\n];</span>\n</code></pre>\n<p>In CGridView we can set columns&#39; format as follow:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">$this</span>-&gt;widget( <span class=\"hljs-string\">'zii.widgets.grid.CGridView'</span>, [\n    <span class=\"hljs-string\">'id'</span>            =&gt; <span class=\"hljs-string\">'service-grid'</span>,\n    <span class=\"hljs-string\">'dataProvider'</span>  =&gt; $model-&gt;search(),\n    <span class=\"hljs-string\">'filter'</span>        =&gt; <span class=\"hljs-keyword\">null</span>,\n    <span class=\"hljs-string\">'itemsCssClass'</span> =&gt; <span class=\"hljs-string\">'table table-striped table-hover table-condensed'</span>,\n    <span class=\"hljs-string\">'template'</span>      =&gt; <span class=\"hljs-string\">'{items}{pager}'</span>,\n    <span class=\"hljs-string\">'columns'</span>       =&gt; [\n        [\n            <span class=\"hljs-string\">'header'</span>      =&gt; Yii::t( <span class=\"hljs-string\">'zr'</span>, <span class=\"hljs-string\">'Service'</span> ),\n            <span class=\"hljs-string\">'name'</span>        =&gt; <span class=\"hljs-string\">'description'</span>,\n            <span class=\"hljs-string\">'htmlOptions'</span> =&gt; [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'service-name'</span> ],\n        ],\n        [\n            <span class=\"hljs-string\">'header'</span>      =&gt; Yii::t( <span class=\"hljs-string\">'zr'</span>, <span class=\"hljs-string\">'Price'</span> ),\n            <span class=\"hljs-string\">'name'</span>        =&gt; <span class=\"hljs-string\">'price'</span>,\n            <span class=\"hljs-string\">'value'</span>       =&gt; <span class=\"hljs-string\">'$data-&gt;currentPrice-&gt;price'</span>,\n            <span class=\"hljs-string\">'htmlOptions'</span> =&gt; [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'service-price'</span> ],\n            <span class=\"hljs-string\">'type'</span>        =&gt; <span class=\"hljs-string\">'number'</span>, <span class=\"hljs-comment\">// format as number</span>\n        ],\n        [\n            <span class=\"hljs-string\">'header'</span> =&gt; Yii::t( <span class=\"hljs-string\">'zr'</span>, <span class=\"hljs-string\">'Create Date'</span> ),\n            <span class=\"hljs-string\">'name'</span>   =&gt; <span class=\"hljs-string\">'created_at'</span>,\n            <span class=\"hljs-string\">'value'</span>  =&gt; <span class=\"hljs-string\">'$data-&gt;currentPrice-&gt;created_at'</span>,\n            <span class=\"hljs-string\">'type'</span>   =&gt; <span class=\"hljs-string\">'datetime'</span>, <span class=\"hljs-comment\">// format as date and time</span>\n        ],\n        [\n            <span class=\"hljs-string\">'class'</span>    =&gt; <span class=\"hljs-string\">'CButtonColumn'</span>,\n        ],\n    ],\n] ); <span class=\"hljs-meta\">?&gt;</span></span>\n</code></pre>\n<p>In other places we can format number like:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= Yii::app()-&gt;format-&gt;formatNumber( <span class=\"hljs-string\">\"6632678.64857\"</span> ); <span class=\"hljs-meta\">?&gt;</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/9800039","description":"Yii: Sorting associative array by value preserving keys","files":["https://gist.githubusercontent.com/umidjons/9800039/raw/f6c89446ca2fc666f467fbfe328594b26bf129da/sort-associative-array-by-value-preserving-keys.md"],"content":"# Sort associative array by value preserving indexes/keys\n\nI want to get a list of roles, sort them by description, then use it to output list of checkboxes. First I should get list of roles, but I don't need all properties, only `name` and `description`.\n\n```php\n<?php\n// get roles as ['name1'=>'description1','name2'=>'description2','name3'=>'description3', ...]\n$roles = CHtml::listData( Yii::app()->authManager->roles, 'name', 'description' );\nYii::log( '$roles before sort: ' . print_r( $roles, true ) );\n```\n\nBefore sort `$roles` array looks like as following:\n\n```\n$roles before sort: Array\n(\n    [arestor] => Государственные организации налагающие арест на имущество лица\n    [authorizedUser] => Авторизованный пользователь\n    [creditor] => Организация, обладающая правами кредитора на имущество\n    [groupAdministrator] => Администратор группы\n    [lawEnforcement] => Правоохранительные органы, ограничивающие права лица на его имущество\n    [registrar] => Регистратор\n    [siteModerator] => Модератор сайта\n    [statist] => Статистик\n    [superAdministrator] => Супер администратор\n    [user] => Пользователь\n)\n```\n\nIf I sort using `sort` function I lost `name` indexes. They will be reindexed.\n\n```php\n<?php\nsort( $roles );\nYii::log( '$roles after sort: ' . print_r( $roles, true ) );\n```\n\nArray after `sort`:\n\n```\nArray\n(\n    [0] => Авторизованный пользователь\n    [1] => Администратор группы\n    [2] => Государственные организации налагающие арест на имущество лица\n    [3] => Модератор сайта\n    [4] => Организация, обладающая правами кредитора на имущество\n    [5] => Пользователь\n    [6] => Правоохранительные органы, ограничивающие права лица на его имущество\n    [7] => Регистратор\n    [8] => Статистик\n    [9] => Супер администратор\n)\n```\n\nSo I need a way to sort array by value and preserve keys. `array_multisort` is handy in this situation. We can use it as below:\n\n```php\n<?php\n// sort associative array by value preserving keys\n\n// prepare for sorting by value/description:\n$descriptions = [ ];\nforeach ( $roles as $name => $desc )\n\t$descriptions[ $name ] = $desc;\n\n// sort $roles array by $description array value:\narray_multisort( $descriptions, SORT_ASC, $roles );\n\n// output array after sort\nYii::log( '$roles after sort: ' . print_r( $roles, true ) );\n```\n\nOutput of array after sorting with `array_multisort`:\n\n```\n$roles after sort: Array\n(\n    [authorizedUser] => Авторизованный пользователь\n    [groupAdministrator] => Администратор группы\n    [arestor] => Государственные организации налагающие арест на имущество лица\n    [siteModerator] => Модератор сайта\n    [creditor] => Организация, обладающая правами кредитора на имущество\n    [user] => Пользователь\n    [lawEnforcement] => Правоохранительные органы, ограничивающие права лица на его имущество\n    [registrar] => Регистратор\n    [statist] => Статистик\n    [superAdministrator] => Супер администратор\n)\n```\n\nNow we can use this array, for example in checkbox-lists or dropdown-lists. Below is example for checkbox-list:\n\n```php\n<?php\n// output checkboxlist, name as value, description as text/title\necho $form->checkBoxList( $model, 'roles', $roles );\n```\n\nAbove code will generate following HTML output:\n\n```html\n<input id=\"ytUser_roles\" type=\"hidden\" value=\"\" name=\"User[roles]\">\n<span id=\"User_roles\"><input id=\"User_roles_0\" value=\"authorizedUser\" type=\"checkbox\" name=\"User[roles][]\"> <label for=\"User_roles_0\">Авторизованный пользователь</label><br>\n<input id=\"User_roles_1\" value=\"groupAdministrator\" type=\"checkbox\" name=\"User[roles][]\"> <label for=\"User_roles_1\">Администратор группы</label><br>\n<input id=\"User_roles_2\" value=\"arestor\" type=\"checkbox\" name=\"User[roles][]\"> <label for=\"User_roles_2\">Государственные организации налагающие арест на имущество лица</label><br>\n<input id=\"User_roles_3\" value=\"siteModerator\" type=\"checkbox\" name=\"User[roles][]\"> <label for=\"User_roles_3\">Модератор сайта</label><br>\n<input id=\"User_roles_4\" value=\"creditor\" type=\"checkbox\" name=\"User[roles][]\"> <label for=\"User_roles_4\">Организация, обладающая правами кредитора на имущество</label><br>\n<input id=\"User_roles_5\" value=\"user\" type=\"checkbox\" name=\"User[roles][]\"> <label for=\"User_roles_5\">Пользователь</label><br>\n<input id=\"User_roles_6\" value=\"lawEnforcement\" type=\"checkbox\" name=\"User[roles][]\"> <label for=\"User_roles_6\">Правоохранительные органы, ограничивающие права лица на его имущество</label><br>\n<input id=\"User_roles_7\" value=\"registrar\" type=\"checkbox\" name=\"User[roles][]\"> <label for=\"User_roles_7\">Регистратор</label><br>\n<input id=\"User_roles_8\" value=\"statist\" type=\"checkbox\" name=\"User[roles][]\"> <label for=\"User_roles_8\">Статистик</label><br>\n<input id=\"User_roles_9\" value=\"superAdministrator\" checked=\"checked\" type=\"checkbox\" name=\"User[roles][]\"> <label for=\"User_roles_9\">Супер администратор</label></span>\n```","html":"<h1 id=\"sort-associative-array-by-value-preserving-indexes-keys\">Sort associative array by value preserving indexes/keys</h1>\n<p>I want to get a list of roles, sort them by description, then use it to output list of checkboxes. First I should get list of roles, but I don&#39;t need all properties, only <code>name</code> and <code>description</code>.</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-comment\">// get roles as ['name1'=&gt;'description1','name2'=&gt;'description2','name3'=&gt;'description3', ...]</span>\n$roles = CHtml::listData( Yii::app()-&gt;authManager-&gt;roles, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span> );\nYii::log( <span class=\"hljs-string\">'$roles before sort: '</span> . print_r( $roles, <span class=\"hljs-keyword\">true</span> ) );</span>\n</code></pre>\n<p>Before sort <code>$roles</code> array looks like as following:</p>\n<pre><code>$roles before sort: <span class=\"hljs-keyword\">Array</span>\n(\n    [arestor] =&gt; Государственные организации налагающие арест на имущество лица\n    [authorizedUser] =&gt; Авторизованный пользователь\n    [creditor] =&gt; Организация, обладающая правами кредитора на имущество\n    [groupAdministrator] =&gt; Администратор группы\n    [lawEnforcement] =&gt; Правоохранительные органы, ограничивающие права лица на его имущество\n    [registrar] =&gt; Регистратор\n    [siteModerator] =&gt; Модератор сайта\n    [statist] =&gt; Статистик\n    [superAdministrator] =&gt; Супер администратор\n    [user] =&gt; Пользователь\n)\n</code></pre><p>If I sort using <code>sort</code> function I lost <code>name</code> indexes. They will be reindexed.</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\nsort( $roles );\nYii::log( <span class=\"hljs-string\">'$roles after sort: '</span> . print_r( $roles, <span class=\"hljs-keyword\">true</span> ) );</span>\n</code></pre>\n<p>Array after <code>sort</code>:</p>\n<pre><code><span class=\"hljs-keyword\">Array</span>\n(\n    [<span class=\"hljs-number\">0</span>] =&gt; Авторизованный пользователь\n    [<span class=\"hljs-number\">1</span>] =&gt; Администратор группы\n    [<span class=\"hljs-number\">2</span>] =&gt; Государственные организации налагающие арест на имущество лица\n    [<span class=\"hljs-number\">3</span>] =&gt; Модератор сайта\n    [<span class=\"hljs-number\">4</span>] =&gt; Организация, обладающая правами кредитора на имущество\n    [<span class=\"hljs-number\">5</span>] =&gt; Пользователь\n    [<span class=\"hljs-number\">6</span>] =&gt; Правоохранительные органы, ограничивающие права лица на его имущество\n    [<span class=\"hljs-number\">7</span>] =&gt; Регистратор\n    [<span class=\"hljs-number\">8</span>] =&gt; Статистик\n    [<span class=\"hljs-number\">9</span>] =&gt; Супер администратор\n)\n</code></pre><p>So I need a way to sort array by value and preserve keys. <code>array_multisort</code> is handy in this situation. We can use it as below:</p>\n<pre><code class=\"lang-php\">&lt;?php\n// sort associative<span class=\"hljs-built_in\"> array </span>by value preserving keys\n\n// prepare for sorting by value/description:\n$descriptions = [ ];\nforeach ( $roles as $name =&gt; $desc )\n    $descriptions[ $name ] = $desc;\n\n// sort $roles<span class=\"hljs-built_in\"> array </span>by $description<span class=\"hljs-built_in\"> array </span>value:\narray_multisort( $descriptions, SORT_ASC, $roles );\n\n// output<span class=\"hljs-built_in\"> array </span>after sort\nYii::log( '$roles after sort: ' . print_r( $roles, true ) );\n</code></pre>\n<p>Output of array after sorting with <code>array_multisort</code>:</p>\n<pre><code>$roles after sort: <span class=\"hljs-keyword\">Array</span>\n(\n    [authorizedUser] =&gt; Авторизованный пользователь\n    [groupAdministrator] =&gt; Администратор группы\n    [arestor] =&gt; Государственные организации налагающие арест на имущество лица\n    [siteModerator] =&gt; Модератор сайта\n    [creditor] =&gt; Организация, обладающая правами кредитора на имущество\n    [user] =&gt; Пользователь\n    [lawEnforcement] =&gt; Правоохранительные органы, ограничивающие права лица на его имущество\n    [registrar] =&gt; Регистратор\n    [statist] =&gt; Статистик\n    [superAdministrator] =&gt; Супер администратор\n)\n</code></pre><p>Now we can use this array, for example in checkbox-lists or dropdown-lists. Below is example for checkbox-list:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-comment\">// output checkboxlist, name as value, description as text/title</span>\n<span class=\"hljs-keyword\">echo</span> $form-&gt;checkBoxList( $model, <span class=\"hljs-string\">'roles'</span>, $roles );</span>\n</code></pre>\n<p>Above code will generate following HTML output:</p>\n<pre><code class=\"lang-html\">&lt;<span class=\"hljs-keyword\">input</span> id=<span class=\"hljs-string\">\"ytUser_roles\"</span> <span class=\"hljs-keyword\">type</span>=<span class=\"hljs-string\">\"hidden\"</span> value=<span class=\"hljs-string\">\"\"</span> name=<span class=\"hljs-string\">\"User[roles]\"</span>&gt;\n&lt;span id=<span class=\"hljs-string\">\"User_roles\"</span>&gt;&lt;<span class=\"hljs-keyword\">input</span> id=<span class=\"hljs-string\">\"User_roles_0\"</span> value=<span class=\"hljs-string\">\"authorizedUser\"</span> <span class=\"hljs-keyword\">type</span>=<span class=\"hljs-string\">\"checkbox\"</span> name=<span class=\"hljs-string\">\"User[roles][]\"</span>&gt; &lt;<span class=\"hljs-keyword\">label</span> <span class=\"hljs-keyword\">for</span>=<span class=\"hljs-string\">\"User_roles_0\"</span>&gt;Авторизованный пользователь&lt;/<span class=\"hljs-keyword\">label</span>&gt;&lt;<span class=\"hljs-keyword\">br</span>&gt;\n&lt;<span class=\"hljs-keyword\">input</span> id=<span class=\"hljs-string\">\"User_roles_1\"</span> value=<span class=\"hljs-string\">\"groupAdministrator\"</span> <span class=\"hljs-keyword\">type</span>=<span class=\"hljs-string\">\"checkbox\"</span> name=<span class=\"hljs-string\">\"User[roles][]\"</span>&gt; &lt;<span class=\"hljs-keyword\">label</span> <span class=\"hljs-keyword\">for</span>=<span class=\"hljs-string\">\"User_roles_1\"</span>&gt;Администратор группы&lt;/<span class=\"hljs-keyword\">label</span>&gt;&lt;<span class=\"hljs-keyword\">br</span>&gt;\n&lt;<span class=\"hljs-keyword\">input</span> id=<span class=\"hljs-string\">\"User_roles_2\"</span> value=<span class=\"hljs-string\">\"arestor\"</span> <span class=\"hljs-keyword\">type</span>=<span class=\"hljs-string\">\"checkbox\"</span> name=<span class=\"hljs-string\">\"User[roles][]\"</span>&gt; &lt;<span class=\"hljs-keyword\">label</span> <span class=\"hljs-keyword\">for</span>=<span class=\"hljs-string\">\"User_roles_2\"</span>&gt;Государственные организации налагающие арест на имущество лица&lt;/<span class=\"hljs-keyword\">label</span>&gt;&lt;<span class=\"hljs-keyword\">br</span>&gt;\n&lt;<span class=\"hljs-keyword\">input</span> id=<span class=\"hljs-string\">\"User_roles_3\"</span> value=<span class=\"hljs-string\">\"siteModerator\"</span> <span class=\"hljs-keyword\">type</span>=<span class=\"hljs-string\">\"checkbox\"</span> name=<span class=\"hljs-string\">\"User[roles][]\"</span>&gt; &lt;<span class=\"hljs-keyword\">label</span> <span class=\"hljs-keyword\">for</span>=<span class=\"hljs-string\">\"User_roles_3\"</span>&gt;Модератор сайта&lt;/<span class=\"hljs-keyword\">label</span>&gt;&lt;<span class=\"hljs-keyword\">br</span>&gt;\n&lt;<span class=\"hljs-keyword\">input</span> id=<span class=\"hljs-string\">\"User_roles_4\"</span> value=<span class=\"hljs-string\">\"creditor\"</span> <span class=\"hljs-keyword\">type</span>=<span class=\"hljs-string\">\"checkbox\"</span> name=<span class=\"hljs-string\">\"User[roles][]\"</span>&gt; &lt;<span class=\"hljs-keyword\">label</span> <span class=\"hljs-keyword\">for</span>=<span class=\"hljs-string\">\"User_roles_4\"</span>&gt;Организация, обладающая правами кредитора на имущество&lt;/<span class=\"hljs-keyword\">label</span>&gt;&lt;<span class=\"hljs-keyword\">br</span>&gt;\n&lt;<span class=\"hljs-keyword\">input</span> id=<span class=\"hljs-string\">\"User_roles_5\"</span> value=<span class=\"hljs-string\">\"user\"</span> <span class=\"hljs-keyword\">type</span>=<span class=\"hljs-string\">\"checkbox\"</span> name=<span class=\"hljs-string\">\"User[roles][]\"</span>&gt; &lt;<span class=\"hljs-keyword\">label</span> <span class=\"hljs-keyword\">for</span>=<span class=\"hljs-string\">\"User_roles_5\"</span>&gt;Пользователь&lt;/<span class=\"hljs-keyword\">label</span>&gt;&lt;<span class=\"hljs-keyword\">br</span>&gt;\n&lt;<span class=\"hljs-keyword\">input</span> id=<span class=\"hljs-string\">\"User_roles_6\"</span> value=<span class=\"hljs-string\">\"lawEnforcement\"</span> <span class=\"hljs-keyword\">type</span>=<span class=\"hljs-string\">\"checkbox\"</span> name=<span class=\"hljs-string\">\"User[roles][]\"</span>&gt; &lt;<span class=\"hljs-keyword\">label</span> <span class=\"hljs-keyword\">for</span>=<span class=\"hljs-string\">\"User_roles_6\"</span>&gt;Правоохранительные органы, ограничивающие права лица на его имущество&lt;/<span class=\"hljs-keyword\">label</span>&gt;&lt;<span class=\"hljs-keyword\">br</span>&gt;\n&lt;<span class=\"hljs-keyword\">input</span> id=<span class=\"hljs-string\">\"User_roles_7\"</span> value=<span class=\"hljs-string\">\"registrar\"</span> <span class=\"hljs-keyword\">type</span>=<span class=\"hljs-string\">\"checkbox\"</span> name=<span class=\"hljs-string\">\"User[roles][]\"</span>&gt; &lt;<span class=\"hljs-keyword\">label</span> <span class=\"hljs-keyword\">for</span>=<span class=\"hljs-string\">\"User_roles_7\"</span>&gt;Регистратор&lt;/<span class=\"hljs-keyword\">label</span>&gt;&lt;<span class=\"hljs-keyword\">br</span>&gt;\n&lt;<span class=\"hljs-keyword\">input</span> id=<span class=\"hljs-string\">\"User_roles_8\"</span> value=<span class=\"hljs-string\">\"statist\"</span> <span class=\"hljs-keyword\">type</span>=<span class=\"hljs-string\">\"checkbox\"</span> name=<span class=\"hljs-string\">\"User[roles][]\"</span>&gt; &lt;<span class=\"hljs-keyword\">label</span> <span class=\"hljs-keyword\">for</span>=<span class=\"hljs-string\">\"User_roles_8\"</span>&gt;Статистик&lt;/<span class=\"hljs-keyword\">label</span>&gt;&lt;<span class=\"hljs-keyword\">br</span>&gt;\n&lt;<span class=\"hljs-keyword\">input</span> id=<span class=\"hljs-string\">\"User_roles_9\"</span> value=<span class=\"hljs-string\">\"superAdministrator\"</span> checked=<span class=\"hljs-string\">\"checked\"</span> <span class=\"hljs-keyword\">type</span>=<span class=\"hljs-string\">\"checkbox\"</span> name=<span class=\"hljs-string\">\"User[roles][]\"</span>&gt; &lt;<span class=\"hljs-keyword\">label</span> <span class=\"hljs-keyword\">for</span>=<span class=\"hljs-string\">\"User_roles_9\"</span>&gt;Супер администратор&lt;/<span class=\"hljs-keyword\">label</span>&gt;&lt;/span&gt;\n</code></pre>\n"},{"html_url":"https://gist.github.com/9780505","description":"PHP: Generate longer session ID","files":["https://gist.githubusercontent.com/umidjons/9780505/raw/ad6bd4a10d4cd185fdf4fcf2259b0a0b54a95c7d/generate-longer-session-id.md"],"content":"# Generate longer session IDs\nTo generate longer session IDs change these settings in `php.ini`\n```\n# number of bytes which will be read from the file\nsession.entropy_length = 32\n# 0-MD5 (128bits), 1-SHA1 (160bits)\nsession.hash_function = 1\n```","html":"<h1 id=\"generate-longer-session-ids\">Generate longer session IDs</h1>\n<p>To generate longer session IDs change these settings in <code>php.ini</code></p>\n<pre><code># number of bytes which will be read from the file\nsession.entropy_length = <span class=\"hljs-number\">32</span>\n# <span class=\"hljs-number\">0</span>-MD5 (<span class=\"hljs-number\">128</span>bits), <span class=\"hljs-number\">1</span>-SHA1 (<span class=\"hljs-number\">160</span>bits)\nsession.hash_function = <span class=\"hljs-number\">1</span>\n</code></pre>"},{"html_url":"https://gist.github.com/9757055","description":"Yii: Helper class to publish assets (including twitter bootstrap)","files":["https://gist.githubusercontent.com/umidjons/9757055/raw/4e270625ca34b7b0dd069bda548f8b1226cd6aa8/yii-helper-class-to-publish-assets.md"],"content":"# Helper class to publish assets\n\nThis method will include javascript file without extension from the `protected/assets/js/` folder.\n\n```php\n<?php\nclass F\n{\n\t/**\n\t * Publish and include script file from protected/assets/js folder.\n\t * @param string  $file script file name without extension.\n\t * @param integer $pos  the position of the JavaScript code. Valid values include the following:\n\t * <ul>\n\t * <li>CClientScript::POS_HEAD : the script is inserted in the head section right before the title element.</li>\n\t * <li>CClientScript::POS_BEGIN : the script is inserted at the beginning of the body section.</li>\n\t * <li>CClientScript::POS_END : the script is inserted at the end of the body section.</li>\n\t * </ul>\n\t * @return CClientScript the CClientScript object itself.\n\t */\n\tpublic static function regScriptFile( $file, $pos = CClientScript::POS_END )\n\t{\n\t\t$assetsDir = Yii::app()->basePath . DIRECTORY_SEPARATOR . 'assets' . DIRECTORY_SEPARATOR;\n\t\treturn Yii::app()->clientScript->registerScriptFile( Yii::app()->assetManager->publish( $assetsDir . 'js' . DIRECTORY_SEPARATOR . $file . '.js' ), $pos );\n\t}\n\n\t/**\n\t * Publish and include css file from protected/assets/css folder.\n\t * @param string $file css file name without extension.\n\t * @return CClientScript the CClientScript object itself.\n\t */\n\tpublic static function regCssFile( $file )\n\t{\n\t\t$assetsDir = Yii::app()->basePath . DIRECTORY_SEPARATOR . 'assets' . DIRECTORY_SEPARATOR;\n\t\treturn Yii::app()->clientScript->registerCssFile( Yii::app()->assetManager->publish( $assetsDir . 'css' . DIRECTORY_SEPARATOR . $file . '.css' ) );\n\t}\n\n\t/**\n\t * Publish Twitter Bootstrap fonts from /protected/assets/fonts folder.\n\t * Copies them from /protected/assets/fonts/ into /var/www/mysite/assets/b732073/, for example.\n\t */\n\tpublic static function publishTwbsFonts()\n\t{\n\t\t$am             = Yii::app()->assetManager;\n\t\t$font_path      = Yii::app()->basePath . DIRECTORY_SEPARATOR . 'assets' . DIRECTORY_SEPARATOR . 'fonts' . DIRECTORY_SEPARATOR; // /protected/assets/fonts/\n\t\t$font_path_dest = $am->basePath . DIRECTORY_SEPARATOR . 'fonts' . DIRECTORY_SEPARATOR; // /assets/fonts/\n\t\t$font_filename  = 'glyphicons-halflings-regular';\n\t\t$copy_needed    = false;\n\t\tforeach ( [ 'eot', 'svg', 'ttf', 'woff' ] as $f_ext )\n\t\t\tif ( !file_exists( $font_filename . '.' . $f_ext ) )\n\t\t\t{\n\t\t\t\t$fp          = $am->publish( $font_path . $font_filename . '.' . $f_ext );\n\t\t\t\t$copy_needed = true;\n\t\t\t}\n\t\tif ( $copy_needed )\n\t\t{\n\t\t\t$font_path_src = Yii::getPathOfAlias( 'webroot' ) . dirname( $fp ); // /var/www/mysite/assets/b732073/\n\t\t\tCFileHelper::copyDirectory( $font_path_src, $font_path_dest, [ 'level' => 0 ] );\n\t\t}\n\t}\n\n\t/**\n\t * Publish Twitter Bootstrap assets.\n\t */\n\tpublic static function regTwitterBootstrap()\n\t{\n\t\t// publish CSSs\n\t\tF::regCssFile( 'bootstrap.min' ); // protected/assets/css/boostrap.min.css\n\t\tF::regCssFile( 'bootstrap-theme.min' ); // protected/assets/css/boostrap-theme.min.css\n\t\tF::regCssFile( 'styles' ); // protected/assets/css/styles.css\n\t\t\n\t\t// include jQuery\n\t\tYii::app()->clientScript->registerCoreScript( 'jquery' );\n\t\t\n\t\t// publish JSs\n\t\tF::regScriptFile( 'bootstrap.min' ); // protected/assets/js/bootstrap.min.js\n\t\tF::publishTwbsFonts(); // publish fonts\n\t}\n}\n```\n\nUsage example in view:\n\n```php\n<?php\nF::regTwitterBootstrap();\nF::regScriptFile( 'scripts' ); // include custom JS from protected/assets/js/scripts.js\n```","html":"<h1 id=\"helper-class-to-publish-assets\">Helper class to publish assets</h1>\n<p>This method will include javascript file without extension from the <code>protected/assets/js/</code> folder.</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">F</span>\n</span>{\n    <span class=\"hljs-comment\">/**\n     * Publish and include script file from protected/assets/js folder.\n     * <span class=\"hljs-doctag\">@param</span> string  $file script file name without extension.\n     * <span class=\"hljs-doctag\">@param</span> integer $pos  the position of the JavaScript code. Valid values include the following:\n     * &lt;ul&gt;\n     * &lt;li&gt;CClientScript::POS_HEAD : the script is inserted in the head section right before the title element.&lt;/li&gt;\n     * &lt;li&gt;CClientScript::POS_BEGIN : the script is inserted at the beginning of the body section.&lt;/li&gt;\n     * &lt;li&gt;CClientScript::POS_END : the script is inserted at the end of the body section.&lt;/li&gt;\n     * &lt;/ul&gt;\n     * <span class=\"hljs-doctag\">@return</span> CClientScript the CClientScript object itself.\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">regScriptFile</span><span class=\"hljs-params\">( $file, $pos = CClientScript::POS_END )</span>\n    </span>{\n        $assetsDir = Yii::app()-&gt;basePath . DIRECTORY_SEPARATOR . <span class=\"hljs-string\">'assets'</span> . DIRECTORY_SEPARATOR;\n        <span class=\"hljs-keyword\">return</span> Yii::app()-&gt;clientScript-&gt;registerScriptFile( Yii::app()-&gt;assetManager-&gt;publish( $assetsDir . <span class=\"hljs-string\">'js'</span> . DIRECTORY_SEPARATOR . $file . <span class=\"hljs-string\">'.js'</span> ), $pos );\n    }\n\n    <span class=\"hljs-comment\">/**\n     * Publish and include css file from protected/assets/css folder.\n     * <span class=\"hljs-doctag\">@param</span> string $file css file name without extension.\n     * <span class=\"hljs-doctag\">@return</span> CClientScript the CClientScript object itself.\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">regCssFile</span><span class=\"hljs-params\">( $file )</span>\n    </span>{\n        $assetsDir = Yii::app()-&gt;basePath . DIRECTORY_SEPARATOR . <span class=\"hljs-string\">'assets'</span> . DIRECTORY_SEPARATOR;\n        <span class=\"hljs-keyword\">return</span> Yii::app()-&gt;clientScript-&gt;registerCssFile( Yii::app()-&gt;assetManager-&gt;publish( $assetsDir . <span class=\"hljs-string\">'css'</span> . DIRECTORY_SEPARATOR . $file . <span class=\"hljs-string\">'.css'</span> ) );\n    }\n\n    <span class=\"hljs-comment\">/**\n     * Publish Twitter Bootstrap fonts from /protected/assets/fonts folder.\n     * Copies them from /protected/assets/fonts/ into /var/www/mysite/assets/b732073/, for example.\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">publishTwbsFonts</span><span class=\"hljs-params\">()</span>\n    </span>{\n        $am             = Yii::app()-&gt;assetManager;\n        $font_path      = Yii::app()-&gt;basePath . DIRECTORY_SEPARATOR . <span class=\"hljs-string\">'assets'</span> . DIRECTORY_SEPARATOR . <span class=\"hljs-string\">'fonts'</span> . DIRECTORY_SEPARATOR; <span class=\"hljs-comment\">// /protected/assets/fonts/</span>\n        $font_path_dest = $am-&gt;basePath . DIRECTORY_SEPARATOR . <span class=\"hljs-string\">'fonts'</span> . DIRECTORY_SEPARATOR; <span class=\"hljs-comment\">// /assets/fonts/</span>\n        $font_filename  = <span class=\"hljs-string\">'glyphicons-halflings-regular'</span>;\n        $copy_needed    = <span class=\"hljs-keyword\">false</span>;\n        <span class=\"hljs-keyword\">foreach</span> ( [ <span class=\"hljs-string\">'eot'</span>, <span class=\"hljs-string\">'svg'</span>, <span class=\"hljs-string\">'ttf'</span>, <span class=\"hljs-string\">'woff'</span> ] <span class=\"hljs-keyword\">as</span> $f_ext )\n            <span class=\"hljs-keyword\">if</span> ( !file_exists( $font_filename . <span class=\"hljs-string\">'.'</span> . $f_ext ) )\n            {\n                $fp          = $am-&gt;publish( $font_path . $font_filename . <span class=\"hljs-string\">'.'</span> . $f_ext );\n                $copy_needed = <span class=\"hljs-keyword\">true</span>;\n            }\n        <span class=\"hljs-keyword\">if</span> ( $copy_needed )\n        {\n            $font_path_src = Yii::getPathOfAlias( <span class=\"hljs-string\">'webroot'</span> ) . dirname( $fp ); <span class=\"hljs-comment\">// /var/www/mysite/assets/b732073/</span>\n            CFileHelper::copyDirectory( $font_path_src, $font_path_dest, [ <span class=\"hljs-string\">'level'</span> =&gt; <span class=\"hljs-number\">0</span> ] );\n        }\n    }\n\n    <span class=\"hljs-comment\">/**\n     * Publish Twitter Bootstrap assets.\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">regTwitterBootstrap</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-comment\">// publish CSSs</span>\n        F::regCssFile( <span class=\"hljs-string\">'bootstrap.min'</span> ); <span class=\"hljs-comment\">// protected/assets/css/boostrap.min.css</span>\n        F::regCssFile( <span class=\"hljs-string\">'bootstrap-theme.min'</span> ); <span class=\"hljs-comment\">// protected/assets/css/boostrap-theme.min.css</span>\n        F::regCssFile( <span class=\"hljs-string\">'styles'</span> ); <span class=\"hljs-comment\">// protected/assets/css/styles.css</span>\n\n        <span class=\"hljs-comment\">// include jQuery</span>\n        Yii::app()-&gt;clientScript-&gt;registerCoreScript( <span class=\"hljs-string\">'jquery'</span> );\n\n        <span class=\"hljs-comment\">// publish JSs</span>\n        F::regScriptFile( <span class=\"hljs-string\">'bootstrap.min'</span> ); <span class=\"hljs-comment\">// protected/assets/js/bootstrap.min.js</span>\n        F::publishTwbsFonts(); <span class=\"hljs-comment\">// publish fonts</span>\n    }\n}</span>\n</code></pre>\n<p>Usage example in view:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\nF::regTwitterBootstrap();\nF::regScriptFile( <span class=\"hljs-string\">'scripts'</span> ); <span class=\"hljs-comment\">// include custom JS from protected/assets/js/scripts.js</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/9757010","description":"Convert title to slug","files":["https://gist.githubusercontent.com/umidjons/9757010/raw/368e9675ef979a8e154dd4407ec838e7eeb97bfb/convert-title-to-slug-php-js.md"],"content":"# Content:\n- [PHP: Convert title to slug](#php-convert-title-to-slug)\n- [JS: Convert title to slug](#js-convert-title-to-slug)\n- [Bind converting to slug to input changes](#bind-converting-to-slug-to-input-changes)\n\n# PHP: Convert title to slug\n```php\n<?php\nfunction slug( $text )\n\t{\n\t\t$trans = [\n\t\t\t'а' => 'a', 'б' => 'b', 'в' => 'v', 'г' => 'g', 'д' => 'd', 'е' => 'e', 'ё' => 'jo', 'ж' => 'zh', 'з' => 'z', 'и' => 'i', 'й' => 'jj',\n\t\t\t'к' => 'k', 'л' => 'l', 'м' => 'm', 'н' => 'n', 'о' => 'o', 'п' => 'p', 'р' => 'r', 'с' => 's', 'т' => 't', 'у' => 'u', 'ф' => 'f',\n\t\t\t'х' => 'kh', 'ц' => 'c', 'ч' => 'ch', 'ш' => 'sh', 'щ' => 'shh', 'ъ' => '', 'ы' => 'y', 'ь' => '', 'э' => 'eh', 'ю' => 'ju', 'я' => 'ja',\n\t\t];\n\t\t$text  = mb_strtolower( $text, 'UTF-8' ); // lowercase cyrillic letters too\n\t\t$text  = strtr( $text, $trans ); // transliterate cyrillic letters\n\t\t$text  = preg_replace( '/[^A-Za-z0-9 _.]/', '', $text );\n\t\t$text  = preg_replace( '/[ _.]+/', '-', trim( $text ) );\n\t\t$text  = trim( $text, '-' );\n\t\treturn $text;\n\t}\n```\n# JS: Convert title to slug\nPHP `strtr` function alternative in JavaScript.\nWe add this function as part of `jQuery`.\n\n```js\njQuery.strtr=function(str, from, to)\n{\n\tvar fr='', i=0, j=0, lenStr=0, lenFrom=0, tmpStrictForIn=false, fromTypeStr='', toTypeStr='', istr='';\n\tvar tmpFrom=[];\n\tvar tmpTo=[];\n\tvar ret='';\n\tvar match=false;\n\n\t// Received replace_pairs?\n\t// Convert to normal from->to chars\n\tif(typeof from==='object')\n\t{\n\t\tfor(fr in from)\n\t\t\tif(from.hasOwnProperty(fr))\n\t\t\t{\n\t\t\t\ttmpFrom.push(fr);\n\t\t\t\ttmpTo.push(from[fr]);\n\t\t\t}\n\n\t\tfrom=tmpFrom;\n\t\tto=tmpTo;\n\t}\n\n\t// Walk through subject and replace chars when needed\n\tlenStr=str.length;\n\tlenFrom=from.length;\n\tfromTypeStr=typeof from==='string';\n\ttoTypeStr=typeof to==='string';\n\n\tfor(i=0; i<lenStr; i++)\n\t{\n\t\tmatch=false;\n\t\tif(fromTypeStr)\n\t\t{\n\t\t\tistr=str.charAt(i);\n\t\t\tfor(j=0; j<lenFrom; j++)\n\t\t\t\tif(istr==from.charAt(j))\n\t\t\t\t{\n\t\t\t\t\tmatch=true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t}\n\t\telse\n\t\t\tfor(j=0; j<lenFrom; j++)\n\t\t\t\tif(str.substr(i, from[j].length)==from[j])\n\t\t\t\t{\n\t\t\t\t\tmatch=true;\n\t\t\t\t\t// Fast forward\n\t\t\t\t\ti=(i+from[j].length)-1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\tif(match) ret+=toTypeStr ? to.charAt(j) : to[j];\n\t\telse ret+=str.charAt(i);\n\t}\n\n\treturn ret;\n}\n```\n\nActual function to convert text into slug.\nAgain we impelement it as `jQuery`'s method.\n\n```js\njQuery.toSlug=function(text)\n{\n\tvar trans={\n\t\t'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ё': 'jo', 'ж': 'zh', 'з': 'z', 'и': 'i', 'й': 'jj',\n\t\t'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n', 'о': 'o', 'п': 'p', 'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f',\n\t\t'х': 'kh', 'ц': 'c', 'ч': 'ch', 'ш': 'sh', 'щ': 'shh', 'ъ': '', 'ы': 'y', 'ь': '', 'э': 'eh', 'ю': 'ju', 'я': 'ja'\n\t};\n\treturn jQuery.strtr(text.toLowerCase(), trans) // transliterate cyrillic letters\n\t\t.replace(/[^A-Za-z0-9 _.]/g, '') // leave only known characters \n\t\t.replace(/[ _\\.]+/g, '-') // convert 'space', '_', '.' into '-'\n\t\t.replace(/^-|-$/gm, ''); // remove '-' from start and end of the text\n}\n```\n\nUsage example:\n\n```js\n$.toSlug(\"Hello world ... фыва ФЫВА привет_done   123.345  Транслитерация русского алфавита----латиницей >>> ...   \\n\")\n```\n\nOutput:\n\n```\nhello-world-fyva-fyva-privet-done-123-345-transliteracija-russkogo-alfavitalatinicejj\n```\n\n#### Bind converting to slug to input changes\n\n```js\njQuery(document).ready(function($)\n{\n\t// on change convert input value to slug\n\t$('[data-slugger=1][data-target]').on('change', function()\n\t{\n\t\t$($(this).data('target')).val($.toSlug($(this).val()));\n\t});\n});\n```\n\nIn view we should put inputs with `data-slugger=1` and `data-target='#Model_attr'` attributes\n\n```php\n\t<?php $form = $this->beginWidget( 'CActiveForm', [\n\t\t'id'                   => 'news-form',\n\t\t'enableAjaxValidation' => false,\n\t\t'htmlOptions'          => [\n\t\t\t'class' => 'form-horizontal',\n\t\t\t'role'  => 'form',\n\t\t],\n\t] ); ?>\n\n\t<?= $form->errorSummary( $model, null, null, [ 'class' => 'alert alert-danger' ] ); ?>\n\n\t<div class=\"form-group\">\n\t\t<div class=\"col-sm-12\">\n\t\t\t<?= $form->label( $model, 'title' ); ?>\n\t\t\t<?= $form->textField( $model, 'title', [ 'class' => 'form-control', 'data-slugger' => '1', 'data-target' => '#' . CHtml::activeId( $model, 'slug' ), ] ); ?>\n\t\t\t<?= $form->error( $model, 'title', [ 'class' => 'text-danger' ] ); ?>\n\t\t</div>\n\t</div>\n\n\t<div class=\"form-group\">\n\t\t<div class=\"col-sm-12\">\n\t\t\t<?= $form->label( $model, 'slug' ); ?>\n\t\t\t<?= $form->textField( $model, 'slug', [ 'class' => 'form-control', ] ); ?>\n\t\t\t<?= $form->error( $model, 'slug', [ 'class' => 'text-danger' ] ); ?>\n\t\t</div>\n\t</div>\n\n\t<?php $this->endWidget(); ?>\n```\n","html":"<h1 id=\"content-\">Content:</h1>\n<ul>\n<li><a href=\"#php-convert-title-to-slug\">PHP: Convert title to slug</a></li>\n<li><a href=\"#js-convert-title-to-slug\">JS: Convert title to slug</a></li>\n<li><a href=\"#bind-converting-to-slug-to-input-changes\">Bind converting to slug to input changes</a></li>\n</ul>\n<h1 id=\"php-convert-title-to-slug\">PHP: Convert title to slug</h1>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">slug</span><span class=\"hljs-params\">( $text )</span>\n    </span>{\n        $trans = [\n            <span class=\"hljs-string\">'а'</span> =&gt; <span class=\"hljs-string\">'a'</span>, <span class=\"hljs-string\">'б'</span> =&gt; <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-string\">'в'</span> =&gt; <span class=\"hljs-string\">'v'</span>, <span class=\"hljs-string\">'г'</span> =&gt; <span class=\"hljs-string\">'g'</span>, <span class=\"hljs-string\">'д'</span> =&gt; <span class=\"hljs-string\">'d'</span>, <span class=\"hljs-string\">'е'</span> =&gt; <span class=\"hljs-string\">'e'</span>, <span class=\"hljs-string\">'ё'</span> =&gt; <span class=\"hljs-string\">'jo'</span>, <span class=\"hljs-string\">'ж'</span> =&gt; <span class=\"hljs-string\">'zh'</span>, <span class=\"hljs-string\">'з'</span> =&gt; <span class=\"hljs-string\">'z'</span>, <span class=\"hljs-string\">'и'</span> =&gt; <span class=\"hljs-string\">'i'</span>, <span class=\"hljs-string\">'й'</span> =&gt; <span class=\"hljs-string\">'jj'</span>,\n            <span class=\"hljs-string\">'к'</span> =&gt; <span class=\"hljs-string\">'k'</span>, <span class=\"hljs-string\">'л'</span> =&gt; <span class=\"hljs-string\">'l'</span>, <span class=\"hljs-string\">'м'</span> =&gt; <span class=\"hljs-string\">'m'</span>, <span class=\"hljs-string\">'н'</span> =&gt; <span class=\"hljs-string\">'n'</span>, <span class=\"hljs-string\">'о'</span> =&gt; <span class=\"hljs-string\">'o'</span>, <span class=\"hljs-string\">'п'</span> =&gt; <span class=\"hljs-string\">'p'</span>, <span class=\"hljs-string\">'р'</span> =&gt; <span class=\"hljs-string\">'r'</span>, <span class=\"hljs-string\">'с'</span> =&gt; <span class=\"hljs-string\">'s'</span>, <span class=\"hljs-string\">'т'</span> =&gt; <span class=\"hljs-string\">'t'</span>, <span class=\"hljs-string\">'у'</span> =&gt; <span class=\"hljs-string\">'u'</span>, <span class=\"hljs-string\">'ф'</span> =&gt; <span class=\"hljs-string\">'f'</span>,\n            <span class=\"hljs-string\">'х'</span> =&gt; <span class=\"hljs-string\">'kh'</span>, <span class=\"hljs-string\">'ц'</span> =&gt; <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'ч'</span> =&gt; <span class=\"hljs-string\">'ch'</span>, <span class=\"hljs-string\">'ш'</span> =&gt; <span class=\"hljs-string\">'sh'</span>, <span class=\"hljs-string\">'щ'</span> =&gt; <span class=\"hljs-string\">'shh'</span>, <span class=\"hljs-string\">'ъ'</span> =&gt; <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">'ы'</span> =&gt; <span class=\"hljs-string\">'y'</span>, <span class=\"hljs-string\">'ь'</span> =&gt; <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">'э'</span> =&gt; <span class=\"hljs-string\">'eh'</span>, <span class=\"hljs-string\">'ю'</span> =&gt; <span class=\"hljs-string\">'ju'</span>, <span class=\"hljs-string\">'я'</span> =&gt; <span class=\"hljs-string\">'ja'</span>,\n        ];\n        $text  = mb_strtolower( $text, <span class=\"hljs-string\">'UTF-8'</span> ); <span class=\"hljs-comment\">// lowercase cyrillic letters too</span>\n        $text  = strtr( $text, $trans ); <span class=\"hljs-comment\">// transliterate cyrillic letters</span>\n        $text  = preg_replace( <span class=\"hljs-string\">'/[^A-Za-z0-9 _.]/'</span>, <span class=\"hljs-string\">''</span>, $text );\n        $text  = preg_replace( <span class=\"hljs-string\">'/[ _.]+/'</span>, <span class=\"hljs-string\">'-'</span>, trim( $text ) );\n        $text  = trim( $text, <span class=\"hljs-string\">'-'</span> );\n        <span class=\"hljs-keyword\">return</span> $text;\n    }</span>\n</code></pre>\n<h1 id=\"js-convert-title-to-slug\">JS: Convert title to slug</h1>\n<p>PHP <code>strtr</code> function alternative in JavaScript.\nWe add this function as part of <code>jQuery</code>.</p>\n<pre><code class=\"lang-js\">jQuery.strtr=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">str, from, to</span>)\n</span>{\n    <span class=\"hljs-keyword\">var</span> fr=<span class=\"hljs-string\">''</span>, i=<span class=\"hljs-number\">0</span>, j=<span class=\"hljs-number\">0</span>, lenStr=<span class=\"hljs-number\">0</span>, lenFrom=<span class=\"hljs-number\">0</span>, tmpStrictForIn=<span class=\"hljs-literal\">false</span>, fromTypeStr=<span class=\"hljs-string\">''</span>, toTypeStr=<span class=\"hljs-string\">''</span>, istr=<span class=\"hljs-string\">''</span>;\n    <span class=\"hljs-keyword\">var</span> tmpFrom=[];\n    <span class=\"hljs-keyword\">var</span> tmpTo=[];\n    <span class=\"hljs-keyword\">var</span> ret=<span class=\"hljs-string\">''</span>;\n    <span class=\"hljs-keyword\">var</span> match=<span class=\"hljs-literal\">false</span>;\n\n    <span class=\"hljs-comment\">// Received replace_pairs?</span>\n    <span class=\"hljs-comment\">// Convert to normal from-&gt;to chars</span>\n    <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">typeof</span> <span class=\"hljs-keyword\">from</span>===<span class=\"hljs-string\">'object'</span>)\n    {\n        <span class=\"hljs-keyword\">for</span>(fr <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">from</span>)\n            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">from</span>.hasOwnProperty(fr))\n            {\n                tmpFrom.push(fr);\n                tmpTo.push(<span class=\"hljs-keyword\">from</span>[fr]);\n            }\n\n        <span class=\"hljs-keyword\">from</span>=tmpFrom;\n        to=tmpTo;\n    }\n\n    <span class=\"hljs-comment\">// Walk through subject and replace chars when needed</span>\n    lenStr=str.length;\n    lenFrom=<span class=\"hljs-keyword\">from</span>.length;\n    fromTypeStr=<span class=\"hljs-keyword\">typeof</span> <span class=\"hljs-keyword\">from</span>===<span class=\"hljs-string\">'string'</span>;\n    toTypeStr=<span class=\"hljs-keyword\">typeof</span> to===<span class=\"hljs-string\">'string'</span>;\n\n    <span class=\"hljs-keyword\">for</span>(i=<span class=\"hljs-number\">0</span>; i&lt;lenStr; i++)\n    {\n        match=<span class=\"hljs-literal\">false</span>;\n        <span class=\"hljs-keyword\">if</span>(fromTypeStr)\n        {\n            istr=str.charAt(i);\n            <span class=\"hljs-keyword\">for</span>(j=<span class=\"hljs-number\">0</span>; j&lt;lenFrom; j++)\n                <span class=\"hljs-keyword\">if</span>(istr==<span class=\"hljs-keyword\">from</span>.charAt(j))\n                {\n                    match=<span class=\"hljs-literal\">true</span>;\n                    <span class=\"hljs-keyword\">break</span>;\n                }\n        }\n        <span class=\"hljs-keyword\">else</span>\n            <span class=\"hljs-keyword\">for</span>(j=<span class=\"hljs-number\">0</span>; j&lt;lenFrom; j++)\n                <span class=\"hljs-keyword\">if</span>(str.substr(i, <span class=\"hljs-keyword\">from</span>[j].length)==<span class=\"hljs-keyword\">from</span>[j])\n                {\n                    match=<span class=\"hljs-literal\">true</span>;\n                    <span class=\"hljs-comment\">// Fast forward</span>\n                    i=(i+<span class=\"hljs-keyword\">from</span>[j].length)<span class=\"hljs-number\">-1</span>;\n                    <span class=\"hljs-keyword\">break</span>;\n                }\n        <span class=\"hljs-keyword\">if</span>(match) ret+=toTypeStr ? to.charAt(j) : to[j];\n        <span class=\"hljs-keyword\">else</span> ret+=str.charAt(i);\n    }\n\n    <span class=\"hljs-keyword\">return</span> ret;\n}\n</code></pre>\n<p>Actual function to convert text into slug.\nAgain we impelement it as <code>jQuery</code>&#39;s method.</p>\n<pre><code class=\"lang-js\">jQuery.toSlug=<span class=\"hljs-keyword\">function</span>(text)\n{\n    var trans={\n        <span class=\"hljs-string\">'а'</span>: <span class=\"hljs-string\">'a'</span>, <span class=\"hljs-string\">'б'</span>: <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-string\">'в'</span>: <span class=\"hljs-string\">'v'</span>, <span class=\"hljs-string\">'г'</span>: <span class=\"hljs-string\">'g'</span>, <span class=\"hljs-string\">'д'</span>: <span class=\"hljs-string\">'d'</span>, <span class=\"hljs-string\">'е'</span>: <span class=\"hljs-string\">'e'</span>, <span class=\"hljs-string\">'ё'</span>: <span class=\"hljs-string\">'jo'</span>, <span class=\"hljs-string\">'ж'</span>: <span class=\"hljs-string\">'zh'</span>, <span class=\"hljs-string\">'з'</span>: <span class=\"hljs-string\">'z'</span>, <span class=\"hljs-string\">'и'</span>: <span class=\"hljs-string\">'i'</span>, <span class=\"hljs-string\">'й'</span>: <span class=\"hljs-string\">'jj'</span>,\n        <span class=\"hljs-string\">'к'</span>: <span class=\"hljs-string\">'k'</span>, <span class=\"hljs-string\">'л'</span>: <span class=\"hljs-string\">'l'</span>, <span class=\"hljs-string\">'м'</span>: <span class=\"hljs-string\">'m'</span>, <span class=\"hljs-string\">'н'</span>: <span class=\"hljs-string\">'n'</span>, <span class=\"hljs-string\">'о'</span>: <span class=\"hljs-string\">'o'</span>, <span class=\"hljs-string\">'п'</span>: <span class=\"hljs-string\">'p'</span>, <span class=\"hljs-string\">'р'</span>: <span class=\"hljs-string\">'r'</span>, <span class=\"hljs-string\">'с'</span>: <span class=\"hljs-string\">'s'</span>, <span class=\"hljs-string\">'т'</span>: <span class=\"hljs-string\">'t'</span>, <span class=\"hljs-string\">'у'</span>: <span class=\"hljs-string\">'u'</span>, <span class=\"hljs-string\">'ф'</span>: <span class=\"hljs-string\">'f'</span>,\n        <span class=\"hljs-string\">'х'</span>: <span class=\"hljs-string\">'kh'</span>, <span class=\"hljs-string\">'ц'</span>: <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'ч'</span>: <span class=\"hljs-string\">'ch'</span>, <span class=\"hljs-string\">'ш'</span>: <span class=\"hljs-string\">'sh'</span>, <span class=\"hljs-string\">'щ'</span>: <span class=\"hljs-string\">'shh'</span>, <span class=\"hljs-string\">'ъ'</span>: <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">'ы'</span>: <span class=\"hljs-string\">'y'</span>, <span class=\"hljs-string\">'ь'</span>: <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">'э'</span>: <span class=\"hljs-string\">'eh'</span>, <span class=\"hljs-string\">'ю'</span>: <span class=\"hljs-string\">'ju'</span>, <span class=\"hljs-string\">'я'</span>: <span class=\"hljs-string\">'ja'</span>\n    };\n    return jQuery.strtr(text.toLowerCase(), trans) <span class=\"hljs-regexp\">//</span> transliterate cyrillic letters\n        .replace(<span class=\"hljs-regexp\">/[^A-Za-z0-9 _.]/g</span>, <span class=\"hljs-string\">''</span>) <span class=\"hljs-regexp\">//</span> leave only known characters \n        .replace(<span class=\"hljs-regexp\">/[ _\\.]+/g</span>, <span class=\"hljs-string\">'-'</span>) <span class=\"hljs-regexp\">//</span> convert <span class=\"hljs-string\">'space'</span>, <span class=\"hljs-string\">'_'</span>, <span class=\"hljs-string\">'.'</span> into <span class=\"hljs-string\">'-'</span>\n        .replace(<span class=\"hljs-regexp\">/^-|-$/gm</span>, <span class=\"hljs-string\">''</span>); <span class=\"hljs-regexp\">//</span> remove <span class=\"hljs-string\">'-'</span> from start and end of the text\n}\n</code></pre>\n<p>Usage example:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-variable\">$.</span>toSlug(<span class=\"hljs-string\">\"Hello world ... фыва ФЫВА привет_done   123.345  Транслитерация русского алфавита----латиницей &gt;&gt;&gt; ...   \\n\"</span>)\n</code></pre>\n<p>Output:</p>\n<pre><code>hello-world-fyva-fyva-privet-done<span class=\"hljs-number\">-123</span><span class=\"hljs-number\">-345</span>-transliteracija-russkogo-alfavitalatinicejj\n</code></pre><h4 id=\"bind-converting-to-slug-to-input-changes\">Bind converting to slug to input changes</h4>\n<pre><code class=\"lang-js\">jQuery(<span class=\"hljs-built_in\">document</span>).ready(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">$</span>)\n</span>{\n    <span class=\"hljs-comment\">// on change convert input value to slug</span>\n    $(<span class=\"hljs-string\">'[data-slugger=1][data-target]'</span>).on(<span class=\"hljs-string\">'change'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)\n    </span>{\n        $($(<span class=\"hljs-keyword\">this</span>).data(<span class=\"hljs-string\">'target'</span>)).val($.toSlug($(<span class=\"hljs-keyword\">this</span>).val()));\n    });\n});\n</code></pre>\n<p>In view we should put inputs with <code>data-slugger=1</code> and <code>data-target=&#39;#Model_attr&#39;</code> attributes</p>\n<pre><code class=\"lang-php\">    <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> $form = <span class=\"hljs-keyword\">$this</span>-&gt;beginWidget( <span class=\"hljs-string\">'CActiveForm'</span>, [\n        <span class=\"hljs-string\">'id'</span>                   =&gt; <span class=\"hljs-string\">'news-form'</span>,\n        <span class=\"hljs-string\">'enableAjaxValidation'</span> =&gt; <span class=\"hljs-keyword\">false</span>,\n        <span class=\"hljs-string\">'htmlOptions'</span>          =&gt; [\n            <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'form-horizontal'</span>,\n            <span class=\"hljs-string\">'role'</span>  =&gt; <span class=\"hljs-string\">'form'</span>,\n        ],\n    ] ); <span class=\"hljs-meta\">?&gt;</span></span>\n\n    <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;errorSummary( $model, <span class=\"hljs-keyword\">null</span>, <span class=\"hljs-keyword\">null</span>, [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'alert alert-danger'</span> ] ); <span class=\"hljs-meta\">?&gt;</span></span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-group\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-12\"</span>&gt;</span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;label( $model, <span class=\"hljs-string\">'title'</span> ); <span class=\"hljs-meta\">?&gt;</span></span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;textField( $model, <span class=\"hljs-string\">'title'</span>, [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'form-control'</span>, <span class=\"hljs-string\">'data-slugger'</span> =&gt; <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'data-target'</span> =&gt; <span class=\"hljs-string\">'#'</span> . CHtml::activeId( $model, <span class=\"hljs-string\">'slug'</span> ), ] ); <span class=\"hljs-meta\">?&gt;</span></span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;error( $model, <span class=\"hljs-string\">'title'</span>, [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'text-danger'</span> ] ); <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-group\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-12\"</span>&gt;</span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;label( $model, <span class=\"hljs-string\">'slug'</span> ); <span class=\"hljs-meta\">?&gt;</span></span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;textField( $model, <span class=\"hljs-string\">'slug'</span>, [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'form-control'</span>, ] ); <span class=\"hljs-meta\">?&gt;</span></span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;error( $model, <span class=\"hljs-string\">'slug'</span>, [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'text-danger'</span> ] ); <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">$this</span>-&gt;endWidget(); <span class=\"hljs-meta\">?&gt;</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/9755999","description":"Yii: Helper class for notification messages","files":["https://gist.githubusercontent.com/umidjons/9755999/raw/ea5b41edf731012174ab6572d475a456331b661e/yii-notification-message.md"],"content":"# Helper class for notification messages\n\n```php\n<?php\nclass Msg\n{\n\t/**\n\t * Add info message into queue.\n\t * @param string $message info message\n\t */\n\tpublic static function info( $message )\n\t{\n\t\tself::message( $message, 'info' );\n\t}\n\n\t/**\n\t * Add success message into queue.\n\t * @param string $message success message\n\t */\n\tpublic static function success( $message )\n\t{\n\t\tself::message( $message, 'success' );\n\t}\n\n\t/**\n\t * Add warning message into queue.\n\t * @param string $message warning message\n\t */\n\tpublic static function warning( $message )\n\t{\n\t\tself::message( $message, 'warning' );\n\t}\n\n\t/**\n\t * Add error message(s) into queue.\n\t * @param string|array $message error message(s). Can be simple string or $model->getErrors() array.\n\t */\n\tpublic static function error( $message )\n\t{\n\t\tif ( is_array( $message ) ) // array\n\t\t\tforeach ( $message as $msg ) // foreach element check...\n\t\t\t\tif ( is_array( $msg ) ) // if array, then [attribute=>[err1, err2, ...], ...]\n\t\t\t\t\tself::error( $msg ); // recurse for element\n\t\t\t\telse\n\t\t\t\t\tself::message( $msg, 'danger' ); // simple string\n\t\telse\n\t\t\tself::message( $message, 'danger' ); // simple string\n\t}\n\n\t/**\n\t * Add message into queue with specified type.<br>\n\t * NOTE: Internal use only.\n\t * @param string $message typed message text\n\t * @param string $type    type of the message. Available values: info, success, warning, error.\n\t */\n\tprivate static function message( $message, $type )\n\t{\n\t\t$_SESSION[ 'flash_messages' ][ ] = [ $message, $type ];\n\t}\n\n\t/**\n\t * Get array of messages. Format: [ [message, type], [message, type], ... ]\n\t * @return mixed array of messages.\n\t */\n\tpublic static function getMessages()\n\t{\n\t\treturn $_SESSION[ 'flash_messages' ];\n\t}\n\n\t/**\n\t * Shows floating notifications. Also removes already shown messages from queue.\n\t * To dismiss notification, just click to it.\n\t */\n\tpublic static function show()\n\t{\n\t\t// register JS\n\t\t$js_flash_messages = \"\n\t\t\tnextAnim($('.alert-fixed:not(:visible)'));\n\t\t\tfunction nextAnim(elems){\n\t\t\t\telems.eq(0).slideDown(function(){\n\t\t\t\t\tnextAnim(elems.slice(1));\n\t\t\t\t});\n\t\t\t}\n\t\t\t$('.alert-fixed').on('click', function(__event){\n\t\t\t\t$(this).slideUp();\n\t\t\t});\n\t\t\";\n\n\t\tYii::app()->clientScript->registerScript( 'flash_messages', $js_flash_messages, CClientScript::POS_READY );\n\n\t\t// register CSS\n\t\t$css_flash_messages = \"\n\t\t\t.alert-container {\n\t\t\t  position: fixed;\n\t\t\t  width: 300px;\n\t\t\t  top: 5px;\n\t\t\t  right: 5px;\n\t\t\t  z-index: 100;\n\t\t\t}\n\t\t\t.alert-container .alert-fixed {\n\t\t\t  margin: 3px;\n\t\t\t  float: right;\n\t\t\t  display: none;\n\t\t\t}\n\t\t\";\n\n\t\tYii::app()->clientScript->registerCss( 'flash_messages', $css_flash_messages );\n\n\t\t// show messages\n\t\tif ( isset( $_SESSION[ 'flash_messages' ] ) )\n\t\t{\n\t\t\t?>\n\t\t\t<div class=\"alert-container\">\n\t\t\t\t<?php\n\t\t\t\twhile ( $_SESSION[ 'flash_messages' ] )\n\t\t\t\t{\n\t\t\t\t\tlist( $txt, $type ) = array_shift( $_SESSION[ 'flash_messages' ] );\n\t\t\t\t\t?><span class=\"alert alert-fixed alert-<?= $type; ?>\"><?= CHtml::encode( $txt ); ?></span><?php\n\t\t\t\t}\n\t\t\t\t?>\n\t\t\t</div>\n\t\t<?php\n\t\t}\n\t}\n}\n```\n\nUsing in layouts\n\n```php\n<body>\n\n<?php\nMsg::info( 'Information text is here' );\nMsg::success( 'Success text is here' );\nMsg::warning( 'Warning text is here' );\nMsg::error( 'Error text is here' );\n?>\n\n<?php Msg::show(); ?>\n\n<div class=\"container\">\n<!-- ... -->\n</div>\n```\n\nUsing in controller\n\n```php\n<?php\nif ( $model->save() )\n{\n\tMsg::success( Yii::t( 'zr', 'Content has been duplicated.' ) );\n\t$this->redirect( [ 'update', 'id' => $model->id ] );\n}\nelse\n\tMsg::error( $model->getErrors() ); // batch assign errors\n```","html":"<h1 id=\"helper-class-for-notification-messages\">Helper class for notification messages</h1>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Msg</span>\n</span>{\n    <span class=\"hljs-comment\">/**\n     * Add info message into queue.\n     * <span class=\"hljs-doctag\">@param</span> string $message info message\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">info</span><span class=\"hljs-params\">( $message )</span>\n    </span>{\n        <span class=\"hljs-keyword\">self</span>::message( $message, <span class=\"hljs-string\">'info'</span> );\n    }\n\n    <span class=\"hljs-comment\">/**\n     * Add success message into queue.\n     * <span class=\"hljs-doctag\">@param</span> string $message success message\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">success</span><span class=\"hljs-params\">( $message )</span>\n    </span>{\n        <span class=\"hljs-keyword\">self</span>::message( $message, <span class=\"hljs-string\">'success'</span> );\n    }\n\n    <span class=\"hljs-comment\">/**\n     * Add warning message into queue.\n     * <span class=\"hljs-doctag\">@param</span> string $message warning message\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">warning</span><span class=\"hljs-params\">( $message )</span>\n    </span>{\n        <span class=\"hljs-keyword\">self</span>::message( $message, <span class=\"hljs-string\">'warning'</span> );\n    }\n\n    <span class=\"hljs-comment\">/**\n     * Add error message(s) into queue.\n     * <span class=\"hljs-doctag\">@param</span> string|array $message error message(s). Can be simple string or $model-&gt;getErrors() array.\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">error</span><span class=\"hljs-params\">( $message )</span>\n    </span>{\n        <span class=\"hljs-keyword\">if</span> ( is_array( $message ) ) <span class=\"hljs-comment\">// array</span>\n            <span class=\"hljs-keyword\">foreach</span> ( $message <span class=\"hljs-keyword\">as</span> $msg ) <span class=\"hljs-comment\">// foreach element check...</span>\n                <span class=\"hljs-keyword\">if</span> ( is_array( $msg ) ) <span class=\"hljs-comment\">// if array, then [attribute=&gt;[err1, err2, ...], ...]</span>\n                    <span class=\"hljs-keyword\">self</span>::error( $msg ); <span class=\"hljs-comment\">// recurse for element</span>\n                <span class=\"hljs-keyword\">else</span>\n                    <span class=\"hljs-keyword\">self</span>::message( $msg, <span class=\"hljs-string\">'danger'</span> ); <span class=\"hljs-comment\">// simple string</span>\n        <span class=\"hljs-keyword\">else</span>\n            <span class=\"hljs-keyword\">self</span>::message( $message, <span class=\"hljs-string\">'danger'</span> ); <span class=\"hljs-comment\">// simple string</span>\n    }\n\n    <span class=\"hljs-comment\">/**\n     * Add message into queue with specified type.&lt;br&gt;\n     * <span class=\"hljs-doctag\">NOTE:</span> Internal use only.\n     * <span class=\"hljs-doctag\">@param</span> string $message typed message text\n     * <span class=\"hljs-doctag\">@param</span> string $type    type of the message. Available values: info, success, warning, error.\n     */</span>\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">message</span><span class=\"hljs-params\">( $message, $type )</span>\n    </span>{\n        $_SESSION[ <span class=\"hljs-string\">'flash_messages'</span> ][ ] = [ $message, $type ];\n    }\n\n    <span class=\"hljs-comment\">/**\n     * Get array of messages. Format: [ [message, type], [message, type], ... ]\n     * <span class=\"hljs-doctag\">@return</span> mixed array of messages.\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getMessages</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> $_SESSION[ <span class=\"hljs-string\">'flash_messages'</span> ];\n    }\n\n    <span class=\"hljs-comment\">/**\n     * Shows floating notifications. Also removes already shown messages from queue.\n     * To dismiss notification, just click to it.\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">show</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-comment\">// register JS</span>\n        $js_flash_messages = <span class=\"hljs-string\">\"\n            nextAnim($('.alert-fixed:not(:visible)'));\n            function nextAnim(elems){\n                elems.eq(0).slideDown(function(){\n                    nextAnim(elems.slice(1));\n                });\n            }\n            $('.alert-fixed').on('click', function(__event){\n                $(this).slideUp();\n            });\n        \"</span>;\n\n        Yii::app()-&gt;clientScript-&gt;registerScript( <span class=\"hljs-string\">'flash_messages'</span>, $js_flash_messages, CClientScript::POS_READY );\n\n        <span class=\"hljs-comment\">// register CSS</span>\n        $css_flash_messages = <span class=\"hljs-string\">\"\n            .alert-container {\n              position: fixed;\n              width: 300px;\n              top: 5px;\n              right: 5px;\n              z-index: 100;\n            }\n            .alert-container .alert-fixed {\n              margin: 3px;\n              float: right;\n              display: none;\n            }\n        \"</span>;\n\n        Yii::app()-&gt;clientScript-&gt;registerCss( <span class=\"hljs-string\">'flash_messages'</span>, $css_flash_messages );\n\n        <span class=\"hljs-comment\">// show messages</span>\n        <span class=\"hljs-keyword\">if</span> ( <span class=\"hljs-keyword\">isset</span>( $_SESSION[ <span class=\"hljs-string\">'flash_messages'</span> ] ) )\n        {\n            <span class=\"hljs-meta\">?&gt;</span></span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"alert-container\"</span>&gt;</span>\n                <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n                <span class=\"hljs-keyword\">while</span> ( $_SESSION[ <span class=\"hljs-string\">'flash_messages'</span> ] )\n                {\n                    <span class=\"hljs-keyword\">list</span>( $txt, $type ) = array_shift( $_SESSION[ <span class=\"hljs-string\">'flash_messages'</span> ] );\n                    <span class=\"hljs-meta\">?&gt;</span></span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"alert alert-fixed alert-&lt;?= $type; ?&gt;\"</span>&gt;</span><span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= CHtml::encode( $txt ); <span class=\"hljs-meta\">?&gt;</span></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n                }\n                <span class=\"hljs-meta\">?&gt;</span></span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n        }\n    }\n}</span>\n</code></pre>\n<p>Using in layouts</p>\n<pre><code class=\"lang-php\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n\n<span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\nMsg::info( <span class=\"hljs-string\">'Information text is here'</span> );\nMsg::success( <span class=\"hljs-string\">'Success text is here'</span> );\nMsg::warning( <span class=\"hljs-string\">'Warning text is here'</span> );\nMsg::error( <span class=\"hljs-string\">'Error text is here'</span> );\n<span class=\"hljs-meta\">?&gt;</span></span>\n\n<span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> Msg::show(); <span class=\"hljs-meta\">?&gt;</span></span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"container\"</span>&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- ... --&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n<p>Using in controller</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">if</span> ( $model-&gt;save() )\n{\n    Msg::success( Yii::t( <span class=\"hljs-string\">'zr'</span>, <span class=\"hljs-string\">'Content has been duplicated.'</span> ) );\n    <span class=\"hljs-keyword\">$this</span>-&gt;redirect( [ <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'id'</span> =&gt; $model-&gt;id ] );\n}\n<span class=\"hljs-keyword\">else</span>\n    Msg::error( $model-&gt;getErrors() ); <span class=\"hljs-comment\">// batch assign errors</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/9755797","description":"jQuery: animate elements one after another","files":["https://gist.githubusercontent.com/umidjons/9755797/raw/efd657f2fec26301a34c1ac8142f63700798ebc0/animate-elements-one-after-another.md"],"content":"# Animate elements one by one\nWe have these `div`s with `.a` class.\n```html\n<div class=\"a b\">d</div>    \n<div class=\"a c\">d</div>    \n<div class=\"a d\">d</div>    \n<div class=\"a e\">d</div>    \n<div class=\"a f\">d</div>    \n<div class=\"a g\">d</div>    \n<div class=\"a h\">d</div>    \n<div class=\"a i\">d</div>    \n<div class=\"a j\">d</div>    \n<div class=\"a k\">d</div>    \n<div class=\"a l\">d</div>    \n<div class=\"a m\">d</div>    \n```\nWe want animate them one after another.\n```js\n// start animation\nnextAnim($('.a'));\n\nfunction nextAnim(elems)\n{\n\t// if we have element, animate it\n\telems.eq(0).animate({'left': 50}, function()\n\t{\n\t\tnextAnim(elems.slice(1));  // slice off the first element\n\t});\n}\n```\n","html":"<h1 id=\"animate-elements-one-by-one\">Animate elements one by one</h1>\n<p>We have these <code>div</code>s with <code>.a</code> class.</p>\n<pre><code class=\"lang-html\">&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"a b\"</span>&gt;d&lt;/<span class=\"hljs-keyword\">div</span>&gt;    \n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"a c\"</span>&gt;d&lt;/<span class=\"hljs-keyword\">div</span>&gt;    \n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"a d\"</span>&gt;d&lt;/<span class=\"hljs-keyword\">div</span>&gt;    \n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"a e\"</span>&gt;d&lt;/<span class=\"hljs-keyword\">div</span>&gt;    \n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"a f\"</span>&gt;d&lt;/<span class=\"hljs-keyword\">div</span>&gt;    \n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"a g\"</span>&gt;d&lt;/<span class=\"hljs-keyword\">div</span>&gt;    \n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"a h\"</span>&gt;d&lt;/<span class=\"hljs-keyword\">div</span>&gt;    \n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"a i\"</span>&gt;d&lt;/<span class=\"hljs-keyword\">div</span>&gt;    \n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"a j\"</span>&gt;d&lt;/<span class=\"hljs-keyword\">div</span>&gt;    \n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"a k\"</span>&gt;d&lt;/<span class=\"hljs-keyword\">div</span>&gt;    \n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"a l\"</span>&gt;d&lt;/<span class=\"hljs-keyword\">div</span>&gt;    \n&lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"a m\"</span>&gt;d&lt;/<span class=\"hljs-keyword\">div</span>&gt;\n</code></pre>\n<p>We want animate them one after another.</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-comment\">// start animation</span>\nnextAnim($(<span class=\"hljs-string\">'.a'</span>));\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">nextAnim</span>(<span class=\"hljs-params\">elems</span>)\n</span>{\n    <span class=\"hljs-comment\">// if we have element, animate it</span>\n    elems.eq(<span class=\"hljs-number\">0</span>).animate({<span class=\"hljs-string\">'left'</span>: <span class=\"hljs-number\">50</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)\n    </span>{\n        nextAnim(elems.slice(<span class=\"hljs-number\">1</span>));  <span class=\"hljs-comment\">// slice off the first element</span>\n    });\n}\n</code></pre>\n"},{"html_url":"https://gist.github.com/9614157","description":"JavaScript: sort object properties by value (numeric or string)","files":["https://gist.githubusercontent.com/umidjons/9614157/raw/e399dd1fad97a60f51bc3c3a485ed800d74bfb41/sort-object-properties-by-value.md"],"content":"### Sort object properties by value (values are text)\nI have following object:\n```js\nvar cities={10:'Tashkent', 14:'Karakalpakiya', 16:'Andijan'};\n```\nI want sort it by city names, so after sort it should be:\n```js\nvar cities={16:'Andijan', 14:'Karakalpakiya', 10:'Tashkent'};\n```\nBut I can't sort object properties, instead can convert object into array, then sort items.\n```js\nfunction sortProperties(obj)\n{\n  // convert object into array\n\tvar sortable=[];\n\tfor(var key in obj)\n\t\tif(obj.hasOwnProperty(key))\n\t\t\tsortable.push([key, obj[key]]); // each item is an array in format [key, value]\n\t\n\t// sort items by value\n\tsortable.sort(function(a, b)\n\t{\n\t\tvar x=a[1].toLowerCase(),\n\t\t\ty=b[1].toLowerCase();\n\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t});\n\treturn sortable; // array in format [ [ key1, val1 ], [ key2, val2 ], ... ]\n}\n```\n\nExample:\n```js\nvar sortedCities=sortProperties(cities);\nconsole.log(sortedCities); // [[16, 'Andijan'], [14, 'Karakalpakiya'], [10, 'Tashkent']]\n```\n### Sort object properties by value (values are numbers)\nI have following object:\n```js\nvar cities={Tashkent:447, Karakalpakiya:900, Andijan:120};\n```\nI want sort it by city rating, so after sort it should be:\n```js\nvar cities={Andijan:120, Tashkent:447, Karakalpakiya:900};\n```\nBut again I can't sort object properties, instead can convert object into array, then sort items.\n```js\nfunction sortProperties(obj)\n{\n  // convert object into array\n\tvar sortable=[];\n\tfor(var key in obj)\n\t\tif(obj.hasOwnProperty(key))\n\t\t\tsortable.push([key, obj[key]]); // each item is an array in format [key, value]\n\t\n\t// sort items by value\n\tsortable.sort(function(a, b)\n\t{\n\t  return a[1]-b[1]; // compare numbers\n\t});\n\treturn sortable; // array in format [ [ key1, val1 ], [ key2, val2 ], ... ]\n}\n```\nExample:\n```js\nvar sortedCities=sortProperties(cities);\nconsole.log(sortedCities); // [[Andijan, 120], [Tashkent, 447], [Karakalpakiya, 900]]\n```\n###Improved version with additional parameter to set sort type (numeric or text)\n```js\n/**\n * Sort object properties (only own properties will be sorted).\n * @param {object} obj object to sort properties\n * @param {bool} isNumericSort true - sort object properties as numeric value, false - sort as string value.\n * @returns {Array} array of items in [[key,value],[key,value],...] format.\n */\nfunction sortProperties(obj, isNumericSort)\n{\n\tisNumericSort=isNumericSort || false; // by default text sort\n\tvar sortable=[];\n\tfor(var key in obj)\n\t\tif(obj.hasOwnProperty(key))\n\t\t\tsortable.push([key, obj[key]]);\n\tif(isNumericSort)\n\t\tsortable.sort(function(a, b)\n\t\t{\n\t\t\treturn a[1]-b[1];\n\t\t});\n\telse\n\t\tsortable.sort(function(a, b)\n\t\t{\n\t\t\tvar x=a[1].toLowerCase(),\n\t\t\t\ty=b[1].toLowerCase();\n\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t});\n\treturn sortable; // array in format [ [ key1, val1 ], [ key2, val2 ], ... ]\n}\n```","html":"<h3 id=\"sort-object-properties-by-value-values-are-text-\">Sort object properties by value (values are text)</h3>\n<p>I have following object:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-attribute\">var cities</span>={10:<span class=\"hljs-string\">'Tashkent'</span>, 14:<span class=\"hljs-string\">'Karakalpakiya'</span>, 16:<span class=\"hljs-string\">'Andijan'</span>};\n</code></pre>\n<p>I want sort it by city names, so after sort it should be:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-attribute\">var cities</span>={16:<span class=\"hljs-string\">'Andijan'</span>, 14:<span class=\"hljs-string\">'Karakalpakiya'</span>, 10:<span class=\"hljs-string\">'Tashkent'</span>};\n</code></pre>\n<p>But I can&#39;t sort object properties, instead can convert object into array, then sort items.</p>\n<pre><code class=\"lang-js\">function sortProperties(obj)\n{\n  // convert object into<span class=\"hljs-built_in\"> array\n</span>    var sortable=[];\n    for(var key in obj)\n        if(obj.hasOwnProperty(key))\n            sortable.push([key, obj[key]]); // each item is an<span class=\"hljs-built_in\"> array </span>in format [key, value]\n\n    // sort items by value\n    sortable.sort(function(a, b)\n    {\n        var x=a[1].toLowerCase(),\n            y=b[1].toLowerCase();\n       <span class=\"hljs-built_in\"> return </span>x&lt;y ? -1<span class=\"hljs-keyword\"> :</span> x&gt;y ? 1<span class=\"hljs-keyword\"> :</span> 0;\n    });\n   <span class=\"hljs-built_in\"> return </span>sortable; //<span class=\"hljs-built_in\"> array </span>in format [ [ key1, val1 ], [ key2, val2 ], ... ]\n}\n</code></pre>\n<p>Example:</p>\n<pre><code class=\"lang-js\">var sortedCities=sortProperties(cities);\nconsole.log(sortedCities); // [[<span class=\"hljs-number\">16</span>, <span class=\"hljs-string\">'Andijan'</span>], [<span class=\"hljs-number\">14</span>, <span class=\"hljs-string\">'Karakalpakiya'</span>], [<span class=\"hljs-number\">10</span>, <span class=\"hljs-string\">'Tashkent'</span>]]\n</code></pre>\n<h3 id=\"sort-object-properties-by-value-values-are-numbers-\">Sort object properties by value (values are numbers)</h3>\n<p>I have following object:</p>\n<pre><code class=\"lang-js\">var cities={<span class=\"hljs-string\">Tashkent:</span><span class=\"hljs-number\">447</span>, <span class=\"hljs-string\">Karakalpakiya:</span><span class=\"hljs-number\">900</span>, <span class=\"hljs-string\">Andijan:</span><span class=\"hljs-number\">120</span>};\n</code></pre>\n<p>I want sort it by city rating, so after sort it should be:</p>\n<pre><code class=\"lang-js\">var cities={<span class=\"hljs-string\">Andijan:</span><span class=\"hljs-number\">120</span>, <span class=\"hljs-string\">Tashkent:</span><span class=\"hljs-number\">447</span>, <span class=\"hljs-string\">Karakalpakiya:</span><span class=\"hljs-number\">900</span>};\n</code></pre>\n<p>But again I can&#39;t sort object properties, instead can convert object into array, then sort items.</p>\n<pre><code class=\"lang-js\">function sortProperties(obj)\n{\n  // convert object into<span class=\"hljs-built_in\"> array\n</span>    var sortable=[];\n    for(var key in obj)\n        if(obj.hasOwnProperty(key))\n            sortable.push([key, obj[key]]); // each item is an<span class=\"hljs-built_in\"> array </span>in format [key, value]\n\n    // sort items by value\n    sortable.sort(function(a, b)\n    {\n     <span class=\"hljs-built_in\"> return </span>a[1]-b[1]; // compare numbers\n    });\n   <span class=\"hljs-built_in\"> return </span>sortable; //<span class=\"hljs-built_in\"> array </span>in format [ [ key1, val1 ], [ key2, val2 ], ... ]\n}\n</code></pre>\n<p>Example:</p>\n<pre><code class=\"lang-js\">var sortedCities=sortProperties(cities);\nconsole.log(sortedCities); // <span class=\"hljs-string\">[[Andijan, 120], [Tashkent, 447], [Karakalpakiya, 900]]</span>\n</code></pre>\n<p>###Improved version with additional parameter to set sort type (numeric or text)</p>\n<pre><code class=\"lang-js\">/**\n * <span class=\"hljs-type\">Sort</span> <span class=\"hljs-keyword\">object</span> properties (only own properties will be sorted).\n * @param {<span class=\"hljs-keyword\">object</span>} obj <span class=\"hljs-keyword\">object</span> to sort properties\n * @param {<span class=\"hljs-built_in\">bool</span>} isNumericSort <span class=\"hljs-literal\">true</span> - sort <span class=\"hljs-keyword\">object</span> properties <span class=\"hljs-keyword\">as</span> numeric value, <span class=\"hljs-literal\">false</span> - sort <span class=\"hljs-keyword\">as</span> <span class=\"hljs-built_in\">string</span> value.\n * @returns {<span class=\"hljs-type\">Array</span>} <span class=\"hljs-built_in\">array</span> <span class=\"hljs-keyword\">of</span> items <span class=\"hljs-keyword\">in</span> [[key,value],[key,value],...] format.\n */\nfunction sortProperties(obj, isNumericSort)\n{\n    isNumericSort=isNumericSort || <span class=\"hljs-literal\">false</span>; // by default text sort\n    <span class=\"hljs-keyword\">var</span> sortable=[];\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">var</span> key <span class=\"hljs-keyword\">in</span> obj)\n        <span class=\"hljs-keyword\">if</span>(obj.hasOwnProperty(key))\n            sortable.push([key, obj[key]]);\n    <span class=\"hljs-keyword\">if</span>(isNumericSort)\n        sortable.sort(function(a, b)\n        {\n            <span class=\"hljs-keyword\">return</span> a[<span class=\"hljs-number\">1</span>]-b[<span class=\"hljs-number\">1</span>];\n        });\n    <span class=\"hljs-keyword\">else</span>\n        sortable.sort(function(a, b)\n        {\n            <span class=\"hljs-keyword\">var</span> x=a[<span class=\"hljs-number\">1</span>].toLowerCase(),\n                y=b[<span class=\"hljs-number\">1</span>].toLowerCase();\n            <span class=\"hljs-keyword\">return</span> x&lt;y ? -<span class=\"hljs-number\">1</span> : x&gt;y ? <span class=\"hljs-number\">1</span> : <span class=\"hljs-number\">0</span>;\n        });\n    <span class=\"hljs-keyword\">return</span> sortable; // <span class=\"hljs-built_in\">array</span> <span class=\"hljs-keyword\">in</span> format [ [ key1, val1 ], [ key2, val2 ], ... ]\n}\n</code></pre>\n"},{"html_url":"https://gist.github.com/9597815","description":"Yii: Custom extension/widget with custom action","files":["https://gist.githubusercontent.com/umidjons/9597815/raw/dff29683862ee14dc70f5fc02c1eb8c87948fef5/extension-widget-with-custom-action.md"],"content":"#Custom extension/widget with custom action\nCreate `myext` folder in `extensions` folder. Create `myext/EMyExt.php` and `myext/EMyExtAction.php` files. Create `myext.php` view and `myext.js` files in `myext/views/` folder.\n###`EMyExt.php` class implementation\n```php\n<?php\nclass EMyExt extends CWidget\n{\n  public $param1 = false;\n  public $param2 = false;\n  \n\tpublic function init()\n\t{\n\t  // initialization code...\n\t}\n\n\tpublic function run()\n\t{\n\t\t$this->render( 'myext.php' ); // render widgets view\n\t}\n}\n```\n###`myext.php` view\n```php\n<?php\n/* @var $this EMyExt */\n?>\n\n<!-- View implementation is here... -->\n\n<?php\n// publish resources\n$assetsDir = __DIR__ . DIRECTORY_SEPARATOR;\nYii::app()->clientScript->registerScriptFile( Yii::app()->assetManager->publish( $assetsDir . DIRECTORY_SEPARATOR . 'myext.js' ) );\n?>\n<script type=\"text/javascript\">\n\tjQuery(document).ready(function($)\n\t{\n\t\tvar myext=new MyExtJS({\n\t\t\tajaxUrl    : \"<?= $this->route; ?>\",\n\t\t\tmyInputId  : \"#<?= $this->myInputId; ?>\",\n\t\t});\n\t\tmyext._fill(myext.myInput);\n\t});\n</script>\n```\n###`EMyExtAction.php` implementation\n```php\n<?php\nclass EMyExtAction extends CAction\n{\n\tpublic $some_property;\n\t\n\tpublic function run()\n\t{\n\t\t// action login is here...\n\t\t// response to AJAX request in JSON format\n\t\tif ( Yii::app()->request->isAjaxRequest )\n\t\t{\n\t\t\techo CJSON::encode( [ 'mykey' => $this->some_property ] );\n\t\t\tYii::app()->end( 200, true );\n\t\t}\n\t}\n}\n```\n###`myext.js` implementation\n```js\nvar MyExtJS=function(options)\n{\n\tvar self=this;\n\tthis.myInput=$(this.options.myInputId);\n\tthis.myInput.on('change', function(__event)\n\t{\n\t\t__event.preventDefault();\n\t\t// some login is here...\n\t});\n}\n\nMyExtJS.prototype._fill=function(input)\n{\n\tvar self=this;\n\t$.ajax(this.options.ajaxUrl, {\n\t\ttype    : 'POST',\n\t\tdataType: 'json',\n\t\tdata    : {param1 : 123, param2 : 234},\n\t\tsuccess : function(resp)\n\t\t{\n\t\t\tif($.isPlainObject(resp))\n\t\t\t\t$.each(resp, function(value, title)\n\t\t\t\t{\n\t\t\t\t\t// some login with response\n\t\t\t\t});\n\t\t}\n\t});\n\treturn this;\n}\n```\n###Bind action into controller\n```php\nclass SiteController extends Controller\n{\n\tpublic function filters()\n\t{\n\t\treturn [ 'accessControl', ];\n\t}\n\t\n\tpublic function accessRules()\n\t{\n\t\treturn [\n\t\t\t[\n\t\t\t\t'allow',\n\t\t\t\t'actions' => [ 'myext' ],\n\t\t\t\t'users'   => [ '@' ],\n\t\t\t],\n\t\t\t[\n\t\t\t\t'deny',\n\t\t\t\t'users' => [ '*' ]\n\t\t\t],\n\t\t];\n\t}\n\n\tpublic function actions()\n\t{\n\t\treturn [\n\t\t\t'myext'   => [\n\t\t\t\t'class' => 'ext.myext.EMyExtAction',\n\t\t\t]\n\t\t];\n\t}\n}\n```","html":"<p>#Custom extension/widget with custom action\nCreate <code>myext</code> folder in <code>extensions</code> folder. Create <code>myext/EMyExt.php</code> and <code>myext/EMyExtAction.php</code> files. Create <code>myext.php</code> view and <code>myext.js</code> files in <code>myext/views/</code> folder.</p>\n<p>###<code>EMyExt.php</code> class implementation</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">EMyExt</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CWidget</span>\n</span>{\n  <span class=\"hljs-keyword\">public</span> $param1 = <span class=\"hljs-keyword\">false</span>;\n  <span class=\"hljs-keyword\">public</span> $param2 = <span class=\"hljs-keyword\">false</span>;\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">init</span><span class=\"hljs-params\">()</span>\n    </span>{\n      <span class=\"hljs-comment\">// initialization code...</span>\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">run</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">$this</span>-&gt;render( <span class=\"hljs-string\">'myext.php'</span> ); <span class=\"hljs-comment\">// render widgets view</span>\n    }\n}</span>\n</code></pre>\n<p>###<code>myext.php</code> view</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-comment\">/* <span class=\"hljs-doctag\">@var</span> $this EMyExt */</span>\n<span class=\"hljs-meta\">?&gt;</span></span>\n\n<span class=\"hljs-comment\">&lt;!-- View implementation is here... --&gt;</span>\n\n<span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-comment\">// publish resources</span>\n$assetsDir = <span class=\"hljs-keyword\">__DIR__</span> . DIRECTORY_SEPARATOR;\nYii::app()-&gt;clientScript-&gt;registerScriptFile( Yii::app()-&gt;assetManager-&gt;publish( $assetsDir . DIRECTORY_SEPARATOR . <span class=\"hljs-string\">'myext.js'</span> ) );\n<span class=\"hljs-meta\">?&gt;</span></span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text/javascript\"</span>&gt;</span><span class=\"handlebars\"><span class=\"xml\">\n    jQuery(document).ready(function($)\n    {\n        var myext=new MyExtJS({\n            ajaxUrl    : \"<span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= <span class=\"hljs-keyword\">$this</span>-&gt;route; <span class=\"hljs-meta\">?&gt;</span></span>\",\n            myInputId  : \"#<span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= <span class=\"hljs-keyword\">$this</span>-&gt;myInputId; <span class=\"hljs-meta\">?&gt;</span></span>\",\n        });\n        myext._fill(myext.myInput);\n    });\n</span></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n<p>###<code>EMyExtAction.php</code> implementation</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">EMyExtAction</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CAction</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> $some_property;\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">run</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-comment\">// action login is here...</span>\n        <span class=\"hljs-comment\">// response to AJAX request in JSON format</span>\n        <span class=\"hljs-keyword\">if</span> ( Yii::app()-&gt;request-&gt;isAjaxRequest )\n        {\n            <span class=\"hljs-keyword\">echo</span> CJSON::encode( [ <span class=\"hljs-string\">'mykey'</span> =&gt; <span class=\"hljs-keyword\">$this</span>-&gt;some_property ] );\n            Yii::app()-&gt;end( <span class=\"hljs-number\">200</span>, <span class=\"hljs-keyword\">true</span> );\n        }\n    }\n}</span>\n</code></pre>\n<p>###<code>myext.js</code> implementation</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-keyword\">var</span> MyExtJS=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">options</span>)\n</span>{\n    <span class=\"hljs-keyword\">var</span> self=<span class=\"hljs-keyword\">this</span>;\n    <span class=\"hljs-keyword\">this</span>.myInput=$(<span class=\"hljs-keyword\">this</span>.options.myInputId);\n    <span class=\"hljs-keyword\">this</span>.myInput.on(<span class=\"hljs-string\">'change'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">__event</span>)\n    </span>{\n        __event.preventDefault();\n        <span class=\"hljs-comment\">// some login is here...</span>\n    });\n}\n\nMyExtJS.prototype._fill=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">input</span>)\n</span>{\n    <span class=\"hljs-keyword\">var</span> self=<span class=\"hljs-keyword\">this</span>;\n    $.ajax(<span class=\"hljs-keyword\">this</span>.options.ajaxUrl, {\n        <span class=\"hljs-attr\">type</span>    : <span class=\"hljs-string\">'POST'</span>,\n        <span class=\"hljs-attr\">dataType</span>: <span class=\"hljs-string\">'json'</span>,\n        <span class=\"hljs-attr\">data</span>    : {<span class=\"hljs-attr\">param1</span> : <span class=\"hljs-number\">123</span>, <span class=\"hljs-attr\">param2</span> : <span class=\"hljs-number\">234</span>},\n        <span class=\"hljs-attr\">success</span> : <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">resp</span>)\n        </span>{\n            <span class=\"hljs-keyword\">if</span>($.isPlainObject(resp))\n                $.each(resp, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">value, title</span>)\n                </span>{\n                    <span class=\"hljs-comment\">// some login with response</span>\n                });\n        }\n    });\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>;\n}\n</code></pre>\n<p>###Bind action into controller</p>\n<pre><code class=\"lang-php\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SiteController</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Controller</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">filters</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> [ <span class=\"hljs-string\">'accessControl'</span>, ];\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">accessRules</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> [\n            [\n                <span class=\"hljs-string\">'allow'</span>,\n                <span class=\"hljs-string\">'actions'</span> =&gt; [ <span class=\"hljs-string\">'myext'</span> ],\n                <span class=\"hljs-string\">'users'</span>   =&gt; [ <span class=\"hljs-string\">'@'</span> ],\n            ],\n            [\n                <span class=\"hljs-string\">'deny'</span>,\n                <span class=\"hljs-string\">'users'</span> =&gt; [ <span class=\"hljs-string\">'*'</span> ]\n            ],\n        ];\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">actions</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> [\n            <span class=\"hljs-string\">'myext'</span>   =&gt; [\n                <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'ext.myext.EMyExtAction'</span>,\n            ]\n        ];\n    }\n}\n</code></pre>\n"},{"html_url":"https://gist.github.com/9597513","description":"Yii: Using CMaskedTextField","files":["https://gist.githubusercontent.com/umidjons/9597513/raw/993576111ceb4ddf3afe50d0c5e00fe75bd40c1c/cmasked-text-field.md"],"content":"#Using CMaskedTextField\n###Simple usage\nInput field for Taxpayer Identification Number\n```php\n<div class=\"form-group\">\n\t<div class=\"col-sm-4\">\n\t\t<?= $form->label( $model, 'tin' ); ?>\n\t\t<?php\n\t\t$this->widget( 'CMaskedTextField', [\n\t\t\t'model'       => $model,\n\t\t\t'attribute'   => 'tin', // numbers with 9 length\n\t\t\t'mask'        => '999999999',\n\t\t\t'htmlOptions' => [ 'class' => 'form-control' ]\n\t\t] ); ?>\n\t</div>\n</div>\n```\n###Custom characters map\nFor passport series and numbers in `SS NNNNNNN` format\n```php\n<div class=\"form-group\">\n\t<div class=\"col-sm-4\">\n\t\t<?= $form->label( $model, 'passport' ); ?>\n\t\t<?php\n\t\t$this->widget( 'CMaskedTextField', [\n\t\t\t'model'       => $model,\n\t\t\t'attribute'   => 'passport',\n\t\t\t'mask'        => 'AA nnnnnnn',\n\t\t\t'charMap'     => [ 'A' => '[A-Z]', 'n' => '[0-9]', ],\n\t\t\t'htmlOptions' => [ 'class' => 'form-control' ]\n\t\t] ); ?>\n\t</div>\n</div>\n```\nFor cell phone number with predefined prefix (country code)\n```php\n<div class=\"col-sm-4\">\n\t<?= $form->label( $model, 'cell_phone' ); ?>\n\t<?php\n\t$this->widget( 'CMaskedTextField', [\n\t\t'model'       => $model,\n\t\t'attribute'   => 'cell_phone',\n\t\t'mask'        => '+998 nn nnn-nn-nn',\n\t\t'charMap'     => [ 'n' => '[0-9]', ],\n\t\t'htmlOptions' => [ 'class' => 'form-control' ],\n\t] );\n\t?>\n</div>\n```\n\n###Modify data before save\nIt is safe to remove helper characters, because they are applied/restored in view when data is read from the model attribute. In model we can remove unnecessary characters from the attribute before saving it.\n```php\n<?php\nprotected function beforeSave()\n{\n\tif ( $this->scenario == 'profile' )\n\t\t$this->cell_phone = str_replace( [ ' ', '-' ], '', $this->cell_phone ); // remove whitespaces and dash\n\treturn parent::beforeSave();\n}\n```\n","html":"<p>#Using CMaskedTextField</p>\n<p>###Simple usage\nInput field for Taxpayer Identification Number</p>\n<pre><code class=\"lang-php\">&lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"form-group\"</span>&gt;\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-4\"</span>&gt;</span>\n        <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;label( $model, <span class=\"hljs-string\">'tin'</span> ); <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n        <span class=\"hljs-keyword\">$this</span>-&gt;widget( <span class=\"hljs-string\">'CMaskedTextField'</span>, [\n            <span class=\"hljs-string\">'model'</span>       =&gt; $model,\n            <span class=\"hljs-string\">'attribute'</span>   =&gt; <span class=\"hljs-string\">'tin'</span>, <span class=\"hljs-comment\">// numbers with 9 length</span>\n            <span class=\"hljs-string\">'mask'</span>        =&gt; <span class=\"hljs-string\">'999999999'</span>,\n            <span class=\"hljs-string\">'htmlOptions'</span> =&gt; [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'form-control'</span> ]\n        ] ); <span class=\"hljs-meta\">?&gt;</span></span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n&lt;<span class=\"hljs-regexp\">/div&gt;</span>\n</code></pre>\n<p>###Custom characters map\nFor passport series and numbers in <code>SS NNNNNNN</code> format</p>\n<pre><code class=\"lang-php\">&lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"form-group\"</span>&gt;\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-4\"</span>&gt;</span>\n        <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;label( $model, <span class=\"hljs-string\">'passport'</span> ); <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n        <span class=\"hljs-keyword\">$this</span>-&gt;widget( <span class=\"hljs-string\">'CMaskedTextField'</span>, [\n            <span class=\"hljs-string\">'model'</span>       =&gt; $model,\n            <span class=\"hljs-string\">'attribute'</span>   =&gt; <span class=\"hljs-string\">'passport'</span>,\n            <span class=\"hljs-string\">'mask'</span>        =&gt; <span class=\"hljs-string\">'AA nnnnnnn'</span>,\n            <span class=\"hljs-string\">'charMap'</span>     =&gt; [ <span class=\"hljs-string\">'A'</span> =&gt; <span class=\"hljs-string\">'[A-Z]'</span>, <span class=\"hljs-string\">'n'</span> =&gt; <span class=\"hljs-string\">'[0-9]'</span>, ],\n            <span class=\"hljs-string\">'htmlOptions'</span> =&gt; [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'form-control'</span> ]\n        ] ); <span class=\"hljs-meta\">?&gt;</span></span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n&lt;<span class=\"hljs-regexp\">/div&gt;</span>\n</code></pre>\n<p>For cell phone number with predefined prefix (country code)</p>\n<pre><code class=\"lang-php\">&lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"col-sm-4\"</span>&gt;\n    <span class=\"xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;label( $model, <span class=\"hljs-string\">'cell_phone'</span> ); <span class=\"hljs-meta\">?&gt;</span></span>\n    <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n    <span class=\"hljs-keyword\">$this</span>-&gt;widget( <span class=\"hljs-string\">'CMaskedTextField'</span>, [\n        <span class=\"hljs-string\">'model'</span>       =&gt; $model,\n        <span class=\"hljs-string\">'attribute'</span>   =&gt; <span class=\"hljs-string\">'cell_phone'</span>,\n        <span class=\"hljs-string\">'mask'</span>        =&gt; <span class=\"hljs-string\">'+998 nn nnn-nn-nn'</span>,\n        <span class=\"hljs-string\">'charMap'</span>     =&gt; [ <span class=\"hljs-string\">'n'</span> =&gt; <span class=\"hljs-string\">'[0-9]'</span>, ],\n        <span class=\"hljs-string\">'htmlOptions'</span> =&gt; [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'form-control'</span> ],\n    ] );\n    <span class=\"hljs-meta\">?&gt;</span></span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n</code></pre>\n<p>###Modify data before save\nIt is safe to remove helper characters, because they are applied/restored in view when data is read from the model attribute. In model we can remove unnecessary characters from the attribute before saving it.</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">protected</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">beforeSave</span><span class=\"hljs-params\">()</span>\n</span>{\n    <span class=\"hljs-keyword\">if</span> ( <span class=\"hljs-keyword\">$this</span>-&gt;scenario == <span class=\"hljs-string\">'profile'</span> )\n        <span class=\"hljs-keyword\">$this</span>-&gt;cell_phone = str_replace( [ <span class=\"hljs-string\">' '</span>, <span class=\"hljs-string\">'-'</span> ], <span class=\"hljs-string\">''</span>, <span class=\"hljs-keyword\">$this</span>-&gt;cell_phone ); <span class=\"hljs-comment\">// remove whitespaces and dash</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">parent</span>::beforeSave();\n}</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/9542049","description":"Yii: Determine which button was clicked","files":["https://gist.githubusercontent.com/umidjons/9542049/raw/70cab9680832127fc7160b2a31387e0ba914631f/which-button-clicked.md"],"content":"# Determine which button was clicked\nTo determine which button was clicked simple give buttons name.\nFor example:\n```php\n<div class=\"col-sm-9\">\n\t<?php\n\t$form = $this->beginWidget( 'CActiveForm', [\n\t\t'id'                   => 'user-profile',\n\t\t'enableAjaxValidation' => true,\n\t\t'htmlOptions'          => [\n\t\t\t'class' => 'form-horizontal',\n\t\t\t'role'  => 'form',\n\t\t],\n\t] );\n\t?>\n\n\t<?php if ( Yii::app()->user->hasFlash( 'success' ) ): ?>\n\t\t<div class=\"alert alert-success\">\n\t\t\t<?= Yii::app()->user->getFlash( 'success' ); ?>\n\t\t</div>\n\t<?php endif; ?>\n\n\t<?= $form->errorSummary( $model, null, null, [ 'class' => 'alert alert-danger' ] ); ?>\n\n\t<div class=\"form-group\">\n\t\t<div class=\"col-sm-6\">\n\t\t\t<?= $form->label( $model, 'email' ); ?>\n\t\t\t<?= $form->emailField( $model, 'email', [ 'class' => 'form-control' ] ); ?>\n\t\t</div>\n\t</div>\n\n\t<div class=\"form-group\">\n\t\t<div class=\"col-sm-6\">\n\t\t\t<?= $form->label( $model, 'address' ); ?>\n\t\t\t<?= $form->textField( $model, 'address', [ 'class' => 'form-control' ] ); ?>\n\t\t</div>\n\t</div>\n\n\t<div class=\"form-group\">\n\t\t<div class=\"col-sm-12 text-right\">\n\t\t\t<?= CHtml::submitButton( 'Save', [ 'class' => 'btn btn-primary', 'name'=>'btnProfile' ] ); ?>\n\t\t\t<?= CHtml::submitButton( 'Delete', [ 'class' => 'btn btn-primary', 'name'=>'btnDelete' ] ); ?>\n\t\t</div>\n\t</div>\n\t\n\t<?php $this->endWidget(); ?>\n\t\n</div>\n```\n\nThen in action just check that names:\n```php\n<?php\n\tpublic function actionProfile()\n\t{\n\t\t$user = User::model()->findByPk( Yii::app()->user->id );\n\t\t// if it is ajax validation request\n\t\tif ( isset( $_POST[ 'ajax' ] ) && $_POST[ 'ajax' ] === 'user-profile' )\n\t\t{\n\t\t\techo CActiveForm::validate( $user );\n\t\t\tYii::app()->end();\n\t\t}\n\n\t\tif ( isset( $_POST[ 'User' ] ) )\n\t\t{\n\t\t\t$user->attributes = $_POST[ 'User' ];\n\n\t\t\tif ( isset( $_POST[ 'btnProfile' ] ) ) // is btnProfile clicked?\n\t\t\t{\n\t\t\t\t$user->scenario = 'profile';\n\t\t\t\t$attr           = [ 'email', 'address' ];\n\t\t\t\tif ( $user->save( true, $attr ) )\n\t\t\t\t{\n\t\t\t\t\tYii::app()->user->setFlash( 'success', 'Profile updated!' );\n\t\t\t\t\t$this->refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t\telseif ( isset( $_POST[ 'btnDelete' ] ) ) // is btnDelete clicked\n\t\t\t{\n\t\t\t\t$user->delete();\n\t\t\t\tYii::app()->user->setFlash( 'success', 'User deleted!' );\n\t\t\t\t$this->redirect( Yii::app()->user->returnUrl );\n\t\t\t}\n\t\t}\n\n\t\t$this->render( 'profile', [ 'model' => $user, ] );\n\t}\n```","html":"<h1 id=\"determine-which-button-was-clicked\">Determine which button was clicked</h1>\n<p>To determine which button was clicked simple give buttons name.\nFor example:</p>\n<pre><code class=\"lang-php\">&lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"col-sm-9\"</span>&gt;\n    <span class=\"xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n    $form = <span class=\"hljs-keyword\">$this</span>-&gt;beginWidget( <span class=\"hljs-string\">'CActiveForm'</span>, [\n        <span class=\"hljs-string\">'id'</span>                   =&gt; <span class=\"hljs-string\">'user-profile'</span>,\n        <span class=\"hljs-string\">'enableAjaxValidation'</span> =&gt; <span class=\"hljs-keyword\">true</span>,\n        <span class=\"hljs-string\">'htmlOptions'</span>          =&gt; [\n            <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'form-horizontal'</span>,\n            <span class=\"hljs-string\">'role'</span>  =&gt; <span class=\"hljs-string\">'form'</span>,\n        ],\n    ] );\n    <span class=\"hljs-meta\">?&gt;</span></span>\n\n    <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">if</span> ( Yii::app()-&gt;user-&gt;hasFlash( <span class=\"hljs-string\">'success'</span> ) ): <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"alert alert-success\"</span>&gt;</span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= Yii::app()-&gt;user-&gt;getFlash( <span class=\"hljs-string\">'success'</span> ); <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">endif</span>; <span class=\"hljs-meta\">?&gt;</span></span>\n\n    <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;errorSummary( $model, <span class=\"hljs-keyword\">null</span>, <span class=\"hljs-keyword\">null</span>, [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'alert alert-danger'</span> ] ); <span class=\"hljs-meta\">?&gt;</span></span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-group\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-6\"</span>&gt;</span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;label( $model, <span class=\"hljs-string\">'email'</span> ); <span class=\"hljs-meta\">?&gt;</span></span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;emailField( $model, <span class=\"hljs-string\">'email'</span>, [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'form-control'</span> ] ); <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-group\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-6\"</span>&gt;</span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;label( $model, <span class=\"hljs-string\">'address'</span> ); <span class=\"hljs-meta\">?&gt;</span></span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;textField( $model, <span class=\"hljs-string\">'address'</span>, [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'form-control'</span> ] ); <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-group\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-12 text-right\"</span>&gt;</span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= CHtml::submitButton( <span class=\"hljs-string\">'Save'</span>, [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'btn btn-primary'</span>, <span class=\"hljs-string\">'name'</span>=&gt;<span class=\"hljs-string\">'btnProfile'</span> ] ); <span class=\"hljs-meta\">?&gt;</span></span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= CHtml::submitButton( <span class=\"hljs-string\">'Delete'</span>, [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'btn btn-primary'</span>, <span class=\"hljs-string\">'name'</span>=&gt;<span class=\"hljs-string\">'btnDelete'</span> ] ); <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">$this</span>-&gt;endWidget(); <span class=\"hljs-meta\">?&gt;</span></span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n</code></pre>\n<p>Then in action just check that names:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">actionProfile</span><span class=\"hljs-params\">()</span>\n    </span>{\n        $user = User::model()-&gt;findByPk( Yii::app()-&gt;user-&gt;id );\n        <span class=\"hljs-comment\">// if it is ajax validation request</span>\n        <span class=\"hljs-keyword\">if</span> ( <span class=\"hljs-keyword\">isset</span>( $_POST[ <span class=\"hljs-string\">'ajax'</span> ] ) &amp;&amp; $_POST[ <span class=\"hljs-string\">'ajax'</span> ] === <span class=\"hljs-string\">'user-profile'</span> )\n        {\n            <span class=\"hljs-keyword\">echo</span> CActiveForm::validate( $user );\n            Yii::app()-&gt;end();\n        }\n\n        <span class=\"hljs-keyword\">if</span> ( <span class=\"hljs-keyword\">isset</span>( $_POST[ <span class=\"hljs-string\">'User'</span> ] ) )\n        {\n            $user-&gt;attributes = $_POST[ <span class=\"hljs-string\">'User'</span> ];\n\n            <span class=\"hljs-keyword\">if</span> ( <span class=\"hljs-keyword\">isset</span>( $_POST[ <span class=\"hljs-string\">'btnProfile'</span> ] ) ) <span class=\"hljs-comment\">// is btnProfile clicked?</span>\n            {\n                $user-&gt;scenario = <span class=\"hljs-string\">'profile'</span>;\n                $attr           = [ <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'address'</span> ];\n                <span class=\"hljs-keyword\">if</span> ( $user-&gt;save( <span class=\"hljs-keyword\">true</span>, $attr ) )\n                {\n                    Yii::app()-&gt;user-&gt;setFlash( <span class=\"hljs-string\">'success'</span>, <span class=\"hljs-string\">'Profile updated!'</span> );\n                    <span class=\"hljs-keyword\">$this</span>-&gt;refresh();\n                }\n            }\n            <span class=\"hljs-keyword\">elseif</span> ( <span class=\"hljs-keyword\">isset</span>( $_POST[ <span class=\"hljs-string\">'btnDelete'</span> ] ) ) <span class=\"hljs-comment\">// is btnDelete clicked</span>\n            {\n                $user-&gt;delete();\n                Yii::app()-&gt;user-&gt;setFlash( <span class=\"hljs-string\">'success'</span>, <span class=\"hljs-string\">'User deleted!'</span> );\n                <span class=\"hljs-keyword\">$this</span>-&gt;redirect( Yii::app()-&gt;user-&gt;returnUrl );\n            }\n        }\n\n        <span class=\"hljs-keyword\">$this</span>-&gt;render( <span class=\"hljs-string\">'profile'</span>, [ <span class=\"hljs-string\">'model'</span> =&gt; $user, ] );\n    }</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/9525300","description":"Yii: Using ServerFileInput widget of ElFinder extension with Bootstrap to upload & choose image.","files":["https://gist.githubusercontent.com/umidjons/9525300/raw/cd813b4d4629faa0e839b96404f674e94363adf6/elfinder.serverfileinput.md"],"content":"## Using `ServerFileInput` widget of the `ElFinder` extension with `Bootstrap` to upload & select image\n\nDownload [ElFinder](http://www.yiiframework.com/extension/elfinder/) extension.\nExtract it into `ext.elfinder`.\n\n### Prepare `ServerFileInput` for `Twitter Bootstrap`\n\nAdd `twbsControls` public property into `ServerFileInput` class.\n```php\n<?php\nclass ServerFileInput extends CInputWidget\n{\n  // ...\n  public $twbsControls = false; // true - use twitter bootstrap controls\n  // ...\n}\n```\n\nChange `run` method as follow:\n```php\n<?php\nclass ServerFileInput extends CInputWidget\n{\n  // ...\n\tpublic function run()\n\t{\n\t\tlist( $name, $id ) = $this->resolveNameID();\n\t\tif ( isset( $this->htmlOptions[ 'id' ] ) )\n\t\t\t$id = $this->htmlOptions[ 'id' ];\n\t\telse\n\t\t\t$this->htmlOptions[ 'id' ] = $id;\n\t\tif ( isset( $this->htmlOptions[ 'name' ] ) )\n\t\t\t$name = $this->htmlOptions[ 'name' ];\n\t\telse\n\t\t\t$this->htmlOptions[ 'name' ] = $name;\n\n\t\t$contHtmlOptions         = $this->htmlOptions;\n\t\t$contHtmlOptions[ 'id' ] = $id . 'container';\n\n\t\techo CHtml::openTag( 'div', $contHtmlOptions );\n\n\t\tif ( !$this->twbsControls )\n\t\t{\n\t\t\t// input:\n\t\t\t$inputOptions = array( 'id' => $id, 'style' => 'float:left;' );\n\t\t\tif ( $this->hasModel() )\n\t\t\t\techo CHtml::activeTextField( $this->model, $this->attribute, $inputOptions );\n\t\t\telse\n\t\t\t\techo CHtml::textField( $name, $this->value, $inputOptions );\n\n\t\t\t// button:\n\t\t\techo CHtml::button( 'Browse', array( 'id' => $id . 'browse', 'class' => 'btn' ) );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$inputOptions = [ 'id' => $id, 'class' => 'form-control', 'readonly' => 'readonly' ];\n\t\t\techo CHtml::openTag( 'div', [ 'class' => 'input-group' ] );\n\t\t\tif ( $this->hasModel() )\n\t\t\t\techo CHtml::activeTextField( $this->model, $this->attribute, $inputOptions );\n\t\t\telse\n\t\t\t\techo CHtml::textField( $name, $this->value, $inputOptions );\n\t\t\techo CHtml::openTag( 'span', [ 'class' => 'input-group-btn' ] );\n\t\t\techo CHtml::button( 'Browse', [ 'id' => $id . 'browse', 'class' => 'btn btn-default', 'type' => 'button' ] );\n\t\t\techo CHtml::closeTag( 'span' );\n\t\t\techo CHtml::closeTag( 'div' );\n\t\t}\n\n\t\techo CHtml::closeTag( 'div' );\n\n\t\t$settings = array_merge( array(\n\t\t\t\t'places'          => \"\",\n\t\t\t\t'rememberLastDir' => false, ),\n\t\t\t$this->settings\n\t\t);\n\n\t\t$settings[ 'dialog' ]                = array(\n\t\t\t'zIndex' => 400001,\n\t\t\t'width'  => 900,\n\t\t\t'modal'  => true,\n\t\t\t'title'  => \"Files\",\n\t\t);\n\t\t$settings[ 'editorCallback' ]        = 'js:function(url) {\n        $(\\'#\\'+aFieldId).attr(\\'value\\',url);\n        }';\n\t\t$settings[ 'closeOnEditorCallback' ] = true;\n\t\t$connectorUrl                        = CJavaScript::encode( $this->settings[ 'url' ] );\n\t\t$settings                            = CJavaScript::encode( $settings );\n\t\t$script                              = <<<EOD\n        window.elfinderBrowse = function(field_id, connector) {\n            var aFieldId = field_id, aWin = this;\n            if($(\"#elFinderBrowser\").length == 0) {\n                $(\"body\").append($(\"<div/>\").attr(\"id\", \"elFinderBrowser\"));\n                var settings = $settings;\n                settings[\"url\"] = connector;\n                $(\"#elFinderBrowser\").elfinder(settings);\n            }\n            else {\n                $(\"#elFinderBrowser\").elfinder(\"open\", connector);\n            }\n        }\nEOD;\n\t\t$cs                                  = Yii::app()->getClientScript();\n\t\t$cs->registerScript( 'ServerFileInput#global', $script );\n\n\t\t$js = //'$(\"#'.$id.'\").focus(function(){window.elfinderBrowse(\"'.$name.'\")});'.\n\t\t\t'$(\"#' . $id . 'browse\").click(function(){window.elfinderBrowse(\"' . $id . '\", ' . $connectorUrl . ')});';\n\n\t\t$cs->registerScript( 'ServerFileInput#' . $id, $js );\n\t}\n  // ...\n}\n```\n\nAdd custom parameters into configuration:\n```php\n<?php\nreturn [\n\t'params'     => [\n\t\t// ...\n\t\t'adminEmail'        => 'admin@garovreestri.uz',\n\t\t'uploadsFolder'     => '/uploads/', // common uploads folder\n\t\t'userUploadsFolder' => '/uploads/users/', // private uploads folder for each user\n\t\t'defaultAvatar'     => 'default_avatar.png', // default avatar\n\t],\n];\n```\n\nAdd action into controller to handle uploads:\n```php\n<?php\nclass SiteController extends Controller\n{\n\n\tpublic function filters()\n\t{\n\t\treturn [ 'accessControl', ];\n\t}\n\n\tpublic function accessRules()\n\t{\n\t\treturn [\n\t\t\t// ...\n\t\t\t[\n\t\t\t\t'allow',\n\t\t\t\t'actions' => [ 'profile', 'elFinderConnector' ],\n\t\t\t\t'users'   => [ '@' ],\n\t\t\t],\n\t\t\t// ...\n\t\t\t[\n\t\t\t\t'deny',\n\t\t\t\t'users' => [ '*' ]\n\t\t\t],\n\t\t];\n\t}\n\n\tpublic function actionElFinderConnector()\n\t{\n\t\t// each user has own path named with ID, e.g.: /uploads/users/190/ for user with ID 190\n\t\t$userPath = Yii::app()->params[ 'userUploadsFolder' ] . Yii::app()->user->id . '/';\n\t\t$userRoot = Yii::getPathOfAlias( 'webroot' ) . $userPath; // full path to the user's folder\n\n\t\t// if directory doesn't exist, create them\n\t\tif ( !file_exists( $userRoot ) )\n\t\t\tmkdir( $userRoot, 0777, true );\n\n\t\t// initialize ElFinder\n\t\t$connector                            = new ElFinderConnectorAction( $this, $this->action->id );\n\t\t$connector->settings[ 'root' ]        = $userRoot;\n\t\t$connector->settings[ 'URL' ]         = Yii::app()->baseUrl . $userPath;\n\t\t$connector->settings[ 'rootAlias' ]   = 'Home';\n\t\t$connector->settings[ 'uploadAllow' ] = [ 'image/jpeg', 'image/gif', 'image/png' ]; // allowed mime-types\n\t\t$connector->settings[ 'uploadDeny' ]  = [ 'all' ]; // deny all other mime-types\n\t\t$connector->run();\n\t}\n\n\tpublic function actionProfile()\n\t{\n\t\t$this->layout   = '//layouts/wide';\n\t\t$user           = User::model()->findByPk( Yii::app()->user->id );\n\t\t$user->scenario = 'profile';\n\n\t\tif ( !$user->pic ) // $user->pic  - URL to avatar\n\t\t{\n\t\t\t$uplDir        = Yii::getPathOfAlias( 'webroot' ) . Yii::app()->params[ 'userUploadsFolder' ];\n\t\t\t$defAvatarPath = $uplDir . Yii::app()->params[ 'defaultAvatar' ];\n\t\t\t$userPath      = $uplDir . Yii::app()->user->id . '/' . Yii::app()->params[ 'defaultAvatar' ];\n\t\t\t\n\t\t\t// copy default avatar into user's private uploads folder\n\t\t\tif ( copy( $defAvatarPath, $userPath ) )\n\t\t\t\t$user->pic = Yii::app()->baseUrl . Yii::app()->params[ 'userUploadsFolder' ]\n\t\t\t\t\t. Yii::app()->user->id . '/' . Yii::app()->params[ 'defaultAvatar' ];\n\t\t}\n\n\t\t// if it is ajax validation request\n\t\tif ( isset( $_POST[ 'ajax' ] ) && $_POST[ 'ajax' ] === 'user-profile' )\n\t\t{\n\t\t\techo CActiveForm::validate( $user );\n\t\t\tYii::app()->end();\n\t\t}\n\n\t\tif ( isset( $_POST[ 'User' ] ) )\n\t\t{\n\t\t\t$user->attributes = $_POST[ 'User' ];\n\t\t\t$attr             = [ 'email', 'pic' ]; // attributes to save\n\t\t\tif ( $user->save( true, $attr ) )\n\t\t\t\tYii::app()->user->setFlash( 'success', 'Profile Updated!' );\n\t\t}\n\n\t\t$this->render( 'profile', [ 'model' => $user, ] );\n\t}\n\t// ...\n}\n```\n\nOur `profile.php` view looks like this:\n```php\n<?php\n/* @var $this SiteController */\n/* @var $model User */\n/* @var $form CActiveForm */\n\n$this->pageTitle = 'User Profile';\n?>\n<div class=\"col-sm-3\">\n\t<div class=\"col-sm-10 col-sm-offset-1\">\n\t\t<img src=\"<?= $model->pic; ?>\" alt=\"\" class=\"thumbnail\"/> \n\t</div>\n\t<div class=\"col-sm-10 col-sm-offset-1\">\n\t\t<table class=\"table table-condensed table-striped\">\n\t\t\t<tr>\n\t\t\t\t<td>User Name</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><em><?= $model->username; ?></em></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>Registered At</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><em><?= Yii::app()->format->formatDatetime( $model->created_at ); ?></em></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>Updated At</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><em><?= Yii::app()->format->formatDatetime( $model->updated_at ); ?></em></td>\n\t\t\t</tr>\n\t\t</table>\n\t</div>\n</div>\n\n<div class=\"col-sm-9\">\n\t<?php\n\t$form = $this->beginWidget( 'CActiveForm', [\n\t\t'id'                   => 'user-profile',\n\t\t'enableAjaxValidation' => true,\n\t\t'htmlOptions'          => [\n\t\t\t'class' => 'form-horizontal',\n\t\t\t'role'  => 'form',\n\t\t],\n\t] );\n\t?>\n\n\t<?php if ( Yii::app()->user->hasFlash( 'success' ) ): ?>\n\t\t<div class=\"alert alert-success\">\n\t\t\t<?= Yii::app()->user->getFlash( 'success' ); ?>\n\t\t</div>\n\t<?php endif; ?>\n\n\t<?= $form->errorSummary( $model, null, null, [ 'class' => 'alert alert-danger' ] ); ?>\n\n\t<div class=\"form-group\">\n\t\t<div class=\"col-sm-6\">\n\t\t\t<?= $form->label( $model, 'email' ); ?>\n\t\t\t<?= $form->emailField( $model, 'email', [ 'class' => 'form-control' ] ); ?>\n\t\t</div>\n\t</div>\n\n\t<div class=\"form-group\">\n\t\t<div class=\"col-sm-12\">\n\t\t\t<?= $form->label( $model, 'pic' ); ?> <span class=\"text-muted\">(166 x 190)</span>\n\t\t\t<?php\n\t\t\t$this->widget( 'ext.elfinder.ServerFileInput', [\n\t\t\t\t'model'          => $model,\n\t\t\t\t'attribute'      => 'pic',\n\t\t\t\t'connectorRoute' => 'site/elFinderConnector', // bind our file/image upload handler\n\t\t\t\t'twbsControls'   => true, // enable twitter bootstrap style\n\t\t\t] );\n\t\t\t?>\n\t\t\t<?= $form->error( $model, 'pic', [ 'class' => 'text-danger' ] ); ?>\n\t\t</div>\n\t</div>\n\n\t<div class=\"form-group\">\n\t\t<div class=\"col-sm-12 text-right\">\n\t\t\t<?= CHtml::submitButton( 'Save', [ 'class' => 'btn btn-primary' ] ); ?>\n\t\t</div>\n\t</div>\n\t\n\t<?php $this->endWidget(); ?>\n\n</div>\n```","html":"<h2 id=\"using-serverfileinput-widget-of-the-elfinder-extension-with-bootstrap-to-upload-select-image\">Using <code>ServerFileInput</code> widget of the <code>ElFinder</code> extension with <code>Bootstrap</code> to upload &amp; select image</h2>\n<p>Download <a href=\"http://www.yiiframework.com/extension/elfinder/\">ElFinder</a> extension.\nExtract it into <code>ext.elfinder</code>.</p>\n<h3 id=\"prepare-serverfileinput-for-twitter-bootstrap-\">Prepare <code>ServerFileInput</code> for <code>Twitter Bootstrap</code></h3>\n<p>Add <code>twbsControls</code> public property into <code>ServerFileInput</code> class.</p>\n<pre><code class=\"lang-php\">&lt;?php\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ServerFileInput</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CInputWidget</span></span>\n{\n  <span class=\"hljs-comment\">// ...</span>\n  public $twbsControls = <span class=\"hljs-literal\">false</span>; <span class=\"hljs-comment\">// true - use twitter bootstrap controls</span>\n  <span class=\"hljs-comment\">// ...</span>\n}\n</code></pre>\n<p>Change <code>run</code> method as follow:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ServerFileInput</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CInputWidget</span>\n</span>{\n  <span class=\"hljs-comment\">// ...</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">run</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">list</span>( $name, $id ) = <span class=\"hljs-keyword\">$this</span>-&gt;resolveNameID();\n        <span class=\"hljs-keyword\">if</span> ( <span class=\"hljs-keyword\">isset</span>( <span class=\"hljs-keyword\">$this</span>-&gt;htmlOptions[ <span class=\"hljs-string\">'id'</span> ] ) )\n            $id = <span class=\"hljs-keyword\">$this</span>-&gt;htmlOptions[ <span class=\"hljs-string\">'id'</span> ];\n        <span class=\"hljs-keyword\">else</span>\n            <span class=\"hljs-keyword\">$this</span>-&gt;htmlOptions[ <span class=\"hljs-string\">'id'</span> ] = $id;\n        <span class=\"hljs-keyword\">if</span> ( <span class=\"hljs-keyword\">isset</span>( <span class=\"hljs-keyword\">$this</span>-&gt;htmlOptions[ <span class=\"hljs-string\">'name'</span> ] ) )\n            $name = <span class=\"hljs-keyword\">$this</span>-&gt;htmlOptions[ <span class=\"hljs-string\">'name'</span> ];\n        <span class=\"hljs-keyword\">else</span>\n            <span class=\"hljs-keyword\">$this</span>-&gt;htmlOptions[ <span class=\"hljs-string\">'name'</span> ] = $name;\n\n        $contHtmlOptions         = <span class=\"hljs-keyword\">$this</span>-&gt;htmlOptions;\n        $contHtmlOptions[ <span class=\"hljs-string\">'id'</span> ] = $id . <span class=\"hljs-string\">'container'</span>;\n\n        <span class=\"hljs-keyword\">echo</span> CHtml::openTag( <span class=\"hljs-string\">'div'</span>, $contHtmlOptions );\n\n        <span class=\"hljs-keyword\">if</span> ( !<span class=\"hljs-keyword\">$this</span>-&gt;twbsControls )\n        {\n            <span class=\"hljs-comment\">// input:</span>\n            $inputOptions = <span class=\"hljs-keyword\">array</span>( <span class=\"hljs-string\">'id'</span> =&gt; $id, <span class=\"hljs-string\">'style'</span> =&gt; <span class=\"hljs-string\">'float:left;'</span> );\n            <span class=\"hljs-keyword\">if</span> ( <span class=\"hljs-keyword\">$this</span>-&gt;hasModel() )\n                <span class=\"hljs-keyword\">echo</span> CHtml::activeTextField( <span class=\"hljs-keyword\">$this</span>-&gt;model, <span class=\"hljs-keyword\">$this</span>-&gt;attribute, $inputOptions );\n            <span class=\"hljs-keyword\">else</span>\n                <span class=\"hljs-keyword\">echo</span> CHtml::textField( $name, <span class=\"hljs-keyword\">$this</span>-&gt;value, $inputOptions );\n\n            <span class=\"hljs-comment\">// button:</span>\n            <span class=\"hljs-keyword\">echo</span> CHtml::button( <span class=\"hljs-string\">'Browse'</span>, <span class=\"hljs-keyword\">array</span>( <span class=\"hljs-string\">'id'</span> =&gt; $id . <span class=\"hljs-string\">'browse'</span>, <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'btn'</span> ) );\n        }\n        <span class=\"hljs-keyword\">else</span>\n        {\n            $inputOptions = [ <span class=\"hljs-string\">'id'</span> =&gt; $id, <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'form-control'</span>, <span class=\"hljs-string\">'readonly'</span> =&gt; <span class=\"hljs-string\">'readonly'</span> ];\n            <span class=\"hljs-keyword\">echo</span> CHtml::openTag( <span class=\"hljs-string\">'div'</span>, [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'input-group'</span> ] );\n            <span class=\"hljs-keyword\">if</span> ( <span class=\"hljs-keyword\">$this</span>-&gt;hasModel() )\n                <span class=\"hljs-keyword\">echo</span> CHtml::activeTextField( <span class=\"hljs-keyword\">$this</span>-&gt;model, <span class=\"hljs-keyword\">$this</span>-&gt;attribute, $inputOptions );\n            <span class=\"hljs-keyword\">else</span>\n                <span class=\"hljs-keyword\">echo</span> CHtml::textField( $name, <span class=\"hljs-keyword\">$this</span>-&gt;value, $inputOptions );\n            <span class=\"hljs-keyword\">echo</span> CHtml::openTag( <span class=\"hljs-string\">'span'</span>, [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'input-group-btn'</span> ] );\n            <span class=\"hljs-keyword\">echo</span> CHtml::button( <span class=\"hljs-string\">'Browse'</span>, [ <span class=\"hljs-string\">'id'</span> =&gt; $id . <span class=\"hljs-string\">'browse'</span>, <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'btn btn-default'</span>, <span class=\"hljs-string\">'type'</span> =&gt; <span class=\"hljs-string\">'button'</span> ] );\n            <span class=\"hljs-keyword\">echo</span> CHtml::closeTag( <span class=\"hljs-string\">'span'</span> );\n            <span class=\"hljs-keyword\">echo</span> CHtml::closeTag( <span class=\"hljs-string\">'div'</span> );\n        }\n\n        <span class=\"hljs-keyword\">echo</span> CHtml::closeTag( <span class=\"hljs-string\">'div'</span> );\n\n        $settings = array_merge( <span class=\"hljs-keyword\">array</span>(\n                <span class=\"hljs-string\">'places'</span>          =&gt; <span class=\"hljs-string\">\"\"</span>,\n                <span class=\"hljs-string\">'rememberLastDir'</span> =&gt; <span class=\"hljs-keyword\">false</span>, ),\n            <span class=\"hljs-keyword\">$this</span>-&gt;settings\n        );\n\n        $settings[ <span class=\"hljs-string\">'dialog'</span> ]                = <span class=\"hljs-keyword\">array</span>(\n            <span class=\"hljs-string\">'zIndex'</span> =&gt; <span class=\"hljs-number\">400001</span>,\n            <span class=\"hljs-string\">'width'</span>  =&gt; <span class=\"hljs-number\">900</span>,\n            <span class=\"hljs-string\">'modal'</span>  =&gt; <span class=\"hljs-keyword\">true</span>,\n            <span class=\"hljs-string\">'title'</span>  =&gt; <span class=\"hljs-string\">\"Files\"</span>,\n        );\n        $settings[ <span class=\"hljs-string\">'editorCallback'</span> ]        = <span class=\"hljs-string\">'js:function(url) {\n        $(\\'#\\'+aFieldId).attr(\\'value\\',url);\n        }'</span>;\n        $settings[ <span class=\"hljs-string\">'closeOnEditorCallback'</span> ] = <span class=\"hljs-keyword\">true</span>;\n        $connectorUrl                        = CJavaScript::encode( <span class=\"hljs-keyword\">$this</span>-&gt;settings[ <span class=\"hljs-string\">'url'</span> ] );\n        $settings                            = CJavaScript::encode( $settings );\n        $script                              = <span class=\"hljs-string\">&lt;&lt;&lt;EOD\n        window.elfinderBrowse = function(field_id, connector) {\n            var aFieldId = field_id, aWin = this;\n            if($(\"#elFinderBrowser\").length == 0) {\n                $(\"body\").append($(\"&lt;div/&gt;\").attr(\"id\", \"elFinderBrowser\"));\n                var settings = <span class=\"hljs-subst\">$settings</span>;\n                settings[\"url\"] = connector;\n                $(\"#elFinderBrowser\").elfinder(settings);\n            }\n            else {\n                $(\"#elFinderBrowser\").elfinder(\"open\", connector);\n            }\n        }\nEOD;</span>\n        $cs                                  = Yii::app()-&gt;getClientScript();\n        $cs-&gt;registerScript( <span class=\"hljs-string\">'ServerFileInput#global'</span>, $script );\n\n        $js = <span class=\"hljs-comment\">//'$(\"#'.$id.'\").focus(function(){window.elfinderBrowse(\"'.$name.'\")});'.</span>\n            <span class=\"hljs-string\">'$(\"#'</span> . $id . <span class=\"hljs-string\">'browse\").click(function(){window.elfinderBrowse(\"'</span> . $id . <span class=\"hljs-string\">'\", '</span> . $connectorUrl . <span class=\"hljs-string\">')});'</span>;\n\n        $cs-&gt;registerScript( <span class=\"hljs-string\">'ServerFileInput#'</span> . $id, $js );\n    }\n  <span class=\"hljs-comment\">// ...</span>\n}</span>\n</code></pre>\n<p>Add custom parameters into configuration:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">return</span> [\n    <span class=\"hljs-string\">'params'</span>     =&gt; [\n        <span class=\"hljs-comment\">// ...</span>\n        <span class=\"hljs-string\">'adminEmail'</span>        =&gt; <span class=\"hljs-string\">'admin@garovreestri.uz'</span>,\n        <span class=\"hljs-string\">'uploadsFolder'</span>     =&gt; <span class=\"hljs-string\">'/uploads/'</span>, <span class=\"hljs-comment\">// common uploads folder</span>\n        <span class=\"hljs-string\">'userUploadsFolder'</span> =&gt; <span class=\"hljs-string\">'/uploads/users/'</span>, <span class=\"hljs-comment\">// private uploads folder for each user</span>\n        <span class=\"hljs-string\">'defaultAvatar'</span>     =&gt; <span class=\"hljs-string\">'default_avatar.png'</span>, <span class=\"hljs-comment\">// default avatar</span>\n    ],\n];</span>\n</code></pre>\n<p>Add action into controller to handle uploads:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SiteController</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Controller</span>\n</span>{\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">filters</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> [ <span class=\"hljs-string\">'accessControl'</span>, ];\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">accessRules</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> [\n            <span class=\"hljs-comment\">// ...</span>\n            [\n                <span class=\"hljs-string\">'allow'</span>,\n                <span class=\"hljs-string\">'actions'</span> =&gt; [ <span class=\"hljs-string\">'profile'</span>, <span class=\"hljs-string\">'elFinderConnector'</span> ],\n                <span class=\"hljs-string\">'users'</span>   =&gt; [ <span class=\"hljs-string\">'@'</span> ],\n            ],\n            <span class=\"hljs-comment\">// ...</span>\n            [\n                <span class=\"hljs-string\">'deny'</span>,\n                <span class=\"hljs-string\">'users'</span> =&gt; [ <span class=\"hljs-string\">'*'</span> ]\n            ],\n        ];\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">actionElFinderConnector</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-comment\">// each user has own path named with ID, e.g.: /uploads/users/190/ for user with ID 190</span>\n        $userPath = Yii::app()-&gt;params[ <span class=\"hljs-string\">'userUploadsFolder'</span> ] . Yii::app()-&gt;user-&gt;id . <span class=\"hljs-string\">'/'</span>;\n        $userRoot = Yii::getPathOfAlias( <span class=\"hljs-string\">'webroot'</span> ) . $userPath; <span class=\"hljs-comment\">// full path to the user's folder</span>\n\n        <span class=\"hljs-comment\">// if directory doesn't exist, create them</span>\n        <span class=\"hljs-keyword\">if</span> ( !file_exists( $userRoot ) )\n            mkdir( $userRoot, <span class=\"hljs-number\">0777</span>, <span class=\"hljs-keyword\">true</span> );\n\n        <span class=\"hljs-comment\">// initialize ElFinder</span>\n        $connector                            = <span class=\"hljs-keyword\">new</span> ElFinderConnectorAction( <span class=\"hljs-keyword\">$this</span>, <span class=\"hljs-keyword\">$this</span>-&gt;action-&gt;id );\n        $connector-&gt;settings[ <span class=\"hljs-string\">'root'</span> ]        = $userRoot;\n        $connector-&gt;settings[ <span class=\"hljs-string\">'URL'</span> ]         = Yii::app()-&gt;baseUrl . $userPath;\n        $connector-&gt;settings[ <span class=\"hljs-string\">'rootAlias'</span> ]   = <span class=\"hljs-string\">'Home'</span>;\n        $connector-&gt;settings[ <span class=\"hljs-string\">'uploadAllow'</span> ] = [ <span class=\"hljs-string\">'image/jpeg'</span>, <span class=\"hljs-string\">'image/gif'</span>, <span class=\"hljs-string\">'image/png'</span> ]; <span class=\"hljs-comment\">// allowed mime-types</span>\n        $connector-&gt;settings[ <span class=\"hljs-string\">'uploadDeny'</span> ]  = [ <span class=\"hljs-string\">'all'</span> ]; <span class=\"hljs-comment\">// deny all other mime-types</span>\n        $connector-&gt;run();\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">actionProfile</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">$this</span>-&gt;layout   = <span class=\"hljs-string\">'//layouts/wide'</span>;\n        $user           = User::model()-&gt;findByPk( Yii::app()-&gt;user-&gt;id );\n        $user-&gt;scenario = <span class=\"hljs-string\">'profile'</span>;\n\n        <span class=\"hljs-keyword\">if</span> ( !$user-&gt;pic ) <span class=\"hljs-comment\">// $user-&gt;pic  - URL to avatar</span>\n        {\n            $uplDir        = Yii::getPathOfAlias( <span class=\"hljs-string\">'webroot'</span> ) . Yii::app()-&gt;params[ <span class=\"hljs-string\">'userUploadsFolder'</span> ];\n            $defAvatarPath = $uplDir . Yii::app()-&gt;params[ <span class=\"hljs-string\">'defaultAvatar'</span> ];\n            $userPath      = $uplDir . Yii::app()-&gt;user-&gt;id . <span class=\"hljs-string\">'/'</span> . Yii::app()-&gt;params[ <span class=\"hljs-string\">'defaultAvatar'</span> ];\n\n            <span class=\"hljs-comment\">// copy default avatar into user's private uploads folder</span>\n            <span class=\"hljs-keyword\">if</span> ( copy( $defAvatarPath, $userPath ) )\n                $user-&gt;pic = Yii::app()-&gt;baseUrl . Yii::app()-&gt;params[ <span class=\"hljs-string\">'userUploadsFolder'</span> ]\n                    . Yii::app()-&gt;user-&gt;id . <span class=\"hljs-string\">'/'</span> . Yii::app()-&gt;params[ <span class=\"hljs-string\">'defaultAvatar'</span> ];\n        }\n\n        <span class=\"hljs-comment\">// if it is ajax validation request</span>\n        <span class=\"hljs-keyword\">if</span> ( <span class=\"hljs-keyword\">isset</span>( $_POST[ <span class=\"hljs-string\">'ajax'</span> ] ) &amp;&amp; $_POST[ <span class=\"hljs-string\">'ajax'</span> ] === <span class=\"hljs-string\">'user-profile'</span> )\n        {\n            <span class=\"hljs-keyword\">echo</span> CActiveForm::validate( $user );\n            Yii::app()-&gt;end();\n        }\n\n        <span class=\"hljs-keyword\">if</span> ( <span class=\"hljs-keyword\">isset</span>( $_POST[ <span class=\"hljs-string\">'User'</span> ] ) )\n        {\n            $user-&gt;attributes = $_POST[ <span class=\"hljs-string\">'User'</span> ];\n            $attr             = [ <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'pic'</span> ]; <span class=\"hljs-comment\">// attributes to save</span>\n            <span class=\"hljs-keyword\">if</span> ( $user-&gt;save( <span class=\"hljs-keyword\">true</span>, $attr ) )\n                Yii::app()-&gt;user-&gt;setFlash( <span class=\"hljs-string\">'success'</span>, <span class=\"hljs-string\">'Profile Updated!'</span> );\n        }\n\n        <span class=\"hljs-keyword\">$this</span>-&gt;render( <span class=\"hljs-string\">'profile'</span>, [ <span class=\"hljs-string\">'model'</span> =&gt; $user, ] );\n    }\n    <span class=\"hljs-comment\">// ...</span>\n}</span>\n</code></pre>\n<p>Our <code>profile.php</code> view looks like this:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-comment\">/* <span class=\"hljs-doctag\">@var</span> $this SiteController */</span>\n<span class=\"hljs-comment\">/* <span class=\"hljs-doctag\">@var</span> $model User */</span>\n<span class=\"hljs-comment\">/* <span class=\"hljs-doctag\">@var</span> $form CActiveForm */</span>\n\n<span class=\"hljs-keyword\">$this</span>-&gt;pageTitle = <span class=\"hljs-string\">'User Profile'</span>;\n<span class=\"hljs-meta\">?&gt;</span></span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-3\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-10 col-sm-offset-1\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"&lt;?= $model-&gt;pic; ?&gt;\"</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">\"\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"thumbnail\"</span>/&gt;</span> \n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-10 col-sm-offset-1\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">table</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"table table-condensed table-striped\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span>User Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">em</span>&gt;</span><span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $model-&gt;username; <span class=\"hljs-meta\">?&gt;</span></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">em</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span>Registered At<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">em</span>&gt;</span><span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= Yii::app()-&gt;format-&gt;formatDatetime( $model-&gt;created_at ); <span class=\"hljs-meta\">?&gt;</span></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">em</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span>Updated At<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">em</span>&gt;</span><span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= Yii::app()-&gt;format-&gt;formatDatetime( $model-&gt;updated_at ); <span class=\"hljs-meta\">?&gt;</span></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">em</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">table</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-9\"</span>&gt;</span>\n    <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n    $form = <span class=\"hljs-keyword\">$this</span>-&gt;beginWidget( <span class=\"hljs-string\">'CActiveForm'</span>, [\n        <span class=\"hljs-string\">'id'</span>                   =&gt; <span class=\"hljs-string\">'user-profile'</span>,\n        <span class=\"hljs-string\">'enableAjaxValidation'</span> =&gt; <span class=\"hljs-keyword\">true</span>,\n        <span class=\"hljs-string\">'htmlOptions'</span>          =&gt; [\n            <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'form-horizontal'</span>,\n            <span class=\"hljs-string\">'role'</span>  =&gt; <span class=\"hljs-string\">'form'</span>,\n        ],\n    ] );\n    <span class=\"hljs-meta\">?&gt;</span></span>\n\n    <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">if</span> ( Yii::app()-&gt;user-&gt;hasFlash( <span class=\"hljs-string\">'success'</span> ) ): <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"alert alert-success\"</span>&gt;</span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= Yii::app()-&gt;user-&gt;getFlash( <span class=\"hljs-string\">'success'</span> ); <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">endif</span>; <span class=\"hljs-meta\">?&gt;</span></span>\n\n    <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;errorSummary( $model, <span class=\"hljs-keyword\">null</span>, <span class=\"hljs-keyword\">null</span>, [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'alert alert-danger'</span> ] ); <span class=\"hljs-meta\">?&gt;</span></span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-group\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-6\"</span>&gt;</span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;label( $model, <span class=\"hljs-string\">'email'</span> ); <span class=\"hljs-meta\">?&gt;</span></span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;emailField( $model, <span class=\"hljs-string\">'email'</span>, [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'form-control'</span> ] ); <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-group\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-12\"</span>&gt;</span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;label( $model, <span class=\"hljs-string\">'pic'</span> ); <span class=\"hljs-meta\">?&gt;</span></span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"text-muted\"</span>&gt;</span>(166 x 190)<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n            <span class=\"hljs-keyword\">$this</span>-&gt;widget( <span class=\"hljs-string\">'ext.elfinder.ServerFileInput'</span>, [\n                <span class=\"hljs-string\">'model'</span>          =&gt; $model,\n                <span class=\"hljs-string\">'attribute'</span>      =&gt; <span class=\"hljs-string\">'pic'</span>,\n                <span class=\"hljs-string\">'connectorRoute'</span> =&gt; <span class=\"hljs-string\">'site/elFinderConnector'</span>, <span class=\"hljs-comment\">// bind our file/image upload handler</span>\n                <span class=\"hljs-string\">'twbsControls'</span>   =&gt; <span class=\"hljs-keyword\">true</span>, <span class=\"hljs-comment\">// enable twitter bootstrap style</span>\n            ] );\n            <span class=\"hljs-meta\">?&gt;</span></span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;error( $model, <span class=\"hljs-string\">'pic'</span>, [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'text-danger'</span> ] ); <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-group\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-12 text-right\"</span>&gt;</span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= CHtml::submitButton( <span class=\"hljs-string\">'Save'</span>, [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'btn btn-primary'</span> ] ); <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">$this</span>-&gt;endWidget(); <span class=\"hljs-meta\">?&gt;</span></span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/9483258","description":"Yii: PhpStorm configurations for Yii framework","files":["https://gist.githubusercontent.com/umidjons/9483258/raw/400d521a292b5d307b8de96c6674d3835e4ea4ac/yii-autocomplete-phpstorm.md"],"content":"# Additional configurations for PhpStorm to develop with Yii framework\n\n### Autocomplete Yii::app() components\nOpen `framework/yii.php` file, override app() static method as follow:\n```php\n<?php\nclass Yii extends YiiBase\n{\n\t/**\n\t * @static\n\t * @return CWebApplication\n\t */\n\tpublic static function app()\n\t{\n\t\treturn parent::app();\n\t}\n\t\n\t// ...\n}\n```","html":"<h1 id=\"additional-configurations-for-phpstorm-to-develop-with-yii-framework\">Additional configurations for PhpStorm to develop with Yii framework</h1>\n<h3 id=\"autocomplete-yii-app-components\">Autocomplete Yii::app() components</h3>\n<p>Open <code>framework/yii.php</code> file, override app() static method as follow:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Yii</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">YiiBase</span>\n</span>{\n    <span class=\"hljs-comment\">/**\n     * <span class=\"hljs-doctag\">@static</span>\n     * <span class=\"hljs-doctag\">@return</span> CWebApplication\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">app</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">parent</span>::app();\n    }\n\n    <span class=\"hljs-comment\">// ...</span>\n}</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/9462265","description":"Yii: custom button in CGridView with AJAX functionality","files":["https://gist.githubusercontent.com/umidjons/9462265/raw/8f778744158895d8ab9ecd2c13c4e342d9e9961e/yii-cgridview-custom-button-ajax.md"],"content":"#Approve/Unapprove comments\n\nCreate `approve` action in our controller:\n```php\n<?php\nclass CommentsController extends Controller\n{\n\t// ...\n\tpublic function actionApprove( $id, $oper = NewsComments::STATUS_APPROVED )\n\t{\n\t\t$model = NewsComments::model()->findByPk( $id );\n\t\tif ( $model )\n\t\t{\n\t\t\t$model->scenario = 'approve';\n\t\t\t$model->status   = $oper; // 0-not published, 1-approved/published\n\t\t\tif ( $model->save() )\n\t\t\t\techo CJSON::encode( [ 'code' => 200 ] );\n\t\t\telse\n\t\t\t\techo CJSON::encode( $model->getErrors() );\n\t\t}\n\t}\n\t// ...\n}\n```\n\nAllow `approve` action in `accessRules`\n```php\n<?php\nclass CommentsController extends Controller\n{\n    // ...\n\tpublic function filters()\n\t{\n\t\treturn array(\n\t\t\t'accessControl', // perform access control for CRUD operations\n\t\t\t'postOnly + delete, approve', // we only allow approving via POST request\n\t\t);\n\t}\n\t\n\tpublic function accessRules()\n\t{\n\t\treturn [\n\t\t\t[\n\t\t\t\t'allow',\n\t\t\t\t'actions' => [ 'admin', 'view', 'delete', 'approve' ],\n\t\t\t\t'roles'   => [ 'siteModerator', ],\n\t\t\t],\n\t\t\t[ 'deny', // deny all users\n\t\t\t\t'users' => [ '*' ],\n\t\t\t],\n\t\t];\n\t}\n    // ...\n}\n```\n\nPut `CGrigView` widget into view:\n```php\n<?php\n$this->widget( 'zii.widgets.grid.CGridView', [\n\t'id'            => 'news-comments-grid',\n\t'itemsCssClass' => 'table table-striped table-hover table-condensed',\n\t'dataProvider'  => $model->search(),\n\t'filter'        => null,\n\t'template'      => '{items}{pager}',\n\t'columns'       => [\n\t\t'id',\n\t\t'news_id',\n\t\t'author_id',\n\t\t'author',\n\t\t'text',\n\t\t'status',\n\t\t[\n\t\t\t'class'                => 'CButtonColumn',\n\t\t\t'template'             => '{approve}{unapprove}<br>{view}{delete}', // buttons here...\n\t\t\t'viewButtonLabel'      => '<span class=\"glyphicon glyphicon-search\"></span>&nbsp;', // custom icon\n\t\t\t'viewButtonOptions'    => [ 'title' => 'Details', ], // change hint/tooltip text\n\t\t\t'viewButtonImageUrl'   => false, // disable default image\n\t\t\t'deleteButtonLabel'    => '<span class=\"glyphicon glyphicon-remove\"></span>&nbsp;',\n\t\t\t'deleteButtonOptions'  => [ 'title' => 'Remove', ],\n\t\t\t'deleteButtonImageUrl' => false,\n\t\t\t'deleteConfirmation'   => 'Remove comment?', // confirmation message for delete\n\t\t\t'buttons'              => [ // custom buttons options here...\n\t\t\t\t'approve'   => [\n\t\t\t\t\t'label'   => '<span class=\"glyphicon glyphicon-ok-sign\"></span>&nbsp;',\n\t\t\t\t\t'url'     => '[ \"approve\", \"id\" => $data->id, ]', // ?r=controller/approve/id/123\n\t\t\t\t\t'options' => [\n\t\t\t\t\t\t'title'        => 'Approve',\n\t\t\t\t\t\t'data-confirm' => 'Approve comment?', // custom attribute to hold confirmation message\n\t\t\t\t\t],\n\t\t\t\t\t'click'   => $approveJs, // JS string which processes AJAX request\n\t\t\t\t],\n\t\t\t\t'unapprove' => [\n\t\t\t\t\t'label'   => '<span class=\"glyphicon glyphicon-minus-sign\"></span>&nbsp;',\n\t\t\t\t\t'url'     => '[ \"approve\", \"id\" => $data->id, \"oper\" => 0 ]', // ?r=controller/approve/id/123/oper/0\n\t\t\t\t\t'options' => [\n\t\t\t\t\t\t'title'        => 'Un-Approve',\n\t\t\t\t\t\t'data-confirm' => 'Un-approve comment?', // custom attribute to hold confirmation message\n\t\t\t\t\t],\n\t\t\t\t\t'click'   => $approveJs, // JS string which processes AJAX request\n\t\t\t\t],\n\t\t\t],\n\t\t],\n\t],\n] ); ?>\n\n```\n\nInitialize `$approveJs` variable before `CGridView` widget:\n\n```php\n<?php\n$approveJs = 'js:function(__event)\n{\n\t__event.preventDefault(); // disable default action\n\n\tvar $this = $(this), // link/button\n\t\tconfirm_message = $this.data(\"confirm\"), // read confirmation message from custom attribute\n\t\turl = $this.attr(\"href\"); // read AJAX URL with parameters from HREF attribute on the link\n\n\tif(confirm(confirm_message)) // if user confirmed operation, then...\n\t{\n\t\t// perform AJAX request\n\t\t$(\"#news-comments-grid\").yiiGridView(\"update\",\n\t\t{\n\t\t\ttype\t: \"POST\", // importatnt! we only allow POST in filters()\n\t\t\tdataType: \"json\",\n\t\t\turl\t\t: url,\n\t\t\tsuccess\t: function(data)\n\t\t\t{\n\t\t\t\tconsole.log(\"Success:\", data);\n\t\t\t\t$(\"#news-comments-grid\").yiiGridView(\"update\"); // refresh gridview via AJAX\n\t\t\t},\n\t\t\terror\t: function(xhr)\n\t\t\t{\n\t\t\t\tconsole.log(\"Error:\", xhr);\n\t\t\t}\n\t\t});\n\t}\n}';\n\n```","html":"<p>#Approve/Unapprove comments</p>\n<p>Create <code>approve</code> action in our controller:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CommentsController</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Controller</span>\n</span>{\n    <span class=\"hljs-comment\">// ...</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">actionApprove</span><span class=\"hljs-params\">( $id, $oper = NewsComments::STATUS_APPROVED )</span>\n    </span>{\n        $model = NewsComments::model()-&gt;findByPk( $id );\n        <span class=\"hljs-keyword\">if</span> ( $model )\n        {\n            $model-&gt;scenario = <span class=\"hljs-string\">'approve'</span>;\n            $model-&gt;status   = $oper; <span class=\"hljs-comment\">// 0-not published, 1-approved/published</span>\n            <span class=\"hljs-keyword\">if</span> ( $model-&gt;save() )\n                <span class=\"hljs-keyword\">echo</span> CJSON::encode( [ <span class=\"hljs-string\">'code'</span> =&gt; <span class=\"hljs-number\">200</span> ] );\n            <span class=\"hljs-keyword\">else</span>\n                <span class=\"hljs-keyword\">echo</span> CJSON::encode( $model-&gt;getErrors() );\n        }\n    }\n    <span class=\"hljs-comment\">// ...</span>\n}</span>\n</code></pre>\n<p>Allow <code>approve</code> action in <code>accessRules</code></p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CommentsController</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Controller</span>\n</span>{\n    <span class=\"hljs-comment\">// ...</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">filters</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">array</span>(\n            <span class=\"hljs-string\">'accessControl'</span>, <span class=\"hljs-comment\">// perform access control for CRUD operations</span>\n            <span class=\"hljs-string\">'postOnly + delete, approve'</span>, <span class=\"hljs-comment\">// we only allow approving via POST request</span>\n        );\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">accessRules</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> [\n            [\n                <span class=\"hljs-string\">'allow'</span>,\n                <span class=\"hljs-string\">'actions'</span> =&gt; [ <span class=\"hljs-string\">'admin'</span>, <span class=\"hljs-string\">'view'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'approve'</span> ],\n                <span class=\"hljs-string\">'roles'</span>   =&gt; [ <span class=\"hljs-string\">'siteModerator'</span>, ],\n            ],\n            [ <span class=\"hljs-string\">'deny'</span>, <span class=\"hljs-comment\">// deny all users</span>\n                <span class=\"hljs-string\">'users'</span> =&gt; [ <span class=\"hljs-string\">'*'</span> ],\n            ],\n        ];\n    }\n    <span class=\"hljs-comment\">// ...</span>\n}</span>\n</code></pre>\n<p>Put <code>CGrigView</code> widget into view:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">$this</span>-&gt;widget( <span class=\"hljs-string\">'zii.widgets.grid.CGridView'</span>, [\n    <span class=\"hljs-string\">'id'</span>            =&gt; <span class=\"hljs-string\">'news-comments-grid'</span>,\n    <span class=\"hljs-string\">'itemsCssClass'</span> =&gt; <span class=\"hljs-string\">'table table-striped table-hover table-condensed'</span>,\n    <span class=\"hljs-string\">'dataProvider'</span>  =&gt; $model-&gt;search(),\n    <span class=\"hljs-string\">'filter'</span>        =&gt; <span class=\"hljs-keyword\">null</span>,\n    <span class=\"hljs-string\">'template'</span>      =&gt; <span class=\"hljs-string\">'{items}{pager}'</span>,\n    <span class=\"hljs-string\">'columns'</span>       =&gt; [\n        <span class=\"hljs-string\">'id'</span>,\n        <span class=\"hljs-string\">'news_id'</span>,\n        <span class=\"hljs-string\">'author_id'</span>,\n        <span class=\"hljs-string\">'author'</span>,\n        <span class=\"hljs-string\">'text'</span>,\n        <span class=\"hljs-string\">'status'</span>,\n        [\n            <span class=\"hljs-string\">'class'</span>                =&gt; <span class=\"hljs-string\">'CButtonColumn'</span>,\n            <span class=\"hljs-string\">'template'</span>             =&gt; <span class=\"hljs-string\">'{approve}{unapprove}&lt;br&gt;{view}{delete}'</span>, <span class=\"hljs-comment\">// buttons here...</span>\n            <span class=\"hljs-string\">'viewButtonLabel'</span>      =&gt; <span class=\"hljs-string\">'&lt;span class=\"glyphicon glyphicon-search\"&gt;&lt;/span&gt;&amp;nbsp;'</span>, <span class=\"hljs-comment\">// custom icon</span>\n            <span class=\"hljs-string\">'viewButtonOptions'</span>    =&gt; [ <span class=\"hljs-string\">'title'</span> =&gt; <span class=\"hljs-string\">'Details'</span>, ], <span class=\"hljs-comment\">// change hint/tooltip text</span>\n            <span class=\"hljs-string\">'viewButtonImageUrl'</span>   =&gt; <span class=\"hljs-keyword\">false</span>, <span class=\"hljs-comment\">// disable default image</span>\n            <span class=\"hljs-string\">'deleteButtonLabel'</span>    =&gt; <span class=\"hljs-string\">'&lt;span class=\"glyphicon glyphicon-remove\"&gt;&lt;/span&gt;&amp;nbsp;'</span>,\n            <span class=\"hljs-string\">'deleteButtonOptions'</span>  =&gt; [ <span class=\"hljs-string\">'title'</span> =&gt; <span class=\"hljs-string\">'Remove'</span>, ],\n            <span class=\"hljs-string\">'deleteButtonImageUrl'</span> =&gt; <span class=\"hljs-keyword\">false</span>,\n            <span class=\"hljs-string\">'deleteConfirmation'</span>   =&gt; <span class=\"hljs-string\">'Remove comment?'</span>, <span class=\"hljs-comment\">// confirmation message for delete</span>\n            <span class=\"hljs-string\">'buttons'</span>              =&gt; [ <span class=\"hljs-comment\">// custom buttons options here...</span>\n                <span class=\"hljs-string\">'approve'</span>   =&gt; [\n                    <span class=\"hljs-string\">'label'</span>   =&gt; <span class=\"hljs-string\">'&lt;span class=\"glyphicon glyphicon-ok-sign\"&gt;&lt;/span&gt;&amp;nbsp;'</span>,\n                    <span class=\"hljs-string\">'url'</span>     =&gt; <span class=\"hljs-string\">'[ \"approve\", \"id\" =&gt; $data-&gt;id, ]'</span>, <span class=\"hljs-comment\">// ?r=controller/approve/id/123</span>\n                    <span class=\"hljs-string\">'options'</span> =&gt; [\n                        <span class=\"hljs-string\">'title'</span>        =&gt; <span class=\"hljs-string\">'Approve'</span>,\n                        <span class=\"hljs-string\">'data-confirm'</span> =&gt; <span class=\"hljs-string\">'Approve comment?'</span>, <span class=\"hljs-comment\">// custom attribute to hold confirmation message</span>\n                    ],\n                    <span class=\"hljs-string\">'click'</span>   =&gt; $approveJs, <span class=\"hljs-comment\">// JS string which processes AJAX request</span>\n                ],\n                <span class=\"hljs-string\">'unapprove'</span> =&gt; [\n                    <span class=\"hljs-string\">'label'</span>   =&gt; <span class=\"hljs-string\">'&lt;span class=\"glyphicon glyphicon-minus-sign\"&gt;&lt;/span&gt;&amp;nbsp;'</span>,\n                    <span class=\"hljs-string\">'url'</span>     =&gt; <span class=\"hljs-string\">'[ \"approve\", \"id\" =&gt; $data-&gt;id, \"oper\" =&gt; 0 ]'</span>, <span class=\"hljs-comment\">// ?r=controller/approve/id/123/oper/0</span>\n                    <span class=\"hljs-string\">'options'</span> =&gt; [\n                        <span class=\"hljs-string\">'title'</span>        =&gt; <span class=\"hljs-string\">'Un-Approve'</span>,\n                        <span class=\"hljs-string\">'data-confirm'</span> =&gt; <span class=\"hljs-string\">'Un-approve comment?'</span>, <span class=\"hljs-comment\">// custom attribute to hold confirmation message</span>\n                    ],\n                    <span class=\"hljs-string\">'click'</span>   =&gt; $approveJs, <span class=\"hljs-comment\">// JS string which processes AJAX request</span>\n                ],\n            ],\n        ],\n    ],\n] ); <span class=\"hljs-meta\">?&gt;</span></span>\n</code></pre>\n<p>Initialize <code>$approveJs</code> variable before <code>CGridView</code> widget:</p>\n<pre><code class=\"lang-php\">&lt;?php\n$approveJs = 'js:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(__event)</span>\n{</span>\n    __event.preventDefault(); <span class=\"hljs-comment\">// disable default action</span>\n\n    var <span class=\"hljs-keyword\">$t</span>his = $(this), <span class=\"hljs-comment\">// link/button</span>\n        confirm_message = <span class=\"hljs-keyword\">$t</span>his.data(<span class=\"hljs-string\">\"confirm\"</span>), <span class=\"hljs-comment\">// read confirmation message from custom attribute</span>\n        url = <span class=\"hljs-keyword\">$t</span>his.attr(<span class=\"hljs-string\">\"href\"</span>); <span class=\"hljs-comment\">// read AJAX URL with parameters from HREF attribute on the link</span>\n\n    <span class=\"hljs-keyword\">if</span>(confirm(confirm_message)) <span class=\"hljs-comment\">// if user confirmed operation, then...</span>\n    {\n        <span class=\"hljs-comment\">// perform AJAX request</span>\n        $(<span class=\"hljs-string\">\"#news-comments-grid\"</span>).yiiGridView(<span class=\"hljs-string\">\"update\"</span>,\n        {\n            type    : <span class=\"hljs-string\">\"POST\"</span>, <span class=\"hljs-comment\">// importatnt! we only allow POST in filters()</span>\n            dataType: <span class=\"hljs-string\">\"json\"</span>,\n            url        : url,\n            success    : <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(data)</span>\n            {</span>\n                console.<span class=\"hljs-built_in\">log</span>(<span class=\"hljs-string\">\"Success:\"</span>, data);\n                $(<span class=\"hljs-string\">\"#news-comments-grid\"</span>).yiiGridView(<span class=\"hljs-string\">\"update\"</span>); <span class=\"hljs-comment\">// refresh gridview via AJAX</span>\n            },\n            error    : <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(xhr)</span>\n            {</span>\n                console.<span class=\"hljs-built_in\">log</span>(<span class=\"hljs-string\">\"Error:\"</span>, xhr);\n            }\n        });\n    }\n}';\n</code></pre>\n"},{"html_url":"https://gist.github.com/9460276","description":"Yii: Set custom text for label","files":["https://gist.githubusercontent.com/umidjons/9460276/raw/c5dfe853fac869a81b2bd5672b5241049426fdf0/yii-label-custom-text.md"],"content":"#Set custom text for `label`\n\n`htmlOptions` of such `CHtml::activeLabel` and `CActiveForm::label` methods have `label` special option. It specifies the label to be displayed instead of `CModel::getAttributeLabel` value.\n\n```php\n<div class=\"form-group\">\n\t<div class=\"col-sm-6\">\n\t\t<?= $form->label( $model, 'source_title', [ 'label' => Yii::t( 'myApp', 'Resource title' ) ] ); ?>\n\t\t<?= $form->textField( $model, 'source_title', [ 'class' => 'form-control', ] ); ?>\n\t\t<?= $form->error( $model, 'source_title', [ 'class' => 'text-danger' ] ); ?>\n\t</div>\n</div>\n```","html":"<p>#Set custom text for <code>label</code></p>\n<p><code>htmlOptions</code> of such <code>CHtml::activeLabel</code> and <code>CActiveForm::label</code> methods have <code>label</code> special option. It specifies the label to be displayed instead of <code>CModel::getAttributeLabel</code> value.</p>\n<pre><code class=\"lang-php\">&lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"form-group\"</span>&gt;\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-6\"</span>&gt;</span>\n        <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;label( $model, <span class=\"hljs-string\">'source_title'</span>, [ <span class=\"hljs-string\">'label'</span> =&gt; Yii::t( <span class=\"hljs-string\">'myApp'</span>, <span class=\"hljs-string\">'Resource title'</span> ) ] ); <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;textField( $model, <span class=\"hljs-string\">'source_title'</span>, [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'form-control'</span>, ] ); <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;error( $model, <span class=\"hljs-string\">'source_title'</span>, [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'text-danger'</span> ] ); <span class=\"hljs-meta\">?&gt;</span></span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n&lt;<span class=\"hljs-regexp\">/div&gt;</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/9459926","description":"Using ajaxButton to process AJAX requests","files":["https://gist.githubusercontent.com/umidjons/9459926/raw/08e620b16c941b8fc935fbabdc0ca2810ce76d5e/chtml-ajaxbutton-example.md"],"content":"#Using `CHtml::ajaxButton` to process ajax request\n\nFirst, check if a current user has `siteModerator` role, if so, then show ajax button in view.\nWhen request success, we check response code, if it is `200` - OK, then remove `Wait moderation` label and `Publish comment` button.\n\n```php\n<?php\necho '<span class=\"label label-warning comment-status-' . $comment->id; . '\"' . Yii::t( 'myApp', 'Wait moderation' ); . '</span>';\nif ( Yii::app()->authManager->checkAccess( 'siteModerator', Yii::app()->user->id ) )\n{\n    echo CHtml::ajaxButton(\n        Yii::t( 'myApp', 'Publish comment' ),\n        [ 'approveComment', 'comment_id' => $comment->id ], // URL: ?r=myCtrl/approveComment&comment_id=123\n        [\n            'dataType' => 'json',\n            'success'  => 'js:function(response)\n                {\n                    console.log(\"Approve comment response:\", response);\n                    if(response && response.code==200)\n                    {\n                        $(\".comment-status-' . $comment->id . '\").remove();\n                        $(\".approve-link-' . $comment->id . '\").remove();\n                    }\n                }',\n        ],\n        [ 'class' => 'btn btn-info btn-xs approve-link-' . $comment->id ]\n    );\n}\n```\n\nCreate `approveComment` action in `MyCtrlController`:\n\n```php\n<?php\nclass MyCtrlController extends Controller {\n\t// ...\n\tpublic function actionApproveComment( $comment_id )\n\t{\n\t\tif ( Yii::app()->request->isAjaxRequest )\n\t\t{\n\t\t    // get model by ID\n\t\t\t$comment = NewsComments::model()->findByPk( $comment_id );\n\t\t\tif ( $comment ) // if found...\n\t\t\t{\n\t\t\t\t$comment->scenario = 'approve'; // set scenario\n\t\t\t\t$comment->status   = 1; // approve\n\t\t\t\tif ( $comment->save() ) // save\n\t\t\t\t\techo CJSON::encode( [ 'code' => '200', ] ); // OK status\n\t\t\t\telse\n\t\t\t\t\techo CJSON::encode( $comment->getErrors() ); // errors\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\nAllow execution of action `approveComment`:\n```php\n<?php\nclass MyCtrlController extends Controller{\n\tpublic function accessRules()\n\t{\n\t\treturn [\n\t\t    // ...\n\t\t\t[\n\t\t\t\t'allow',\n\t\t\t\t'actions' => [ 'approveComment', ],\n\t\t\t\t'roles'   => [ 'siteModerator', ],\n\t\t\t],\n\t\t\t// ...\n\t\t\t[\n\t\t\t\t'deny',\n\t\t\t\t'users' => [ '*' ]\n\t\t\t],\n\t\t];\n\t}\n}\n```\n\nAlso set scenario, this is useful when for example you don't want to validate all fields (e.g. captcha verifyCode field).\n```php\n<?php\nclass NewsComments extends CActiveRecord{\n\t// ...\n\tpublic function rules()\n\t{\n\t\treturn array(\n\t\t\t[ 'news_id, author, text', 'required' ],\n\t\t\t[ 'news_id, status', 'numerical', 'integerOnly' => true ],\n\t\t\t[ 'author', 'length', 'max' => 50 ],\n\t\t\t[ 'verifyCode', 'captcha', 'allowEmpty' => !CCaptcha::checkRequirements(), 'except' => 'approve' ], // do not validate this attribute on approve scenario\n\t\t\t[ 'id, news_id, author, text, status, created_at, updated_at', 'safe', 'on' => 'search' ],\n\t\t);\n\t}\n}\n```","html":"<p>#Using <code>CHtml::ajaxButton</code> to process ajax request</p>\n<p>First, check if a current user has <code>siteModerator</code> role, if so, then show ajax button in view.\nWhen request success, we check response code, if it is <code>200</code> - OK, then remove <code>Wait moderation</code> label and <code>Publish comment</code> button.</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">'&lt;span class=\"label label-warning comment-status-'</span> . $comment-&gt;id; . <span class=\"hljs-string\">'\"'</span> . Yii::t( <span class=\"hljs-string\">'myApp'</span>, <span class=\"hljs-string\">'Wait moderation'</span> ); . <span class=\"hljs-string\">'&lt;/span&gt;'</span>;\n<span class=\"hljs-keyword\">if</span> ( Yii::app()-&gt;authManager-&gt;checkAccess( <span class=\"hljs-string\">'siteModerator'</span>, Yii::app()-&gt;user-&gt;id ) )\n{\n    <span class=\"hljs-keyword\">echo</span> CHtml::ajaxButton(\n        Yii::t( <span class=\"hljs-string\">'myApp'</span>, <span class=\"hljs-string\">'Publish comment'</span> ),\n        [ <span class=\"hljs-string\">'approveComment'</span>, <span class=\"hljs-string\">'comment_id'</span> =&gt; $comment-&gt;id ], <span class=\"hljs-comment\">// URL: ?r=myCtrl/approveComment&amp;comment_id=123</span>\n        [\n            <span class=\"hljs-string\">'dataType'</span> =&gt; <span class=\"hljs-string\">'json'</span>,\n            <span class=\"hljs-string\">'success'</span>  =&gt; <span class=\"hljs-string\">'js:function(response)\n                {\n                    console.log(\"Approve comment response:\", response);\n                    if(response &amp;&amp; response.code==200)\n                    {\n                        $(\".comment-status-'</span> . $comment-&gt;id . <span class=\"hljs-string\">'\").remove();\n                        $(\".approve-link-'</span> . $comment-&gt;id . <span class=\"hljs-string\">'\").remove();\n                    }\n                }'</span>,\n        ],\n        [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'btn btn-info btn-xs approve-link-'</span> . $comment-&gt;id ]\n    );\n}</span>\n</code></pre>\n<p>Create <code>approveComment</code> action in <code>MyCtrlController</code>:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyCtrlController</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Controller</span> </span>{\n    <span class=\"hljs-comment\">// ...</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">actionApproveComment</span><span class=\"hljs-params\">( $comment_id )</span>\n    </span>{\n        <span class=\"hljs-keyword\">if</span> ( Yii::app()-&gt;request-&gt;isAjaxRequest )\n        {\n            <span class=\"hljs-comment\">// get model by ID</span>\n            $comment = NewsComments::model()-&gt;findByPk( $comment_id );\n            <span class=\"hljs-keyword\">if</span> ( $comment ) <span class=\"hljs-comment\">// if found...</span>\n            {\n                $comment-&gt;scenario = <span class=\"hljs-string\">'approve'</span>; <span class=\"hljs-comment\">// set scenario</span>\n                $comment-&gt;status   = <span class=\"hljs-number\">1</span>; <span class=\"hljs-comment\">// approve</span>\n                <span class=\"hljs-keyword\">if</span> ( $comment-&gt;save() ) <span class=\"hljs-comment\">// save</span>\n                    <span class=\"hljs-keyword\">echo</span> CJSON::encode( [ <span class=\"hljs-string\">'code'</span> =&gt; <span class=\"hljs-string\">'200'</span>, ] ); <span class=\"hljs-comment\">// OK status</span>\n                <span class=\"hljs-keyword\">else</span>\n                    <span class=\"hljs-keyword\">echo</span> CJSON::encode( $comment-&gt;getErrors() ); <span class=\"hljs-comment\">// errors</span>\n            }\n        }\n    }\n}</span>\n</code></pre>\n<p>Allow execution of action <code>approveComment</code>:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyCtrlController</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Controller</span></span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">accessRules</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> [\n            <span class=\"hljs-comment\">// ...</span>\n            [\n                <span class=\"hljs-string\">'allow'</span>,\n                <span class=\"hljs-string\">'actions'</span> =&gt; [ <span class=\"hljs-string\">'approveComment'</span>, ],\n                <span class=\"hljs-string\">'roles'</span>   =&gt; [ <span class=\"hljs-string\">'siteModerator'</span>, ],\n            ],\n            <span class=\"hljs-comment\">// ...</span>\n            [\n                <span class=\"hljs-string\">'deny'</span>,\n                <span class=\"hljs-string\">'users'</span> =&gt; [ <span class=\"hljs-string\">'*'</span> ]\n            ],\n        ];\n    }\n}</span>\n</code></pre>\n<p>Also set scenario, this is useful when for example you don&#39;t want to validate all fields (e.g. captcha verifyCode field).</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">NewsComments</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CActiveRecord</span></span>{\n    <span class=\"hljs-comment\">// ...</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">rules</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">array</span>(\n            [ <span class=\"hljs-string\">'news_id, author, text'</span>, <span class=\"hljs-string\">'required'</span> ],\n            [ <span class=\"hljs-string\">'news_id, status'</span>, <span class=\"hljs-string\">'numerical'</span>, <span class=\"hljs-string\">'integerOnly'</span> =&gt; <span class=\"hljs-keyword\">true</span> ],\n            [ <span class=\"hljs-string\">'author'</span>, <span class=\"hljs-string\">'length'</span>, <span class=\"hljs-string\">'max'</span> =&gt; <span class=\"hljs-number\">50</span> ],\n            [ <span class=\"hljs-string\">'verifyCode'</span>, <span class=\"hljs-string\">'captcha'</span>, <span class=\"hljs-string\">'allowEmpty'</span> =&gt; !CCaptcha::checkRequirements(), <span class=\"hljs-string\">'except'</span> =&gt; <span class=\"hljs-string\">'approve'</span> ], <span class=\"hljs-comment\">// do not validate this attribute on approve scenario</span>\n            [ <span class=\"hljs-string\">'id, news_id, author, text, status, created_at, updated_at'</span>, <span class=\"hljs-string\">'safe'</span>, <span class=\"hljs-string\">'on'</span> =&gt; <span class=\"hljs-string\">'search'</span> ],\n        );\n    }\n}</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/9426217","description":"Yii tips","files":["https://gist.githubusercontent.com/umidjons/9426217/raw/53c3b2c95b4dd86334b3cc7bb6253a7fd2d10df4/Yii-tips.md"],"content":"#Yii Tutorials/Gists\n\n- [Set aliases in configuration file](https://gist.github.com/umidjons/2bf96c14fb5e8bf55733)\n- [Up and Down icons for sorted columns in CGridView with Twitter Bootstrap](https://gist.github.com/umidjons/5cfde5d260835e2c6d2f)\n- [Inherit controller actions](https://gist.github.com/umidjons/11208197)\n- [QueryBuilder example](https://gist.github.com/umidjons/11140374)\n- [Get a file MIME type](https://gist.github.com/umidjons/10861091)\n- [Using number formatter](https://gist.github.com/umidjons/10824124)\n- [Helper class to work with parameters without DB](https://gist.github.com/umidjons/10803531)\n- [Using more than one ServerFileInput widgets on a page](https://gist.github.com/umidjons/10462499)\n- [Multilingual application name](https://gist.github.com/umidjons/10102626)\n- [Using transactions with ActiveRecord](https://gist.github.com/umidjons/9969749)\n- [Using more checkboxlists with the same model](https://gist.github.com/umidjons/9912003)\n- [Using clips in widgets](https://gist.github.com/umidjons/9911915)\n- [Add additional data- attributes to each row in CGridView (using rowHtmlOptionsExpression)](https://gist.github.com/umidjons/9889371)\n- [Access translated messages from javascript](https://gist.github.com/umidjons/9888711)\n- [Work with common parameters](https://gist.github.com/umidjons/9829421)\n- [Configuring number and date time formats](https://gist.github.com/umidjons/9802253)\n- [Sort associative array by value preserving keys](https://gist.github.com/umidjons/9800039)\n- [Helper class to publish assets (Twitter Bootstrap)](https://gist.github.com/umidjons/9757055)\n- [Convert title to slug](https://gist.github.com/umidjons/9757010)\n- [Helper class for notification messages](https://gist.github.com/umidjons/9755999)\n- [Authenticate user from DB in Yii](https://gist.github.com/umidjons/9425772)\n- [Using CHtml::ajaxButton to process ajax request](https://gist.github.com/umidjons/9459926)\n- [Using CHtml::ajaxSubmitButton in active form](https://gist.github.com/umidjons/9884932)\n- [Custom text for form label](https://gist.github.com/umidjons/9460276)\n- [Custom button in CGridView with AJAX functionality](https://gist.github.com/umidjons/9462265)\n- [Additional configurations for PhpStorm to develop in Yii](https://gist.github.com/umidjons/9483258)\n- [ServerFileInput widget of ElFinder extension to upload & select image file](https://gist.github.com/umidjons/9525300)\n- [Link with confirmation dialog](https://gist.github.com/umidjons/9406329)\n- [Using drop-downs](https://gist.github.com/umidjons/9406148)\n- [Using EJuiDateTimePicker extension to select date & time](https://gist.github.com/umidjons/9406042)\n- [Determine which button was clicked](https://gist.github.com/umidjons/9542049)\n- [Using CMaskedTextField](https://gist.github.com/umidjons/9597513)\n- [My favorite extensions](https://gist.github.com/umidjons/9406440)\n","html":"<p>#Yii Tutorials/Gists</p>\n<ul>\n<li><a href=\"https://gist.github.com/umidjons/2bf96c14fb5e8bf55733\">Set aliases in configuration file</a></li>\n<li><a href=\"https://gist.github.com/umidjons/5cfde5d260835e2c6d2f\">Up and Down icons for sorted columns in CGridView with Twitter Bootstrap</a></li>\n<li><a href=\"https://gist.github.com/umidjons/11208197\">Inherit controller actions</a></li>\n<li><a href=\"https://gist.github.com/umidjons/11140374\">QueryBuilder example</a></li>\n<li><a href=\"https://gist.github.com/umidjons/10861091\">Get a file MIME type</a></li>\n<li><a href=\"https://gist.github.com/umidjons/10824124\">Using number formatter</a></li>\n<li><a href=\"https://gist.github.com/umidjons/10803531\">Helper class to work with parameters without DB</a></li>\n<li><a href=\"https://gist.github.com/umidjons/10462499\">Using more than one ServerFileInput widgets on a page</a></li>\n<li><a href=\"https://gist.github.com/umidjons/10102626\">Multilingual application name</a></li>\n<li><a href=\"https://gist.github.com/umidjons/9969749\">Using transactions with ActiveRecord</a></li>\n<li><a href=\"https://gist.github.com/umidjons/9912003\">Using more checkboxlists with the same model</a></li>\n<li><a href=\"https://gist.github.com/umidjons/9911915\">Using clips in widgets</a></li>\n<li><a href=\"https://gist.github.com/umidjons/9889371\">Add additional data- attributes to each row in CGridView (using rowHtmlOptionsExpression)</a></li>\n<li><a href=\"https://gist.github.com/umidjons/9888711\">Access translated messages from javascript</a></li>\n<li><a href=\"https://gist.github.com/umidjons/9829421\">Work with common parameters</a></li>\n<li><a href=\"https://gist.github.com/umidjons/9802253\">Configuring number and date time formats</a></li>\n<li><a href=\"https://gist.github.com/umidjons/9800039\">Sort associative array by value preserving keys</a></li>\n<li><a href=\"https://gist.github.com/umidjons/9757055\">Helper class to publish assets (Twitter Bootstrap)</a></li>\n<li><a href=\"https://gist.github.com/umidjons/9757010\">Convert title to slug</a></li>\n<li><a href=\"https://gist.github.com/umidjons/9755999\">Helper class for notification messages</a></li>\n<li><a href=\"https://gist.github.com/umidjons/9425772\">Authenticate user from DB in Yii</a></li>\n<li><a href=\"https://gist.github.com/umidjons/9459926\">Using CHtml::ajaxButton to process ajax request</a></li>\n<li><a href=\"https://gist.github.com/umidjons/9884932\">Using CHtml::ajaxSubmitButton in active form</a></li>\n<li><a href=\"https://gist.github.com/umidjons/9460276\">Custom text for form label</a></li>\n<li><a href=\"https://gist.github.com/umidjons/9462265\">Custom button in CGridView with AJAX functionality</a></li>\n<li><a href=\"https://gist.github.com/umidjons/9483258\">Additional configurations for PhpStorm to develop in Yii</a></li>\n<li><a href=\"https://gist.github.com/umidjons/9525300\">ServerFileInput widget of ElFinder extension to upload &amp; select image file</a></li>\n<li><a href=\"https://gist.github.com/umidjons/9406329\">Link with confirmation dialog</a></li>\n<li><a href=\"https://gist.github.com/umidjons/9406148\">Using drop-downs</a></li>\n<li><a href=\"https://gist.github.com/umidjons/9406042\">Using EJuiDateTimePicker extension to select date &amp; time</a></li>\n<li><a href=\"https://gist.github.com/umidjons/9542049\">Determine which button was clicked</a></li>\n<li><a href=\"https://gist.github.com/umidjons/9597513\">Using CMaskedTextField</a></li>\n<li><a href=\"https://gist.github.com/umidjons/9406440\">My favorite extensions</a></li>\n</ul>\n"},{"html_url":"https://gist.github.com/9425772","description":"Yii: Authenticate user from DB","files":["https://gist.githubusercontent.com/umidjons/9425772/raw/4559d99de898472bc811a53bdc4305bdc1959f6c/authenticate-user-from-db.md"],"content":"Authenticate user from DB in Yii\n================================\n\n### Create `user` table\n\n```sql\nCREATE TABLE user (\n    id INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,\n    username VARCHAR(128) NOT NULL,\n    password VARCHAR(128) NOT NULL,\n    email VARCHAR(128) NOT NULL\n);\n```\n\n### User model\nGenerate `User` model with Gii tool.\nAdd `validatePassword` and `hashPassword` methods into User model\n\n```php\n<?php\nclass User extends CActiveRecord\n{\n  // ...\n\tpublic function validatePassword( $password )\n\t{\n\t\treturn CPasswordHelper::verifyPassword( $password, $this->password );\n\t}\n\n\tpublic function hashPassword( $password )\n\t{\n\t\treturn CPasswordHelper::hashPassword( $password );\n\t}\n}\n```\n\n\n### Change UserIdentity class\n\n```php\n<?php\nclass UserIdentity extends CUserIdentity\n{\n\tprivate $_id;\n\tpublic function authenticate()\n\t{\n\t\t$user = User::model()->find( 'username=:username', [ ':username' => $this->username ] );\n\t\tif ( null === $user )\n\t\t\t$this->errorCode = self::ERROR_USERNAME_INVALID;\n\t\telseif ( !$user->validatePassword( $this->password ) )\n\t\t\t$this->errorCode = self::ERROR_PASSWORD_INVALID;\n\t\telse\n\t\t{\n\t\t\t$this->_id       = $user->id;\n\t\t\t$this->username  = $user->username;\n\t\t\t$this->errorCode = self::ERROR_NONE;\n\t\t}\n\t\treturn $this->errorCode == self::ERROR_NONE;\n\t}\n\tpublic function getId()\n\t{\n\t\treturn $this->_id;\n\t}\n}\n```\n\n### Show errors\n\nAdd error summary to login form in `protected/views/site/login.php` to show errors\n\n```php\n\t<?= $form->errorSummary( $model ); ?>\n```\n\n### Controller changes\nConfigure `accessControl` filter & `accessRules`.\n\n```php\n<?php\nclass SiteController extends Controller\n{\n\tpublic function filters()\n\t{\n\t\treturn [ 'accessControl', ];\n\t}\n\n\tpublic function accessRules()\n\t{\n\t\treturn [\n\t\t\t[\n\t\t\t\t'allow',\n\t\t\t\t'actions' => [ 'login', 'index', 'public1', 'public2', ],\n\t\t\t\t'users'   => [ '*' ],\n\t\t\t],\n\t\t\t[\n\t\t\t\t'allow',\n\t\t\t\t'actions' => [ 'secure1', 'secure2', ],\n\t\t\t\t'users'   => [ '@' ],\n\t\t\t],\n\t\t\t[\n\t\t\t\t'deny',\n\t\t\t\t'users' => [ '*' ],\n\t\t\t]\n\t\t];\n\t}\n\t\n\t// ...\n}\n```\n\n### Action to add new users\n\nAdd following method to controller, then call it like so:\n`http://mysite.com/index.php?r=site/addUser&username=admin&password=a123&email=admin@mysite.com`\n\n```php\n<?php\nclass SiteController extends Controller\n{\n  // ...\n\tpublic function actionAddUser( $username, $password, $email )\n\t{\n\t\t$user           = new User;\n\t\t$user->username = $username;\n\t\t$user->password = $user->hashPassword( $password );\n\t\t$user->email    = $email;\n\t\tif ( $user->save() )\n\t\t\techo \"User $username added!\";\n\t\telse\n\t\t\techo '<pre>' . print_r( $user->getErrors(), true ) . '</pre>';\n\t}\n}\n```\n\nAlso change `accessRules` method for using `addUser` action:\n```php\n<?php\n    public function accessRules()\n    {\n        return [\n            [\n                'allow',\n                'actions' => [ 'login', 'index', 'public1', 'public2', ],\n                'users'   => [ '*' ],\n            ],\n            [\n                'allow',\n                'actions' => [ 'secure1', 'secure2', ],\n                'users'   => [ '@' ],\n            ],\n            [\n                'allow',\n                'actions' => [ 'addUser', ],\n                'users'   => [ 'admin', ],\n            ],\n            [\n                'deny',\n                'users' => [ '*' ],\n            ]\n        ];\n    }\n```","html":"<h1 id=\"authenticate-user-from-db-in-yii\">Authenticate user from DB in Yii</h1>\n<h3 id=\"create-user-table\">Create <code>user</code> table</h3>\n<pre><code class=\"lang-sql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-keyword\">user</span> (\n    <span class=\"hljs-keyword\">id</span> <span class=\"hljs-built_in\">INTEGER</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> PRIMARY <span class=\"hljs-keyword\">KEY</span> AUTO_INCREMENT,\n    username <span class=\"hljs-built_in\">VARCHAR</span>(<span class=\"hljs-number\">128</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span>,\n    <span class=\"hljs-keyword\">password</span> <span class=\"hljs-built_in\">VARCHAR</span>(<span class=\"hljs-number\">128</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span>,\n    email <span class=\"hljs-built_in\">VARCHAR</span>(<span class=\"hljs-number\">128</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span>\n);\n</code></pre>\n<h3 id=\"user-model\">User model</h3>\n<p>Generate <code>User</code> model with Gii tool.\nAdd <code>validatePassword</code> and <code>hashPassword</code> methods into User model</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">User</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CActiveRecord</span>\n</span>{\n  <span class=\"hljs-comment\">// ...</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">validatePassword</span><span class=\"hljs-params\">( $password )</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> CPasswordHelper::verifyPassword( $password, <span class=\"hljs-keyword\">$this</span>-&gt;password );\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">hashPassword</span><span class=\"hljs-params\">( $password )</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> CPasswordHelper::hashPassword( $password );\n    }\n}</span>\n</code></pre>\n<h3 id=\"change-useridentity-class\">Change UserIdentity class</h3>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserIdentity</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">CUserIdentity</span>\n</span>{\n    <span class=\"hljs-keyword\">private</span> $_id;\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">authenticate</span><span class=\"hljs-params\">()</span>\n    </span>{\n        $user = User::model()-&gt;find( <span class=\"hljs-string\">'username=:username'</span>, [ <span class=\"hljs-string\">':username'</span> =&gt; <span class=\"hljs-keyword\">$this</span>-&gt;username ] );\n        <span class=\"hljs-keyword\">if</span> ( <span class=\"hljs-keyword\">null</span> === $user )\n            <span class=\"hljs-keyword\">$this</span>-&gt;errorCode = <span class=\"hljs-keyword\">self</span>::ERROR_USERNAME_INVALID;\n        <span class=\"hljs-keyword\">elseif</span> ( !$user-&gt;validatePassword( <span class=\"hljs-keyword\">$this</span>-&gt;password ) )\n            <span class=\"hljs-keyword\">$this</span>-&gt;errorCode = <span class=\"hljs-keyword\">self</span>::ERROR_PASSWORD_INVALID;\n        <span class=\"hljs-keyword\">else</span>\n        {\n            <span class=\"hljs-keyword\">$this</span>-&gt;_id       = $user-&gt;id;\n            <span class=\"hljs-keyword\">$this</span>-&gt;username  = $user-&gt;username;\n            <span class=\"hljs-keyword\">$this</span>-&gt;errorCode = <span class=\"hljs-keyword\">self</span>::ERROR_NONE;\n        }\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">$this</span>-&gt;errorCode == <span class=\"hljs-keyword\">self</span>::ERROR_NONE;\n    }\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getId</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">$this</span>-&gt;_id;\n    }\n}</span>\n</code></pre>\n<h3 id=\"show-errors\">Show errors</h3>\n<p>Add error summary to login form in <code>protected/views/site/login.php</code> to show errors</p>\n<pre><code class=\"lang-php\">    <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;errorSummary( $model ); <span class=\"hljs-meta\">?&gt;</span></span>\n</code></pre>\n<h3 id=\"controller-changes\">Controller changes</h3>\n<p>Configure <code>accessControl</code> filter &amp; <code>accessRules</code>.</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SiteController</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Controller</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">filters</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> [ <span class=\"hljs-string\">'accessControl'</span>, ];\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">accessRules</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> [\n            [\n                <span class=\"hljs-string\">'allow'</span>,\n                <span class=\"hljs-string\">'actions'</span> =&gt; [ <span class=\"hljs-string\">'login'</span>, <span class=\"hljs-string\">'index'</span>, <span class=\"hljs-string\">'public1'</span>, <span class=\"hljs-string\">'public2'</span>, ],\n                <span class=\"hljs-string\">'users'</span>   =&gt; [ <span class=\"hljs-string\">'*'</span> ],\n            ],\n            [\n                <span class=\"hljs-string\">'allow'</span>,\n                <span class=\"hljs-string\">'actions'</span> =&gt; [ <span class=\"hljs-string\">'secure1'</span>, <span class=\"hljs-string\">'secure2'</span>, ],\n                <span class=\"hljs-string\">'users'</span>   =&gt; [ <span class=\"hljs-string\">'@'</span> ],\n            ],\n            [\n                <span class=\"hljs-string\">'deny'</span>,\n                <span class=\"hljs-string\">'users'</span> =&gt; [ <span class=\"hljs-string\">'*'</span> ],\n            ]\n        ];\n    }\n\n    <span class=\"hljs-comment\">// ...</span>\n}</span>\n</code></pre>\n<h3 id=\"action-to-add-new-users\">Action to add new users</h3>\n<p>Add following method to controller, then call it like so:\n<code>http://mysite.com/index.php?r=site/addUser&amp;username=admin&amp;password=a123&amp;email=admin@mysite.com</code></p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SiteController</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Controller</span>\n</span>{\n  <span class=\"hljs-comment\">// ...</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">actionAddUser</span><span class=\"hljs-params\">( $username, $password, $email )</span>\n    </span>{\n        $user           = <span class=\"hljs-keyword\">new</span> User;\n        $user-&gt;username = $username;\n        $user-&gt;password = $user-&gt;hashPassword( $password );\n        $user-&gt;email    = $email;\n        <span class=\"hljs-keyword\">if</span> ( $user-&gt;save() )\n            <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">\"User $username added!\"</span>;\n        <span class=\"hljs-keyword\">else</span>\n            <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">'&lt;pre&gt;'</span> . print_r( $user-&gt;getErrors(), <span class=\"hljs-keyword\">true</span> ) . <span class=\"hljs-string\">'&lt;/pre&gt;'</span>;\n    }\n}</span>\n</code></pre>\n<p>Also change <code>accessRules</code> method for using <code>addUser</code> action:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">accessRules</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> [\n            [\n                <span class=\"hljs-string\">'allow'</span>,\n                <span class=\"hljs-string\">'actions'</span> =&gt; [ <span class=\"hljs-string\">'login'</span>, <span class=\"hljs-string\">'index'</span>, <span class=\"hljs-string\">'public1'</span>, <span class=\"hljs-string\">'public2'</span>, ],\n                <span class=\"hljs-string\">'users'</span>   =&gt; [ <span class=\"hljs-string\">'*'</span> ],\n            ],\n            [\n                <span class=\"hljs-string\">'allow'</span>,\n                <span class=\"hljs-string\">'actions'</span> =&gt; [ <span class=\"hljs-string\">'secure1'</span>, <span class=\"hljs-string\">'secure2'</span>, ],\n                <span class=\"hljs-string\">'users'</span>   =&gt; [ <span class=\"hljs-string\">'@'</span> ],\n            ],\n            [\n                <span class=\"hljs-string\">'allow'</span>,\n                <span class=\"hljs-string\">'actions'</span> =&gt; [ <span class=\"hljs-string\">'addUser'</span>, ],\n                <span class=\"hljs-string\">'users'</span>   =&gt; [ <span class=\"hljs-string\">'admin'</span>, ],\n            ],\n            [\n                <span class=\"hljs-string\">'deny'</span>,\n                <span class=\"hljs-string\">'users'</span> =&gt; [ <span class=\"hljs-string\">'*'</span> ],\n            ]\n        ];\n    }</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/9406440","description":"My favorite Yii extensions","files":["https://gist.githubusercontent.com/umidjons/9406440/raw/bb1715b5ff2c3a000ebe424fd42904c4c62f0b0d/yii-favorite-extensions.md"],"content":"- [Easy Image for generating thumbnails](http://www.yiiframework.com/extension/easyimage/)\n- [TinyMCE](http://www.yiiframework.com/extension/newtinymce/)\n- [ElFinder to browse/upload files](http://www.yiiframework.com/extension/elfinder/)\n- [JuiDateTimePicker](http://www.yiiframework.com/extension/juidatetimepicker)","html":"<ul>\n<li><a href=\"http://www.yiiframework.com/extension/easyimage/\">Easy Image for generating thumbnails</a></li>\n<li><a href=\"http://www.yiiframework.com/extension/newtinymce/\">TinyMCE</a></li>\n<li><a href=\"http://www.yiiframework.com/extension/elfinder/\">ElFinder to browse/upload files</a></li>\n<li><a href=\"http://www.yiiframework.com/extension/juidatetimepicker\">JuiDateTimePicker</a></li>\n</ul>\n"},{"html_url":"https://gist.github.com/9406329","description":"Yii: Link with confirmation dialog.","files":[],"content":""},{"html_url":"https://gist.github.com/9406148","description":"Yii: using CActiveForm::dropDownList","files":[],"content":""},{"html_url":"https://gist.github.com/9406042","description":"Yii: using EJuiDateTimePicker example","files":["https://gist.githubusercontent.com/umidjons/9406042/raw/63d218b12f1c79eca31ed6aedaf56f7a1e70cf1d/ejui-date-time-picker.md"],"content":"Download `EJuiDateTimePicker` from Github [repo](https://github.com/magefad/EJuiDateTimePicker)\nExtract extension into `ext.juidatetimepicker` folder.\nEnable auto-loading:\n```php\n<?php\n'import'     => [\n    // ...\n    'ext.juidatetimepicker.EJuiDateTimePicker',\n],\n```\n\nThen in views you can use it as follow:\n```php\n<div class=\"form-wrapper\">\n \n\t<?php $form = $this->beginWidget( 'CActiveForm', array(\n\t\t'action'      => Yii::app()->createUrl( $this->route ),\n\t\t'method'      => 'get',\n\t\t'htmlOptions' => [\n\t\t\t'class' => 'form-horizontal search-form',\n\t\t\t'role'  => 'form',\n\t\t]\n\t) ); ?>\n\t\n    <!-- ... -->\n    \n\t<div class=\"form-group\">\n\t\t<div class=\"col-sm-2\">\n\t\t\t<?= $form->label( $model, 'created_at' ); ?>\n\t\t\t<?php\n\t\t\t$this->widget( 'ext.juidatetimepicker.EJuiDateTimePicker', [\n\t\t\t\t'model'       => $model,\n\t\t\t\t'attribute'   => 'created_at',\n\t\t\t\t'language'    => 'ru',\n\t\t\t\t'options'     => [\n\t\t\t\t\t'dateFormat' => 'dd.mm.yy',\n\t\t\t\t\t'timeFormat' => 'HH:mm',\n\t\t\t\t],\n\t\t\t\t'htmlOptions' => [\n\t\t\t\t\t'class' => 'form-control',\n\t\t\t\t],\n\t\t\t] );\n\t\t\t?>\n\t\t</div>\n \n\t\t<div class=\"col-sm-2\">\n\t\t\t<?= $form->label( $model, 'edited_at' ); ?>\n\t\t\t<?php\n\t\t\t$this->widget( 'ext.juidatetimepicker.EJuiDateTimePicker', [\n\t\t\t\t'model'       => $model,\n\t\t\t\t'attribute'   => 'edited_at',\n\t\t\t\t'language'    => 'ru',\n\t\t\t\t'options'     => [\n\t\t\t\t\t'dateFormat' => 'dd.mm.yy',\n\t\t\t\t\t'timeFormat' => 'HH:mm',\n\t\t\t\t],\n\t\t\t\t'htmlOptions' => [\n\t\t\t\t\t'class' => 'form-control',\n\t\t\t\t],\n\t\t\t] );\n\t\t\t?>\n\t\t</div>\n\t</div>\n\t\n    <!-- ... -->\n    \n\t<div class=\"form-group\">\n\t\t<div class=\"col-sm-offset-6 col-sm-6 text-right\">\n\t\t\t<?= CHtml::submitButton( 'Submit', [ 'class' => 'btn btn-default' ] ); ?>\n\t\t</div>\n\t</div>\n \n\t<?php $this->endWidget(); ?>\n</div>\n```\n","html":"<p>Download <code>EJuiDateTimePicker</code> from Github <a href=\"https://github.com/magefad/EJuiDateTimePicker\">repo</a>\nExtract extension into <code>ext.juidatetimepicker</code> folder.\nEnable auto-loading:</p>\n<pre><code class=\"lang-php\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-string\">'import'</span>     =&gt; [\n    <span class=\"hljs-comment\">// ...</span>\n    <span class=\"hljs-string\">'ext.juidatetimepicker.EJuiDateTimePicker'</span>,\n],</span>\n</code></pre>\n<p>Then in views you can use it as follow:</p>\n<pre><code class=\"lang-php\">&lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"form-wrapper\"</span>&gt;\n\n    <span class=\"xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> $form = <span class=\"hljs-keyword\">$this</span>-&gt;beginWidget( <span class=\"hljs-string\">'CActiveForm'</span>, <span class=\"hljs-keyword\">array</span>(\n        <span class=\"hljs-string\">'action'</span>      =&gt; Yii::app()-&gt;createUrl( <span class=\"hljs-keyword\">$this</span>-&gt;route ),\n        <span class=\"hljs-string\">'method'</span>      =&gt; <span class=\"hljs-string\">'get'</span>,\n        <span class=\"hljs-string\">'htmlOptions'</span> =&gt; [\n            <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'form-horizontal search-form'</span>,\n            <span class=\"hljs-string\">'role'</span>  =&gt; <span class=\"hljs-string\">'form'</span>,\n        ]\n    ) ); <span class=\"hljs-meta\">?&gt;</span></span>\n\n    <span class=\"hljs-comment\">&lt;!-- ... --&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-group\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-2\"</span>&gt;</span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;label( $model, <span class=\"hljs-string\">'created_at'</span> ); <span class=\"hljs-meta\">?&gt;</span></span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n            <span class=\"hljs-keyword\">$this</span>-&gt;widget( <span class=\"hljs-string\">'ext.juidatetimepicker.EJuiDateTimePicker'</span>, [\n                <span class=\"hljs-string\">'model'</span>       =&gt; $model,\n                <span class=\"hljs-string\">'attribute'</span>   =&gt; <span class=\"hljs-string\">'created_at'</span>,\n                <span class=\"hljs-string\">'language'</span>    =&gt; <span class=\"hljs-string\">'ru'</span>,\n                <span class=\"hljs-string\">'options'</span>     =&gt; [\n                    <span class=\"hljs-string\">'dateFormat'</span> =&gt; <span class=\"hljs-string\">'dd.mm.yy'</span>,\n                    <span class=\"hljs-string\">'timeFormat'</span> =&gt; <span class=\"hljs-string\">'HH:mm'</span>,\n                ],\n                <span class=\"hljs-string\">'htmlOptions'</span> =&gt; [\n                    <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'form-control'</span>,\n                ],\n            ] );\n            <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-2\"</span>&gt;</span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= $form-&gt;label( $model, <span class=\"hljs-string\">'edited_at'</span> ); <span class=\"hljs-meta\">?&gt;</span></span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span>\n            <span class=\"hljs-keyword\">$this</span>-&gt;widget( <span class=\"hljs-string\">'ext.juidatetimepicker.EJuiDateTimePicker'</span>, [\n                <span class=\"hljs-string\">'model'</span>       =&gt; $model,\n                <span class=\"hljs-string\">'attribute'</span>   =&gt; <span class=\"hljs-string\">'edited_at'</span>,\n                <span class=\"hljs-string\">'language'</span>    =&gt; <span class=\"hljs-string\">'ru'</span>,\n                <span class=\"hljs-string\">'options'</span>     =&gt; [\n                    <span class=\"hljs-string\">'dateFormat'</span> =&gt; <span class=\"hljs-string\">'dd.mm.yy'</span>,\n                    <span class=\"hljs-string\">'timeFormat'</span> =&gt; <span class=\"hljs-string\">'HH:mm'</span>,\n                ],\n                <span class=\"hljs-string\">'htmlOptions'</span> =&gt; [\n                    <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'form-control'</span>,\n                ],\n            ] );\n            <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-comment\">&lt;!-- ... --&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-group\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-sm-offset-6 col-sm-6 text-right\"</span>&gt;</span>\n            <span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>= CHtml::submitButton( <span class=\"hljs-string\">'Submit'</span>, [ <span class=\"hljs-string\">'class'</span> =&gt; <span class=\"hljs-string\">'btn btn-default'</span> ] ); <span class=\"hljs-meta\">?&gt;</span></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">$this</span>-&gt;endWidget(); <span class=\"hljs-meta\">?&gt;</span></span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/9405991","description":"Yii: Advanced search form with Twitter Bootstrap controls/components","files":[],"content":""},{"html_url":"https://gist.github.com/9405919","description":"Yii: Custom button on CGridView, configure CButtonColumn buttons","files":[],"content":""},{"html_url":"https://gist.github.com/9386957","description":"Yii: change user's password if new one typed (not empty), otherwise do not change","files":[],"content":""},{"html_url":"https://gist.github.com/9385973","description":"Yii: using clips - captured output (CClipWidget example)","files":[],"content":""},{"html_url":"https://gist.github.com/9383758","description":"PhpStorm: Record Auto semicolon macro and bind shortcut to it","files":[],"content":""},{"html_url":"https://gist.github.com/9382132","description":"Stylus: mixin for linearGradient","files":[],"content":""},{"html_url":"https://gist.github.com/9382090","description":"Yii: sort and filter related table column in CGridView","files":[],"content":""},{"html_url":"https://gist.github.com/9319044","description":"Yii: User registration, roles & privileges","files":[],"content":""},{"html_url":"https://gist.github.com/9318960","description":"Using active record's beforeSave() and afterSave() methods/events in Yii","files":[],"content":""},{"html_url":"https://gist.github.com/9204361","description":"Yii: Prevent resending form data on page refresh by using CController::refresh() method","files":[],"content":""},{"html_url":"https://gist.github.com/9203479","description":"Yii: Named and parameterized scopes example","files":[],"content":""},{"html_url":"https://gist.github.com/9203452","description":"Yii: CTimestampBehavior example to automatically set create and update datetimes","files":[],"content":""},{"html_url":"https://gist.github.com/9203429","description":"Yii: Refresh captcha on every page load/refresh","files":[],"content":""},{"html_url":"https://gist.github.com/9183820","description":"Publish assets (Bootstrap css, js, fonts) with CAssetManager in Yii","files":[],"content":""},{"html_url":"https://gist.github.com/9183805","description":"Use bootstrap menu in Yii with CMenu","files":[],"content":""},{"html_url":"https://gist.github.com/9183784","description":"Hide index file in Yii","files":[],"content":""},{"html_url":"https://gist.github.com/9183735","description":"Format date and time in Yii with CFormatter","files":[],"content":""},{"html_url":"https://gist.github.com/9107445","description":"Allow GET,POST,PUT,DELETE RESTful requests in .htaccess","files":[],"content":""},{"html_url":"https://gist.github.com/8782442","description":"Installing laravel in OpenServer via Composer","files":[],"content":""},{"html_url":"https://gist.github.com/8781955","description":"Create symlink to php.ini in c:\\windows in OpenServer to use php.ini configuration in PHP CLI","files":[],"content":""},{"html_url":"https://gist.github.com/8739045","description":"Yii: Read DB records row by row in Yii","files":[],"content":""},{"html_url":"https://gist.github.com/8738869","description":"Using PHPExcel in Yii","files":[],"content":""},{"html_url":"https://gist.github.com/8738580","description":"Compress file with ZipArchive","files":[],"content":""},{"html_url":"https://gist.github.com/8732226","description":"Use PHPExcel in Yii","files":[],"content":""},{"html_url":"https://gist.github.com/8730745","description":"Left pad of string/number","files":[],"content":""},{"html_url":"https://gist.github.com/8665635","description":"Last row and column numbers with data in Excel via VB","files":[],"content":""},{"html_url":"https://gist.github.com/8662929","description":"Configure VIM","files":[],"content":""},{"html_url":"https://gist.github.com/8654069","description":"Custom function example in BASH.\nLog function with date and time prefixed to the message.","files":[],"content":""},{"html_url":"https://gist.github.com/8612712","description":"JS/JQuery: add copyright text on copy event","files":[],"content":""},{"html_url":"https://gist.github.com/8593789","description":"NodeJS: HTTP Server with re-listening capability, when configuration changes","files":[],"content":""},{"html_url":"https://gist.github.com/8593706","description":"NodeJS: HTTP Server which work with static html files.","files":[],"content":""},{"html_url":"https://gist.github.com/8592647","description":"NodeJS: Simple read file example","files":[],"content":""},{"html_url":"https://gist.github.com/8473468","description":"MySQL: if row exists check","files":[],"content":""},{"html_url":"https://gist.github.com/8417405","description":"Parse HTML via phpQuery example","files":[],"content":""},{"html_url":"https://gist.github.com/8417312","description":"Redirect nohup output to a file","files":[],"content":""},{"html_url":"https://gist.github.com/8396981","description":"PubSub pattern / Events in PHP","files":[],"content":""},{"html_url":"https://gist.github.com/8395825","description":"Change database and table character set and collate","files":[],"content":""},{"html_url":"https://gist.github.com/8395603","description":"Archive/Compress folder, split into chunks, recreate/join original archive, decompress file","files":[],"content":""},{"html_url":"https://gist.github.com/8395466","description":"Split the file into 50 MB pieces with the given prefix","files":[],"content":""},{"html_url":"https://gist.github.com/8350866","description":"MySQL ERROR 2003 Solving","files":[],"content":""},{"html_url":"https://gist.github.com/8348744","description":"MySQL: show version information","files":[],"content":""},{"html_url":"https://gist.github.com/8317490","description":"NodeJS: Hello World Server Example","files":[],"content":""},{"html_url":"https://gist.github.com/8281068","description":"JavaScript: Convert number to bin, oct, hex strings and opposite","files":[],"content":""},{"html_url":"https://gist.github.com/8280975","description":"JavaScript: convert to number","files":[],"content":""},{"html_url":"https://gist.github.com/8280971","description":"Using getters/setters, using class members as properties.","files":[],"content":""},{"html_url":"https://gist.github.com/8280961","description":"Using backtick in PHP. Using linux find command in PHP. Split lines by EOL.","files":[],"content":""},{"html_url":"https://gist.github.com/8280953","description":"Round minutes by 15","files":[],"content":""},{"html_url":"https://gist.github.com/8280949","description":"array_map example to return modified array","files":[],"content":""},{"html_url":"https://gist.github.com/8280944","description":"Parse datetime from string and convert it to other format","files":[],"content":""},{"html_url":"https://gist.github.com/8280940","description":"Helper method to log into stdout with variable arguments.","files":[],"content":""},{"html_url":"https://gist.github.com/8280935","description":"Update with JOIN and CASE example","files":[],"content":""},{"html_url":"https://gist.github.com/8280933","description":"Copy tables from one database to another using mysqldump","files":[],"content":""},{"html_url":"https://gist.github.com/8280927","description":"mysqldump example","files":[],"content":""},{"html_url":"https://gist.github.com/8280921","description":"Create user and grant access to a table for modifications.","files":[],"content":""},{"html_url":"https://gist.github.com/8280915","description":"Get phpinfo() from command line","files":[],"content":""},{"html_url":"https://gist.github.com/8280912","description":"Emit & listen events on NodeJS","files":[],"content":""},{"html_url":"https://gist.github.com/8280907","description":"NodeJS: async module example (install async module before executing example)","files":[],"content":""},{"html_url":"https://gist.github.com/8280897","description":"Set NODE_PATH to load globally installed modules","files":[],"content":""},{"html_url":"https://gist.github.com/8280885","description":"Get URL parameter value with jQuery","files":[],"content":""},{"html_url":"https://gist.github.com/8280867","description":"Read CSV file in PHP","files":[],"content":""},{"html_url":"https://gist.github.com/8265657","description":"NodeJS: Write/Append into a file","files":[],"content":""},{"html_url":"https://gist.github.com/8265535","description":"NodeJS: read file","files":[],"content":""},{"html_url":"https://gist.github.com/8265223","description":"Vim: .vimrc example for easy programming","files":["https://gist.githubusercontent.com/umidjons/8265223/raw/f4d50d085c59bddbebe4a4de3e3973f9f3b0aba9/vimrc.md"],"content":"# Vim & gVim configurations\n\nChange color scheme\n```vim\ncolorscheme candycode\n```\n\nShow line numbers\n```vim\nset nu!\n```\n\nSet `gVim` font\n```vim\nset guifont=Consolas:h12:cRUSSIAN\n```\n\nChange language\n```vim\nset langmenu=en_US\nlet $LANG='en_US'\nsource $VIMRUNTIME/delmenu.vim\nsource $VIMRUNTIME/menu.vim\n```\n\nChange encoding\n```vim\nset encoding=utf8\n```\n\nSet `TAB` size\n```vim\nset softtabstop=2\n```\n\nEnable auto indentation\n```vim\nset autoindent\n```\n\nEnable indentation according to file type\n```vim\nfiletype plugin indent on\n```\n\nConfigure paired characters\n```vim\ninoremap ' ''<ESC>ha\ninoremap \" \"\"<ESC>ha\ninoremap ` ``<ESC>ha\ninoremap ( ()<ESC>ha\ninoremap [ []<ESC>ha\ninoremap { {}<ESC>ha\ninoremap /* /** */<ESC>2ha\n```\n\nEnable 256 colors in terminal\n```vim\nset t_Co=256\n```\n\nChange default `netrw` window size\n```vim\nlet g:netrw_winsize=25\n```\n\nEnable preview in `netrw`\n```vim\nlet g:netrw_preview=1\n```\n\nSet commands and search patterns history (default is 50)\n```vim\nset history=100\n```\n\nSome mapping related to PHP\n===\n\nCreate new file in `c:\\program\\ files\\vim\\vimfiles\\ftplugin\\php_mymaps.vim`.\n\nPut colon `,`, semicolon `;` at EOL:\n\n```vim\ninoremap ;; <C-o>A;\ninoremap ,, <C-o>A,\n```\n\nSpaces around `=`, `=>`\n\n```vim\ninoremap =<space> <space>=<space>\ninoremap =><space> <space>=><space>\n```\n","html":"<h1 id=\"vim-gvim-configurations\">Vim &amp; gVim configurations</h1>\n<p>Change color scheme</p>\n<pre><code class=\"lang-vim\"><span class=\"hljs-attribute\">colorscheme candycode</span>\n</code></pre>\n<p>Show line numbers</p>\n<pre><code class=\"lang-vim\"><span class=\"hljs-keyword\">set</span> nu!\n</code></pre>\n<p>Set <code>gVim</code> font</p>\n<pre><code class=\"lang-vim\">set guifont=<span class=\"hljs-string\">Consolas:</span><span class=\"hljs-string\">h12:</span>cRUSSIAN\n</code></pre>\n<p>Change language</p>\n<pre><code class=\"lang-vim\"><span class=\"hljs-built_in\">set</span> langmenu=en_US\n<span class=\"hljs-built_in\">let</span> <span class=\"hljs-variable\">$LANG</span>=<span class=\"hljs-string\">'en_US'</span>\n<span class=\"hljs-built_in\">source</span> <span class=\"hljs-variable\">$VIMRUNTIME</span>/delmenu.vim\n<span class=\"hljs-built_in\">source</span> <span class=\"hljs-variable\">$VIMRUNTIME</span>/menu.vim\n</code></pre>\n<p>Change encoding</p>\n<pre><code class=\"lang-vim\"><span class=\"hljs-keyword\">set</span> <span class=\"hljs-keyword\">encoding</span>=utf8\n</code></pre>\n<p>Set <code>TAB</code> size</p>\n<pre><code class=\"lang-vim\"><span class=\"hljs-keyword\">set</span> softtabstop=<span class=\"hljs-number\">2</span>\n</code></pre>\n<p>Enable auto indentation</p>\n<pre><code class=\"lang-vim\"><span class=\"hljs-keyword\">set</span> autoindent\n</code></pre>\n<p>Enable indentation according to file type</p>\n<pre><code class=\"lang-vim\"><span class=\"hljs-keyword\">filetype</span> plugin <span class=\"hljs-built_in\">indent</span> <span class=\"hljs-keyword\">on</span>\n</code></pre>\n<p>Configure paired characters</p>\n<pre><code class=\"lang-vim\"><span class=\"xml\">inoremap ' ''<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ESC</span>&gt;</span>ha\ninoremap \" \"\"<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ESC</span>&gt;</span>ha\ninoremap ` ``<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ESC</span>&gt;</span>ha\ninoremap ( ()<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ESC</span>&gt;</span>ha\ninoremap [ []<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ESC</span>&gt;</span>ha\ninoremap </span><span class=\"hljs-template-variable\">{ {}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ESC</span>&gt;</span>ha\ninoremap /* /** */<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ESC</span>&gt;</span>2ha</span>\n</code></pre>\n<p>Enable 256 colors in terminal</p>\n<pre><code class=\"lang-vim\"><span class=\"hljs-keyword\">set</span> t_Co=<span class=\"hljs-number\">256</span>\n</code></pre>\n<p>Change default <code>netrw</code> window size</p>\n<pre><code class=\"lang-vim\"><span class=\"hljs-keyword\">let</span> g:<span class=\"hljs-attr\">netrw_winsize=25</span>\n</code></pre>\n<p>Enable preview in <code>netrw</code></p>\n<pre><code class=\"lang-vim\"><span class=\"hljs-keyword\">let</span> g:<span class=\"hljs-attr\">netrw_preview=1</span>\n</code></pre>\n<p>Set commands and search patterns history (default is 50)</p>\n<pre><code class=\"lang-vim\"><span class=\"hljs-built_in\">set</span> <span class=\"hljs-built_in\">history</span>=100\n</code></pre>\n<h1 id=\"some-mapping-related-to-php\">Some mapping related to PHP</h1>\n<p>Create new file in <code>c:\\program\\ files\\vim\\vimfiles\\ftplugin\\php_mymaps.vim</code>.</p>\n<p>Put colon <code>,</code>, semicolon <code>;</code> at EOL:</p>\n<pre><code class=\"lang-vim\">inoremap ;; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">C-o</span>&gt;</span>A;\ninoremap ,, <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">C-o</span>&gt;</span>A,\n</code></pre>\n<p>Spaces around <code>=</code>, <code>=&gt;</code></p>\n<pre><code class=\"lang-vim\"><span class=\"hljs-keyword\">inoremap</span> =<span class=\"hljs-symbol\">&lt;space&gt;</span> <span class=\"hljs-symbol\">&lt;space&gt;</span>=<span class=\"hljs-symbol\">&lt;space&gt;</span>\n<span class=\"hljs-keyword\">inoremap</span> =&gt;<span class=\"hljs-symbol\">&lt;space&gt;</span> <span class=\"hljs-symbol\">&lt;space&gt;</span>=&gt;<span class=\"hljs-symbol\">&lt;space&gt;</span>\n</code></pre>\n"},{"html_url":"https://gist.github.com/8265173","description":"NodeJS: create and remove directory","files":[],"content":""},{"html_url":"https://gist.github.com/8255504","description":"NodeJS: Hello World HTTP Server","files":[],"content":""},{"html_url":"https://gist.github.com/7924438","description":"Generate random color in JS","files":[],"content":""},{"html_url":"https://gist.github.com/7924411","description":"Generate random web color in PHP\nFrom http://www.craiglotter.co.za/2010/04/17/php-select-random-web-color-with-one-line-of-code/","files":[],"content":""},{"html_url":"https://gist.github.com/7905491","description":"CActiveForm::checkBoxList() example","files":[],"content":""},{"html_url":"https://gist.github.com/7887520","description":"Get specified minutes before date and time from current date and specified time value.","files":[],"content":""},{"html_url":"https://gist.github.com/7887496","description":"Convert comma separated day of weeks (number representation) to day of weeks names","files":[],"content":""},{"html_url":"https://gist.github.com/7869564","description":"MySQL: create stored procedure and cursor example","files":[],"content":""},{"html_url":"https://gist.github.com/7822124","description":"Yii: Tooltips for CGridView cell value","files":[],"content":""},{"html_url":"https://gist.github.com/7820509","description":"Yii: change presenting/display values of the column in CGridView","files":[],"content":""},{"html_url":"https://gist.github.com/7802282","description":"Yii: CGridView column with drop-down filter","files":[],"content":""},{"html_url":"https://gist.github.com/7786750","description":"Yii: Send additional data in yiiGridView.update(), and access it in action & model","files":[],"content":""},{"html_url":"https://gist.github.com/7785506","description":"Yii: JQuery UI Button Set","files":[],"content":""},{"html_url":"https://gist.github.com/7783521","description":"Yii: EJuiDateTimePicker extension to choose only time (no date controls)","files":[],"content":""},{"html_url":"https://gist.github.com/7768149","description":"Run MySQL statement from bash script","files":[],"content":""},{"html_url":"https://gist.github.com/7767881","description":"Defragment table in MySQL","files":[],"content":""},{"html_url":"https://gist.github.com/7749234","description":"Get list of proxy servers as SQL insert statements from tipaproxy in console","files":[],"content":""},{"html_url":"https://gist.github.com/7745190","description":"Current and yesterday date","files":[],"content":""},{"html_url":"https://gist.github.com/7716835","description":"Class to work with Yandex Market Partner API. Using cURL in PHP.","files":[],"content":""},{"html_url":"https://gist.github.com/7716280","description":"Send PUT request to Yandex Market on terminal via CURL","files":[],"content":""},{"html_url":"https://gist.github.com/7703637","description":"Directories size in linux terminal","files":[],"content":""},{"html_url":"https://gist.github.com/7702746","description":"Remove array item in foreach loop","files":[],"content":""},{"html_url":"https://gist.github.com/7675613","description":"MySQL: Row number per group","files":[],"content":""},{"html_url":"https://gist.github.com/7672514","description":"Typehinting of variable/property type in PHPStorm","files":[],"content":""},{"html_url":"https://gist.github.com/7656475","description":"PHP: Log message into file with variable length parameters","files":[],"content":""},{"html_url":"https://gist.github.com/7655748","description":"PHP: Create directories if not already exists","files":[],"content":""},{"html_url":"https://gist.github.com/7655702","description":"PHP: Persistent connection to DB via PDO / use existing connection if available.","files":[],"content":""},{"html_url":"https://gist.github.com/7653667","description":"Swapping two variables values without third variable.","files":[],"content":""},{"html_url":"https://gist.github.com/7611722","description":"Excel: Search cell value from column B in column A and give position if found, else -1.","files":[],"content":""},{"html_url":"https://gist.github.com/7599105","description":"Remove grep command while grepping something using ps command","files":[],"content":""},{"html_url":"https://gist.github.com/7595266","description":"Yii: drop down to choose page size for CGridView","files":[],"content":""},{"html_url":"https://gist.github.com/7595157","description":"Apache: Redirect www.example.com/someurl/ to www.example.com permanently","files":[],"content":""},{"html_url":"https://gist.github.com/7579786","description":"Linux: zip/unzip folder on linux terminal","files":[],"content":""},{"html_url":"https://gist.github.com/7543076","description":"Yii: Publish and load js from view folder via AssetManager","files":[],"content":""},{"html_url":"https://gist.github.com/7483031","description":"Nearest integer value by 10 time","files":[],"content":""},{"html_url":"https://gist.github.com/7465458","description":"Get user agents from http://www.useragentstring.com/pages/opera/ without jQuery","files":[],"content":""},{"html_url":"https://gist.github.com/7370885","description":"MySQL: Logging column changes via triggers","files":[],"content":""},{"html_url":"https://gist.github.com/7331295","description":"Yandex Market: Information about bids\nhttp://api.yandex.ru/market/partner/doc/dg/reference/post-campaigns-id-bids.xml?lang=ru","files":[],"content":""},{"html_url":"https://gist.github.com/7331182","description":"Yandex Market: Get product offers by company id","files":[],"content":""},{"html_url":"https://gist.github.com/7299374","description":"jQuery: Show or Hide / Toggle element with condition","files":[],"content":""},{"html_url":"https://gist.github.com/7298716","description":"Yii: Breadcrumbs widget with Breadcrumb microdata optimized for search engines\nMore: https://support.google.com/webmasters/answer/185417","files":[],"content":""},{"html_url":"https://gist.github.com/7278285","description":"Redirect www.domain.com to domain.com","files":[],"content":""},{"html_url":"https://gist.github.com/7263427","description":"Get GET parameters/query string from URL in javascript","files":[],"content":""},{"html_url":"https://gist.github.com/7211910","description":"JavaScript: Format number","files":[],"content":""},{"html_url":"https://gist.github.com/7210459","description":"Yii: send JSON object to controller action via Ajax request","files":[],"content":""},{"html_url":"https://gist.github.com/7210077","description":"Yii: find all records as array trick","files":[],"content":""},{"html_url":"https://gist.github.com/7136010","description":"Customize breadcrumbs widget in Yii layout example","files":[],"content":""},{"html_url":"https://gist.github.com/7097797","description":"Create SQL command example in Yii","files":[],"content":""},{"html_url":"https://gist.github.com/7081744","description":"Create new web application","files":[],"content":""},{"html_url":"https://gist.github.com/7024337","description":"Append one array to another array in JS","files":[],"content":""},{"html_url":"https://gist.github.com/6865350","description":"Traverse DOM elements recursively.","files":[],"content":""},{"html_url":"https://gist.github.com/6863188","description":"Object.keys() fallback","files":[],"content":""},{"html_url":"https://gist.github.com/6821227","description":"Getter/Setter example via Object.defineProperty/Object.defineProperties or via Object.prototype.__defineGetter/Setter__","files":[],"content":""},{"html_url":"https://gist.github.com/6793330","description":"Getter and Setter in JavaScript (new syntax)","files":[],"content":""},{"html_url":"https://gist.github.com/6790994","description":"Getter/Setter legacy syntax","files":[],"content":""},{"html_url":"https://gist.github.com/6728820","description":"AngularJS: angular.element(), scope.$watch() example","files":[],"content":""},{"html_url":"https://gist.github.com/6728473","description":"AngularJS: Zippy component example","files":[],"content":""},{"html_url":"https://gist.github.com/6727938","description":"AngularJS: Alternative, more clear approach to bind attributes via controller name","files":[],"content":""},{"html_url":"https://gist.github.com/6727838","description":"AngularJS: Transclusion Basics","files":[],"content":""},{"html_url":"https://gist.github.com/6727621","description":"AngularJS: Understanding isolate scope =, accept callbacks","files":[],"content":""},{"html_url":"https://gist.github.com/6727104","description":"AngularJS: Isolate scope =, accept/set value as object","files":[],"content":""},{"html_url":"https://gist.github.com/6726930","description":"AngularJS: Understanding Isolate scope @ - accept/set values as string","files":[],"content":""},{"html_url":"https://gist.github.com/6726700","description":"AngularJS: Understanding isolate scope","files":[],"content":""},{"html_url":"https://gist.github.com/6726242","description":"AngularJS: Directive to directive communication example","files":[],"content":""},{"html_url":"https://gist.github.com/6725525","description":"AngularJS: Custom directive calls function specified in binding element attribute. ( using $apply() method )","files":[],"content":""},{"html_url":"https://gist.github.com/6725370","description":"AngularJS: Using custom attributes in custom directives via attrs parameter of directive function.","files":[],"content":""},{"html_url":"https://gist.github.com/6725290","description":"AngularJS: Behaviors via directive","files":[],"content":""},{"html_url":"https://gist.github.com/6725087","description":"AngularJS: Filters example (filter, orderBy, lowercase, uppercase, limitTo)","files":[],"content":""},{"html_url":"https://gist.github.com/6724666","description":"AngularJS: Create custom filter injecting factory data","files":[],"content":""},{"html_url":"https://gist.github.com/6724658","description":"AngularJS: Create custom filter","files":[],"content":""},{"html_url":"https://gist.github.com/6724520","description":"AngularJS: Defining a method on the Scope","files":[],"content":""},{"html_url":"https://gist.github.com/6724503","description":"AngularJS: Share data between Controllers","files":[],"content":""},{"html_url":"https://gist.github.com/6713728","description":"AngularJS: Communication between controllers via common service.","files":[],"content":""},{"html_url":"https://gist.github.com/6698103","description":"AngularJS: Accordion with custom directives (restrict, replace, transclude, template, controller, angular.forEach(), scope, link)","files":[],"content":""},{"html_url":"https://gist.github.com/6697453","description":"AngularJS: Create custom directive, use jqLite/jQuery methods instead of ng-click to bind/handle events","files":[],"content":""},{"html_url":"https://gist.github.com/6696447","description":"AngularJS: Create custom directive/tag. 'custom-expander-directive.html' - scope : {title: '=expanderTitle'} set expanderTitle via model, 'custom-expander-directive-2.html' - scope : {title: '@expanderTitle'} set expanderTitle via template, with @ strategy we also can set title via interpolation like expander-title=\"{{title}}\", so where possible use @.","files":[],"content":""},{"html_url":"https://gist.github.com/6695929","description":"AngularJS: Custom tag with transclude option.","files":[],"content":""},{"html_url":"https://gist.github.com/6695797","description":"AngularJS: Custom tag/element via templateUrl, first loading/creating template into cache","files":[],"content":""},{"html_url":"https://gist.github.com/6695761","description":"AngularJS: Custom tag/element via templateUrl","files":[],"content":""},{"html_url":"https://gist.github.com/6695723","description":"AngularJS: custom tag/element with directive","files":[],"content":""},{"html_url":"https://gist.github.com/6684138","description":"AngularJS: Set default headers for all type of requests or for specific type of requests","files":[],"content":""},{"html_url":"https://gist.github.com/6682907","description":"AngularJS: Custom directive, templates via <script> tag, routing to views","files":[],"content":""},{"html_url":"https://gist.github.com/6680827","description":"AngularJS: Using ng-src instead of src, on <img> and ng-href instead of href on <a> elements","files":[],"content":""},{"html_url":"https://gist.github.com/6680709","description":"AngularJS: Using conditional expression in ng-class attribute.\r\nSelect/Add class to clicked row of a table.","files":[],"content":""},{"html_url":"https://gist.github.com/6680582","description":"AngularJS ng-class example","files":[],"content":""},{"html_url":"https://gist.github.com/6680546","description":"AngularJS ng-show, ng-hide example","files":[],"content":""},{"html_url":"https://gist.github.com/6680466","description":"AngularJS Example\r\n(using filter, $index)","files":[],"content":""},{"html_url":"https://gist.github.com/6680388","description":"AngularJS Validation example\r\n(ng-show, ng-maxlength, ng-minlength, ng-disabled)","files":[],"content":""},{"html_url":"https://gist.github.com/6669708","description":"AngularJS Custom Directive Example","files":[],"content":""},{"html_url":"https://gist.github.com/6669531","description":"AngularJS get data via AJAX, filter data by specific property | field.","files":[],"content":""},{"html_url":"https://gist.github.com/6669048","description":"AngularJS E-Mail Application\r\n(module, controller, route, view)","files":[],"content":""},{"html_url":"https://gist.github.com/6668763","description":"AngularJS Custom Filter to Camel Case words.","files":[],"content":""},{"html_url":"https://gist.github.com/6605393","description":"Is array associative?","files":[],"content":""},{"html_url":"https://gist.github.com/6548287","description":"toArray(), strToDate(), dateToStr(), isYYYYMMDD() functions","files":[],"content":""},{"html_url":"https://gist.github.com/6492051","description":"Maximum Integer values in MySQL","files":[],"content":""},{"html_url":"https://gist.github.com/6419933","description":"Select table rows that contain checked checkbox using jQuery","files":[],"content":""},{"html_url":"https://gist.github.com/6419816","description":"Export HTML Table to Excel.\r\n\r\nExamples of jQuery methods:\r\n\r\nclone(), wrap(), unwrap(),\r\nremoveAttr(), remove(),\r\nfind(), children(), parent(), first(), last(), end()","files":[],"content":""},{"html_url":"https://gist.github.com/6396958","description":"Custom validator for phone number for Uzbekistan using jquery.validate.js plugin","files":[],"content":""},{"html_url":"https://gist.github.com/6376525","description":"CSS rules to avoid selection (for example, on double click)","files":[],"content":""},{"html_url":"https://gist.github.com/6374090","description":"conn db wrapper class demonstration in Deex-CMF","files":[],"content":""},{"html_url":"https://gist.github.com/6352807","description":"Load CSS, JS files\r\nAlso, execute code after system initialization in Deex-CMF","files":[],"content":""},{"html_url":"https://gist.github.com/6349938","description":"Read JSON string from file, convert PHP stdClass object to array","files":[],"content":""},{"html_url":"https://gist.github.com/6349715","description":"Generate random JSON data for jquery.DataTable plugin","files":[],"content":""},{"html_url":"https://gist.github.com/6304353","description":"Cross domain AJAX requests\r\nError: Origin is not allowed by Access-Control-Allow-Origin","files":[],"content":""},{"html_url":"https://gist.github.com/6303493","description":"Returned array from AJAX treated as object, convert it to array using $.map()","files":[],"content":""},{"html_url":"https://gist.github.com/6292714","description":"Use $._data() to find out attached events to the element","files":[],"content":""},{"html_url":"https://gist.github.com/6277056","description":"Work with modal window in Deex-CMF","files":[],"content":""},{"html_url":"https://gist.github.com/6277004","description":"Create form elements using prot class of Deex-CMF\r\ntextarea, checkbox, radio, hr, group (fieldset/legend)","files":[],"content":""},{"html_url":"https://gist.github.com/6268694","description":"Set/Get/Remove page state in Deex-CMF","files":[],"content":""},{"html_url":"https://gist.github.com/6268391","description":"AJAX request example using Deex-CMF","files":[],"content":""},{"html_url":"https://gist.github.com/6268315","description":"Create button and bind click event using 'prot' library","files":[],"content":""},{"html_url":"https://gist.github.com/6268265","description":"Create list (<ul>) and populate with items example using 'prot' library","files":[],"content":""},{"html_url":"https://gist.github.com/6247694","description":"Suppress error throwing and get error message","files":[],"content":""},{"html_url":"https://gist.github.com/6247422","description":"startsWith($haystack, $needle) and endsWith($haystack, $needle) PHP functions","files":[],"content":""},{"html_url":"https://gist.github.com/6240195","description":"Get array of elements, its values/properties/attributes using .map() (NOT $.map())\r\n\r\nhttp://api.jquery.com/map/\r\nPass each element in the current matched set through a function, producing a new jQuery object containing the return values.\r\n\r\nhttp://api.jquery.com/get/#get \r\nRetrieve the DOM elements matched by the jQuery object\r\n","files":[],"content":""},{"html_url":"https://gist.github.com/6228205","description":"Create custom selector/filter to get elements with additional properties (not attributes)","files":[],"content":""},{"html_url":"https://gist.github.com/6220666","description":"Add and use additional properties to HTML elements with jQuery","files":[],"content":""},{"html_url":"https://gist.github.com/6219928","description":"jQuery Plugin Boilerplate\r\nsource: http://coding.smashingmagazine.com/2011/10/11/essential-jquery-plugin-patterns/","files":[],"content":""},{"html_url":"https://gist.github.com/6208305","description":"Shared and Static methods example in JavaScript class","files":[],"content":""},{"html_url":"https://gist.github.com/6183391","description":"Extend JavaScript object via prototype","files":[],"content":""},{"html_url":"https://gist.github.com/6181762","description":"Join/Concatenate path in PHP","files":[],"content":""},{"html_url":"https://gist.github.com/6173837","description":"Upload File using jQuery.ajax() with progress support","files":[],"content":""},{"html_url":"https://gist.github.com/6172023","description":"Get file extension in JavaScript","files":[],"content":""},{"html_url":"https://gist.github.com/6171744","description":"Set error log location with .htaccess for virtual host","files":[],"content":""},{"html_url":"https://gist.github.com/6171162","description":"jQuery plugin example","files":[],"content":""},{"html_url":"https://gist.github.com/6164042","description":"PHP dirname() and basename() alternatives for JavaScript","files":[],"content":""},{"html_url":"https://gist.github.com/6163738","description":"Sort <li> items by child element value","files":[],"content":""},{"html_url":"https://gist.github.com/6154548","description":"realpath() alternative to detect absolute path (URN and URL is not supported, only local paths on the server)","files":[],"content":""},{"html_url":"https://gist.github.com/6139693","description":"Dynamically create <select> and populate <option>s with jQuery.","files":[],"content":""},{"html_url":"https://gist.github.com/6137737","description":"JSCompressor class to minify JS files (uses JSMin and JSMinPlus libraries)","files":[],"content":""},{"html_url":"https://gist.github.com/6137647","description":"Compress JavaScript file with JSMin","files":[],"content":""},{"html_url":"https://gist.github.com/6093986","description":"Changing Timezone in php.ini","files":[],"content":""},{"html_url":"https://gist.github.com/6045180","description":"Custom size for featured image in wordpress","files":[],"content":""},{"html_url":"https://gist.github.com/6037013","description":"Cycle Slider Test","files":[],"content":""},{"html_url":"https://gist.github.com/6030711","description":"Make div 100% of browser window","files":[],"content":""},{"html_url":"https://gist.github.com/6028283","description":"Split text by EOL with preg_split()","files":[],"content":""},{"html_url":"https://gist.github.com/6028077","description":"Set Charset in Apache configuration file (.htaccess)","files":[],"content":""},{"html_url":"https://gist.github.com/6027299","description":"Manage access to menu items in Bitrix","files":[],"content":""},{"html_url":"https://gist.github.com/6017706","description":"Send mail in Bitrix example.","files":[],"content":""},{"html_url":"https://gist.github.com/6007638","description":"Clean & convert value from non numeric characters","files":[],"content":""},{"html_url":"https://gist.github.com/5993361","description":"Replace multiple spaces with one using preg_replace()","files":[],"content":""},{"html_url":"https://gist.github.com/5974576","description":"* Change state programmatically with trigger() // hover, focus, active, visited\r\n* Build reqular expression on the fly","files":[],"content":""},{"html_url":"https://gist.github.com/5974534","description":"Get current URL/path in javascript (without domain)","files":[],"content":""},{"html_url":"https://gist.github.com/5956807","description":"Bitrix Dialog box example\r\nmore on that here: http://alexvaleev.ru/popup-window-bitrix/","files":[],"content":""},{"html_url":"https://gist.github.com/5946362","description":"Bitrix: Get current site's date and time formats","files":[],"content":""},{"html_url":"https://gist.github.com/5939171","description":"Bitrix Framework: Change pagination items count in navigation bar.\r\n","files":[],"content":""},{"html_url":"https://gist.github.com/5938829","description":"Split string in MySQL with SUBSTRING_INDEX( str, delim, count )\r\nConvert string to mysql date with STR_TO_DATE( str, format )","files":[],"content":""},{"html_url":"https://gist.github.com/5933962","description":"Convert date string to date and insert into another table\r\nFor example, string '14.03.2013' becomes '2013-03-14' date.","files":[],"content":""},{"html_url":"https://gist.github.com/5933834","description":"Convert (Excel date) 5 digit numbers to date in mysql","files":[],"content":""},{"html_url":"https://gist.github.com/5932707","description":"RegExp Tips in Notepad++","files":[],"content":""},{"html_url":"https://gist.github.com/5925001","description":"Accept form values safer with htmlspecialchars()","files":[],"content":""},{"html_url":"https://gist.github.com/5917079","description":"Dynamically create thumbnails","files":[],"content":""},{"html_url":"https://gist.github.com/5907857","description":"SOAP server/client example in WSDL mode","files":[],"content":""},{"html_url":"https://gist.github.com/5907025","description":"Basic Authentication through .htaccess","files":[],"content":""},{"html_url":"https://gist.github.com/5898766","description":"Check, is PHP extension loaded.","files":[],"content":""},{"html_url":"https://gist.github.com/5882601","description":"BX: Retrieves active users list in specified groups.","files":[],"content":""},{"html_url":"https://gist.github.com/5875156","description":"Include Bitrix header and footer without template","files":[],"content":""},{"html_url":"https://gist.github.com/5866116","description":"BX: Date picker with Bitrix's CalendarDate()","files":[],"content":""},{"html_url":"https://gist.github.com/5865318","description":"For those who use file_get_contents for JSON or other RESTful services. Site using get urls go through load balancer instead of hitting the local server.\r\nLoad this function through a local url and set the Host: header for virtualhost entries on the site we wanted to load.","files":[],"content":""},{"html_url":"https://gist.github.com/5864820","description":"BX: AddMessage2Log() implementation from Bitrix Framework","files":[],"content":""},{"html_url":"https://gist.github.com/5857590","description":"Print JSON data to response for some request","files":[],"content":""}]